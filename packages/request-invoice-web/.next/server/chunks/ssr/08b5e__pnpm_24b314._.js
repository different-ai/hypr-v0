module.exports = {

"[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ __turbopack_esm__({
    "__assign": (()=>__assign),
    "__asyncDelegator": (()=>__asyncDelegator),
    "__asyncGenerator": (()=>__asyncGenerator),
    "__asyncValues": (()=>__asyncValues),
    "__await": (()=>__await),
    "__awaiter": (()=>__awaiter),
    "__classPrivateFieldGet": (()=>__classPrivateFieldGet),
    "__classPrivateFieldIn": (()=>__classPrivateFieldIn),
    "__classPrivateFieldSet": (()=>__classPrivateFieldSet),
    "__createBinding": (()=>__createBinding),
    "__decorate": (()=>__decorate),
    "__esDecorate": (()=>__esDecorate),
    "__exportStar": (()=>__exportStar),
    "__extends": (()=>__extends),
    "__generator": (()=>__generator),
    "__importDefault": (()=>__importDefault),
    "__importStar": (()=>__importStar),
    "__makeTemplateObject": (()=>__makeTemplateObject),
    "__metadata": (()=>__metadata),
    "__param": (()=>__param),
    "__propKey": (()=>__propKey),
    "__read": (()=>__read),
    "__rest": (()=>__rest),
    "__runInitializers": (()=>__runInitializers),
    "__setFunctionName": (()=>__setFunctionName),
    "__spread": (()=>__spread),
    "__spreadArray": (()=>__spreadArray),
    "__spreadArrays": (()=>__spreadArrays),
    "__values": (()=>__values)
});
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.push(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.push(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
;
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++){
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
}
;
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
;
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
;
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
            value: raw
        });
    } else {
        cooked.raw = raw;
    }
    return cooked;
}
;
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
}}),
"[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ __turbopack_esm__({
    "__addDisposableResource": (()=>__addDisposableResource),
    "__assign": (()=>__assign),
    "__asyncDelegator": (()=>__asyncDelegator),
    "__asyncGenerator": (()=>__asyncGenerator),
    "__asyncValues": (()=>__asyncValues),
    "__await": (()=>__await),
    "__awaiter": (()=>__awaiter),
    "__classPrivateFieldGet": (()=>__classPrivateFieldGet),
    "__classPrivateFieldIn": (()=>__classPrivateFieldIn),
    "__classPrivateFieldSet": (()=>__classPrivateFieldSet),
    "__createBinding": (()=>__createBinding),
    "__decorate": (()=>__decorate),
    "__disposeResources": (()=>__disposeResources),
    "__esDecorate": (()=>__esDecorate),
    "__exportStar": (()=>__exportStar),
    "__extends": (()=>__extends),
    "__generator": (()=>__generator),
    "__importDefault": (()=>__importDefault),
    "__importStar": (()=>__importStar),
    "__makeTemplateObject": (()=>__makeTemplateObject),
    "__metadata": (()=>__metadata),
    "__param": (()=>__param),
    "__propKey": (()=>__propKey),
    "__read": (()=>__read),
    "__rest": (()=>__rest),
    "__rewriteRelativeImportExtension": (()=>__rewriteRelativeImportExtension),
    "__runInitializers": (()=>__runInitializers),
    "__setFunctionName": (()=>__setFunctionName),
    "__spread": (()=>__spread),
    "__spreadArray": (()=>__spreadArray),
    "__spreadArrays": (()=>__spreadArrays),
    "__values": (()=>__values),
    "default": (()=>__TURBOPACK__default__export__)
});
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
;
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++){
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
}
;
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
;
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
;
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
            value: raw
        });
    } else {
        cooked.raw = raw;
    }
    return cooked;
}
;
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
var ownKeys = function(o) {
    ownKeys = Object.getOwnPropertyNames || function(o) {
        var ar = [];
        for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
        return ar;
    };
    return ownKeys(o);
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose, inner;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
            if (async) inner = dispose;
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        if (inner) dispose = function() {
            try {
                inner.call(this);
            } catch (e) {
                return Promise.reject(e);
            }
        };
        env.stack.push({
            value: value,
            dispose: dispose,
            async: async
        });
    } else if (async) {
        env.stack.push({
            async: true
        });
    }
    return value;
}
var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    var r, s = 0;
    function next() {
        while(r = env.stack.pop()){
            try {
                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
                if (r.dispose) {
                    var result = r.dispose.call(r.value);
                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) {
                        fail(e);
                        return next();
                    });
                } else s |= 1;
            } catch (e) {
                fail(e);
            }
        }
        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
        if (env.hasError) throw env.error;
    }
    return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
    if (typeof path === "string" && /^\.\.?\//.test(path)) {
        return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {
            return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : d + ext + "." + cm.toLowerCase() + "js";
        });
    }
    return path;
}
const __TURBOPACK__default__export__ = {
    __extends,
    __assign,
    __rest,
    __decorate,
    __param,
    __esDecorate,
    __runInitializers,
    __propKey,
    __setFunctionName,
    __metadata,
    __awaiter,
    __generator,
    __createBinding,
    __exportStar,
    __values,
    __read,
    __spread,
    __spreadArrays,
    __spreadArray,
    __await,
    __asyncGenerator,
    __asyncDelegator,
    __asyncValues,
    __makeTemplateObject,
    __importStar,
    __importDefault,
    __classPrivateFieldGet,
    __classPrivateFieldSet,
    __classPrivateFieldIn,
    __addDisposableResource,
    __disposeResources,
    __rewriteRelativeImportExtension
};
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/advanced-logic-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=advanced-logic-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/client-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=client-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/currency-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=currency-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/data-access-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TransactionState = void 0;
/** Enum of state possible for an action */ var TransactionState;
(function(TransactionState) {
    TransactionState["PENDING"] = "pending";
    TransactionState["CONFIRMED"] = "confirmed";
})(TransactionState || (exports.TransactionState = TransactionState = {})); //# sourceMappingURL=data-access-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/decryption-provider-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=decryption-provider-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/epk-provider-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=epk-provider-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/encryption-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.METHOD = void 0;
/** Supported encryption methods */ var METHOD;
(function(METHOD) {
    METHOD["KMS"] = "kms";
    METHOD["ECIES"] = "ecies";
    METHOD["AES256_CBC"] = "aes256-cbc";
    METHOD["AES256_GCM"] = "aes256-gcm";
})(METHOD || (exports.METHOD = METHOD = {})); //# sourceMappingURL=encryption-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/content-data-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
/** Actions possible */ var ACTION;
(function(ACTION) {
    ACTION["CREATE"] = "create";
})(ACTION || (exports.ACTION = ACTION = {})); //# sourceMappingURL=content-data-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-address-based-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
/** Actions possible */ var ACTION;
(function(ACTION) {
    ACTION["CREATE"] = "create";
    ACTION["ADD_PAYMENT_ADDRESS"] = "addPaymentAddress";
    ACTION["ADD_REFUND_ADDRESS"] = "addRefundAddress";
})(ACTION || (exports.ACTION = ACTION = {})); //# sourceMappingURL=pn-any-address-based-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-declarative-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
/** Actions possible */ var ACTION;
(function(ACTION) {
    ACTION["CREATE"] = "create";
    ACTION["DECLARE_SENT_PAYMENT"] = "declareSentPayment";
    ACTION["DECLARE_RECEIVED_PAYMENT"] = "declareReceivedPayment";
    ACTION["DECLARE_SENT_REFUND"] = "declareSentRefund";
    ACTION["DECLARE_RECEIVED_REFUND"] = "declareReceivedRefund";
    ACTION["ADD_PAYMENT_INSTRUCTION"] = "addPaymentInstruction";
    ACTION["ADD_REFUND_INSTRUCTION"] = "addRefundInstruction";
    ACTION["ADD_DELEGATE"] = "addDelegate";
})(ACTION || (exports.ACTION = ACTION = {})); //# sourceMappingURL=pn-any-declarative-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-reference-based-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
var pn_any_address_based_types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-address-based-types.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ACTION", {
    enumerable: true,
    get: function() {
        return pn_any_address_based_types_1.ACTION;
    }
}); //# sourceMappingURL=pn-any-reference-based-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-stream-reference-based-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
var pn_any_reference_based_types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-reference-based-types.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ACTION", {
    enumerable: true,
    get: function() {
        return pn_any_reference_based_types_1.ACTION;
    }
}); //# sourceMappingURL=pn-any-stream-reference-based-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-fee-reference-based-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
/** Actions specific to the fee payment networks */ var ACTION;
(function(ACTION) {
    // Standard referenceBased
    ACTION["CREATE"] = "create";
    ACTION["ADD_PAYMENT_ADDRESS"] = "addPaymentAddress";
    ACTION["ADD_REFUND_ADDRESS"] = "addRefundAddress";
    // Specific to FeeReferenceBased
    ACTION["ADD_FEE"] = "addFee";
})(ACTION || (exports.ACTION = ACTION = {})); //# sourceMappingURL=pn-any-fee-reference-based-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-to-erc20-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=pn-any-to-erc20-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-to-eth-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=pn-any-to-eth-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-meta.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = void 0;
// import * as Extension from '../extension-types';
const __1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
/** Actions possible */ var ACTION;
(function(ACTION) {
    ACTION["CREATE"] = "create";
    ACTION["APPLY_ACTION_TO_PN"] = "apply-action-to-pn";
})(ACTION || (exports.ACTION = ACTION = {})); //# sourceMappingURL=pn-meta.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-to-any-conversion-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=pn-any-to-any-conversion-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extension-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ACTION = exports.TYPE = exports.ID = exports.PAYMENT_NETWORK_ID = exports.OTHER_ID = exports.PnMeta = exports.PnAnyToAnyConversion = exports.PnAnyToEth = exports.PnAnyToErc20 = exports.PnReferenceBased = exports.PnFeeReferenceBased = exports.PnStreamReferenceBased = exports.PnAddressBased = exports.PnAnyDeclarative = exports.ContentData = void 0;
const ContentData = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/content-data-types.js [app-rsc] (ecmascript)");
exports.ContentData = ContentData;
const PnAddressBased = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-address-based-types.js [app-rsc] (ecmascript)");
exports.PnAddressBased = PnAddressBased;
const PnAnyDeclarative = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-declarative-types.js [app-rsc] (ecmascript)");
exports.PnAnyDeclarative = PnAnyDeclarative;
const PnStreamReferenceBased = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-stream-reference-based-types.js [app-rsc] (ecmascript)");
exports.PnStreamReferenceBased = PnStreamReferenceBased;
const PnFeeReferenceBased = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-fee-reference-based-types.js [app-rsc] (ecmascript)");
exports.PnFeeReferenceBased = PnFeeReferenceBased;
const PnReferenceBased = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-reference-based-types.js [app-rsc] (ecmascript)");
exports.PnReferenceBased = PnReferenceBased;
const PnAnyToErc20 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-to-erc20-types.js [app-rsc] (ecmascript)");
exports.PnAnyToErc20 = PnAnyToErc20;
const PnAnyToEth = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-to-eth-types.js [app-rsc] (ecmascript)");
exports.PnAnyToEth = PnAnyToEth;
const PnMeta = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-meta.js [app-rsc] (ecmascript)");
exports.PnMeta = PnMeta;
const PnAnyToAnyConversion = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extensions/pn-any-to-any-conversion-types.js [app-rsc] (ecmascript)");
exports.PnAnyToAnyConversion = PnAnyToAnyConversion;
/**
 * Identification of extensions handled by this implementation.
 * */ var OTHER_ID;
(function(OTHER_ID) {
    OTHER_ID["CONTENT_DATA"] = "content-data";
})(OTHER_ID || (exports.OTHER_ID = OTHER_ID = {}));
var PAYMENT_NETWORK_ID;
(function(PAYMENT_NETWORK_ID) {
    PAYMENT_NETWORK_ID["BITCOIN_ADDRESS_BASED"] = "pn-bitcoin-address-based";
    PAYMENT_NETWORK_ID["TESTNET_BITCOIN_ADDRESS_BASED"] = "pn-testnet-bitcoin-address-based";
    PAYMENT_NETWORK_ID["ERC20_ADDRESS_BASED"] = "pn-erc20-address-based";
    PAYMENT_NETWORK_ID["ERC20_PROXY_CONTRACT"] = "pn-erc20-proxy-contract";
    PAYMENT_NETWORK_ID["ERC20_FEE_PROXY_CONTRACT"] = "pn-erc20-fee-proxy-contract";
    PAYMENT_NETWORK_ID["ERC777_STREAM"] = "pn-erc777-stream";
    PAYMENT_NETWORK_ID["ETH_FEE_PROXY_CONTRACT"] = "pn-eth-fee-proxy-contract";
    PAYMENT_NETWORK_ID["ETH_INPUT_DATA"] = "pn-eth-input-data";
    PAYMENT_NETWORK_ID["NATIVE_TOKEN"] = "pn-native-token";
    PAYMENT_NETWORK_ID["ANY_TO_NATIVE_TOKEN"] = "pn-any-to-native-token";
    PAYMENT_NETWORK_ID["ANY_DECLARATIVE"] = "pn-any-declarative";
    PAYMENT_NETWORK_ID["ANY_TO_ERC20_PROXY"] = "pn-any-to-erc20-proxy";
    PAYMENT_NETWORK_ID["ANY_TO_ETH_PROXY"] = "pn-any-to-eth-proxy";
    PAYMENT_NETWORK_ID["ERC20_TRANSFERABLE_RECEIVABLE"] = "pn-erc20-transferable-receivable";
    PAYMENT_NETWORK_ID["META"] = "pn-meta";
})(PAYMENT_NETWORK_ID || (exports.PAYMENT_NETWORK_ID = PAYMENT_NETWORK_ID = {}));
exports.ID = Object.assign(Object.assign({}, OTHER_ID), PAYMENT_NETWORK_ID);
/** Type of extensions */ var TYPE;
(function(TYPE) {
    TYPE["CONTENT_DATA"] = "content-data";
    TYPE["PAYMENT_NETWORK"] = "payment-network";
})(TYPE || (exports.TYPE = TYPE = {}));
/** Actions possible */ var ACTION;
(function(ACTION) {
    ACTION["CREATE"] = "create";
})(ACTION || (exports.ACTION = ACTION = {})); //# sourceMappingURL=extension-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/identity-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TYPE = void 0;
/** Supported identity types */ var TYPE;
(function(TYPE) {
    TYPE["ETHEREUM_ADDRESS"] = "ethereumAddress";
    TYPE["ETHEREUM_SMART_CONTRACT"] = "ethereumSmartContract";
})(TYPE || (exports.TYPE = TYPE = {})); //# sourceMappingURL=identity-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/cipher-provider-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=cipher-provider-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/logger-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LogLevel = void 0;
/** Log levels used by the logger. */ var LogLevel;
(function(LogLevel) {
    // No logs
    LogLevel[LogLevel["QUIET"] = 0] = "QUIET";
    // Any error which is fatal to the operation. These errors will force user intervention.
    LogLevel[LogLevel["ERROR"] = 1] = "ERROR";
    // Anything that can potentially cause application oddities, but for which the code can automatically recover.
    LogLevel[LogLevel["WARN"] = 2] = "WARN";
    // Generally useful information to log.
    LogLevel[LogLevel["INFO"] = 3] = "INFO";
    // Information that is diagnostically helpful to people running the code.
    LogLevel[LogLevel["DEBUG"] = 4] = "DEBUG";
})(LogLevel || (exports.LogLevel = LogLevel = {})); //# sourceMappingURL=logger-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/multi-format/hash-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TYPE = void 0;
/** Supported hash types */ var TYPE;
(function(TYPE) {
    TYPE["KECCAK256"] = "keccak256";
})(TYPE || (exports.TYPE = TYPE = {})); //# sourceMappingURL=hash-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/multi-format/plain-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TYPE = void 0;
/** Supported types */ var TYPE;
(function(TYPE) {
    TYPE["PLAIN_TEXT"] = "plain-text";
})(TYPE || (exports.TYPE = TYPE = {})); //# sourceMappingURL=plain-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/multi-format-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FORMAT_IDENTITY_ETHEREUM_ADDRESS_LENGTH = exports.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH = exports.prefix = exports.PlainTypes = exports.HashTypes = void 0;
const HashTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/multi-format/hash-types.js [app-rsc] (ecmascript)");
exports.HashTypes = HashTypes;
const PlainTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/multi-format/plain-types.js [app-rsc] (ecmascript)");
exports.PlainTypes = PlainTypes;
/** Prefix of handled data format */ var prefix;
(function(prefix) {
    prefix["PLAIN_TEXT"] = "00";
    /** the data is Keccak256 hash of normalized data (sorted object, stringify and lowercase) */ prefix["NORMALIZE_KECCAK256_HASH"] = "01";
    /** ECIES encrypted data */ prefix["ECIES_ENCRYPTED"] = "02";
    /** AES256-CBC encrypted data */ prefix["AES256_CBC_ENCRYPTED"] = "03";
    /** AES256-GCM encrypted data */ prefix["AES256_GCM_ENCRYPTED"] = "04";
    /** KMS encrypted data */ prefix["KMS_ENCRYPTED"] = "05";
    /** Identity Ethereum address */ prefix["IDENTITY_ETHEREUM_ADDRESS"] = "20";
})(prefix || (exports.prefix = prefix = {}));
/** Length of a formatted normalized Keccak256 hash (prefix + hash = 2 + 64 = 66) (no 0x expected) */ exports.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH = 66;
/** Length of a formatted ethereum address identity (prefix + address = 2 + 40 = 42) (no 0x expected) */ exports.FORMAT_IDENTITY_ETHEREUM_ADDRESS_LENGTH = 42; //# sourceMappingURL=multi-format-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/payment-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BATCH_PAYMENT_NETWORK_ID = exports.ESCROW_STATE = exports.STREAM_EVENT_NAMES = exports.BALANCE_ERROR_CODE = exports.ESCROW_EVENTS_NAMES = exports.EVENTS_NAMES = void 0;
/** payment network event names */ var EVENTS_NAMES;
(function(EVENTS_NAMES) {
    EVENTS_NAMES["PAYMENT"] = "payment";
    EVENTS_NAMES["REFUND"] = "refund";
    EVENTS_NAMES["ESCROW"] = "escrow";
})(EVENTS_NAMES || (exports.EVENTS_NAMES = EVENTS_NAMES = {}));
var ESCROW_EVENTS_NAMES;
(function(ESCROW_EVENTS_NAMES) {
    ESCROW_EVENTS_NAMES["PAID_ESCROW"] = "paidEscrow";
    ESCROW_EVENTS_NAMES["PAID_ISSUER"] = "paidIssuer";
    ESCROW_EVENTS_NAMES["INITIATE_EMERGENCY_CLAIM"] = "initiateEmergencyClaim";
    ESCROW_EVENTS_NAMES["REVERT_EMERGENCY_CLAIM"] = "revertEmergencyClaim";
    ESCROW_EVENTS_NAMES["FREEZE_ESCROW"] = "freezeEscrow";
})(ESCROW_EVENTS_NAMES || (exports.ESCROW_EVENTS_NAMES = ESCROW_EVENTS_NAMES = {}));
/** Balance error codes */ var BALANCE_ERROR_CODE;
(function(BALANCE_ERROR_CODE) {
    BALANCE_ERROR_CODE[BALANCE_ERROR_CODE["UNKNOWN"] = 0] = "UNKNOWN";
    BALANCE_ERROR_CODE[BALANCE_ERROR_CODE["WRONG_EXTENSION"] = 1] = "WRONG_EXTENSION";
    BALANCE_ERROR_CODE[BALANCE_ERROR_CODE["NETWORK_NOT_SUPPORTED"] = 2] = "NETWORK_NOT_SUPPORTED";
    BALANCE_ERROR_CODE[BALANCE_ERROR_CODE["VERSION_NOT_SUPPORTED"] = 3] = "VERSION_NOT_SUPPORTED";
})(BALANCE_ERROR_CODE || (exports.BALANCE_ERROR_CODE = BALANCE_ERROR_CODE = {}));
/**
 * ERC777 networks and events
 */ var STREAM_EVENT_NAMES;
(function(STREAM_EVENT_NAMES) {
    STREAM_EVENT_NAMES["START_STREAM"] = "start_stream";
    STREAM_EVENT_NAMES["END_STREAM"] = "end_stream";
    STREAM_EVENT_NAMES["UPDATE_STREAM"] = "update_stream";
})(STREAM_EVENT_NAMES || (exports.STREAM_EVENT_NAMES = STREAM_EVENT_NAMES = {}));
var ESCROW_STATE;
(function(ESCROW_STATE) {
    ESCROW_STATE["PAID_ESCROW"] = "paidEscrow";
    ESCROW_STATE["IN_FROZEN"] = "frozen";
    ESCROW_STATE["IN_EMERGENCY"] = "emergency";
    ESCROW_STATE["PAID_ISSUER"] = "paidIssuer";
})(ESCROW_STATE || (exports.ESCROW_STATE = ESCROW_STATE = {}));
/** Each paymentNetworkId is linked with a batch function */ var BATCH_PAYMENT_NETWORK_ID;
(function(BATCH_PAYMENT_NETWORK_ID) {
    BATCH_PAYMENT_NETWORK_ID[BATCH_PAYMENT_NETWORK_ID["BATCH_MULTI_ERC20_CONVERSION_PAYMENTS"] = 0] = "BATCH_MULTI_ERC20_CONVERSION_PAYMENTS";
    BATCH_PAYMENT_NETWORK_ID[BATCH_PAYMENT_NETWORK_ID["BATCH_ERC20_PAYMENTS"] = 1] = "BATCH_ERC20_PAYMENTS";
    BATCH_PAYMENT_NETWORK_ID[BATCH_PAYMENT_NETWORK_ID["BATCH_MULTI_ERC20_PAYMENTS"] = 2] = "BATCH_MULTI_ERC20_PAYMENTS";
    BATCH_PAYMENT_NETWORK_ID[BATCH_PAYMENT_NETWORK_ID["BATCH_ETH_PAYMENTS"] = 3] = "BATCH_ETH_PAYMENTS";
    BATCH_PAYMENT_NETWORK_ID[BATCH_PAYMENT_NETWORK_ID["BATCH_ETH_CONVERSION_PAYMENTS"] = 4] = "BATCH_ETH_CONVERSION_PAYMENTS";
})(BATCH_PAYMENT_NETWORK_ID || (exports.BATCH_PAYMENT_NETWORK_ID = BATCH_PAYMENT_NETWORK_ID = {})); //# sourceMappingURL=payment-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/request-logic-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ROLE = exports.STATE = exports.CURRENCY = exports.ACTION_NAME = void 0;
/** Enum of name possible in a action */ var ACTION_NAME;
(function(ACTION_NAME) {
    ACTION_NAME["CREATE"] = "create";
    ACTION_NAME["BROADCAST"] = "broadcastSignedRequest";
    ACTION_NAME["ACCEPT"] = "accept";
    ACTION_NAME["CANCEL"] = "cancel";
    ACTION_NAME["REDUCE_EXPECTED_AMOUNT"] = "reduceExpectedAmount";
    ACTION_NAME["INCREASE_EXPECTED_AMOUNT"] = "increaseExpectedAmount";
    ACTION_NAME["ADD_STAKEHOLDERS"] = "addStakeholders";
    ACTION_NAME["ADD_EXTENSIONS_DATA"] = "addExtensionsData";
})(ACTION_NAME || (exports.ACTION_NAME = ACTION_NAME = {}));
/** Supported currencies */ var CURRENCY;
(function(CURRENCY) {
    /** ETH Currency type refers to any kind of blockchain native currency - excepted bitcoin */ CURRENCY["ETH"] = "ETH";
    /** BTC Currency type refers to the Bitcoin native currency */ CURRENCY["BTC"] = "BTC";
    /** ISO4217 Currency type refers to fiat currencies (e.g. EUR, USD, ...) */ CURRENCY["ISO4217"] = "ISO4217";
    /** ERC20 Currency type refers to any kind of fungible token (USDC, DAI, ...) */ CURRENCY["ERC20"] = "ERC20";
    /** ERC777 Currency type refers to any kind of streamable fungible token (USDCx, DAIx, ...) */ CURRENCY["ERC777"] = "ERC777";
})(CURRENCY || (exports.CURRENCY = CURRENCY = {}));
/** States of a request */ var STATE;
(function(STATE) {
    // use for upper layer (trick to avoid headache with retyping request in upper layer)
    STATE["PENDING"] = "pending";
    STATE["CREATED"] = "created";
    STATE["ACCEPTED"] = "accepted";
    STATE["CANCELED"] = "canceled";
})(STATE || (exports.STATE = STATE = {}));
/** Identity roles */ var ROLE;
(function(ROLE) {
    ROLE["PAYEE"] = "payee";
    ROLE["PAYER"] = "payer";
    ROLE["THIRD_PARTY"] = "third-party";
})(ROLE || (exports.ROLE = ROLE = {})); //# sourceMappingURL=request-logic-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/signature-provider-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=signature-provider-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/signature-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.METHOD = void 0;
/** Supported signature methods */ var METHOD;
(function(METHOD) {
    METHOD["ECDSA"] = "ecdsa";
    METHOD["ECDSA_ETHEREUM"] = "ecdsa-ethereum";
})(METHOD || (exports.METHOD = METHOD = {})); //# sourceMappingURL=signature-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/storage-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ContentState = exports.GasPriceType = exports.StorageSystemType = exports.EthereumNetwork = exports.ErrorEntries = void 0;
/** Enum of state possible for data */ var ErrorEntries;
(function(ErrorEntries) {
    ErrorEntries[ErrorEntries["IPFS_CONNECTION_ERROR"] = 0] = "IPFS_CONNECTION_ERROR";
    ErrorEntries[ErrorEntries["INCORRECT_FILE"] = 1] = "INCORRECT_FILE";
    ErrorEntries[ErrorEntries["WRONG_FEES"] = 2] = "WRONG_FEES";
})(ErrorEntries || (exports.ErrorEntries = ErrorEntries = {}));
/** Ethereum network id */ var EthereumNetwork;
(function(EthereumNetwork) {
    EthereumNetwork[EthereumNetwork["PRIVATE"] = 0] = "PRIVATE";
    EthereumNetwork[EthereumNetwork["MAINNET"] = 1] = "MAINNET";
    EthereumNetwork[EthereumNetwork["RINKEBY"] = 4] = "RINKEBY";
    EthereumNetwork[EthereumNetwork["GOERLI"] = 5] = "GOERLI";
    EthereumNetwork[EthereumNetwork["SEPOLIA"] = 11155111] = "SEPOLIA";
    EthereumNetwork[EthereumNetwork["XDAI"] = 100] = "XDAI";
})(EthereumNetwork || (exports.EthereumNetwork = EthereumNetwork = {}));
/** Storage type for now only ethereum + ipfs available */ var StorageSystemType;
(function(StorageSystemType) {
    /** Ethereum and IPFS */ StorageSystemType["ETHEREUM_IPFS"] = "ethereumIpfs";
    /** Storage in local, only used for node caching for the moment */ StorageSystemType["LOCAL"] = "local";
    /** Mock storage, in memory. Used for local development. Should not be used in production */ StorageSystemType["IN_MEMORY_MOCK"] = "inMemoryMock";
})(StorageSystemType || (exports.StorageSystemType = StorageSystemType = {}));
/** Gas price type */ var GasPriceType;
(function(GasPriceType) {
    GasPriceType["FAST"] = "fast";
    GasPriceType["STANDARD"] = "standard";
    GasPriceType["SAFELOW"] = "safeLow";
})(GasPriceType || (exports.GasPriceType = GasPriceType = {}));
/** Enum of state possible for data */ var ContentState;
(function(ContentState) {
    ContentState["PENDING"] = "pending";
    ContentState["CONFIRMED"] = "confirmed";
})(ContentState || (exports.ContentState = ContentState = {})); //# sourceMappingURL=storage-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/transaction-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChannelType = exports.TransactionState = void 0;
/** Enum of state possible for an action */ var TransactionState;
(function(TransactionState) {
    TransactionState["PENDING"] = "pending";
    TransactionState["CONFIRMED"] = "confirmed";
})(TransactionState || (exports.TransactionState = TransactionState = {}));
/** Channel type */ var ChannelType;
(function(ChannelType) {
    ChannelType[ChannelType["UNKNOWN"] = 0] = "UNKNOWN";
    ChannelType[ChannelType["CLEAR"] = 1] = "CLEAR";
    ChannelType[ChannelType["ENCRYPTED"] = 2] = "ENCRYPTED";
})(ChannelType || (exports.ChannelType = ChannelType = {})); //# sourceMappingURL=transaction-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isSubsequentRequestCreationParameters = exports.isOriginalRequestCreationParameters = exports.isPaymentNetworkId = void 0;
const ExtensionTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extension-types.js [app-rsc] (ecmascript)");
/**
 * Types a value like ExtensionType into a paymentNetworkID enum element if possible
 * @param value Example: ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_PROXY_CONTRACT
 */ function isPaymentNetworkId(value) {
    return Object.values(ExtensionTypes.PAYMENT_NETWORK_ID).includes(value);
}
exports.isPaymentNetworkId = isPaymentNetworkId;
/**
 * Types the creation parameters as IOriginalRequestCreationParameters if it satisfies the condition
 * @param parameters to test
 */ const isOriginalRequestCreationParameters = (parameters)=>{
    return Object.keys(parameters).includes('expectedFlowRate');
};
exports.isOriginalRequestCreationParameters = isOriginalRequestCreationParameters;
/**
 * Types the creation parameters as ISubsequentRequestCreationParameters if it satisfies the condition
 * @param parameters to test
 */ const isSubsequentRequestCreationParameters = (parameters)=>{
    return Object.keys(parameters).includes('originalRequestId');
};
exports.isSubsequentRequestCreationParameters = isSubsequentRequestCreationParameters; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/fees-types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=fees-types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FeeTypes = exports.TypesUtils = exports.TransactionTypes = exports.StorageTypes = exports.SignatureTypes = exports.SignatureProviderTypes = exports.RequestLogicTypes = exports.PaymentTypes = exports.MultiFormatTypes = exports.LogTypes = exports.IdentityTypes = exports.ExtensionTypes = exports.EpkProviderTypes = exports.EncryptionTypes = exports.DecryptionProviderTypes = exports.DataAccessTypes = exports.CipherProviderTypes = exports.CurrencyTypes = exports.ClientTypes = exports.AdvancedLogicTypes = void 0;
const AdvancedLogicTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/advanced-logic-types.js [app-rsc] (ecmascript)");
exports.AdvancedLogicTypes = AdvancedLogicTypes;
const ClientTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/client-types.js [app-rsc] (ecmascript)");
exports.ClientTypes = ClientTypes;
const CurrencyTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/currency-types.js [app-rsc] (ecmascript)");
exports.CurrencyTypes = CurrencyTypes;
const DataAccessTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/data-access-types.js [app-rsc] (ecmascript)");
exports.DataAccessTypes = DataAccessTypes;
const DecryptionProviderTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/decryption-provider-types.js [app-rsc] (ecmascript)");
exports.DecryptionProviderTypes = DecryptionProviderTypes;
const EpkProviderTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/epk-provider-types.js [app-rsc] (ecmascript)");
exports.EpkProviderTypes = EpkProviderTypes;
const EncryptionTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/encryption-types.js [app-rsc] (ecmascript)");
exports.EncryptionTypes = EncryptionTypes;
const ExtensionTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/extension-types.js [app-rsc] (ecmascript)");
exports.ExtensionTypes = ExtensionTypes;
const IdentityTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/identity-types.js [app-rsc] (ecmascript)");
exports.IdentityTypes = IdentityTypes;
const CipherProviderTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/cipher-provider-types.js [app-rsc] (ecmascript)");
exports.CipherProviderTypes = CipherProviderTypes;
const LogTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/logger-types.js [app-rsc] (ecmascript)");
exports.LogTypes = LogTypes;
const MultiFormatTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/multi-format-types.js [app-rsc] (ecmascript)");
exports.MultiFormatTypes = MultiFormatTypes;
const PaymentTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/payment-types.js [app-rsc] (ecmascript)");
exports.PaymentTypes = PaymentTypes;
const RequestLogicTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/request-logic-types.js [app-rsc] (ecmascript)");
exports.RequestLogicTypes = RequestLogicTypes;
const SignatureProviderTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/signature-provider-types.js [app-rsc] (ecmascript)");
exports.SignatureProviderTypes = SignatureProviderTypes;
const SignatureTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/signature-types.js [app-rsc] (ecmascript)");
exports.SignatureTypes = SignatureTypes;
const StorageTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/storage-types.js [app-rsc] (ecmascript)");
exports.StorageTypes = StorageTypes;
const TransactionTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/transaction-types.js [app-rsc] (ecmascript)");
exports.TransactionTypes = TransactionTypes;
const TypesUtils = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/utils.js [app-rsc] (ecmascript)");
exports.TypesUtils = TypesUtils;
const FeeTypes = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/fees-types.js [app-rsc] (ecmascript)");
exports.FeeTypes = FeeTypes; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "logger/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ErrorCode": (()=>ErrorCode),
    "LogLevel": (()=>LogLevel),
    "Logger": (()=>Logger)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/_version.js [app-rsc] (ecmascript)");
"use strict";
let _permanentCensorErrors = false;
let _censorErrors = false;
const LogLevels = {
    debug: 1,
    "default": 2,
    info: 2,
    warning: 3,
    error: 4,
    off: 5
};
let _logLevel = LogLevels["default"];
;
let _globalLogger = null;
function _checkNormalize() {
    try {
        const missing = [];
        // Make sure all forms of normalization are supported
        [
            "NFD",
            "NFC",
            "NFKD",
            "NFKC"
        ].forEach((form)=>{
            try {
                if ("test".normalize(form) !== "test") {
                    throw new Error("bad normalize");
                }
                ;
            } catch (error) {
                missing.push(form);
            }
        });
        if (missing.length) {
            throw new Error("missing " + missing.join(", "));
        }
        if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) {
            throw new Error("broken implementation");
        }
    } catch (error) {
        return error.message;
    }
    return null;
}
const _normalizeError = _checkNormalize();
var LogLevel;
(function(LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARNING"] = "WARNING";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function(ErrorCode) {
    ///////////////////
    // Generic Errors
    // Unknown Error
    ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    // Not Implemented
    ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
    // Unsupported Operation
    //   - operation
    ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
    //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)
    ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
    // Some sort of bad response from the server
    ErrorCode["SERVER_ERROR"] = "SERVER_ERROR";
    // Timeout
    ErrorCode["TIMEOUT"] = "TIMEOUT";
    ///////////////////
    // Operational  Errors
    // Buffer Overrun
    ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
    // Numeric Fault
    //   - operation: the operation being executed
    //   - fault: the reason this faulted
    ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT";
    ///////////////////
    // Argument Errors
    // Missing new operator to an object
    //  - name: The name of the class
    ErrorCode["MISSING_NEW"] = "MISSING_NEW";
    // Invalid argument (e.g. value is incompatible with type) to a function:
    //   - argument: The argument name that was invalid
    //   - value: The value of the argument
    ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
    // Missing argument to a function:
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
    // Too many arguments
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
    ///////////////////
    // Blockchain Errors
    // Call exception
    //  - transaction: the transaction
    //  - address?: the contract address
    //  - args?: The arguments passed into the function
    //  - method?: The Solidity method signature
    //  - errorSignature?: The EIP848 error signature
    //  - errorArgs?: The EIP848 error parameters
    //  - reason: The reason (only for EIP848 "Error(string)")
    ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION";
    // Insufficient funds (< value + gasLimit * gasPrice)
    //   - transaction: the transaction attempted
    ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    // Nonce has already been used
    //   - transaction: the transaction attempted
    ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED";
    // The replacement fee for the transaction is too low
    //   - transaction: the transaction attempted
    ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
    // The gas limit could not be estimated
    //   - transaction: the transaction passed to estimateGas
    ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
    // The transaction was replaced by one with a higher gas price
    //   - reason: "cancelled", "replaced" or "repriced"
    //   - cancelled: true if reason == "cancelled" or reason == "replaced")
    //   - hash: original transaction hash
    //   - replacement: the full TransactionsResponse for the replacement
    //   - receipt: the receipt of the replacement
    ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
    ///////////////////
    // Interaction Errors
    // The user rejected the action, such as signing a message or sending
    // a transaction
    ErrorCode["ACTION_REJECTED"] = "ACTION_REJECTED";
})(ErrorCode || (ErrorCode = {}));
;
const HEX = "0123456789abcdef";
class Logger {
    constructor(version){
        Object.defineProperty(this, "version", {
            enumerable: true,
            value: version,
            writable: false
        });
    }
    _log(logLevel, args) {
        const level = logLevel.toLowerCase();
        if (LogLevels[level] == null) {
            this.throwArgumentError("invalid log level name", "logLevel", logLevel);
        }
        if (_logLevel > LogLevels[level]) {
            return;
        }
        console.log.apply(console, args);
    }
    debug(...args) {
        this._log(Logger.levels.DEBUG, args);
    }
    info(...args) {
        this._log(Logger.levels.INFO, args);
    }
    warn(...args) {
        this._log(Logger.levels.WARNING, args);
    }
    makeError(message, code, params) {
        // Errors are being censored
        if (_censorErrors) {
            return this.makeError("censored error", code, {});
        }
        if (!code) {
            code = Logger.errors.UNKNOWN_ERROR;
        }
        if (!params) {
            params = {};
        }
        const messageDetails = [];
        Object.keys(params).forEach((key)=>{
            const value = params[key];
            try {
                if (value instanceof Uint8Array) {
                    let hex = "";
                    for(let i = 0; i < value.length; i++){
                        hex += HEX[value[i] >> 4];
                        hex += HEX[value[i] & 0x0f];
                    }
                    messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
                } else {
                    messageDetails.push(key + "=" + JSON.stringify(value));
                }
            } catch (error) {
                messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
            }
        });
        messageDetails.push(`code=${code}`);
        messageDetails.push(`version=${this.version}`);
        const reason = message;
        let url = "";
        switch(code){
            case ErrorCode.NUMERIC_FAULT:
                {
                    url = "NUMERIC_FAULT";
                    const fault = message;
                    switch(fault){
                        case "overflow":
                        case "underflow":
                        case "division-by-zero":
                            url += "-" + fault;
                            break;
                        case "negative-power":
                        case "negative-width":
                            url += "-unsupported";
                            break;
                        case "unbound-bitwise-result":
                            url += "-unbound-result";
                            break;
                    }
                    break;
                }
            case ErrorCode.CALL_EXCEPTION:
            case ErrorCode.INSUFFICIENT_FUNDS:
            case ErrorCode.MISSING_NEW:
            case ErrorCode.NONCE_EXPIRED:
            case ErrorCode.REPLACEMENT_UNDERPRICED:
            case ErrorCode.TRANSACTION_REPLACED:
            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
                url = code;
                break;
        }
        if (url) {
            message += " [ See: https:/\/links.ethers.org/v5-errors-" + url + " ]";
        }
        if (messageDetails.length) {
            message += " (" + messageDetails.join(", ") + ")";
        }
        // @TODO: Any??
        const error = new Error(message);
        error.reason = reason;
        error.code = code;
        Object.keys(params).forEach(function(key) {
            error[key] = params[key];
        });
        return error;
    }
    throwError(message, code, params) {
        throw this.makeError(message, code, params);
    }
    throwArgumentError(message, name, value) {
        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
            argument: name,
            value: value
        });
    }
    assert(condition, message, code, params) {
        if (!!condition) {
            return;
        }
        this.throwError(message, code, params);
    }
    assertArgument(condition, message, name, value) {
        if (!!condition) {
            return;
        }
        this.throwArgumentError(message, name, value);
    }
    checkNormalize(message) {
        if (message == null) {
            message = "platform missing String.prototype.normalize";
        }
        if (_normalizeError) {
            this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "String.prototype.normalize",
                form: _normalizeError
            });
        }
    }
    checkSafeUint53(value, message) {
        if (typeof value !== "number") {
            return;
        }
        if (message == null) {
            message = "value not safe";
        }
        if (value < 0 || value >= 0x1fffffffffffff) {
            this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "out-of-safe-range",
                value: value
            });
        }
        if (value % 1) {
            this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "non-integer",
                value: value
            });
        }
    }
    checkArgumentCount(count, expectedCount, message) {
        if (message) {
            message = ": " + message;
        } else {
            message = "";
        }
        if (count < expectedCount) {
            this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
                count: count,
                expectedCount: expectedCount
            });
        }
        if (count > expectedCount) {
            this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
                count: count,
                expectedCount: expectedCount
            });
        }
    }
    checkNew(target, kind) {
        if (target === Object || target == null) {
            this.throwError("missing new", Logger.errors.MISSING_NEW, {
                name: kind.name
            });
        }
    }
    checkAbstract(target, kind) {
        if (target === kind) {
            this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, {
                name: target.name,
                operation: "new"
            });
        } else if (target === Object || target == null) {
            this.throwError("missing new", Logger.errors.MISSING_NEW, {
                name: kind.name
            });
        }
    }
    static globalLogger() {
        if (!_globalLogger) {
            _globalLogger = new Logger(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
        }
        return _globalLogger;
    }
    static setCensorship(censorship, permanent) {
        if (!censorship && permanent) {
            this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        if (_permanentCensorErrors) {
            if (!censorship) {
                return;
            }
            this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        _censorErrors = !!censorship;
        _permanentCensorErrors = !!permanent;
    }
    static setLogLevel(logLevel) {
        const level = LogLevels[logLevel.toLowerCase()];
        if (level == null) {
            Logger.globalLogger().warn("invalid log level - " + logLevel);
            return;
        }
        _logLevel = level;
    }
    static from(version) {
        return new Logger(version);
    }
}
Logger.errors = ErrorCode;
Logger.levels = LogLevel; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript) <export ErrorCode as errors>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "errors": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ErrorCode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "properties/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Description": (()=>Description),
    "checkProperties": (()=>checkProperties),
    "deepCopy": (()=>deepCopy),
    "defineReadOnly": (()=>defineReadOnly),
    "getStatic": (()=>getStatic),
    "resolveProperties": (()=>resolveProperties),
    "shallowCopy": (()=>shallowCopy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/_version.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
function defineReadOnly(object, name, value) {
    Object.defineProperty(object, name, {
        enumerable: true,
        value: value,
        writable: false
    });
}
function getStatic(ctor, key) {
    for(let i = 0; i < 32; i++){
        if (ctor[key]) {
            return ctor[key];
        }
        if (!ctor.prototype || typeof ctor.prototype !== "object") {
            break;
        }
        ctor = Object.getPrototypeOf(ctor.prototype).constructor;
    }
    return null;
}
function resolveProperties(object) {
    return __awaiter(this, void 0, void 0, function*() {
        const promises = Object.keys(object).map((key)=>{
            const value = object[key];
            return Promise.resolve(value).then((v)=>({
                    key: key,
                    value: v
                }));
        });
        const results = yield Promise.all(promises);
        return results.reduce((accum, result)=>{
            accum[result.key] = result.value;
            return accum;
        }, {});
    });
}
function checkProperties(object, properties) {
    if (!object || typeof object !== "object") {
        logger.throwArgumentError("invalid object", "object", object);
    }
    Object.keys(object).forEach((key)=>{
        if (!properties[key]) {
            logger.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
        }
    });
}
function shallowCopy(object) {
    const result = {};
    for(const key in object){
        result[key] = object[key];
    }
    return result;
}
const opaque = {
    bigint: true,
    boolean: true,
    "function": true,
    number: true,
    string: true
};
function _isFrozen(object) {
    // Opaque objects are not mutable, so safe to copy by assignment
    if (object === undefined || object === null || opaque[typeof object]) {
        return true;
    }
    if (Array.isArray(object) || typeof object === "object") {
        if (!Object.isFrozen(object)) {
            return false;
        }
        const keys = Object.keys(object);
        for(let i = 0; i < keys.length; i++){
            let value = null;
            try {
                value = object[keys[i]];
            } catch (error) {
                continue;
            }
            if (!_isFrozen(value)) {
                return false;
            }
        }
        return true;
    }
    return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
// Returns a new copy of object, such that no properties may be replaced.
// New properties may be added only to objects.
function _deepCopy(object) {
    if (_isFrozen(object)) {
        return object;
    }
    // Arrays are mutable, so we need to create a copy
    if (Array.isArray(object)) {
        return Object.freeze(object.map((item)=>deepCopy(item)));
    }
    if (typeof object === "object") {
        const result = {};
        for(const key in object){
            const value = object[key];
            if (value === undefined) {
                continue;
            }
            defineReadOnly(result, key, deepCopy(value));
        }
        return result;
    }
    return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
function deepCopy(object) {
    return _deepCopy(object);
}
class Description {
    constructor(info){
        for(const key in info){
            this[key] = deepCopy(info[key]);
        }
    }
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "bytes/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "arrayify": (()=>arrayify),
    "concat": (()=>concat),
    "hexConcat": (()=>hexConcat),
    "hexDataLength": (()=>hexDataLength),
    "hexDataSlice": (()=>hexDataSlice),
    "hexStripZeros": (()=>hexStripZeros),
    "hexValue": (()=>hexValue),
    "hexZeroPad": (()=>hexZeroPad),
    "hexlify": (()=>hexlify),
    "isBytes": (()=>isBytes),
    "isBytesLike": (()=>isBytesLike),
    "isHexString": (()=>isHexString),
    "joinSignature": (()=>joinSignature),
    "splitSignature": (()=>splitSignature),
    "stripZeros": (()=>stripZeros),
    "zeroPad": (()=>zeroPad)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/_version.js [app-rsc] (ecmascript)");
"use strict";
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
///////////////////////////////
function isHexable(value) {
    return !!value.toHexString;
}
function addSlice(array) {
    if (array.slice) {
        return array;
    }
    array.slice = function() {
        const args = Array.prototype.slice.call(arguments);
        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
    };
    return array;
}
function isBytesLike(value) {
    return isHexString(value) && !(value.length % 2) || isBytes(value);
}
function isInteger(value) {
    return typeof value === "number" && value == value && value % 1 === 0;
}
function isBytes(value) {
    if (value == null) {
        return false;
    }
    if (value.constructor === Uint8Array) {
        return true;
    }
    if (typeof value === "string") {
        return false;
    }
    if (!isInteger(value.length) || value.length < 0) {
        return false;
    }
    for(let i = 0; i < value.length; i++){
        const v = value[i];
        if (!isInteger(v) || v < 0 || v >= 256) {
            return false;
        }
    }
    return true;
}
function arrayify(value, options) {
    if (!options) {
        options = {};
    }
    if (typeof value === "number") {
        logger.checkSafeUint53(value, "invalid arrayify value");
        const result = [];
        while(value){
            result.unshift(value & 0xff);
            value = parseInt(String(value / 256));
        }
        if (result.length === 0) {
            result.push(0);
        }
        return addSlice(new Uint8Array(result));
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    if (isHexable(value)) {
        value = value.toHexString();
    }
    if (isHexString(value)) {
        let hex = value.substring(2);
        if (hex.length % 2) {
            if (options.hexPad === "left") {
                hex = "0" + hex;
            } else if (options.hexPad === "right") {
                hex += "0";
            } else {
                logger.throwArgumentError("hex data is odd-length", "value", value);
            }
        }
        const result = [];
        for(let i = 0; i < hex.length; i += 2){
            result.push(parseInt(hex.substring(i, i + 2), 16));
        }
        return addSlice(new Uint8Array(result));
    }
    if (isBytes(value)) {
        return addSlice(new Uint8Array(value));
    }
    return logger.throwArgumentError("invalid arrayify value", "value", value);
}
function concat(items) {
    const objects = items.map((item)=>arrayify(item));
    const length = objects.reduce((accum, item)=>accum + item.length, 0);
    const result = new Uint8Array(length);
    objects.reduce((offset, object)=>{
        result.set(object, offset);
        return offset + object.length;
    }, 0);
    return addSlice(result);
}
function stripZeros(value) {
    let result = arrayify(value);
    if (result.length === 0) {
        return result;
    }
    // Find the first non-zero entry
    let start = 0;
    while(start < result.length && result[start] === 0){
        start++;
    }
    // If we started with zeros, strip them
    if (start) {
        result = result.slice(start);
    }
    return result;
}
function zeroPad(value, length) {
    value = arrayify(value);
    if (value.length > length) {
        logger.throwArgumentError("value out of range", "value", arguments[0]);
    }
    const result = new Uint8Array(length);
    result.set(value, length - value.length);
    return addSlice(result);
}
function isHexString(value, length) {
    if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
        return false;
    }
    if (length && value.length !== 2 + 2 * length) {
        return false;
    }
    return true;
}
const HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
    if (!options) {
        options = {};
    }
    if (typeof value === "number") {
        logger.checkSafeUint53(value, "invalid hexlify value");
        let hex = "";
        while(value){
            hex = HexCharacters[value & 0xf] + hex;
            value = Math.floor(value / 16);
        }
        if (hex.length) {
            if (hex.length % 2) {
                hex = "0" + hex;
            }
            return "0x" + hex;
        }
        return "0x00";
    }
    if (typeof value === "bigint") {
        value = value.toString(16);
        if (value.length % 2) {
            return "0x0" + value;
        }
        return "0x" + value;
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    if (isHexable(value)) {
        return value.toHexString();
    }
    if (isHexString(value)) {
        if (value.length % 2) {
            if (options.hexPad === "left") {
                value = "0x0" + value.substring(2);
            } else if (options.hexPad === "right") {
                value += "0";
            } else {
                logger.throwArgumentError("hex data is odd-length", "value", value);
            }
        }
        return value.toLowerCase();
    }
    if (isBytes(value)) {
        let result = "0x";
        for(let i = 0; i < value.length; i++){
            let v = value[i];
            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];
        }
        return result;
    }
    return logger.throwArgumentError("invalid hexlify value", "value", value);
}
function hexDataLength(data) {
    if (typeof data !== "string") {
        data = hexlify(data);
    } else if (!isHexString(data) || data.length % 2) {
        return null;
    }
    return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
    if (typeof data !== "string") {
        data = hexlify(data);
    } else if (!isHexString(data) || data.length % 2) {
        logger.throwArgumentError("invalid hexData", "value", data);
    }
    offset = 2 + 2 * offset;
    if (endOffset != null) {
        return "0x" + data.substring(offset, 2 + 2 * endOffset);
    }
    return "0x" + data.substring(offset);
}
function hexConcat(items) {
    let result = "0x";
    items.forEach((item)=>{
        result += hexlify(item).substring(2);
    });
    return result;
}
function hexValue(value) {
    const trimmed = hexStripZeros(hexlify(value, {
        hexPad: "left"
    }));
    if (trimmed === "0x") {
        return "0x0";
    }
    return trimmed;
}
function hexStripZeros(value) {
    if (typeof value !== "string") {
        value = hexlify(value);
    }
    if (!isHexString(value)) {
        logger.throwArgumentError("invalid hex string", "value", value);
    }
    value = value.substring(2);
    let offset = 0;
    while(offset < value.length && value[offset] === "0"){
        offset++;
    }
    return "0x" + value.substring(offset);
}
function hexZeroPad(value, length) {
    if (typeof value !== "string") {
        value = hexlify(value);
    } else if (!isHexString(value)) {
        logger.throwArgumentError("invalid hex string", "value", value);
    }
    if (value.length > 2 * length + 2) {
        logger.throwArgumentError("value out of range", "value", arguments[1]);
    }
    while(value.length < 2 * length + 2){
        value = "0x0" + value.substring(2);
    }
    return value;
}
function splitSignature(signature) {
    const result = {
        r: "0x",
        s: "0x",
        _vs: "0x",
        recoveryParam: 0,
        v: 0,
        yParityAndS: "0x",
        compact: "0x"
    };
    if (isBytesLike(signature)) {
        let bytes = arrayify(signature);
        // Get the r, s and v
        if (bytes.length === 64) {
            // EIP-2098; pull the v from the top bit of s and clear it
            result.v = 27 + (bytes[32] >> 7);
            bytes[32] &= 0x7f;
            result.r = hexlify(bytes.slice(0, 32));
            result.s = hexlify(bytes.slice(32, 64));
        } else if (bytes.length === 65) {
            result.r = hexlify(bytes.slice(0, 32));
            result.s = hexlify(bytes.slice(32, 64));
            result.v = bytes[64];
        } else {
            logger.throwArgumentError("invalid signature string", "signature", signature);
        }
        // Allow a recid to be used as the v
        if (result.v < 27) {
            if (result.v === 0 || result.v === 1) {
                result.v += 27;
            } else {
                logger.throwArgumentError("signature invalid v byte", "signature", signature);
            }
        }
        // Compute recoveryParam from v
        result.recoveryParam = 1 - result.v % 2;
        // Compute _vs from recoveryParam and s
        if (result.recoveryParam) {
            bytes[32] |= 0x80;
        }
        result._vs = hexlify(bytes.slice(32, 64));
    } else {
        result.r = signature.r;
        result.s = signature.s;
        result.v = signature.v;
        result.recoveryParam = signature.recoveryParam;
        result._vs = signature._vs;
        // If the _vs is available, use it to populate missing s, v and recoveryParam
        // and verify non-missing s, v and recoveryParam
        if (result._vs != null) {
            const vs = zeroPad(arrayify(result._vs), 32);
            result._vs = hexlify(vs);
            // Set or check the recid
            const recoveryParam = vs[0] >= 128 ? 1 : 0;
            if (result.recoveryParam == null) {
                result.recoveryParam = recoveryParam;
            } else if (result.recoveryParam !== recoveryParam) {
                logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
            }
            // Set or check the s
            vs[0] &= 0x7f;
            const s = hexlify(vs);
            if (result.s == null) {
                result.s = s;
            } else if (result.s !== s) {
                logger.throwArgumentError("signature v mismatch _vs", "signature", signature);
            }
        }
        // Use recid and v to populate each other
        if (result.recoveryParam == null) {
            if (result.v == null) {
                logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
            } else if (result.v === 0 || result.v === 1) {
                result.recoveryParam = result.v;
            } else {
                result.recoveryParam = 1 - result.v % 2;
            }
        } else {
            if (result.v == null) {
                result.v = 27 + result.recoveryParam;
            } else {
                const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
                if (result.recoveryParam !== recId) {
                    logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
                }
            }
        }
        if (result.r == null || !isHexString(result.r)) {
            logger.throwArgumentError("signature missing or invalid r", "signature", signature);
        } else {
            result.r = hexZeroPad(result.r, 32);
        }
        if (result.s == null || !isHexString(result.s)) {
            logger.throwArgumentError("signature missing or invalid s", "signature", signature);
        } else {
            result.s = hexZeroPad(result.s, 32);
        }
        const vs = arrayify(result.s);
        if (vs[0] >= 128) {
            logger.throwArgumentError("signature s out of range", "signature", signature);
        }
        if (result.recoveryParam) {
            vs[0] |= 0x80;
        }
        const _vs = hexlify(vs);
        if (result._vs) {
            if (!isHexString(result._vs)) {
                logger.throwArgumentError("signature invalid _vs", "signature", signature);
            }
            result._vs = hexZeroPad(result._vs, 32);
        }
        // Set or check the _vs
        if (result._vs == null) {
            result._vs = _vs;
        } else if (result._vs !== _vs) {
            logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
        }
    }
    result.yParityAndS = result._vs;
    result.compact = result.r + result.yParityAndS.substring(2);
    return result;
}
function joinSignature(signature) {
    signature = splitSignature(signature);
    return hexlify(concat([
        signature.r,
        signature.s,
        signature.recoveryParam ? "0x1c" : "0x1b"
    ]));
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "bignumber/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BigNumber": (()=>BigNumber),
    "_base16To36": (()=>_base16To36),
    "_base36To16": (()=>_base36To16),
    "isBigNumberish": (()=>isBigNumberish)
});
/**
 *  BigNumber
 *
 *  A wrapper around the BN.js object. We use the BN.js library
 *  because it is used by elliptic, so it is required regardless.
 *
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
var BN = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].BN;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
const _constructorGuard = {};
const MAX_SAFE = 0x1fffffffffffff;
function isBigNumberish(value) {
    return value != null && (BigNumber.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(value) || typeof value === "bigint" || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytes"])(value));
}
// Only warn about passing 10 into radix once
let _warnedToStringRadix = false;
class BigNumber {
    constructor(constructorGuard, hex){
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("cannot call constructor directly; use BigNumber.from", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "new (BigNumber)"
            });
        }
        this._hex = hex;
        this._isBigNumber = true;
        Object.freeze(this);
    }
    fromTwos(value) {
        return toBigNumber(toBN(this).fromTwos(value));
    }
    toTwos(value) {
        return toBigNumber(toBN(this).toTwos(value));
    }
    abs() {
        if (this._hex[0] === "-") {
            return BigNumber.from(this._hex.substring(1));
        }
        return this;
    }
    add(other) {
        return toBigNumber(toBN(this).add(toBN(other)));
    }
    sub(other) {
        return toBigNumber(toBN(this).sub(toBN(other)));
    }
    div(other) {
        const o = BigNumber.from(other);
        if (o.isZero()) {
            throwFault("division-by-zero", "div");
        }
        return toBigNumber(toBN(this).div(toBN(other)));
    }
    mul(other) {
        return toBigNumber(toBN(this).mul(toBN(other)));
    }
    mod(other) {
        const value = toBN(other);
        if (value.isNeg()) {
            throwFault("division-by-zero", "mod");
        }
        return toBigNumber(toBN(this).umod(value));
    }
    pow(other) {
        const value = toBN(other);
        if (value.isNeg()) {
            throwFault("negative-power", "pow");
        }
        return toBigNumber(toBN(this).pow(value));
    }
    and(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault("unbound-bitwise-result", "and");
        }
        return toBigNumber(toBN(this).and(value));
    }
    or(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault("unbound-bitwise-result", "or");
        }
        return toBigNumber(toBN(this).or(value));
    }
    xor(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault("unbound-bitwise-result", "xor");
        }
        return toBigNumber(toBN(this).xor(value));
    }
    mask(value) {
        if (this.isNegative() || value < 0) {
            throwFault("negative-width", "mask");
        }
        return toBigNumber(toBN(this).maskn(value));
    }
    shl(value) {
        if (this.isNegative() || value < 0) {
            throwFault("negative-width", "shl");
        }
        return toBigNumber(toBN(this).shln(value));
    }
    shr(value) {
        if (this.isNegative() || value < 0) {
            throwFault("negative-width", "shr");
        }
        return toBigNumber(toBN(this).shrn(value));
    }
    eq(other) {
        return toBN(this).eq(toBN(other));
    }
    lt(other) {
        return toBN(this).lt(toBN(other));
    }
    lte(other) {
        return toBN(this).lte(toBN(other));
    }
    gt(other) {
        return toBN(this).gt(toBN(other));
    }
    gte(other) {
        return toBN(this).gte(toBN(other));
    }
    isNegative() {
        return this._hex[0] === "-";
    }
    isZero() {
        return toBN(this).isZero();
    }
    toNumber() {
        try {
            return toBN(this).toNumber();
        } catch (error) {
            throwFault("overflow", "toNumber", this.toString());
        }
        return null;
    }
    toBigInt() {
        try {
            return BigInt(this.toString());
        } catch (e) {}
        return logger.throwError("this platform does not support BigInt", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
            value: this.toString()
        });
    }
    toString() {
        // Lots of people expect this, which we do not support, so check (See: #889)
        if (arguments.length > 0) {
            if (arguments[0] === 10) {
                if (!_warnedToStringRadix) {
                    _warnedToStringRadix = true;
                    logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
                }
            } else if (arguments[0] === 16) {
                logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNEXPECTED_ARGUMENT, {});
            } else {
                logger.throwError("BigNumber.toString does not accept parameters", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNEXPECTED_ARGUMENT, {});
            }
        }
        return toBN(this).toString(10);
    }
    toHexString() {
        return this._hex;
    }
    toJSON(key) {
        return {
            type: "BigNumber",
            hex: this.toHexString()
        };
    }
    static from(value) {
        if (value instanceof BigNumber) {
            return value;
        }
        if (typeof value === "string") {
            if (value.match(/^-?0x[0-9a-f]+$/i)) {
                return new BigNumber(_constructorGuard, toHex(value));
            }
            if (value.match(/^-?[0-9]+$/)) {
                return new BigNumber(_constructorGuard, toHex(new BN(value)));
            }
            return logger.throwArgumentError("invalid BigNumber string", "value", value);
        }
        if (typeof value === "number") {
            if (value % 1) {
                throwFault("underflow", "BigNumber.from", value);
            }
            if (value >= MAX_SAFE || value <= -MAX_SAFE) {
                throwFault("overflow", "BigNumber.from", value);
            }
            return BigNumber.from(String(value));
        }
        const anyValue = value;
        if (typeof anyValue === "bigint") {
            return BigNumber.from(anyValue.toString());
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytes"])(anyValue)) {
            return BigNumber.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(anyValue));
        }
        if (anyValue) {
            // Hexable interface (takes priority)
            if (anyValue.toHexString) {
                const hex = anyValue.toHexString();
                if (typeof hex === "string") {
                    return BigNumber.from(hex);
                }
            } else {
                // For now, handle legacy JSON-ified values (goes away in v6)
                let hex = anyValue._hex;
                // New-form JSON
                if (hex == null && anyValue.type === "BigNumber") {
                    hex = anyValue.hex;
                }
                if (typeof hex === "string") {
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(hex) || hex[0] === "-" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(hex.substring(1))) {
                        return BigNumber.from(hex);
                    }
                }
            }
        }
        return logger.throwArgumentError("invalid BigNumber value", "value", value);
    }
    static isBigNumber(value) {
        return !!(value && value._isBigNumber);
    }
}
// Normalize the hex string
function toHex(value) {
    // For BN, call on the hex string
    if (typeof value !== "string") {
        return toHex(value.toString(16));
    }
    // If negative, prepend the negative sign to the normalized positive value
    if (value[0] === "-") {
        // Strip off the negative sign
        value = value.substring(1);
        // Cannot have multiple negative signs (e.g. "--0x04")
        if (value[0] === "-") {
            logger.throwArgumentError("invalid hex", "value", value);
        }
        // Call toHex on the positive component
        value = toHex(value);
        // Do not allow "-0x00"
        if (value === "0x00") {
            return value;
        }
        // Negate the value
        return "-" + value;
    }
    // Add a "0x" prefix if missing
    if (value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    // Normalize zero
    if (value === "0x") {
        return "0x00";
    }
    // Make the string even length
    if (value.length % 2) {
        value = "0x0" + value.substring(2);
    }
    // Trim to smallest even-length string
    while(value.length > 4 && value.substring(0, 4) === "0x00"){
        value = "0x" + value.substring(4);
    }
    return value;
}
function toBigNumber(value) {
    return BigNumber.from(toHex(value));
}
function toBN(value) {
    const hex = BigNumber.from(value).toHexString();
    if (hex[0] === "-") {
        return new BN("-" + hex.substring(3), 16);
    }
    return new BN(hex.substring(2), 16);
}
function throwFault(fault, operation, value) {
    const params = {
        fault: fault,
        operation: operation
    };
    if (value != null) {
        params.value = value;
    }
    return logger.throwError(fault, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.NUMERIC_FAULT, params);
}
function _base36To16(value) {
    return new BN(value, 36).toString(16);
}
function _base16To36(value) {
    return new BN(value, 16).toString(36);
} //# sourceMappingURL=bignumber.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FixedFormat": (()=>FixedFormat),
    "FixedNumber": (()=>FixedNumber),
    "formatFixed": (()=>formatFixed),
    "parseFixed": (()=>parseFixed)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/_version.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
const _constructorGuard = {};
const Zero = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(0);
const NegativeOne = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(-1);
function throwFault(message, fault, operation, value) {
    const params = {
        fault: fault,
        operation: operation
    };
    if (value !== undefined) {
        params.value = value;
    }
    return logger.throwError(message, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.NUMERIC_FAULT, params);
}
// Constant to pull zeros from for multipliers
let zeros = "0";
while(zeros.length < 256){
    zeros += zeros;
}
// Returns a string "1" followed by decimal "0"s
function getMultiplier(decimals) {
    if (typeof decimals !== "number") {
        try {
            decimals = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(decimals).toNumber();
        } catch (e) {}
    }
    if (typeof decimals === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
        return "1" + zeros.substring(0, decimals);
    }
    return logger.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function formatFixed(value, decimals) {
    if (decimals == null) {
        decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    // Make sure wei is a big number (convert as necessary)
    value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value);
    const negative = value.lt(Zero);
    if (negative) {
        value = value.mul(NegativeOne);
    }
    let fraction = value.mod(multiplier).toString();
    while(fraction.length < multiplier.length - 1){
        fraction = "0" + fraction;
    }
    // Strip training 0
    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    const whole = value.div(multiplier).toString();
    if (multiplier.length === 1) {
        value = whole;
    } else {
        value = whole + "." + fraction;
    }
    if (negative) {
        value = "-" + value;
    }
    return value;
}
function parseFixed(value, decimals) {
    if (decimals == null) {
        decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    if (typeof value !== "string" || !value.match(/^-?[0-9.]+$/)) {
        logger.throwArgumentError("invalid decimal value", "value", value);
    }
    // Is it negative?
    const negative = value.substring(0, 1) === "-";
    if (negative) {
        value = value.substring(1);
    }
    if (value === ".") {
        logger.throwArgumentError("missing value", "value", value);
    }
    // Split it into a whole and fractional part
    const comps = value.split(".");
    if (comps.length > 2) {
        logger.throwArgumentError("too many decimal points", "value", value);
    }
    let whole = comps[0], fraction = comps[1];
    if (!whole) {
        whole = "0";
    }
    if (!fraction) {
        fraction = "0";
    }
    // Trim trailing zeros
    while(fraction[fraction.length - 1] === "0"){
        fraction = fraction.substring(0, fraction.length - 1);
    }
    // Check the fraction doesn't exceed our decimals size
    if (fraction.length > multiplier.length - 1) {
        throwFault("fractional component exceeds decimals", "underflow", "parseFixed");
    }
    // If decimals is 0, we have an empty string for fraction
    if (fraction === "") {
        fraction = "0";
    }
    // Fully pad the string with zeros to get to wei
    while(fraction.length < multiplier.length - 1){
        fraction += "0";
    }
    const wholeValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(whole);
    const fractionValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(fraction);
    let wei = wholeValue.mul(multiplier).add(fractionValue);
    if (negative) {
        wei = wei.mul(NegativeOne);
    }
    return wei;
}
class FixedFormat {
    constructor(constructorGuard, signed, width, decimals){
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("cannot use FixedFormat constructor; use FixedFormat.from", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "new FixedFormat"
            });
        }
        this.signed = signed;
        this.width = width;
        this.decimals = decimals;
        this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
        this._multiplier = getMultiplier(decimals);
        Object.freeze(this);
    }
    static from(value) {
        if (value instanceof FixedFormat) {
            return value;
        }
        if (typeof value === "number") {
            value = `fixed128x${value}`;
        }
        let signed = true;
        let width = 128;
        let decimals = 18;
        if (typeof value === "string") {
            if (value === "fixed") {
            // defaults...
            } else if (value === "ufixed") {
                signed = false;
            } else {
                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                if (!match) {
                    logger.throwArgumentError("invalid fixed format", "format", value);
                }
                signed = match[1] !== "u";
                width = parseInt(match[2]);
                decimals = parseInt(match[3]);
            }
        } else if (value) {
            const check = (key, type, defaultValue)=>{
                if (value[key] == null) {
                    return defaultValue;
                }
                if (typeof value[key] !== type) {
                    logger.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]);
                }
                return value[key];
            };
            signed = check("signed", "boolean", signed);
            width = check("width", "number", width);
            decimals = check("decimals", "number", decimals);
        }
        if (width % 8) {
            logger.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
        }
        if (decimals > 80) {
            logger.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
        }
        return new FixedFormat(_constructorGuard, signed, width, decimals);
    }
}
class FixedNumber {
    constructor(constructorGuard, hex, value, format){
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("cannot use FixedNumber constructor; use FixedNumber.from", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "new FixedFormat"
            });
        }
        this.format = format;
        this._hex = hex;
        this._value = value;
        this._isFixedNumber = true;
        Object.freeze(this);
    }
    _checkFormat(other) {
        if (this.format.name !== other.format.name) {
            logger.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
        }
    }
    addUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
    }
    subUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
    }
    mulUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
    }
    divUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
    }
    floor() {
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        let result = FixedNumber.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (this.isNegative() && hasFraction) {
            result = result.subUnsafe(ONE.toFormat(result.format));
        }
        return result;
    }
    ceiling() {
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        let result = FixedNumber.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (!this.isNegative() && hasFraction) {
            result = result.addUnsafe(ONE.toFormat(result.format));
        }
        return result;
    }
    // @TODO: Support other rounding algorithms
    round(decimals) {
        if (decimals == null) {
            decimals = 0;
        }
        // If we are already in range, we're done
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        if (decimals < 0 || decimals > 80 || decimals % 1) {
            logger.throwArgumentError("invalid decimal count", "decimals", decimals);
        }
        if (comps[1].length <= decimals) {
            return this;
        }
        const factor = FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
        const bump = BUMP.toFormat(this.format);
        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
    }
    isZero() {
        return this._value === "0.0" || this._value === "0";
    }
    isNegative() {
        return this._value[0] === "-";
    }
    toString() {
        return this._value;
    }
    toHexString(width) {
        if (width == null) {
            return this._hex;
        }
        if (width % 8) {
            logger.throwArgumentError("invalid byte width", "width", width);
        }
        const hex = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(hex, width / 8);
    }
    toUnsafeFloat() {
        return parseFloat(this.toString());
    }
    toFormat(format) {
        return FixedNumber.fromString(this._value, format);
    }
    static fromValue(value, decimals, format) {
        // If decimals looks more like a format, and there is no format, shift the parameters
        if (format == null && decimals != null && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBigNumberish"])(decimals)) {
            format = decimals;
            decimals = null;
        }
        if (decimals == null) {
            decimals = 0;
        }
        if (format == null) {
            format = "fixed";
        }
        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
    }
    static fromString(value, format) {
        if (format == null) {
            format = "fixed";
        }
        const fixedFormat = FixedFormat.from(format);
        const numeric = parseFixed(value, fixedFormat.decimals);
        if (!fixedFormat.signed && numeric.lt(Zero)) {
            throwFault("unsigned value cannot be negative", "overflow", "value", value);
        }
        let hex = null;
        if (fixedFormat.signed) {
            hex = numeric.toTwos(fixedFormat.width).toHexString();
        } else {
            hex = numeric.toHexString();
            hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(hex, fixedFormat.width / 8);
        }
        const decimal = formatFixed(numeric, fixedFormat.decimals);
        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
    }
    static fromBytes(value, format) {
        if (format == null) {
            format = "fixed";
        }
        const fixedFormat = FixedFormat.from(format);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value).length > fixedFormat.width / 8) {
            throw new Error("overflow");
        }
        let numeric = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value);
        if (fixedFormat.signed) {
            numeric = numeric.fromTwos(fixedFormat.width);
        }
        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
        const decimal = formatFixed(numeric, fixedFormat.decimals);
        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
    }
    static from(value, format) {
        if (typeof value === "string") {
            return FixedNumber.fromString(value, format);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytes"])(value)) {
            return FixedNumber.fromBytes(value, format);
        }
        try {
            return FixedNumber.fromValue(value, 0, format);
        } catch (error) {
            // Allow NUMERIC_FAULT to bubble up
            if (error.code !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.INVALID_ARGUMENT) {
                throw error;
            }
        }
        return logger.throwArgumentError("invalid FixedNumber value", "value", value);
    }
    static isFixedNumber(value) {
        return !!(value && value._isFixedNumber);
    }
}
const ONE = FixedNumber.from(1);
const BUMP = FixedNumber.from("0.5"); //# sourceMappingURL=fixednumber.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "abstract-signer/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Signer": (()=>Signer),
    "VoidSigner": (()=>VoidSigner)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
const allowedTransactionKeys = [
    "accessList",
    "ccipReadEnabled",
    "chainId",
    "customData",
    "data",
    "from",
    "gasLimit",
    "gasPrice",
    "maxFeePerGas",
    "maxPriorityFeePerGas",
    "nonce",
    "to",
    "type",
    "value"
];
const forwardErrors = [
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.INSUFFICIENT_FUNDS,
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.NONCE_EXPIRED,
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.REPLACEMENT_UNDERPRICED
];
;
;
class Signer {
    ///////////////////
    // Sub-classes MUST call super
    constructor(){
        logger.checkAbstract(new.target, Signer);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_isSigner", true);
    }
    ///////////////////
    // Sub-classes MAY override these
    getBalance(blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getBalance");
            return yield this.provider.getBalance(this.getAddress(), blockTag);
        });
    }
    getTransactionCount(blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getTransactionCount");
            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
        });
    }
    // Populates "from" if unspecified, and estimates the gas for the transaction
    estimateGas(transaction) {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("estimateGas");
            const tx = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])(this.checkTransaction(transaction));
            return yield this.provider.estimateGas(tx);
        });
    }
    // Populates "from" if unspecified, and calls with the transaction
    call(transaction, blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("call");
            const tx = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])(this.checkTransaction(transaction));
            return yield this.provider.call(tx, blockTag);
        });
    }
    // Populates all fields in a transaction, signs it and sends it to the network
    sendTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("sendTransaction");
            const tx = yield this.populateTransaction(transaction);
            const signedTx = yield this.signTransaction(tx);
            return yield this.provider.sendTransaction(signedTx);
        });
    }
    getChainId() {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getChainId");
            const network = yield this.provider.getNetwork();
            return network.chainId;
        });
    }
    getGasPrice() {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getGasPrice");
            return yield this.provider.getGasPrice();
        });
    }
    getFeeData() {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getFeeData");
            return yield this.provider.getFeeData();
        });
    }
    resolveName(name) {
        return __awaiter(this, void 0, void 0, function*() {
            this._checkProvider("resolveName");
            return yield this.provider.resolveName(name);
        });
    }
    // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)
    checkTransaction(transaction) {
        for(const key in transaction){
            if (allowedTransactionKeys.indexOf(key) === -1) {
                logger.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
            }
        }
        const tx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(transaction);
        if (tx.from == null) {
            tx.from = this.getAddress();
        } else {
            // Make sure any provided address matches this signer
            tx.from = Promise.all([
                Promise.resolve(tx.from),
                this.getAddress()
            ]).then((result)=>{
                if (result[0].toLowerCase() !== result[1].toLowerCase()) {
                    logger.throwArgumentError("from address mismatch", "transaction", transaction);
                }
                return result[0];
            });
        }
        return tx;
    }
    // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
    populateTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function*() {
            const tx = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])(this.checkTransaction(transaction));
            if (tx.to != null) {
                tx.to = Promise.resolve(tx.to).then((to)=>__awaiter(this, void 0, void 0, function*() {
                        if (to == null) {
                            return null;
                        }
                        const address = yield this.resolveName(to);
                        if (address == null) {
                            logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                        }
                        return address;
                    }));
                // Prevent this error from causing an UnhandledPromiseException
                tx.to.catch((error)=>{});
            }
            // Do not allow mixing pre-eip-1559 and eip-1559 properties
            const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;
            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
                logger.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
            } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
                logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
            }
            if ((tx.type === 2 || tx.type == null) && tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null) {
                // Fully-formed EIP-1559 transaction (skip getFeeData)
                tx.type = 2;
            } else if (tx.type === 0 || tx.type === 1) {
                // Explicit Legacy or EIP-2930 transaction
                // Populate missing gasPrice
                if (tx.gasPrice == null) {
                    tx.gasPrice = this.getGasPrice();
                }
            } else {
                // We need to get fee data to determine things
                const feeData = yield this.getFeeData();
                if (tx.type == null) {
                    // We need to auto-detect the intended type of this transaction...
                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
                        // The network supports EIP-1559!
                        // Upgrade transaction from null to eip-1559
                        tx.type = 2;
                        if (tx.gasPrice != null) {
                            // Using legacy gasPrice property on an eip-1559 network,
                            // so use gasPrice as both fee properties
                            const gasPrice = tx.gasPrice;
                            delete tx.gasPrice;
                            tx.maxFeePerGas = gasPrice;
                            tx.maxPriorityFeePerGas = gasPrice;
                        } else {
                            // Populate missing fee data
                            if (tx.maxFeePerGas == null) {
                                tx.maxFeePerGas = feeData.maxFeePerGas;
                            }
                            if (tx.maxPriorityFeePerGas == null) {
                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                            }
                        }
                    } else if (feeData.gasPrice != null) {
                        // Network doesn't support EIP-1559...
                        // ...but they are trying to use EIP-1559 properties
                        if (hasEip1559) {
                            logger.throwError("network does not support EIP-1559", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                                operation: "populateTransaction"
                            });
                        }
                        // Populate missing fee data
                        if (tx.gasPrice == null) {
                            tx.gasPrice = feeData.gasPrice;
                        }
                        // Explicitly set untyped transaction to legacy
                        tx.type = 0;
                    } else {
                        // getFeeData has failed us.
                        logger.throwError("failed to get consistent fee data", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                            operation: "signer.getFeeData"
                        });
                    }
                } else if (tx.type === 2) {
                    // Explicitly using EIP-1559
                    // Populate missing fee data
                    if (tx.maxFeePerGas == null) {
                        tx.maxFeePerGas = feeData.maxFeePerGas;
                    }
                    if (tx.maxPriorityFeePerGas == null) {
                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                    }
                }
            }
            if (tx.nonce == null) {
                tx.nonce = this.getTransactionCount("pending");
            }
            if (tx.gasLimit == null) {
                tx.gasLimit = this.estimateGas(tx).catch((error)=>{
                    if (forwardErrors.indexOf(error.code) >= 0) {
                        throw error;
                    }
                    return logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNPREDICTABLE_GAS_LIMIT, {
                        error: error,
                        tx: tx
                    });
                });
            }
            if (tx.chainId == null) {
                tx.chainId = this.getChainId();
            } else {
                tx.chainId = Promise.all([
                    Promise.resolve(tx.chainId),
                    this.getChainId()
                ]).then((results)=>{
                    if (results[1] !== 0 && results[0] !== results[1]) {
                        logger.throwArgumentError("chainId address mismatch", "transaction", transaction);
                    }
                    return results[0];
                });
            }
            return yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])(tx);
        });
    }
    ///////////////////
    // Sub-classes SHOULD leave these alone
    _checkProvider(operation) {
        if (!this.provider) {
            logger.throwError("missing provider", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: operation || "_checkProvider"
            });
        }
    }
    static isSigner(value) {
        return !!(value && value._isSigner);
    }
}
class VoidSigner extends Signer {
    constructor(address, provider){
        super();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", address);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "provider", provider || null);
    }
    getAddress() {
        return Promise.resolve(this.address);
    }
    _fail(message, operation) {
        return Promise.resolve().then(()=>{
            logger.throwError(message, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: operation
            });
        });
    }
    signMessage(message) {
        return this._fail("VoidSigner cannot sign messages", "signMessage");
    }
    signTransaction(transaction) {
        return this._fail("VoidSigner cannot sign transactions", "signTransaction");
    }
    _signTypedData(domain, types, value) {
        return this._fail("VoidSigner cannot sign typed data", "signTypedData");
    }
    connect(provider) {
        return new VoidSigner(this.address, provider);
    }
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "abstract-provider/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BlockForkEvent": (()=>BlockForkEvent),
    "ForkEvent": (()=>ForkEvent),
    "Provider": (()=>Provider),
    "TransactionForkEvent": (()=>TransactionForkEvent),
    "TransactionOrderForkEvent": (()=>TransactionOrderForkEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$provider$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$provider$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$provider$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$provider$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
;
class ForkEvent extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Description"] {
    static isForkEvent(value) {
        return !!(value && value._isForkEvent);
    }
}
class BlockForkEvent extends ForkEvent {
    constructor(blockHash, expiry){
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(blockHash, 32)) {
            logger.throwArgumentError("invalid blockHash", "blockHash", blockHash);
        }
        super({
            _isForkEvent: true,
            _isBlockForkEvent: true,
            expiry: expiry || 0,
            blockHash: blockHash
        });
    }
}
class TransactionForkEvent extends ForkEvent {
    constructor(hash, expiry){
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(hash, 32)) {
            logger.throwArgumentError("invalid transaction hash", "hash", hash);
        }
        super({
            _isForkEvent: true,
            _isTransactionForkEvent: true,
            expiry: expiry || 0,
            hash: hash
        });
    }
}
class TransactionOrderForkEvent extends ForkEvent {
    constructor(beforeHash, afterHash, expiry){
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(beforeHash, 32)) {
            logger.throwArgumentError("invalid transaction hash", "beforeHash", beforeHash);
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(afterHash, 32)) {
            logger.throwArgumentError("invalid transaction hash", "afterHash", afterHash);
        }
        super({
            _isForkEvent: true,
            _isTransactionOrderForkEvent: true,
            expiry: expiry || 0,
            beforeHash: beforeHash,
            afterHash: afterHash
        });
    }
}
class Provider {
    constructor(){
        logger.checkAbstract(new.target, Provider);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_isProvider", true);
    }
    getFeeData() {
        return __awaiter(this, void 0, void 0, function*() {
            const { block, gasPrice } = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])({
                block: this.getBlock("latest"),
                gasPrice: this.getGasPrice().catch((error)=>{
                    // @TODO: Why is this now failing on Calaveras?
                    //console.log(error);
                    return null;
                })
            });
            let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
            if (block && block.baseFeePerGas) {
                // We may want to compute this more accurately in the future,
                // using the formula "check if the base fee is correct".
                // See: https://eips.ethereum.org/EIPS/eip-1559
                lastBaseFeePerGas = block.baseFeePerGas;
                maxPriorityFeePerGas = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("1500000000");
                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
            }
            return {
                lastBaseFeePerGas,
                maxFeePerGas,
                maxPriorityFeePerGas,
                gasPrice
            };
        });
    }
    // Alias for "on"
    addListener(eventName, listener) {
        return this.on(eventName, listener);
    }
    // Alias for "off"
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
    static isProvider(value) {
        return !!(value && value._isProvider);
    }
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "address/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getAddress": (()=>getAddress),
    "getContractAddress": (()=>getContractAddress),
    "getCreate2Address": (()=>getCreate2Address),
    "getIcapAddress": (()=>getIcapAddress),
    "isAddress": (()=>isAddress)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
function getChecksumAddress(address) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(address, 20)) {
        logger.throwArgumentError("invalid address", "address", address);
    }
    address = address.toLowerCase();
    const chars = address.substring(2).split("");
    const expanded = new Uint8Array(40);
    for(let i = 0; i < 40; i++){
        expanded[i] = chars[i].charCodeAt(0);
    }
    const hashed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(expanded));
    for(let i = 0; i < 40; i += 2){
        if (hashed[i >> 1] >> 4 >= 8) {
            chars[i] = chars[i].toUpperCase();
        }
        if ((hashed[i >> 1] & 0x0f) >= 8) {
            chars[i + 1] = chars[i + 1].toUpperCase();
        }
    }
    return "0x" + chars.join("");
}
// Shims for environments that are missing some required constants and functions
const MAX_SAFE_INTEGER = 0x1fffffffffffff;
function log10(x) {
    if (Math.log10) {
        return Math.log10(x);
    }
    return Math.log(x) / Math.LN10;
}
// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
// Create lookup table
const ibanLookup = {};
for(let i = 0; i < 10; i++){
    ibanLookup[String(i)] = String(i);
}
for(let i = 0; i < 26; i++){
    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
// How many decimal digits can we process? (for 64-bit float, this is 15)
const safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
    address = address.toUpperCase();
    address = address.substring(4) + address.substring(0, 2) + "00";
    let expanded = address.split("").map((c)=>{
        return ibanLookup[c];
    }).join("");
    // Javascript can handle integers safely up to 15 (decimal) digits
    while(expanded.length >= safeDigits){
        let block = expanded.substring(0, safeDigits);
        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
    }
    let checksum = String(98 - parseInt(expanded, 10) % 97);
    while(checksum.length < 2){
        checksum = "0" + checksum;
    }
    return checksum;
}
;
function getAddress(address) {
    let result = null;
    if (typeof address !== "string") {
        logger.throwArgumentError("invalid address", "address", address);
    }
    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
        // Missing the 0x prefix
        if (address.substring(0, 2) !== "0x") {
            address = "0x" + address;
        }
        result = getChecksumAddress(address);
        // It is a checksummed address with a bad checksum
        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
            logger.throwArgumentError("bad address checksum", "address", address);
        }
    // Maybe ICAP? (we only support direct mode)
    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
        // It is an ICAP address with a bad checksum
        if (address.substring(2, 4) !== ibanChecksum(address)) {
            logger.throwArgumentError("bad icap checksum", "address", address);
        }
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["_base36To16"])(address.substring(4));
        while(result.length < 40){
            result = "0" + result;
        }
        result = getChecksumAddress("0x" + result);
    } else {
        logger.throwArgumentError("invalid address", "address", address);
    }
    return result;
}
function isAddress(address) {
    try {
        getAddress(address);
        return true;
    } catch (error) {}
    return false;
}
function getIcapAddress(address) {
    let base36 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["_base16To36"])(getAddress(address).substring(2)).toUpperCase();
    while(base36.length < 30){
        base36 = "0" + base36;
    }
    return "XE" + ibanChecksum("XE00" + base36) + base36;
}
function getContractAddress(transaction) {
    let from = null;
    try {
        from = getAddress(transaction.from);
    } catch (error) {
        logger.throwArgumentError("missing from address", "transaction", transaction);
    }
    const nonce = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(transaction.nonce).toHexString()));
    return getAddress((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["encode"])([
        from,
        nonce
    ])), 12));
}
function getCreate2Address(from, salt, initCodeHash) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataLength"])(salt) !== 32) {
        logger.throwArgumentError("salt must be 32 bytes", "salt", salt);
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataLength"])(initCodeHash) !== 32) {
        logger.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash);
    }
    return getAddress((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
        "0xff",
        getAddress(from),
        salt,
        initCodeHash
    ])), 12));
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/js-sha3@0.8.0/node_modules/js-sha3/src/sha3.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */ /*jslint bitwise: true */ (function() {
    'use strict';
    var INPUT_ERROR = 'input is invalid type';
    var FINALIZE_ERROR = 'finalize already called';
    var WINDOW = "undefined" === 'object';
    var root = ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : {};
    if (root.JS_SHA3_NO_WINDOW) {
        WINDOW = false;
    }
    var WEB_WORKER = !WINDOW && typeof self === 'object';
    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
    if (NODE_JS) {
        root = global;
    } else if (WEB_WORKER) {
        root = self;
    }
    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && ("TURBOPACK compile-time value", "object") === 'object' && module.exports;
    var AMD = typeof define === 'function' && define.amd;
    var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
    var HEX_CHARS = '0123456789abcdef'.split('');
    var SHAKE_PADDING = [
        31,
        7936,
        2031616,
        520093696
    ];
    var CSHAKE_PADDING = [
        4,
        1024,
        262144,
        67108864
    ];
    var KECCAK_PADDING = [
        1,
        256,
        65536,
        16777216
    ];
    var PADDING = [
        6,
        1536,
        393216,
        100663296
    ];
    var SHIFT = [
        0,
        8,
        16,
        24
    ];
    var RC = [
        1,
        0,
        32898,
        0,
        32906,
        2147483648,
        2147516416,
        2147483648,
        32907,
        0,
        2147483649,
        0,
        2147516545,
        2147483648,
        32777,
        2147483648,
        138,
        0,
        136,
        0,
        2147516425,
        0,
        2147483658,
        0,
        2147516555,
        0,
        139,
        2147483648,
        32905,
        2147483648,
        32771,
        2147483648,
        32770,
        2147483648,
        128,
        2147483648,
        32778,
        0,
        2147483658,
        2147483648,
        2147516545,
        2147483648,
        32896,
        2147483648,
        2147483649,
        0,
        2147516424,
        2147483648
    ];
    var BITS = [
        224,
        256,
        384,
        512
    ];
    var SHAKE_BITS = [
        128,
        256
    ];
    var OUTPUT_TYPES = [
        'hex',
        'buffer',
        'arrayBuffer',
        'array',
        'digest'
    ];
    var CSHAKE_BYTEPAD = {
        '128': 168,
        '256': 136
    };
    if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function(obj) {
            return Object.prototype.toString.call(obj) === '[object Array]';
        };
    }
    if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function(obj) {
            return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
    }
    var createOutputMethod = function(bits, padding, outputType) {
        return function(message) {
            return new Keccak(bits, padding, bits).update(message)[outputType]();
        };
    };
    var createShakeOutputMethod = function(bits, padding, outputType) {
        return function(message, outputBits) {
            return new Keccak(bits, padding, outputBits).update(message)[outputType]();
        };
    };
    var createCshakeOutputMethod = function(bits, padding, outputType) {
        return function(message, outputBits, n, s) {
            return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
        };
    };
    var createKmacOutputMethod = function(bits, padding, outputType) {
        return function(key, message, outputBits, s) {
            return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
        };
    };
    var createOutputMethods = function(method, createMethod, bits, padding) {
        for(var i = 0; i < OUTPUT_TYPES.length; ++i){
            var type = OUTPUT_TYPES[i];
            method[type] = createMethod(bits, padding, type);
        }
        return method;
    };
    var createMethod = function(bits, padding) {
        var method = createOutputMethod(bits, padding, 'hex');
        method.create = function() {
            return new Keccak(bits, padding, bits);
        };
        method.update = function(message) {
            return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits, padding);
    };
    var createShakeMethod = function(bits, padding) {
        var method = createShakeOutputMethod(bits, padding, 'hex');
        method.create = function(outputBits) {
            return new Keccak(bits, padding, outputBits);
        };
        method.update = function(message, outputBits) {
            return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits, padding);
    };
    var createCshakeMethod = function(bits, padding) {
        var w = CSHAKE_BYTEPAD[bits];
        var method = createCshakeOutputMethod(bits, padding, 'hex');
        method.create = function(outputBits, n, s) {
            if (!n && !s) {
                return methods['shake' + bits].create(outputBits);
            } else {
                return new Keccak(bits, padding, outputBits).bytepad([
                    n,
                    s
                ], w);
            }
        };
        method.update = function(message, outputBits, n, s) {
            return method.create(outputBits, n, s).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
    };
    var createKmacMethod = function(bits, padding) {
        var w = CSHAKE_BYTEPAD[bits];
        var method = createKmacOutputMethod(bits, padding, 'hex');
        method.create = function(key, outputBits, s) {
            return new Kmac(bits, padding, outputBits).bytepad([
                'KMAC',
                s
            ], w).bytepad([
                key
            ], w);
        };
        method.update = function(key, message, outputBits, s) {
            return method.create(key, outputBits, s).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits, padding);
    };
    var algorithms = [
        {
            name: 'keccak',
            padding: KECCAK_PADDING,
            bits: BITS,
            createMethod: createMethod
        },
        {
            name: 'sha3',
            padding: PADDING,
            bits: BITS,
            createMethod: createMethod
        },
        {
            name: 'shake',
            padding: SHAKE_PADDING,
            bits: SHAKE_BITS,
            createMethod: createShakeMethod
        },
        {
            name: 'cshake',
            padding: CSHAKE_PADDING,
            bits: SHAKE_BITS,
            createMethod: createCshakeMethod
        },
        {
            name: 'kmac',
            padding: CSHAKE_PADDING,
            bits: SHAKE_BITS,
            createMethod: createKmacMethod
        }
    ];
    var methods = {}, methodNames = [];
    for(var i = 0; i < algorithms.length; ++i){
        var algorithm = algorithms[i];
        var bits = algorithm.bits;
        for(var j = 0; j < bits.length; ++j){
            var methodName = algorithm.name + '_' + bits[j];
            methodNames.push(methodName);
            methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
            if (algorithm.name !== 'sha3') {
                var newMethodName = algorithm.name + bits[j];
                methodNames.push(newMethodName);
                methods[newMethodName] = methods[methodName];
            }
        }
    }
    function Keccak(bits, padding, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = 1600 - (bits << 1) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;
        for(var i = 0; i < 50; ++i){
            this.s[i] = 0;
        }
    }
    Keccak.prototype.update = function(message) {
        if (this.finalized) {
            throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== 'string') {
            if (type === 'object') {
                if (message === null) {
                    throw new Error(INPUT_ERROR);
                } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
                    message = new Uint8Array(message);
                } else if (!Array.isArray(message)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                        throw new Error(INPUT_ERROR);
                    }
                }
            } else {
                throw new Error(INPUT_ERROR);
            }
            notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s = this.s, i, code;
        while(index < length){
            if (this.reset) {
                this.reset = false;
                blocks[0] = this.block;
                for(i = 1; i < blockCount + 1; ++i){
                    blocks[i] = 0;
                }
            }
            if (notString) {
                for(i = this.start; index < length && i < byteCount; ++index){
                    blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
                }
            } else {
                for(i = this.start; index < length && i < byteCount; ++index){
                    code = message.charCodeAt(index);
                    if (code < 0x80) {
                        blocks[i >> 2] |= code << SHIFT[i++ & 3];
                    } else if (code < 0x800) {
                        blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                    } else if (code < 0xd800 || code >= 0xe000) {
                        blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                    } else {
                        code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);
                        blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                    }
                }
            }
            this.lastByteIndex = i;
            if (i >= byteCount) {
                this.start = i - byteCount;
                this.block = blocks[blockCount];
                for(i = 0; i < blockCount; ++i){
                    s[i] ^= blocks[i];
                }
                f(s);
                this.reset = true;
            } else {
                this.start = i;
            }
        }
        return this;
    };
    Keccak.prototype.encode = function(x, right) {
        var o = x & 255, n = 1;
        var bytes = [
            o
        ];
        x = x >> 8;
        o = x & 255;
        while(o > 0){
            bytes.unshift(o);
            x = x >> 8;
            o = x & 255;
            ++n;
        }
        if (right) {
            bytes.push(n);
        } else {
            bytes.unshift(n);
        }
        this.update(bytes);
        return bytes.length;
    };
    Keccak.prototype.encodeString = function(str) {
        var notString, type = typeof str;
        if (type !== 'string') {
            if (type === 'object') {
                if (str === null) {
                    throw new Error(INPUT_ERROR);
                } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
                    str = new Uint8Array(str);
                } else if (!Array.isArray(str)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                        throw new Error(INPUT_ERROR);
                    }
                }
            } else {
                throw new Error(INPUT_ERROR);
            }
            notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) {
            bytes = length;
        } else {
            for(var i = 0; i < str.length; ++i){
                var code = str.charCodeAt(i);
                if (code < 0x80) {
                    bytes += 1;
                } else if (code < 0x800) {
                    bytes += 2;
                } else if (code < 0xd800 || code >= 0xe000) {
                    bytes += 3;
                } else {
                    code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);
                    bytes += 4;
                }
            }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
    };
    Keccak.prototype.bytepad = function(strs, w) {
        var bytes = this.encode(w);
        for(var i = 0; i < strs.length; ++i){
            bytes += this.encodeString(strs[i]);
        }
        var paddingBytes = w - bytes % w;
        var zeros = [];
        zeros.length = paddingBytes;
        this.update(zeros);
        return this;
    };
    Keccak.prototype.finalize = function() {
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
        blocks[i >> 2] |= this.padding[i & 3];
        if (this.lastByteIndex === this.byteCount) {
            blocks[0] = blocks[blockCount];
            for(i = 1; i < blockCount + 1; ++i){
                blocks[i] = 0;
            }
        }
        blocks[blockCount - 1] |= 0x80000000;
        for(i = 0; i < blockCount; ++i){
            s[i] ^= blocks[i];
        }
        f(s);
    };
    Keccak.prototype.toString = Keccak.prototype.hex = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0;
        var hex = '', block;
        while(j < outputBlocks){
            for(i = 0; i < blockCount && j < outputBlocks; ++i, ++j){
                block = s[i];
                hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];
            }
            if (j % blockCount === 0) {
                f(s);
                i = 0;
            }
        }
        if (extraBytes) {
            block = s[i];
            hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];
            if (extraBytes > 1) {
                hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];
            }
            if (extraBytes > 2) {
                hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];
            }
        }
        return hex;
    };
    Keccak.prototype.arrayBuffer = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) {
            buffer = new ArrayBuffer(outputBlocks + 1 << 2);
        } else {
            buffer = new ArrayBuffer(bytes);
        }
        var array = new Uint32Array(buffer);
        while(j < outputBlocks){
            for(i = 0; i < blockCount && j < outputBlocks; ++i, ++j){
                array[j] = s[i];
            }
            if (j % blockCount === 0) {
                f(s);
            }
        }
        if (extraBytes) {
            array[i] = s[i];
            buffer = buffer.slice(0, bytes);
        }
        return buffer;
    };
    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
    Keccak.prototype.digest = Keccak.prototype.array = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0;
        var array = [], offset, block;
        while(j < outputBlocks){
            for(i = 0; i < blockCount && j < outputBlocks; ++i, ++j){
                offset = j << 2;
                block = s[i];
                array[offset] = block & 0xFF;
                array[offset + 1] = block >> 8 & 0xFF;
                array[offset + 2] = block >> 16 & 0xFF;
                array[offset + 3] = block >> 24 & 0xFF;
            }
            if (j % blockCount === 0) {
                f(s);
            }
        }
        if (extraBytes) {
            offset = j << 2;
            block = s[i];
            array[offset] = block & 0xFF;
            if (extraBytes > 1) {
                array[offset + 1] = block >> 8 & 0xFF;
            }
            if (extraBytes > 2) {
                array[offset + 2] = block >> 16 & 0xFF;
            }
        }
        return array;
    };
    function Kmac(bits, padding, outputBits) {
        Keccak.call(this, bits, padding, outputBits);
    }
    Kmac.prototype = new Keccak();
    Kmac.prototype.finalize = function() {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
    };
    var f = function(s) {
        var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for(n = 0; n < 48; n += 2){
            c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
            c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
            c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
            c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
            c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
            c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
            c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
            c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
            c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
            c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
            h = c8 ^ (c2 << 1 | c3 >>> 31);
            l = c9 ^ (c3 << 1 | c2 >>> 31);
            s[0] ^= h;
            s[1] ^= l;
            s[10] ^= h;
            s[11] ^= l;
            s[20] ^= h;
            s[21] ^= l;
            s[30] ^= h;
            s[31] ^= l;
            s[40] ^= h;
            s[41] ^= l;
            h = c0 ^ (c4 << 1 | c5 >>> 31);
            l = c1 ^ (c5 << 1 | c4 >>> 31);
            s[2] ^= h;
            s[3] ^= l;
            s[12] ^= h;
            s[13] ^= l;
            s[22] ^= h;
            s[23] ^= l;
            s[32] ^= h;
            s[33] ^= l;
            s[42] ^= h;
            s[43] ^= l;
            h = c2 ^ (c6 << 1 | c7 >>> 31);
            l = c3 ^ (c7 << 1 | c6 >>> 31);
            s[4] ^= h;
            s[5] ^= l;
            s[14] ^= h;
            s[15] ^= l;
            s[24] ^= h;
            s[25] ^= l;
            s[34] ^= h;
            s[35] ^= l;
            s[44] ^= h;
            s[45] ^= l;
            h = c4 ^ (c8 << 1 | c9 >>> 31);
            l = c5 ^ (c9 << 1 | c8 >>> 31);
            s[6] ^= h;
            s[7] ^= l;
            s[16] ^= h;
            s[17] ^= l;
            s[26] ^= h;
            s[27] ^= l;
            s[36] ^= h;
            s[37] ^= l;
            s[46] ^= h;
            s[47] ^= l;
            h = c6 ^ (c0 << 1 | c1 >>> 31);
            l = c7 ^ (c1 << 1 | c0 >>> 31);
            s[8] ^= h;
            s[9] ^= l;
            s[18] ^= h;
            s[19] ^= l;
            s[28] ^= h;
            s[29] ^= l;
            s[38] ^= h;
            s[39] ^= l;
            s[48] ^= h;
            s[49] ^= l;
            b0 = s[0];
            b1 = s[1];
            b32 = s[11] << 4 | s[10] >>> 28;
            b33 = s[10] << 4 | s[11] >>> 28;
            b14 = s[20] << 3 | s[21] >>> 29;
            b15 = s[21] << 3 | s[20] >>> 29;
            b46 = s[31] << 9 | s[30] >>> 23;
            b47 = s[30] << 9 | s[31] >>> 23;
            b28 = s[40] << 18 | s[41] >>> 14;
            b29 = s[41] << 18 | s[40] >>> 14;
            b20 = s[2] << 1 | s[3] >>> 31;
            b21 = s[3] << 1 | s[2] >>> 31;
            b2 = s[13] << 12 | s[12] >>> 20;
            b3 = s[12] << 12 | s[13] >>> 20;
            b34 = s[22] << 10 | s[23] >>> 22;
            b35 = s[23] << 10 | s[22] >>> 22;
            b16 = s[33] << 13 | s[32] >>> 19;
            b17 = s[32] << 13 | s[33] >>> 19;
            b48 = s[42] << 2 | s[43] >>> 30;
            b49 = s[43] << 2 | s[42] >>> 30;
            b40 = s[5] << 30 | s[4] >>> 2;
            b41 = s[4] << 30 | s[5] >>> 2;
            b22 = s[14] << 6 | s[15] >>> 26;
            b23 = s[15] << 6 | s[14] >>> 26;
            b4 = s[25] << 11 | s[24] >>> 21;
            b5 = s[24] << 11 | s[25] >>> 21;
            b36 = s[34] << 15 | s[35] >>> 17;
            b37 = s[35] << 15 | s[34] >>> 17;
            b18 = s[45] << 29 | s[44] >>> 3;
            b19 = s[44] << 29 | s[45] >>> 3;
            b10 = s[6] << 28 | s[7] >>> 4;
            b11 = s[7] << 28 | s[6] >>> 4;
            b42 = s[17] << 23 | s[16] >>> 9;
            b43 = s[16] << 23 | s[17] >>> 9;
            b24 = s[26] << 25 | s[27] >>> 7;
            b25 = s[27] << 25 | s[26] >>> 7;
            b6 = s[36] << 21 | s[37] >>> 11;
            b7 = s[37] << 21 | s[36] >>> 11;
            b38 = s[47] << 24 | s[46] >>> 8;
            b39 = s[46] << 24 | s[47] >>> 8;
            b30 = s[8] << 27 | s[9] >>> 5;
            b31 = s[9] << 27 | s[8] >>> 5;
            b12 = s[18] << 20 | s[19] >>> 12;
            b13 = s[19] << 20 | s[18] >>> 12;
            b44 = s[29] << 7 | s[28] >>> 25;
            b45 = s[28] << 7 | s[29] >>> 25;
            b26 = s[38] << 8 | s[39] >>> 24;
            b27 = s[39] << 8 | s[38] >>> 24;
            b8 = s[48] << 14 | s[49] >>> 18;
            b9 = s[49] << 14 | s[48] >>> 18;
            s[0] = b0 ^ ~b2 & b4;
            s[1] = b1 ^ ~b3 & b5;
            s[10] = b10 ^ ~b12 & b14;
            s[11] = b11 ^ ~b13 & b15;
            s[20] = b20 ^ ~b22 & b24;
            s[21] = b21 ^ ~b23 & b25;
            s[30] = b30 ^ ~b32 & b34;
            s[31] = b31 ^ ~b33 & b35;
            s[40] = b40 ^ ~b42 & b44;
            s[41] = b41 ^ ~b43 & b45;
            s[2] = b2 ^ ~b4 & b6;
            s[3] = b3 ^ ~b5 & b7;
            s[12] = b12 ^ ~b14 & b16;
            s[13] = b13 ^ ~b15 & b17;
            s[22] = b22 ^ ~b24 & b26;
            s[23] = b23 ^ ~b25 & b27;
            s[32] = b32 ^ ~b34 & b36;
            s[33] = b33 ^ ~b35 & b37;
            s[42] = b42 ^ ~b44 & b46;
            s[43] = b43 ^ ~b45 & b47;
            s[4] = b4 ^ ~b6 & b8;
            s[5] = b5 ^ ~b7 & b9;
            s[14] = b14 ^ ~b16 & b18;
            s[15] = b15 ^ ~b17 & b19;
            s[24] = b24 ^ ~b26 & b28;
            s[25] = b25 ^ ~b27 & b29;
            s[34] = b34 ^ ~b36 & b38;
            s[35] = b35 ^ ~b37 & b39;
            s[44] = b44 ^ ~b46 & b48;
            s[45] = b45 ^ ~b47 & b49;
            s[6] = b6 ^ ~b8 & b0;
            s[7] = b7 ^ ~b9 & b1;
            s[16] = b16 ^ ~b18 & b10;
            s[17] = b17 ^ ~b19 & b11;
            s[26] = b26 ^ ~b28 & b20;
            s[27] = b27 ^ ~b29 & b21;
            s[36] = b36 ^ ~b38 & b30;
            s[37] = b37 ^ ~b39 & b31;
            s[46] = b46 ^ ~b48 & b40;
            s[47] = b47 ^ ~b49 & b41;
            s[8] = b8 ^ ~b0 & b2;
            s[9] = b9 ^ ~b1 & b3;
            s[18] = b18 ^ ~b10 & b12;
            s[19] = b19 ^ ~b11 & b13;
            s[28] = b28 ^ ~b20 & b22;
            s[29] = b29 ^ ~b21 & b23;
            s[38] = b38 ^ ~b30 & b32;
            s[39] = b39 ^ ~b31 & b33;
            s[48] = b48 ^ ~b40 & b42;
            s[49] = b49 ^ ~b41 & b43;
            s[0] ^= RC[n];
            s[1] ^= RC[n + 1];
        }
    };
    if (COMMON_JS) {
        module.exports = methods;
    } else {
        for(i = 0; i < methodNames.length; ++i){
            root[methodNames[i]] = methods[methodNames[i]];
        }
        if (AMD) {
            ((r)=>r !== undefined && __turbopack_export_value__(r))(function() {
                return methods;
            }(__turbopack_require__, exports, module));
        }
    }
})();
}}),
"[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "keccak256": (()=>keccak256)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$js$2d$sha3$40$0$2e$8$2e$0$2f$node_modules$2f$js$2d$sha3$2f$src$2f$sha3$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/js-sha3@0.8.0/node_modules/js-sha3/src/sha3.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
function keccak256(data) {
    return '0x' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$js$2d$sha3$40$0$2e$8$2e$0$2f$node_modules$2f$js$2d$sha3$2f$src$2f$sha3$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].keccak_256((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data));
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "rlp/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decode": (()=>decode),
    "encode": (()=>encode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/lib.esm/_version.js [app-rsc] (ecmascript)");
//See: https://github.com/ethereum/wiki/wiki/RLP
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
function arrayifyInteger(value) {
    const result = [];
    while(value){
        result.unshift(value & 0xff);
        value >>= 8;
    }
    return result;
}
function unarrayifyInteger(data, offset, length) {
    let result = 0;
    for(let i = 0; i < length; i++){
        result = result * 256 + data[offset + i];
    }
    return result;
}
function _encode(object) {
    if (Array.isArray(object)) {
        let payload = [];
        object.forEach(function(child) {
            payload = payload.concat(_encode(child));
        });
        if (payload.length <= 55) {
            payload.unshift(0xc0 + payload.length);
            return payload;
        }
        const length = arrayifyInteger(payload.length);
        length.unshift(0xf7 + length.length);
        return length.concat(payload);
    }
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytesLike"])(object)) {
        logger.throwArgumentError("RLP object must be BytesLike", "object", object);
    }
    const data = Array.prototype.slice.call((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(object));
    if (data.length === 1 && data[0] <= 0x7f) {
        return data;
    } else if (data.length <= 55) {
        data.unshift(0x80 + data.length);
        return data;
    }
    const length = arrayifyInteger(data.length);
    length.unshift(0xb7 + length.length);
    return length.concat(data);
}
function encode(object) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(_encode(object));
}
function _decodeChildren(data, offset, childOffset, length) {
    const result = [];
    while(childOffset < offset + 1 + length){
        const decoded = _decode(data, childOffset);
        result.push(decoded.result);
        childOffset += decoded.consumed;
        if (childOffset > offset + 1 + length) {
            logger.throwError("child data too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
    }
    return {
        consumed: 1 + length,
        result: result
    };
}
// returns { consumed: number, result: Object }
function _decode(data, offset) {
    if (data.length === 0) {
        logger.throwError("data too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
    }
    // Array with extra length prefix
    if (data[offset] >= 0xf8) {
        const lengthLength = data[offset] - 0xf7;
        if (offset + 1 + lengthLength > data.length) {
            logger.throwError("data short segment too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
        const length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            logger.throwError("data long segment too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
    } else if (data[offset] >= 0xc0) {
        const length = data[offset] - 0xc0;
        if (offset + 1 + length > data.length) {
            logger.throwError("data array too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
        return _decodeChildren(data, offset, offset + 1, length);
    } else if (data[offset] >= 0xb8) {
        const lengthLength = data[offset] - 0xb7;
        if (offset + 1 + lengthLength > data.length) {
            logger.throwError("data array too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
        const length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            logger.throwError("data array too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
        const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
        return {
            consumed: 1 + lengthLength + length,
            result: result
        };
    } else if (data[offset] >= 0x80) {
        const length = data[offset] - 0x80;
        if (offset + 1 + length > data.length) {
            logger.throwError("data too short", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.BUFFER_OVERRUN, {});
        }
        const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(data.slice(offset + 1, offset + 1 + length));
        return {
            consumed: 1 + length,
            result: result
        };
    }
    return {
        consumed: 1,
        result: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(data[offset])
    };
}
function decode(data) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data);
    const decoded = _decode(bytes, 0);
    if (decoded.consumed !== bytes.length) {
        logger.throwArgumentError("invalid rlp data", "data", data);
    }
    return decoded.result;
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "strings/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "UnicodeNormalizationForm": (()=>UnicodeNormalizationForm),
    "Utf8ErrorFuncs": (()=>Utf8ErrorFuncs),
    "Utf8ErrorReason": (()=>Utf8ErrorReason),
    "_toEscapedUtf8String": (()=>_toEscapedUtf8String),
    "_toUtf8String": (()=>_toUtf8String),
    "toUtf8Bytes": (()=>toUtf8Bytes),
    "toUtf8CodePoints": (()=>toUtf8CodePoints),
    "toUtf8String": (()=>toUtf8String)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
var UnicodeNormalizationForm;
(function(UnicodeNormalizationForm) {
    UnicodeNormalizationForm["current"] = "";
    UnicodeNormalizationForm["NFC"] = "NFC";
    UnicodeNormalizationForm["NFD"] = "NFD";
    UnicodeNormalizationForm["NFKC"] = "NFKC";
    UnicodeNormalizationForm["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
;
var Utf8ErrorReason;
(function(Utf8ErrorReason) {
    // A continuation byte was present where there was nothing to continue
    // - offset = the index the codepoint began in
    Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
    // - offset = the index the codepoint began in
    Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix";
    // The string is too short to process the expected codepoint
    // - offset = the index the codepoint began in
    Utf8ErrorReason["OVERRUN"] = "string overrun";
    // A missing continuation byte was expected but not found
    // - offset = the index the continuation byte was expected at
    Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte";
    // The computed code point is outside the range for UTF-8
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; outside the UTF-8 range
    Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range";
    // UTF-8 strings may not contain UTF-16 surrogate pairs
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range
    Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate";
    // The string is an overlong representation
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; already bounds checked
    Utf8ErrorReason["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));
;
function errorFunc(reason, offset, bytes, output, badCodepoint) {
    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
}
function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
        let i = 0;
        for(let o = offset + 1; o < bytes.length; o++){
            if (bytes[o] >> 6 !== 0x02) {
                break;
            }
            i++;
        }
        return i;
    }
    // This byte runs us past the end of the string, so just jump to the end
    // (but the first byte was read already read and therefore skipped)
    if (reason === Utf8ErrorReason.OVERRUN) {
        return bytes.length - offset - 1;
    }
    // Nothing to skip
    return 0;
}
function replaceFunc(reason, offset, bytes, output, badCodepoint) {
    // Overlong representations are otherwise "valid" code points; just non-deistingtished
    if (reason === Utf8ErrorReason.OVERLONG) {
        output.push(badCodepoint);
        return 0;
    }
    // Put the replacement character into the output
    output.push(0xfffd);
    // Otherwise, process as if ignoring errors
    return ignoreFunc(reason, offset, bytes, output, badCodepoint);
}
const Utf8ErrorFuncs = Object.freeze({
    error: errorFunc,
    ignore: ignoreFunc,
    replace: replaceFunc
});
// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499
function getUtf8CodePoints(bytes, onError) {
    if (onError == null) {
        onError = Utf8ErrorFuncs.error;
    }
    bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(bytes);
    const result = [];
    let i = 0;
    // Invalid bytes are ignored
    while(i < bytes.length){
        const c = bytes[i++];
        // 0xxx xxxx
        if (c >> 7 === 0) {
            result.push(c);
            continue;
        }
        // Multibyte; how many bytes left for this character?
        let extraLength = null;
        let overlongMask = null;
        // 110x xxxx 10xx xxxx
        if ((c & 0xe0) === 0xc0) {
            extraLength = 1;
            overlongMask = 0x7f;
        // 1110 xxxx 10xx xxxx 10xx xxxx
        } else if ((c & 0xf0) === 0xe0) {
            extraLength = 2;
            overlongMask = 0x7ff;
        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
        } else if ((c & 0xf8) === 0xf0) {
            extraLength = 3;
            overlongMask = 0xffff;
        } else {
            if ((c & 0xc0) === 0x80) {
                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
            } else {
                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
            }
            continue;
        }
        // Do we have enough bytes in our data?
        if (i - 1 + extraLength >= bytes.length) {
            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
            continue;
        }
        // Remove the length prefix from the char
        let res = c & (1 << 8 - extraLength - 1) - 1;
        for(let j = 0; j < extraLength; j++){
            let nextChar = bytes[i];
            // Invalid continuation byte
            if ((nextChar & 0xc0) != 0x80) {
                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
                res = null;
                break;
            }
            ;
            res = res << 6 | nextChar & 0x3f;
            i++;
        }
        // See above loop for invalid continuation byte
        if (res === null) {
            continue;
        }
        // Maximum code point
        if (res > 0x10ffff) {
            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Reserved for UTF-16 surrogate halves
        if (res >= 0xd800 && res <= 0xdfff) {
            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Check for overlong sequences (more bytes than needed)
        if (res <= overlongMask) {
            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        result.push(res);
    }
    return result;
}
function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
    if (form != UnicodeNormalizationForm.current) {
        logger.checkNormalize();
        str = str.normalize(form);
    }
    let result = [];
    for(let i = 0; i < str.length; i++){
        const c = str.charCodeAt(i);
        if (c < 0x80) {
            result.push(c);
        } else if (c < 0x800) {
            result.push(c >> 6 | 0xc0);
            result.push(c & 0x3f | 0x80);
        } else if ((c & 0xfc00) == 0xd800) {
            i++;
            const c2 = str.charCodeAt(i);
            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {
                throw new Error("invalid utf-8 string");
            }
            // Surrogate Pair
            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
            result.push(pair >> 18 | 0xf0);
            result.push(pair >> 12 & 0x3f | 0x80);
            result.push(pair >> 6 & 0x3f | 0x80);
            result.push(pair & 0x3f | 0x80);
        } else {
            result.push(c >> 12 | 0xe0);
            result.push(c >> 6 & 0x3f | 0x80);
            result.push(c & 0x3f | 0x80);
        }
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(result);
}
;
function escapeChar(value) {
    const hex = "0000" + value.toString(16);
    return "\\u" + hex.substring(hex.length - 4);
}
function _toEscapedUtf8String(bytes, onError) {
    return '"' + getUtf8CodePoints(bytes, onError).map((codePoint)=>{
        if (codePoint < 256) {
            switch(codePoint){
                case 8:
                    return "\\b";
                case 9:
                    return "\\t";
                case 10:
                    return "\\n";
                case 13:
                    return "\\r";
                case 34:
                    return "\\\"";
                case 92:
                    return "\\\\";
            }
            if (codePoint >= 32 && codePoint < 127) {
                return String.fromCharCode(codePoint);
            }
        }
        if (codePoint <= 0xffff) {
            return escapeChar(codePoint);
        }
        codePoint -= 0x10000;
        return escapeChar((codePoint >> 10 & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);
    }).join("") + '"';
}
function _toUtf8String(codePoints) {
    return codePoints.map((codePoint)=>{
        if (codePoint <= 0xffff) {
            return String.fromCharCode(codePoint);
        }
        codePoint -= 0x10000;
        return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);
    }).join("");
}
function toUtf8String(bytes, onError) {
    return _toUtf8String(getUtf8CodePoints(bytes, onError));
}
function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {
    return getUtf8CodePoints(toUtf8Bytes(str, form));
} //# sourceMappingURL=utf8.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/bytes32.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "formatBytes32String": (()=>formatBytes32String),
    "parseBytes32String": (()=>parseBytes32String)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$hashes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/hashes.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
function formatBytes32String(text) {
    // Get the bytes
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(text);
    // Check we have room for null-termination
    if (bytes.length > 31) {
        throw new Error("bytes32 string must be less than 32 bytes");
    }
    // Zero-pad (implicitly null-terminates)
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
        bytes,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$hashes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["HashZero"]
    ]).slice(0, 32));
}
function parseBytes32String(bytes) {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(bytes);
    // Must be 32 bytes with a null-termination
    if (data.length !== 32) {
        throw new Error("invalid bytes32 - not 32 bytes long");
    }
    if (data[31] !== 0) {
        throw new Error("invalid bytes32 string - no null terminator");
    }
    // Find the null termination
    let length = 31;
    while(data[length - 1] === 0){
        length--;
    }
    // Determine the string value
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8String"])(data.slice(0, length));
} //# sourceMappingURL=bytes32.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/idna.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "_nameprepTableA1": (()=>_nameprepTableA1),
    "_nameprepTableB2": (()=>_nameprepTableB2),
    "_nameprepTableC": (()=>_nameprepTableC),
    "nameprep": (()=>nameprep)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
"use strict";
;
function bytes2(data) {
    if (data.length % 4 !== 0) {
        throw new Error("bad data");
    }
    let result = [];
    for(let i = 0; i < data.length; i += 4){
        result.push(parseInt(data.substring(i, i + 4), 16));
    }
    return result;
}
function createTable(data, func) {
    if (!func) {
        func = function(value) {
            return [
                parseInt(value, 16)
            ];
        };
    }
    let lo = 0;
    let result = {};
    data.split(",").forEach((pair)=>{
        let comps = pair.split(":");
        lo += parseInt(comps[0], 16);
        result[lo] = func(comps[1]);
    });
    return result;
}
function createRangeTable(data) {
    let hi = 0;
    return data.split(",").map((v)=>{
        let comps = v.split("-");
        if (comps.length === 1) {
            comps[1] = "0";
        } else if (comps[1] === "") {
            comps[1] = "1";
        }
        let lo = hi + parseInt(comps[0], 16);
        hi = parseInt(comps[1], 16);
        return {
            l: lo,
            h: hi
        };
    });
}
function matchMap(value, ranges) {
    let lo = 0;
    for(let i = 0; i < ranges.length; i++){
        let range = ranges[i];
        lo += range.l;
        if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {
            if (range.e && range.e.indexOf(value - lo) !== -1) {
                continue;
            }
            return range;
        }
    }
    return null;
}
const Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");
// @TODO: Make this relative...
const Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((v)=>parseInt(v, 16));
const Table_B_2_ranges = [
    {
        h: 25,
        s: 32,
        l: 65
    },
    {
        h: 30,
        s: 32,
        e: [
            23
        ],
        l: 127
    },
    {
        h: 54,
        s: 1,
        e: [
            48
        ],
        l: 64,
        d: 2
    },
    {
        h: 14,
        s: 1,
        l: 57,
        d: 2
    },
    {
        h: 44,
        s: 1,
        l: 17,
        d: 2
    },
    {
        h: 10,
        s: 1,
        e: [
            2,
            6,
            8
        ],
        l: 61,
        d: 2
    },
    {
        h: 16,
        s: 1,
        l: 68,
        d: 2
    },
    {
        h: 84,
        s: 1,
        e: [
            18,
            24,
            66
        ],
        l: 19,
        d: 2
    },
    {
        h: 26,
        s: 32,
        e: [
            17
        ],
        l: 435
    },
    {
        h: 22,
        s: 1,
        l: 71,
        d: 2
    },
    {
        h: 15,
        s: 80,
        l: 40
    },
    {
        h: 31,
        s: 32,
        l: 16
    },
    {
        h: 32,
        s: 1,
        l: 80,
        d: 2
    },
    {
        h: 52,
        s: 1,
        l: 42,
        d: 2
    },
    {
        h: 12,
        s: 1,
        l: 55,
        d: 2
    },
    {
        h: 40,
        s: 1,
        e: [
            38
        ],
        l: 15,
        d: 2
    },
    {
        h: 14,
        s: 1,
        l: 48,
        d: 2
    },
    {
        h: 37,
        s: 48,
        l: 49
    },
    {
        h: 148,
        s: 1,
        l: 6351,
        d: 2
    },
    {
        h: 88,
        s: 1,
        l: 160,
        d: 2
    },
    {
        h: 15,
        s: 16,
        l: 704
    },
    {
        h: 25,
        s: 26,
        l: 854
    },
    {
        h: 25,
        s: 32,
        l: 55915
    },
    {
        h: 37,
        s: 40,
        l: 1247
    },
    {
        h: 25,
        s: -119711,
        l: 53248
    },
    {
        h: 25,
        s: -119763,
        l: 52
    },
    {
        h: 25,
        s: -119815,
        l: 52
    },
    {
        h: 25,
        s: -119867,
        e: [
            1,
            4,
            5,
            7,
            8,
            11,
            12,
            17
        ],
        l: 52
    },
    {
        h: 25,
        s: -119919,
        l: 52
    },
    {
        h: 24,
        s: -119971,
        e: [
            2,
            7,
            8,
            17
        ],
        l: 52
    },
    {
        h: 24,
        s: -120023,
        e: [
            2,
            7,
            13,
            15,
            16,
            17
        ],
        l: 52
    },
    {
        h: 25,
        s: -120075,
        l: 52
    },
    {
        h: 25,
        s: -120127,
        l: 52
    },
    {
        h: 25,
        s: -120179,
        l: 52
    },
    {
        h: 25,
        s: -120231,
        l: 52
    },
    {
        h: 25,
        s: -120283,
        l: 52
    },
    {
        h: 25,
        s: -120335,
        l: 52
    },
    {
        h: 24,
        s: -119543,
        e: [
            17
        ],
        l: 56
    },
    {
        h: 24,
        s: -119601,
        e: [
            17
        ],
        l: 58
    },
    {
        h: 24,
        s: -119659,
        e: [
            17
        ],
        l: 58
    },
    {
        h: 24,
        s: -119717,
        e: [
            17
        ],
        l: 58
    },
    {
        h: 24,
        s: -119775,
        e: [
            17
        ],
        l: 58
    }
];
const Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
const Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
const Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2);
const Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function flatten(values) {
    return values.reduce((accum, value)=>{
        value.forEach((value)=>{
            accum.push(value);
        });
        return accum;
    }, []);
}
function _nameprepTableA1(codepoint) {
    return !!matchMap(codepoint, Table_A_1_ranges);
}
function _nameprepTableB2(codepoint) {
    let range = matchMap(codepoint, Table_B_2_ranges);
    if (range) {
        return [
            codepoint + range.s
        ];
    }
    let codes = Table_B_2_lut_abs[codepoint];
    if (codes) {
        return codes;
    }
    let shift = Table_B_2_lut_rel[codepoint];
    if (shift) {
        return [
            codepoint + shift[0]
        ];
    }
    let complex = Table_B_2_complex[codepoint];
    if (complex) {
        return complex;
    }
    return null;
}
function _nameprepTableC(codepoint) {
    return !!matchMap(codepoint, Table_C_ranges);
}
function nameprep(value) {
    // This allows platforms with incomplete normalize to bypass
    // it for very basic names which the built-in toLowerCase
    // will certainly handle correctly
    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {
        return value.toLowerCase();
    }
    // Get the code points (keeping the current normalization)
    let codes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8CodePoints"])(value);
    codes = flatten(codes.map((code)=>{
        // Substitute Table B.1 (Maps to Nothing)
        if (Table_B_1_flags.indexOf(code) >= 0) {
            return [];
        }
        if (code >= 0xfe00 && code <= 0xfe0f) {
            return [];
        }
        // Substitute Table B.2 (Case Folding)
        let codesTableB2 = _nameprepTableB2(code);
        if (codesTableB2) {
            return codesTableB2;
        }
        // No Substitution
        return [
            code
        ];
    }));
    // Normalize using form KC
    codes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8CodePoints"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["_toUtf8String"])(codes), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["UnicodeNormalizationForm"].NFKC);
    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9
    codes.forEach((code)=>{
        if (_nameprepTableC(code)) {
            throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
        }
    });
    // Prohibit Unassigned Code Points (Table A.1)
    codes.forEach((code)=>{
        if (_nameprepTableA1(code)) {
            throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
        }
    });
    // IDNA extras
    let name = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["_toUtf8String"])(codes);
    // IDNA: 4.2.3.1
    if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") {
        throw new Error("invalid hyphen");
    }
    return name;
} //# sourceMappingURL=idna.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
"use strict";
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "UnicodeNormalizationForm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["UnicodeNormalizationForm"]),
    "Utf8ErrorFuncs": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Utf8ErrorFuncs"]),
    "Utf8ErrorReason": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Utf8ErrorReason"]),
    "_toEscapedUtf8String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["_toEscapedUtf8String"]),
    "formatBytes32String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$bytes32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["formatBytes32String"]),
    "nameprep": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$idna$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["nameprep"]),
    "parseBytes32String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$bytes32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["parseBytes32String"]),
    "toUtf8Bytes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"]),
    "toUtf8CodePoints": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8CodePoints"]),
    "toUtf8String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8String"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$bytes32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/bytes32.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$idna$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/idna.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "UnicodeNormalizationForm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["UnicodeNormalizationForm"]),
    "Utf8ErrorFuncs": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Utf8ErrorFuncs"]),
    "Utf8ErrorReason": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Utf8ErrorReason"]),
    "_toEscapedUtf8String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["_toEscapedUtf8String"]),
    "formatBytes32String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["formatBytes32String"]),
    "nameprep": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["nameprep"]),
    "parseBytes32String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["parseBytes32String"]),
    "toUtf8Bytes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["toUtf8Bytes"]),
    "toUtf8CodePoints": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["toUtf8CodePoints"]),
    "toUtf8String": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["toUtf8String"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/bignumbers.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaxInt256": (()=>MaxInt256),
    "MaxUint256": (()=>MaxUint256),
    "MinInt256": (()=>MinInt256),
    "NegativeOne": (()=>NegativeOne),
    "One": (()=>One),
    "Two": (()=>Two),
    "WeiPerEther": (()=>WeiPerEther),
    "Zero": (()=>Zero)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
;
const NegativeOne = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(-1);
const Zero = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(0);
const One = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(1);
const Two = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(2);
const WeiPerEther = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("1000000000000000000");
const MaxUint256 = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
const MinInt256 = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("-0x8000000000000000000000000000000000000000000000000000000000000000");
const MaxInt256 = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
;
 //# sourceMappingURL=bignumbers.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
"use strict";
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/addresses.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AddressZero": (()=>AddressZero)
});
const AddressZero = "0x0000000000000000000000000000000000000000"; //# sourceMappingURL=addresses.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/strings.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// NFKC (composed)             // (decomposed)
__turbopack_esm__({
    "EtherSymbol": (()=>EtherSymbol)
});
const EtherSymbol = "\u039e"; // "\uD835\uDF63";
 //# sourceMappingURL=strings.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/hashes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HashZero": (()=>HashZero)
});
const HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000"; //# sourceMappingURL=hashes.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AddressZero": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$addresses$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["AddressZero"]),
    "EtherSymbol": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$strings$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["EtherSymbol"]),
    "HashZero": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$hashes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["HashZero"]),
    "MaxInt256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["MaxInt256"]),
    "MaxUint256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["MaxUint256"]),
    "MinInt256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["MinInt256"]),
    "NegativeOne": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["NegativeOne"]),
    "One": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["One"]),
    "Two": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Two"]),
    "WeiPerEther": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["WeiPerEther"]),
    "Zero": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Zero"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$addresses$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/addresses.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$strings$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/strings.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$hashes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/hashes.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/bignumbers.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AddressZero": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AddressZero"]),
    "EtherSymbol": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EtherSymbol"]),
    "HashZero": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["HashZero"]),
    "MaxInt256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MaxInt256"]),
    "MaxUint256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MaxUint256"]),
    "MinInt256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MinInt256"]),
    "NegativeOne": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["NegativeOne"]),
    "One": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["One"]),
    "Two": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Two"]),
    "WeiPerEther": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["WeiPerEther"]),
    "Zero": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Zero"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript) <export * as constants>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "constants": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/index.js [app-rsc] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/id.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "id": (()=>id)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
;
;
function id(text) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(text));
} //# sourceMappingURL=id.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/message.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "hashMessage": (()=>hashMessage),
    "messagePrefix": (()=>messagePrefix)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
;
;
;
const messagePrefix = "\x19Ethereum Signed Message:\n";
function hashMessage(message) {
    if (typeof message === "string") {
        message = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(message);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(messagePrefix),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(String(message.length)),
        message
    ]));
} //# sourceMappingURL=message.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "hash/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/typed-data.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TypedDataEncoder": (()=>TypedDataEncoder)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/id.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
const padding = new Uint8Array(32);
padding.fill(0);
const NegativeOne = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(-1);
const Zero = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(0);
const One = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(1);
const MaxUint256 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function hexPadRight(value) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
    const padOffset = bytes.length % 32;
    if (padOffset) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexConcat"])([
            bytes,
            padding.slice(padOffset)
        ]);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes);
}
const hexTrue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(One.toHexString(), 32);
const hexFalse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(Zero.toHexString(), 32);
const domainFieldTypes = {
    name: "string",
    version: "string",
    chainId: "uint256",
    verifyingContract: "address",
    salt: "bytes32"
};
const domainFieldNames = [
    "name",
    "version",
    "chainId",
    "verifyingContract",
    "salt"
];
function checkString(key) {
    return function(value) {
        if (typeof value !== "string") {
            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);
        }
        return value;
    };
}
const domainChecks = {
    name: checkString("name"),
    version: checkString("version"),
    chainId: function(value) {
        try {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value).toString();
        } catch (error) {}
        return logger.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
    },
    verifyingContract: function(value) {
        try {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(value).toLowerCase();
        } catch (error) {}
        return logger.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
    },
    salt: function(value) {
        try {
            const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
            if (bytes.length !== 32) {
                throw new Error("bad length");
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes);
        } catch (error) {}
        return logger.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
    }
};
function getBaseEncoder(type) {
    // intXX and uintXX
    {
        const match = type.match(/^(u?)int(\d*)$/);
        if (match) {
            const signed = match[1] === "";
            const width = parseInt(match[2] || "256");
            if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
                logger.throwArgumentError("invalid numeric width", "type", type);
            }
            const boundsUpper = MaxUint256.mask(signed ? width - 1 : width);
            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
            return function(value) {
                const v = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value);
                if (v.lt(boundsLower) || v.gt(boundsUpper)) {
                    logger.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(v.toTwos(256).toHexString(), 32);
            };
        }
    }
    // bytesXX
    {
        const match = type.match(/^bytes(\d+)$/);
        if (match) {
            const width = parseInt(match[1]);
            if (width === 0 || width > 32 || match[1] !== String(width)) {
                logger.throwArgumentError("invalid bytes width", "type", type);
            }
            return function(value) {
                const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
                if (bytes.length !== width) {
                    logger.throwArgumentError(`invalid length for ${type}`, "value", value);
                }
                return hexPadRight(value);
            };
        }
    }
    switch(type){
        case "address":
            return function(value) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(value), 32);
            };
        case "bool":
            return function(value) {
                return !value ? hexFalse : hexTrue;
            };
        case "bytes":
            return function(value) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(value);
            };
        case "string":
            return function(value) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["id"])(value);
            };
    }
    return null;
}
function encodeType(name, fields) {
    return `${name}(${fields.map(({ name, type })=>type + " " + name).join(",")})`;
}
class TypedDataEncoder {
    constructor(types){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "types", Object.freeze((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["deepCopy"])(types)));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_encoderCache", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_types", {});
        // Link struct types to their direct child structs
        const links = {};
        // Link structs to structs which contain them as a child
        const parents = {};
        // Link all subtypes within a given struct
        const subtypes = {};
        Object.keys(types).forEach((type)=>{
            links[type] = {};
            parents[type] = [];
            subtypes[type] = {};
        });
        for(const name in types){
            const uniqueNames = {};
            types[name].forEach((field)=>{
                // Check each field has a unique name
                if (uniqueNames[field.name]) {
                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
                }
                uniqueNames[field.name] = true;
                // Get the base type (drop any array specifiers)
                const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                if (baseType === name) {
                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
                }
                // Is this a base encoding type?
                const encoder = getBaseEncoder(baseType);
                if (encoder) {
                    return;
                }
                if (!parents[baseType]) {
                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
                }
                // Add linkage
                parents[baseType].push(name);
                links[name][baseType] = true;
            });
        }
        // Deduce the primary type
        const primaryTypes = Object.keys(parents).filter((n)=>parents[n].length === 0);
        if (primaryTypes.length === 0) {
            logger.throwArgumentError("missing primary type", "types", types);
        } else if (primaryTypes.length > 1) {
            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t)=>JSON.stringify(t)).join(", ")}`, "types", types);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "primaryType", primaryTypes[0]);
        // Check for circular type references
        function checkCircular(type, found) {
            if (found[type]) {
                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
            }
            found[type] = true;
            Object.keys(links[type]).forEach((child)=>{
                if (!parents[child]) {
                    return;
                }
                // Recursively check children
                checkCircular(child, found);
                // Mark all ancestors as having this decendant
                Object.keys(found).forEach((subtype)=>{
                    subtypes[subtype][child] = true;
                });
            });
            delete found[type];
        }
        checkCircular(this.primaryType, {});
        // Compute each fully describe type
        for(const name in subtypes){
            const st = Object.keys(subtypes[name]);
            st.sort();
            this._types[name] = encodeType(name, types[name]) + st.map((t)=>encodeType(t, types[t])).join("");
        }
    }
    getEncoder(type) {
        let encoder = this._encoderCache[type];
        if (!encoder) {
            encoder = this._encoderCache[type] = this._getEncoder(type);
        }
        return encoder;
    }
    _getEncoder(type) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = getBaseEncoder(type);
            if (encoder) {
                return encoder;
            }
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const subEncoder = this.getEncoder(subtype);
            const length = parseInt(match[3]);
            return (value)=>{
                if (length >= 0 && value.length !== length) {
                    logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                }
                let result = value.map(subEncoder);
                if (this._types[subtype]) {
                    result = result.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"]);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexConcat"])(result));
            };
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            const encodedType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["id"])(this._types[type]);
            return (value)=>{
                const values = fields.map(({ name, type })=>{
                    const result = this.getEncoder(type)(value[name]);
                    if (this._types[type]) {
                        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(result);
                    }
                    return result;
                });
                values.unshift(encodedType);
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexConcat"])(values);
            };
        }
        return logger.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    encodeType(name) {
        const result = this._types[name];
        if (!result) {
            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
        }
        return result;
    }
    encodeData(type, value) {
        return this.getEncoder(type)(value);
    }
    hashStruct(name, value) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(this.encodeData(name, value));
    }
    encode(value) {
        return this.encodeData(this.primaryType, value);
    }
    hash(value) {
        return this.hashStruct(this.primaryType, value);
    }
    _visit(type, value, callback) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = getBaseEncoder(type);
            if (encoder) {
                return callback(type, value);
            }
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const length = parseInt(match[3]);
            if (length >= 0 && value.length !== length) {
                logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
            }
            return value.map((v)=>this._visit(subtype, v, callback));
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            return fields.reduce((accum, { name, type })=>{
                accum[name] = this._visit(type, value[name], callback);
                return accum;
            }, {});
        }
        return logger.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    visit(value, callback) {
        return this._visit(this.primaryType, value, callback);
    }
    static from(types) {
        return new TypedDataEncoder(types);
    }
    static getPrimaryType(types) {
        return TypedDataEncoder.from(types).primaryType;
    }
    static hashStruct(name, types, value) {
        return TypedDataEncoder.from(types).hashStruct(name, value);
    }
    static hashDomain(domain) {
        const domainFields = [];
        for(const name in domain){
            const type = domainFieldTypes[name];
            if (!type) {
                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
            }
            domainFields.push({
                name,
                type
            });
        }
        domainFields.sort((a, b)=>{
            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
        });
        return TypedDataEncoder.hashStruct("EIP712Domain", {
            EIP712Domain: domainFields
        }, domain);
    }
    static encode(domain, types, value) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexConcat"])([
            "0x1901",
            TypedDataEncoder.hashDomain(domain),
            TypedDataEncoder.from(types).hash(value)
        ]);
    }
    static hash(domain, types, value) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(TypedDataEncoder.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
    static resolveNames(domain, types, value, resolveName) {
        return __awaiter(this, void 0, void 0, function*() {
            // Make a copy to isolate it from the object passed in
            domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(domain);
            // Look up all ENS names
            const ensCache = {};
            // Do we need to look up the domain's verifyingContract?
            if (domain.verifyingContract && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(domain.verifyingContract, 20)) {
                ensCache[domain.verifyingContract] = "0x";
            }
            // We are going to use the encoder to visit all the base values
            const encoder = TypedDataEncoder.from(types);
            // Get a list of all the addresses
            encoder.visit(value, (type, value)=>{
                if (type === "address" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(value, 20)) {
                    ensCache[value] = "0x";
                }
                return value;
            });
            // Lookup each name
            for(const name in ensCache){
                ensCache[name] = yield resolveName(name);
            }
            // Replace the domain verifyingContract if needed
            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
                domain.verifyingContract = ensCache[domain.verifyingContract];
            }
            // Replace all ENS names with their address
            value = encoder.visit(value, (type, value)=>{
                if (type === "address" && ensCache[value]) {
                    return ensCache[value];
                }
                return value;
            });
            return {
                domain,
                value
            };
        });
    }
    static getPayload(domain, types, value) {
        // Validate the domain fields
        TypedDataEncoder.hashDomain(domain);
        // Derive the EIP712Domain Struct reference type
        const domainValues = {};
        const domainTypes = [];
        domainFieldNames.forEach((name)=>{
            const value = domain[name];
            if (value == null) {
                return;
            }
            domainValues[name] = domainChecks[name](value);
            domainTypes.push({
                name,
                type: domainFieldTypes[name]
            });
        });
        const encoder = TypedDataEncoder.from(types);
        const typesWithDomain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(types);
        if (typesWithDomain.EIP712Domain) {
            logger.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
        } else {
            typesWithDomain.EIP712Domain = domainTypes;
        }
        // Validate the data structures and types
        encoder.encode(value);
        return {
            types: typesWithDomain,
            domain: domainValues,
            primaryType: encoder.primaryType,
            message: encoder.visit(value, (type, value)=>{
                // bytes
                if (type.match(/^bytes(\d*)/)) {
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value));
                }
                // uint or int
                if (type.match(/^u?int/)) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value).toString();
                }
                switch(type){
                    case "address":
                        return value.toLowerCase();
                    case "bool":
                        return !!value;
                    case "string":
                        if (typeof value !== "string") {
                            logger.throwArgumentError(`invalid string`, "value", value);
                        }
                        return value;
                }
                return logger.throwArgumentError("unsupported type", "type", type);
            })
        };
    }
} //# sourceMappingURL=typed-data.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/typed-data.js [app-rsc] (ecmascript) <export TypedDataEncoder as _TypedDataEncoder>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "_TypedDataEncoder": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["TypedDataEncoder"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/typed-data.js [app-rsc] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */ // https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js
__turbopack_esm__({
    "decode_arithmetic": (()=>decode_arithmetic),
    "read_compressed_payload": (()=>read_compressed_payload),
    "read_emoji_trie": (()=>read_emoji_trie),
    "read_mapped_map": (()=>read_mapped_map),
    "read_member_array": (()=>read_member_array),
    "read_payload": (()=>read_payload),
    "read_zero_terminated_array": (()=>read_zero_terminated_array),
    "signed": (()=>signed)
});
function flat(array, depth) {
    if (depth == null) {
        depth = 1;
    }
    const result = [];
    const forEach = result.forEach;
    const flatDeep = function(arr, depth) {
        forEach.call(arr, function(val) {
            if (depth > 0 && Array.isArray(val)) {
                flatDeep(val, depth - 1);
            } else {
                result.push(val);
            }
        });
    };
    flatDeep(array, depth);
    return result;
}
function fromEntries(array) {
    const result = {};
    for(let i = 0; i < array.length; i++){
        const value = array[i];
        result[value[0]] = value[1];
    }
    return result;
}
function decode_arithmetic(bytes) {
    let pos = 0;
    function u16() {
        return bytes[pos++] << 8 | bytes[pos++];
    }
    // decode the frequency table
    let symbol_count = u16();
    let total = 1;
    let acc = [
        0,
        1
    ]; // first symbol has frequency 1
    for(let i = 1; i < symbol_count; i++){
        acc.push(total += u16());
    }
    // skip the sized-payload that the last 3 symbols index into
    let skip = u16();
    let pos_payload = pos;
    pos += skip;
    let read_width = 0;
    let read_buffer = 0;
    function read_bit() {
        if (read_width == 0) {
            // this will read beyond end of buffer
            // but (undefined|0) => zero pad
            read_buffer = read_buffer << 8 | bytes[pos++];
            read_width = 8;
        }
        return read_buffer >> --read_width & 1;
    }
    const N = 31;
    const FULL = Math.pow(2, N);
    const HALF = FULL >>> 1;
    const QRTR = HALF >> 1;
    const MASK = FULL - 1;
    // fill register
    let register = 0;
    for(let i = 0; i < N; i++)register = register << 1 | read_bit();
    let symbols = [];
    let low = 0;
    let range = FULL; // treat like a float
    while(true){
        let value = Math.floor(((register - low + 1) * total - 1) / range);
        let start = 0;
        let end = symbol_count;
        while(end - start > 1){
            let mid = start + end >>> 1;
            if (value < acc[mid]) {
                end = mid;
            } else {
                start = mid;
            }
        }
        if (start == 0) break; // first symbol is end mark
        symbols.push(start);
        let a = low + Math.floor(range * acc[start] / total);
        let b = low + Math.floor(range * acc[start + 1] / total) - 1;
        while(((a ^ b) & HALF) == 0){
            register = register << 1 & MASK | read_bit();
            a = a << 1 & MASK;
            b = b << 1 & MASK | 1;
        }
        while(a & ~b & QRTR){
            register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
            a = a << 1 ^ HALF;
            b = (b ^ HALF) << 1 | HALF | 1;
        }
        low = a;
        range = 1 + b - a;
    }
    let offset = symbol_count - 4;
    return symbols.map((x)=>{
        switch(x - offset){
            case 3:
                return offset + 0x10100 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
            case 2:
                return offset + 0x100 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
            case 1:
                return offset + bytes[pos_payload++];
            default:
                return x - 1;
        }
    });
}
function read_payload(v) {
    let pos = 0;
    return ()=>v[pos++];
}
function read_compressed_payload(bytes) {
    return read_payload(decode_arithmetic(bytes));
}
function signed(i) {
    return i & 1 ? ~i >> 1 : i >> 1;
}
function read_counts(n, next) {
    let v = Array(n);
    for(let i = 0; i < n; i++)v[i] = 1 + next();
    return v;
}
function read_ascending(n, next) {
    let v = Array(n);
    for(let i = 0, x = -1; i < n; i++)v[i] = x += 1 + next();
    return v;
}
function read_deltas(n, next) {
    let v = Array(n);
    for(let i = 0, x = 0; i < n; i++)v[i] = x += signed(next());
    return v;
}
function read_member_array(next, lookup) {
    let v = read_ascending(next(), next);
    let n = next();
    let vX = read_ascending(n, next);
    let vN = read_counts(n, next);
    for(let i = 0; i < n; i++){
        for(let j = 0; j < vN[i]; j++){
            v.push(vX[i] + j);
        }
    }
    return lookup ? v.map((x)=>lookup[x]) : v;
}
function read_mapped_map(next) {
    let ret = [];
    while(true){
        let w = next();
        if (w == 0) break;
        ret.push(read_linear_table(w, next));
    }
    while(true){
        let w = next() - 1;
        if (w < 0) break;
        ret.push(read_replacement_table(w, next));
    }
    return fromEntries(flat(ret));
}
function read_zero_terminated_array(next) {
    let v = [];
    while(true){
        let i = next();
        if (i == 0) break;
        v.push(i);
    }
    return v;
}
function read_transposed(n, w, next) {
    let m = Array(n).fill(undefined).map(()=>[]);
    for(let i = 0; i < w; i++){
        read_deltas(n, next).forEach((x, j)=>m[j].push(x));
    }
    return m;
}
function read_linear_table(w, next) {
    let dx = 1 + next();
    let dy = next();
    let vN = read_zero_terminated_array(next);
    let m = read_transposed(vN.length, 1 + w, next);
    return flat(m.map((v, i)=>{
        const x = v[0], ys = v.slice(1);
        //let [x, ...ys] = v;
        //return Array(vN[i]).fill().map((_, j) => {
        return Array(vN[i]).fill(undefined).map((_, j)=>{
            let j_dy = j * dy;
            return [
                x + j * dx,
                ys.map((y)=>y + j_dy)
            ];
        });
    }));
}
function read_replacement_table(w, next) {
    let n = 1 + next();
    let m = read_transposed(n, 1 + w, next);
    return m.map((v)=>[
            v[0],
            v.slice(1)
        ]);
}
function read_emoji_trie(next) {
    let sorted = read_member_array(next).sort((a, b)=>a - b);
    return read();
    "TURBOPACK unreachable";
    function read() {
        let branches = [];
        while(true){
            let keys = read_member_array(next, sorted);
            if (keys.length == 0) break;
            branches.push({
                set: new Set(keys),
                node: read()
            });
        }
        branches.sort((a, b)=>b.set.size - a.set.size); // sort by likelihood
        let temp = next();
        let valid = temp % 3;
        temp = temp / 3 | 0;
        let fe0f = !!(temp & 1);
        temp >>= 1;
        let save = temp == 1;
        let check = temp == 2;
        return {
            branches,
            valid,
            fe0f,
            save,
            check
        };
    }
} //# sourceMappingURL=decoder.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */ __turbopack_esm__({
    "getData": (()=>getData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/base64.js [app-rsc] (ecmascript)");
;
;
function getData() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["read_compressed_payload"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decode"])(''));
} //# sourceMappingURL=include.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */ __turbopack_esm__({
    "ens_normalize": (()=>ens_normalize),
    "ens_normalize_post_check": (()=>ens_normalize_post_check)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$include$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
;
;
const r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$include$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getData"])();
;
// @TODO: This should be lazily loaded
const VALID = new Set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["read_member_array"])(r));
const IGNORED = new Set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["read_member_array"])(r));
const MAPPED = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["read_mapped_map"])(r);
const EMOJI_ROOT = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$decoder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["read_emoji_trie"])(r);
//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));
//const STOP = 0x2E;
const HYPHEN = 0x2D;
const UNDERSCORE = 0x5F;
function explode_cp(name) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8CodePoints"])(name);
}
function filter_fe0f(cps) {
    return cps.filter((cp)=>cp != 0xFE0F);
}
function ens_normalize_post_check(name) {
    for (let label of name.split('.')){
        let cps = explode_cp(label);
        try {
            for(let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--){
                if (cps[i] !== UNDERSCORE) {
                    throw new Error(`underscore only allowed at start`);
                }
            }
            if (cps.length >= 4 && cps.every((cp)=>cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {
                throw new Error(`invalid label extension`);
            }
        } catch (err) {
            throw new Error(`Invalid label "${label}": ${err.message}`);
        }
    }
    return name;
}
function ens_normalize(name) {
    return ens_normalize_post_check(normalize(name, filter_fe0f));
}
function normalize(name, emoji_filter) {
    let input = explode_cp(name).reverse(); // flip for pop
    let output = [];
    while(input.length){
        let emoji = consume_emoji_reversed(input);
        if (emoji) {
            output.push(...emoji_filter(emoji));
            continue;
        }
        let cp = input.pop();
        if (VALID.has(cp)) {
            output.push(cp);
            continue;
        }
        if (IGNORED.has(cp)) {
            continue;
        }
        let cps = MAPPED[cp];
        if (cps) {
            output.push(...cps);
            continue;
        }
        throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);
    }
    return ens_normalize_post_check(nfc(String.fromCodePoint(...output)));
}
function nfc(s) {
    return s.normalize('NFC');
}
function consume_emoji_reversed(cps, eaten) {
    var _a;
    let node = EMOJI_ROOT;
    let emoji;
    let saved;
    let stack = [];
    let pos = cps.length;
    if (eaten) eaten.length = 0; // clear input buffer (if needed)
    while(pos){
        let cp = cps[--pos];
        node = (_a = node.branches.find((x)=>x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;
        if (!node) break;
        if (node.save) {
            saved = cp;
        } else if (node.check) {
            if (cp === saved) break;
        }
        stack.push(cp);
        if (node.fe0f) {
            stack.push(0xFE0F);
            if (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F
        }
        if (node.valid) {
            emoji = stack.slice(); // copy stack
            if (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)
            if (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)
            cps.length = pos; // truncate
        }
    }
    return emoji;
} //# sourceMappingURL=lib.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/namehash.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "dnsEncode": (()=>dnsEncode),
    "ensNormalize": (()=>ensNormalize),
    "isValidName": (()=>isValidName),
    "namehash": (()=>namehash)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$lib$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
const Zeros = new Uint8Array(32);
Zeros.fill(0);
function checkComponent(comp) {
    if (comp.length === 0) {
        throw new Error("invalid ENS name; empty component");
    }
    return comp;
}
function ensNameSplit(name) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$ens$2d$normalize$2f$lib$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ens_normalize"])(name));
    const comps = [];
    if (name.length === 0) {
        return comps;
    }
    let last = 0;
    for(let i = 0; i < bytes.length; i++){
        const d = bytes[i];
        // A separator (i.e. "."); copy this component
        if (d === 0x2e) {
            comps.push(checkComponent(bytes.slice(last, i)));
            last = i + 1;
        }
    }
    // There was a stray separator at the end of the name
    if (last >= bytes.length) {
        throw new Error("invalid ENS name; empty component");
    }
    comps.push(checkComponent(bytes.slice(last)));
    return comps;
}
function ensNormalize(name) {
    return ensNameSplit(name).map((comp)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8String"])(comp)).join(".");
}
function isValidName(name) {
    try {
        return ensNameSplit(name).length !== 0;
    } catch (error) {}
    return false;
}
function namehash(name) {
    /* istanbul ignore if */ if (typeof name !== "string") {
        logger.throwArgumentError("invalid ENS name; not a string", "name", name);
    }
    let result = Zeros;
    const comps = ensNameSplit(name);
    while(comps.length){
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
            result,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(comps.pop())
        ]));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(result);
}
function dnsEncode(name) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])(ensNameSplit(name).map((comp)=>{
        // DNS does not allow components over 63 bytes in length
        if (comp.length > 63) {
            throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
        }
        const bytes = new Uint8Array(comp.length + 1);
        bytes.set(comp, 1);
        bytes[0] = bytes.length - 1;
        return bytes;
    }))) + "00";
} //# sourceMappingURL=namehash.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
"use strict";
;
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "_TypedDataEncoder": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["TypedDataEncoder"]),
    "dnsEncode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$namehash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["dnsEncode"]),
    "ensNormalize": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$namehash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ensNormalize"]),
    "hashMessage": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$message$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hashMessage"]),
    "id": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["id"]),
    "isValidName": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$namehash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isValidName"]),
    "messagePrefix": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$message$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["messagePrefix"]),
    "namehash": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$namehash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["namehash"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/typed-data.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$namehash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/namehash.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$message$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/message.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/id.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "_TypedDataEncoder": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["_TypedDataEncoder"]),
    "dnsEncode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["dnsEncode"]),
    "ensNormalize": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ensNormalize"]),
    "hashMessage": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["hashMessage"]),
    "id": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["id"]),
    "isValidName": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["isValidName"]),
    "messagePrefix": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["messagePrefix"]),
    "namehash": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["namehash"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "contracts/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BaseContract": (()=>BaseContract),
    "Contract": (()=>Contract),
    "ContractFactory": (()=>ContractFactory)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abi$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$coders$2f$abstract$2d$coder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$provider$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$provider$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abi$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/lib.esm/interface.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$contracts$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$contracts$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$contracts$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$contracts$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
;
///////////////////////////////
const allowedTransactionKeys = {
    chainId: true,
    data: true,
    from: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true,
    customData: true,
    ccipReadEnabled: true
};
function resolveName(resolver, nameOrPromise) {
    return __awaiter(this, void 0, void 0, function*() {
        const name = yield nameOrPromise;
        if (typeof name !== "string") {
            logger.throwArgumentError("invalid address or ENS name", "name", name);
        }
        // If it is already an address, just use it (after adding checksum)
        try {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(name);
        } catch (error) {}
        if (!resolver) {
            logger.throwError("a provider or signer is needed to resolve ENS names", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "resolveName"
            });
        }
        const address = yield resolver.resolveName(name);
        if (address == null) {
            logger.throwArgumentError("resolver or addr is not configured for ENS name", "name", name);
        }
        return address;
    });
}
// Recursively replaces ENS names with promises to resolve the name and resolves all properties
function resolveAddresses(resolver, value, paramType) {
    return __awaiter(this, void 0, void 0, function*() {
        if (Array.isArray(paramType)) {
            return yield Promise.all(paramType.map((paramType, index)=>{
                return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);
            }));
        }
        if (paramType.type === "address") {
            return yield resolveName(resolver, value);
        }
        if (paramType.type === "tuple") {
            return yield resolveAddresses(resolver, value, paramType.components);
        }
        if (paramType.baseType === "array") {
            if (!Array.isArray(value)) {
                return Promise.reject(logger.makeError("invalid value for array", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.INVALID_ARGUMENT, {
                    argument: "value",
                    value
                }));
            }
            return yield Promise.all(value.map((v)=>resolveAddresses(resolver, v, paramType.arrayChildren)));
        }
        return value;
    });
}
function populateTransaction(contract, fragment, args) {
    return __awaiter(this, void 0, void 0, function*() {
        // If an extra argument is given, it is overrides
        let overrides = {};
        if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === "object") {
            overrides = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(args.pop());
        }
        // Make sure the parameter count matches
        logger.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract");
        // Populate "from" override (allow promises)
        if (contract.signer) {
            if (overrides.from) {
                // Contracts with a Signer are from the Signer's frame-of-reference;
                // but we allow overriding "from" if it matches the signer
                overrides.from = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])({
                    override: resolveName(contract.signer, overrides.from),
                    signer: contract.signer.getAddress()
                }).then((check)=>__awaiter(this, void 0, void 0, function*() {
                        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(check.signer) !== check.override) {
                            logger.throwError("Contract with a Signer cannot override from", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                                operation: "overrides.from"
                            });
                        }
                        return check.override;
                    }));
            } else {
                overrides.from = contract.signer.getAddress();
            }
        } else if (overrides.from) {
            overrides.from = resolveName(contract.provider, overrides.from);
        //} else {
        // Contracts without a signer can override "from", and if
        // unspecified the zero address is used
        //overrides.from = AddressZero;
        }
        // Wait for all dependencies to be resolved (prefer the signer over the provider)
        const resolved = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])({
            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),
            address: contract.resolvedAddress,
            overrides: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])(overrides) || {}
        });
        // The ABI coded transaction
        const data = contract.interface.encodeFunctionData(fragment, resolved.args);
        const tx = {
            data: data,
            to: resolved.address
        };
        // Resolved Overrides
        const ro = resolved.overrides;
        // Populate simple overrides
        if (ro.nonce != null) {
            tx.nonce = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(ro.nonce).toNumber();
        }
        if (ro.gasLimit != null) {
            tx.gasLimit = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(ro.gasLimit);
        }
        if (ro.gasPrice != null) {
            tx.gasPrice = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(ro.gasPrice);
        }
        if (ro.maxFeePerGas != null) {
            tx.maxFeePerGas = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(ro.maxFeePerGas);
        }
        if (ro.maxPriorityFeePerGas != null) {
            tx.maxPriorityFeePerGas = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(ro.maxPriorityFeePerGas);
        }
        if (ro.from != null) {
            tx.from = ro.from;
        }
        if (ro.type != null) {
            tx.type = ro.type;
        }
        if (ro.accessList != null) {
            tx.accessList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["accessListify"])(ro.accessList);
        }
        // If there was no "gasLimit" override, but the ABI specifies a default, use it
        if (tx.gasLimit == null && fragment.gas != null) {
            // Compute the intrinsic gas cost for this transaction
            // @TODO: This is based on the yellow paper as of Petersburg; this is something
            // we may wish to parameterize in v6 as part of the Network object. Since this
            // is always a non-nil to address, we can ignore G_create, but may wish to add
            // similar logic to the ContractFactory.
            let intrinsic = 21000;
            const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data);
            for(let i = 0; i < bytes.length; i++){
                intrinsic += 4;
                if (bytes[i]) {
                    intrinsic += 64;
                }
            }
            tx.gasLimit = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(fragment.gas).add(intrinsic);
        }
        // Populate "value" override
        if (ro.value) {
            const roValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(ro.value);
            if (!roValue.isZero() && !fragment.payable) {
                logger.throwError("non-payable method cannot override value", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides.value",
                    value: overrides.value
                });
            }
            tx.value = roValue;
        }
        if (ro.customData) {
            tx.customData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(ro.customData);
        }
        if (ro.ccipReadEnabled) {
            tx.ccipReadEnabled = !!ro.ccipReadEnabled;
        }
        // Remove the overrides
        delete overrides.nonce;
        delete overrides.gasLimit;
        delete overrides.gasPrice;
        delete overrides.from;
        delete overrides.value;
        delete overrides.type;
        delete overrides.accessList;
        delete overrides.maxFeePerGas;
        delete overrides.maxPriorityFeePerGas;
        delete overrides.customData;
        delete overrides.ccipReadEnabled;
        // Make sure there are no stray overrides, which may indicate a
        // typo or using an unsupported key.
        const leftovers = Object.keys(overrides).filter((key)=>overrides[key] != null);
        if (leftovers.length) {
            logger.throwError(`cannot override ${leftovers.map((l)=>JSON.stringify(l)).join(",")}`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "overrides",
                overrides: leftovers
            });
        }
        return tx;
    });
}
function buildPopulate(contract, fragment) {
    return function(...args) {
        return populateTransaction(contract, fragment, args);
    };
}
function buildEstimate(contract, fragment) {
    const signerOrProvider = contract.signer || contract.provider;
    return function(...args) {
        return __awaiter(this, void 0, void 0, function*() {
            if (!signerOrProvider) {
                logger.throwError("estimate require a provider or signer", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                    operation: "estimateGas"
                });
            }
            const tx = yield populateTransaction(contract, fragment, args);
            return yield signerOrProvider.estimateGas(tx);
        });
    };
}
function addContractWait(contract, tx) {
    const wait = tx.wait.bind(tx);
    tx.wait = (confirmations)=>{
        return wait(confirmations).then((receipt)=>{
            receipt.events = receipt.logs.map((log)=>{
                let event = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["deepCopy"])(log);
                let parsed = null;
                try {
                    parsed = contract.interface.parseLog(log);
                } catch (e) {}
                // Successfully parsed the event log; include it
                if (parsed) {
                    event.args = parsed.args;
                    event.decode = (data, topics)=>{
                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
                    };
                    event.event = parsed.name;
                    event.eventSignature = parsed.signature;
                }
                // Useful operations
                event.removeListener = ()=>{
                    return contract.provider;
                };
                event.getBlock = ()=>{
                    return contract.provider.getBlock(receipt.blockHash);
                };
                event.getTransaction = ()=>{
                    return contract.provider.getTransaction(receipt.transactionHash);
                };
                event.getTransactionReceipt = ()=>{
                    return Promise.resolve(receipt);
                };
                return event;
            });
            return receipt;
        });
    };
}
function buildCall(contract, fragment, collapseSimple) {
    const signerOrProvider = contract.signer || contract.provider;
    return function(...args) {
        return __awaiter(this, void 0, void 0, function*() {
            // Extract the "blockTag" override if present
            let blockTag = undefined;
            if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === "object") {
                const overrides = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(args.pop());
                if (overrides.blockTag != null) {
                    blockTag = yield overrides.blockTag;
                }
                delete overrides.blockTag;
                args.push(overrides);
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) {
                yield contract._deployed(blockTag);
            }
            // Call a node and get the result
            const tx = yield populateTransaction(contract, fragment, args);
            const result = yield signerOrProvider.call(tx, blockTag);
            try {
                let value = contract.interface.decodeFunctionResult(fragment, result);
                if (collapseSimple && fragment.outputs.length === 1) {
                    value = value[0];
                }
                return value;
            } catch (error) {
                if (error.code === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.CALL_EXCEPTION) {
                    error.address = contract.address;
                    error.args = args;
                    error.transaction = tx;
                }
                throw error;
            }
        });
    };
}
function buildSend(contract, fragment) {
    return function(...args) {
        return __awaiter(this, void 0, void 0, function*() {
            if (!contract.signer) {
                logger.throwError("sending a transaction requires a signer", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                    operation: "sendTransaction"
                });
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) {
                yield contract._deployed();
            }
            const txRequest = yield populateTransaction(contract, fragment, args);
            const tx = yield contract.signer.sendTransaction(txRequest);
            // Tweak the tx.wait so the receipt has extra properties
            addContractWait(contract, tx);
            return tx;
        });
    };
}
function buildDefault(contract, fragment, collapseSimple) {
    if (fragment.constant) {
        return buildCall(contract, fragment, collapseSimple);
    }
    return buildSend(contract, fragment);
}
function getEventTag(filter) {
    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {
        return "*";
    }
    return (filter.address || "*") + "@" + (filter.topics ? filter.topics.map((topic)=>{
        if (Array.isArray(topic)) {
            return topic.join("|");
        }
        return topic;
    }).join(":") : "");
}
class RunningEvent {
    constructor(tag, filter){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "tag", tag);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "filter", filter);
        this._listeners = [];
    }
    addListener(listener, once) {
        this._listeners.push({
            listener: listener,
            once: once
        });
    }
    removeListener(listener) {
        let done = false;
        this._listeners = this._listeners.filter((item)=>{
            if (done || item.listener !== listener) {
                return true;
            }
            done = true;
            return false;
        });
    }
    removeAllListeners() {
        this._listeners = [];
    }
    listeners() {
        return this._listeners.map((i)=>i.listener);
    }
    listenerCount() {
        return this._listeners.length;
    }
    run(args) {
        const listenerCount = this.listenerCount();
        this._listeners = this._listeners.filter((item)=>{
            const argsCopy = args.slice();
            // Call the callback in the next event loop
            setTimeout(()=>{
                item.listener.apply(this, argsCopy);
            }, 0);
            // Reschedule it if it not "once"
            return !item.once;
        });
        return listenerCount;
    }
    prepareEvent(event) {}
    // Returns the array that will be applied to an emit
    getEmit(event) {
        return [
            event
        ];
    }
}
class ErrorRunningEvent extends RunningEvent {
    constructor(){
        super("error", null);
    }
}
// @TODO Fragment should inherit Wildcard? and just override getEmit?
//       or have a common abstract super class, with enough constructor
//       options to configure both.
// A Fragment Event will populate all the properties that Wildcard
// will, and additionally dereference the arguments when emitting
class FragmentRunningEvent extends RunningEvent {
    constructor(address, contractInterface, fragment, topics){
        const filter = {
            address: address
        };
        let topic = contractInterface.getEventTopic(fragment);
        if (topics) {
            if (topic !== topics[0]) {
                logger.throwArgumentError("topic mismatch", "topics", topics);
            }
            filter.topics = topics.slice();
        } else {
            filter.topics = [
                topic
            ];
        }
        super(getEventTag(filter), filter);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", address);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "interface", contractInterface);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "fragment", fragment);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        event.event = this.fragment.name;
        event.eventSignature = this.fragment.format();
        event.decode = (data, topics)=>{
            return this.interface.decodeEventLog(this.fragment, data, topics);
        };
        try {
            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
        } catch (error) {
            event.args = null;
            event.decodeError = error;
        }
    }
    getEmit(event) {
        const errors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abi$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$coders$2f$abstract$2d$coder$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkResultErrors"])(event.args);
        if (errors.length) {
            throw errors[0].error;
        }
        const args = (event.args || []).slice();
        args.push(event);
        return args;
    }
}
// A Wildcard Event will attempt to populate:
//  - event            The name of the event name
//  - eventSignature   The full signature of the event
//  - decode           A function to decode data and topics
//  - args             The decoded data and topics
class WildcardRunningEvent extends RunningEvent {
    constructor(address, contractInterface){
        super("*", {
            address: address
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", address);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "interface", contractInterface);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        try {
            const parsed = this.interface.parseLog(event);
            event.event = parsed.name;
            event.eventSignature = parsed.signature;
            event.decode = (data, topics)=>{
                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);
            };
            event.args = parsed.args;
        } catch (error) {
        // No matching event
        }
    }
}
class BaseContract {
    constructor(addressOrName, contractInterface, signerOrProvider){
        // @TODO: Maybe still check the addressOrName looks like a valid address or name?
        //address = getAddress(address);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "interface", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getStatic"])(new.target, "getInterface")(contractInterface));
        if (signerOrProvider == null) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "provider", null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "signer", null);
        } else if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Signer"].isSigner(signerOrProvider)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "provider", signerOrProvider.provider || null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "signer", signerOrProvider);
        } else if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$provider$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$provider$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Provider"].isProvider(signerOrProvider)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "provider", signerOrProvider);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "signer", null);
        } else {
            logger.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "callStatic", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "estimateGas", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "functions", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "populateTransaction", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "filters", {});
        {
            const uniqueFilters = {};
            Object.keys(this.interface.events).forEach((eventSignature)=>{
                const event = this.interface.events[eventSignature];
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.filters, eventSignature, (...args)=>{
                    return {
                        address: this.address,
                        topics: this.interface.encodeFilterTopics(event, args)
                    };
                });
                if (!uniqueFilters[event.name]) {
                    uniqueFilters[event.name] = [];
                }
                uniqueFilters[event.name].push(eventSignature);
            });
            Object.keys(uniqueFilters).forEach((name)=>{
                const filters = uniqueFilters[name];
                if (filters.length === 1) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.filters, name, this.filters[filters[0]]);
                } else {
                    logger.warn(`Duplicate definition of ${name} (${filters.join(", ")})`);
                }
            });
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_runningEvents", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_wrappedEmits", {});
        if (addressOrName == null) {
            logger.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", addressOrName);
        if (this.provider) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "resolvedAddress", resolveName(this.provider, addressOrName));
        } else {
            try {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "resolvedAddress", Promise.resolve((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(addressOrName)));
            } catch (error) {
                // Without a provider, we cannot use ENS names
                logger.throwError("provider is required to use ENS name as contract address", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                    operation: "new Contract"
                });
            }
        }
        // Swallow bad ENS names to prevent Unhandled Exceptions
        this.resolvedAddress.catch((e)=>{});
        const uniqueNames = {};
        const uniqueSignatures = {};
        Object.keys(this.interface.functions).forEach((signature)=>{
            const fragment = this.interface.functions[signature];
            // Check that the signature is unique; if not the ABI generation has
            // not been cleaned or may be incorrectly generated
            if (uniqueSignatures[signature]) {
                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);
                return;
            }
            uniqueSignatures[signature] = true;
            // Track unique names; we only expose bare named functions if they
            // are ambiguous
            {
                const name = fragment.name;
                if (!uniqueNames[`%${name}`]) {
                    uniqueNames[`%${name}`] = [];
                }
                uniqueNames[`%${name}`].push(signature);
            }
            if (this[signature] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, signature, buildDefault(this, fragment, true));
            }
            // We do not collapse simple calls on this bucket, which allows
            // frameworks to safely use this without introspection as well as
            // allows decoding error recovery.
            if (this.functions[signature] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.functions, signature, buildDefault(this, fragment, false));
            }
            if (this.callStatic[signature] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.callStatic, signature, buildCall(this, fragment, true));
            }
            if (this.populateTransaction[signature] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.populateTransaction, signature, buildPopulate(this, fragment));
            }
            if (this.estimateGas[signature] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.estimateGas, signature, buildEstimate(this, fragment));
            }
        });
        Object.keys(uniqueNames).forEach((name)=>{
            // Ambiguous names to not get attached as bare names
            const signatures = uniqueNames[name];
            if (signatures.length > 1) {
                return;
            }
            // Strip off the leading "%" used for prototype protection
            name = name.substring(1);
            const signature = signatures[0];
            // If overwriting a member property that is null, swallow the error
            try {
                if (this[name] == null) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, name, this[signature]);
                }
            } catch (e) {}
            if (this.functions[name] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.functions, name, this.functions[signature]);
            }
            if (this.callStatic[name] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.callStatic, name, this.callStatic[signature]);
            }
            if (this.populateTransaction[name] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.populateTransaction, name, this.populateTransaction[signature]);
            }
            if (this.estimateGas[name] == null) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this.estimateGas, name, this.estimateGas[signature]);
            }
        });
    }
    static getContractAddress(transaction) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getContractAddress"])(transaction);
    }
    static getInterface(contractInterface) {
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abi$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Interface"].isInterface(contractInterface)) {
            return contractInterface;
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abi$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Interface"](contractInterface);
    }
    // @TODO: Allow timeout?
    deployed() {
        return this._deployed();
    }
    _deployed(blockTag) {
        if (!this._deployedPromise) {
            // If we were just deployed, we know the transaction we should occur in
            if (this.deployTransaction) {
                this._deployedPromise = this.deployTransaction.wait().then(()=>{
                    return this;
                });
            } else {
                // @TODO: Once we allow a timeout to be passed in, we will wait
                // up to that many blocks for getCode
                // Otherwise, poll for our code to be deployed
                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code)=>{
                    if (code === "0x") {
                        logger.throwError("contract not deployed", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                            contractAddress: this.address,
                            operation: "getDeployed"
                        });
                    }
                    return this;
                });
            }
        }
        return this._deployedPromise;
    }
    // @TODO:
    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>
    // @TODO:
    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>
    fallback(overrides) {
        if (!this.signer) {
            logger.throwError("sending a transactions require a signer", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "sendTransaction(fallback)"
            });
        }
        const tx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(overrides || {});
        [
            "from",
            "to"
        ].forEach(function(key) {
            if (tx[key] == null) {
                return;
            }
            logger.throwError("cannot override " + key, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: key
            });
        });
        tx.to = this.resolvedAddress;
        return this.deployed().then(()=>{
            return this.signer.sendTransaction(tx);
        });
    }
    // Reconnect to a different signer or provider
    connect(signerOrProvider) {
        if (typeof signerOrProvider === "string") {
            signerOrProvider = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["VoidSigner"](signerOrProvider, this.provider);
        }
        const contract = new this.constructor(this.address, this.interface, signerOrProvider);
        if (this.deployTransaction) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(contract, "deployTransaction", this.deployTransaction);
        }
        return contract;
    }
    // Re-attach to a different on-chain instance of this contract
    attach(addressOrName) {
        return new this.constructor(addressOrName, this.interface, this.signer || this.provider);
    }
    static isIndexed(value) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abi$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Indexed"].isIndexed(value);
    }
    _normalizeRunningEvent(runningEvent) {
        // Already have an instance of this event running; we can re-use it
        if (this._runningEvents[runningEvent.tag]) {
            return this._runningEvents[runningEvent.tag];
        }
        return runningEvent;
    }
    _getRunningEvent(eventName) {
        if (typeof eventName === "string") {
            // Listen for "error" events (if your contract has an error event, include
            // the full signature to bypass this special event keyword)
            if (eventName === "error") {
                return this._normalizeRunningEvent(new ErrorRunningEvent());
            }
            // Listen for any event that is registered
            if (eventName === "event") {
                return this._normalizeRunningEvent(new RunningEvent("event", null));
            }
            // Listen for any event
            if (eventName === "*") {
                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
            }
            // Get the event Fragment (throws if ambiguous/unknown event)
            const fragment = this.interface.getEvent(eventName);
            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));
        }
        // We have topics to filter by...
        if (eventName.topics && eventName.topics.length > 0) {
            // Is it a known topichash? (throws if no matching topichash)
            try {
                const topic = eventName.topics[0];
                if (typeof topic !== "string") {
                    throw new Error("invalid topic"); // @TODO: May happen for anonymous events
                }
                const fragment = this.interface.getEvent(topic);
                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));
            } catch (error) {}
            // Filter by the unknown topichash
            const filter = {
                address: this.address,
                topics: eventName.topics
            };
            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));
        }
        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
    }
    _checkRunningEvents(runningEvent) {
        if (runningEvent.listenerCount() === 0) {
            delete this._runningEvents[runningEvent.tag];
            // If we have a poller for this, remove it
            const emit = this._wrappedEmits[runningEvent.tag];
            if (emit && runningEvent.filter) {
                this.provider.off(runningEvent.filter, emit);
                delete this._wrappedEmits[runningEvent.tag];
            }
        }
    }
    // Subclasses can override this to gracefully recover
    // from parse errors if they wish
    _wrapEvent(runningEvent, log, listener) {
        const event = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["deepCopy"])(log);
        event.removeListener = ()=>{
            if (!listener) {
                return;
            }
            runningEvent.removeListener(listener);
            this._checkRunningEvents(runningEvent);
        };
        event.getBlock = ()=>{
            return this.provider.getBlock(log.blockHash);
        };
        event.getTransaction = ()=>{
            return this.provider.getTransaction(log.transactionHash);
        };
        event.getTransactionReceipt = ()=>{
            return this.provider.getTransactionReceipt(log.transactionHash);
        };
        // This may throw if the topics and data mismatch the signature
        runningEvent.prepareEvent(event);
        return event;
    }
    _addEventListener(runningEvent, listener, once) {
        if (!this.provider) {
            logger.throwError("events require a provider or a signer with a provider", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "once"
            });
        }
        runningEvent.addListener(listener, once);
        // Track this running event and its listeners (may already be there; but no hard in updating)
        this._runningEvents[runningEvent.tag] = runningEvent;
        // If we are not polling the provider, start polling
        if (!this._wrappedEmits[runningEvent.tag]) {
            const wrappedEmit = (log)=>{
                let event = this._wrapEvent(runningEvent, log, listener);
                // Try to emit the result for the parameterized event...
                if (event.decodeError == null) {
                    try {
                        const args = runningEvent.getEmit(event);
                        this.emit(runningEvent.filter, ...args);
                    } catch (error) {
                        event.decodeError = error.error;
                    }
                }
                // Always emit "event" for fragment-base events
                if (runningEvent.filter != null) {
                    this.emit("event", event);
                }
                // Emit "error" if there was an error
                if (event.decodeError != null) {
                    this.emit("error", event.decodeError, event);
                }
            };
            this._wrappedEmits[runningEvent.tag] = wrappedEmit;
            // Special events, like "error" do not have a filter
            if (runningEvent.filter != null) {
                this.provider.on(runningEvent.filter, wrappedEmit);
            }
        }
    }
    queryFilter(event, fromBlockOrBlockhash, toBlock) {
        const runningEvent = this._getRunningEvent(event);
        const filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(runningEvent.filter);
        if (typeof fromBlockOrBlockhash === "string" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(fromBlockOrBlockhash, 32)) {
            if (toBlock != null) {
                logger.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock);
            }
            filter.blockHash = fromBlockOrBlockhash;
        } else {
            filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;
            filter.toBlock = toBlock != null ? toBlock : "latest";
        }
        return this.provider.getLogs(filter).then((logs)=>{
            return logs.map((log)=>this._wrapEvent(runningEvent, log, null));
        });
    }
    on(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, false);
        return this;
    }
    once(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, true);
        return this;
    }
    emit(eventName, ...args) {
        if (!this.provider) {
            return false;
        }
        const runningEvent = this._getRunningEvent(eventName);
        const result = runningEvent.run(args) > 0;
        // May have drained all the "once" events; check for living events
        this._checkRunningEvents(runningEvent);
        return result;
    }
    listenerCount(eventName) {
        if (!this.provider) {
            return 0;
        }
        if (eventName == null) {
            return Object.keys(this._runningEvents).reduce((accum, key)=>{
                return accum + this._runningEvents[key].listenerCount();
            }, 0);
        }
        return this._getRunningEvent(eventName).listenerCount();
    }
    listeners(eventName) {
        if (!this.provider) {
            return [];
        }
        if (eventName == null) {
            const result = [];
            for(let tag in this._runningEvents){
                this._runningEvents[tag].listeners().forEach((listener)=>{
                    result.push(listener);
                });
            }
            return result;
        }
        return this._getRunningEvent(eventName).listeners();
    }
    removeAllListeners(eventName) {
        if (!this.provider) {
            return this;
        }
        if (eventName == null) {
            for(const tag in this._runningEvents){
                const runningEvent = this._runningEvents[tag];
                runningEvent.removeAllListeners();
                this._checkRunningEvents(runningEvent);
            }
            return this;
        }
        // Delete any listeners
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeAllListeners();
        this._checkRunningEvents(runningEvent);
        return this;
    }
    off(eventName, listener) {
        if (!this.provider) {
            return this;
        }
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeListener(listener);
        this._checkRunningEvents(runningEvent);
        return this;
    }
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
}
class Contract extends BaseContract {
}
class ContractFactory {
    constructor(contractInterface, bytecode, signer){
        let bytecodeHex = null;
        if (typeof bytecode === "string") {
            bytecodeHex = bytecode;
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytes"])(bytecode)) {
            bytecodeHex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytecode);
        } else if (bytecode && typeof bytecode.object === "string") {
            // Allow the bytecode object from the Solidity compiler
            bytecodeHex = bytecode.object;
        } else {
            // Crash in the next verification step
            bytecodeHex = "!";
        }
        // Make sure it is 0x prefixed
        if (bytecodeHex.substring(0, 2) !== "0x") {
            bytecodeHex = "0x" + bytecodeHex;
        }
        // Make sure the final result is valid bytecode
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(bytecodeHex) || bytecodeHex.length % 2) {
            logger.throwArgumentError("invalid bytecode", "bytecode", bytecode);
        }
        // If we have a signer, make sure it is valid
        if (signer && !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Signer"].isSigner(signer)) {
            logger.throwArgumentError("invalid signer", "signer", signer);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "bytecode", bytecodeHex);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "interface", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getStatic"])(new.target, "getInterface")(contractInterface));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "signer", signer || null);
    }
    // @TODO: Future; rename to populateTransaction?
    getDeployTransaction(...args) {
        let tx = {};
        // If we have 1 additional argument, we allow transaction overrides
        if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === "object") {
            tx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(args.pop());
            for(const key in tx){
                if (!allowedTransactionKeys[key]) {
                    throw new Error("unknown transaction override " + key);
                }
            }
        }
        // Do not allow these to be overridden in a deployment transaction
        [
            "data",
            "from",
            "to"
        ].forEach((key)=>{
            if (tx[key] == null) {
                return;
            }
            logger.throwError("cannot override " + key, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: key
            });
        });
        if (tx.value) {
            const value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(tx.value);
            if (!value.isZero() && !this.interface.deploy.payable) {
                logger.throwError("non-payable constructor cannot override value", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides.value",
                    value: tx.value
                });
            }
        }
        // Make sure the call matches the constructor signature
        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
        // Set the data to the bytecode + the encoded constructor arguments
        tx.data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
            this.bytecode,
            this.interface.encodeDeploy(args)
        ]));
        return tx;
    }
    deploy(...args) {
        return __awaiter(this, void 0, void 0, function*() {
            let overrides = {};
            // If 1 extra parameter was passed in, it contains overrides
            if (args.length === this.interface.deploy.inputs.length + 1) {
                overrides = args.pop();
            }
            // Make sure the call matches the constructor signature
            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
            // Resolve ENS names and promises in the arguments
            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);
            params.push(overrides);
            // Get the deployment transaction (with optional overrides)
            const unsignedTx = this.getDeployTransaction(...params);
            // Send the deployment transaction
            const tx = yield this.signer.sendTransaction(unsignedTx);
            const address = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getStatic"])(this.constructor, "getContractAddress")(tx);
            const contract = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getStatic"])(this.constructor, "getContract")(address, this.interface, this.signer);
            // Add the modified wait that wraps events
            addContractWait(contract, tx);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(contract, "deployTransaction", tx);
            return contract;
        });
    }
    attach(address) {
        return this.constructor.getContract(address, this.interface, this.signer);
    }
    connect(signer) {
        return new this.constructor(this.interface, this.bytecode, signer);
    }
    static fromSolidity(compilerOutput, signer) {
        if (compilerOutput == null) {
            logger.throwError("missing compiler output", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.MISSING_ARGUMENT, {
                argument: "compilerOutput"
            });
        }
        if (typeof compilerOutput === "string") {
            compilerOutput = JSON.parse(compilerOutput);
        }
        const abi = compilerOutput.abi;
        let bytecode = null;
        if (compilerOutput.bytecode) {
            bytecode = compilerOutput.bytecode;
        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {
            bytecode = compilerOutput.evm.bytecode;
        }
        return new this(abi, bytecode, signer);
    }
    static getInterface(contractInterface) {
        return Contract.getInterface(contractInterface);
    }
    static getContractAddress(tx) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getContractAddress"])(tx);
    }
    static getContract(address, contractInterface, signer) {
        return new Contract(address, contractInterface, signer);
    }
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "transactions/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TransactionTypes": (()=>TransactionTypes),
    "accessListify": (()=>accessListify),
    "computeAddress": (()=>computeAddress),
    "parse": (()=>parse),
    "recoverAddress": (()=>recoverAddress),
    "serialize": (()=>serialize)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/bignumbers.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
var TransactionTypes;
(function(TransactionTypes) {
    TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
    TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
    TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
;
///////////////////////////////
function handleAddress(value) {
    if (value === "0x") {
        return null;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(value);
}
function handleNumber(value) {
    if (value === "0x") {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$constants$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$constants$2f$lib$2e$esm$2f$bignumbers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Zero"];
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value);
}
// Legacy Transaction Fields
const transactionFields = [
    {
        name: "nonce",
        maxLength: 32,
        numeric: true
    },
    {
        name: "gasPrice",
        maxLength: 32,
        numeric: true
    },
    {
        name: "gasLimit",
        maxLength: 32,
        numeric: true
    },
    {
        name: "to",
        length: 20
    },
    {
        name: "value",
        maxLength: 32,
        numeric: true
    },
    {
        name: "data"
    }
];
const allowedTransactionKeys = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    type: true,
    value: true
};
function computeAddress(key) {
    const publicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computePublicKey"])(key);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])(publicKey, 1)), 12));
}
function recoverAddress(digest, signature) {
    return computeAddress((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["recoverPublicKey"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(digest), signature));
}
function formatNumber(value, name) {
    const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value).toHexString());
    if (result.length > 32) {
        logger.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
    }
    return result;
}
function accessSetify(addr, storageKeys) {
    return {
        address: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(addr),
        storageKeys: (storageKeys || []).map((storageKey, index)=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataLength"])(storageKey) !== 32) {
                logger.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
            }
            return storageKey.toLowerCase();
        })
    };
}
function accessListify(value) {
    if (Array.isArray(value)) {
        return value.map((set, index)=>{
            if (Array.isArray(set)) {
                if (set.length > 2) {
                    logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
                }
                return accessSetify(set[0], set[1]);
            }
            return accessSetify(set.address, set.storageKeys);
        });
    }
    const result = Object.keys(value).map((addr)=>{
        const storageKeys = value[addr].reduce((accum, storageKey)=>{
            accum[storageKey] = true;
            return accum;
        }, {});
        return accessSetify(addr, Object.keys(storageKeys).sort());
    });
    result.sort((a, b)=>a.address.localeCompare(b.address));
    return result;
}
function formatAccessList(value) {
    return accessListify(value).map((set)=>[
            set.address,
            set.storageKeys
        ]);
}
function _serializeEip1559(transaction, signature) {
    // If there is an explicit gasPrice, make sure it matches the
    // EIP-1559 fees; otherwise they may not understand what they
    // think they are setting in terms of fee.
    if (transaction.gasPrice != null) {
        const gasPrice = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(transaction.gasPrice);
        const maxFeePerGas = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(transaction.maxFeePerGas || 0);
        if (!gasPrice.eq(maxFeePerGas)) {
            logger.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                gasPrice,
                maxFeePerGas
            });
        }
    }
    const fields = [
        formatNumber(transaction.chainId || 0, "chainId"),
        formatNumber(transaction.nonce || 0, "nonce"),
        formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
        formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
        formatNumber(transaction.gasLimit || 0, "gasLimit"),
        transaction.to != null ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(transaction.to) : "0x",
        formatNumber(transaction.value || 0, "value"),
        transaction.data || "0x",
        formatAccessList(transaction.accessList || [])
    ];
    if (signature) {
        const sig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitSignature"])(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])(sig.r));
        fields.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])(sig.s));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexConcat"])([
        "0x02",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.encode(fields)
    ]);
}
function _serializeEip2930(transaction, signature) {
    const fields = [
        formatNumber(transaction.chainId || 0, "chainId"),
        formatNumber(transaction.nonce || 0, "nonce"),
        formatNumber(transaction.gasPrice || 0, "gasPrice"),
        formatNumber(transaction.gasLimit || 0, "gasLimit"),
        transaction.to != null ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(transaction.to) : "0x",
        formatNumber(transaction.value || 0, "value"),
        transaction.data || "0x",
        formatAccessList(transaction.accessList || [])
    ];
    if (signature) {
        const sig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitSignature"])(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])(sig.r));
        fields.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])(sig.s));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexConcat"])([
        "0x01",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.encode(fields)
    ]);
}
// Legacy Transactions and EIP-155
function _serialize(transaction, signature) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkProperties"])(transaction, allowedTransactionKeys);
    const raw = [];
    transactionFields.forEach(function(fieldInfo) {
        let value = transaction[fieldInfo.name] || [];
        const options = {};
        if (fieldInfo.numeric) {
            options.hexPad = "left";
        }
        value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(value, options));
        // Fixed-width field
        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
            logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
        }
        // Variable-width (with a maximum)
        if (fieldInfo.maxLength) {
            value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])(value);
            if (value.length > fieldInfo.maxLength) {
                logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
            }
        }
        raw.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(value));
    });
    let chainId = 0;
    if (transaction.chainId != null) {
        // A chainId was provided; if non-zero we'll use EIP-155
        chainId = transaction.chainId;
        if (typeof chainId !== "number") {
            logger.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
        }
    } else if (signature && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytesLike"])(signature) && signature.v > 28) {
        // No chainId provided, but the signature is signing with EIP-155; derive chainId
        chainId = Math.floor((signature.v - 35) / 2);
    }
    // We have an EIP-155 transaction (chainId was specified and non-zero)
    if (chainId !== 0) {
        raw.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(chainId)); // @TODO: hexValue?
        raw.push("0x");
        raw.push("0x");
    }
    // Requesting an unsigned transaction
    if (!signature) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.encode(raw);
    }
    // The splitSignature will ensure the transaction has a recoveryParam in the
    // case that the signTransaction function only adds a v.
    const sig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitSignature"])(signature);
    // We pushed a chainId and null r, s on for hashing only; remove those
    let v = 27 + sig.recoveryParam;
    if (chainId !== 0) {
        raw.pop();
        raw.pop();
        raw.pop();
        v += chainId * 2 + 8;
        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!
        if (sig.v > 28 && sig.v !== v) {
            logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
        }
    } else if (sig.v !== v) {
        logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
    }
    raw.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(v));
    raw.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(sig.r)));
    raw.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stripZeros"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(sig.s)));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.encode(raw);
}
function serialize(transaction, signature) {
    // Legacy and EIP-155 Transactions
    if (transaction.type == null || transaction.type === 0) {
        if (transaction.accessList != null) {
            logger.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
        }
        return _serialize(transaction, signature);
    }
    // Typed Transactions (EIP-2718)
    switch(transaction.type){
        case 1:
            return _serializeEip2930(transaction, signature);
        case 2:
            return _serializeEip1559(transaction, signature);
        default:
            break;
    }
    return logger.throwError(`unsupported transaction type: ${transaction.type}`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
        operation: "serializeTransaction",
        transactionType: transaction.type
    });
}
function _parseEipSignature(tx, fields, serialize) {
    try {
        const recid = handleNumber(fields[0]).toNumber();
        if (recid !== 0 && recid !== 1) {
            throw new Error("bad recid");
        }
        tx.v = recid;
    } catch (error) {
        logger.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
    }
    tx.r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(fields[1], 32);
    tx.s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(fields[2], 32);
    try {
        const digest = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(serialize(tx));
        tx.from = recoverAddress(digest, {
            r: tx.r,
            s: tx.s,
            recoveryParam: tx.v
        });
    } catch (error) {}
}
function _parseEip1559(payload) {
    const transaction = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.decode(payload.slice(1));
    if (transaction.length !== 9 && transaction.length !== 12) {
        logger.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(payload));
    }
    const maxPriorityFeePerGas = handleNumber(transaction[2]);
    const maxFeePerGas = handleNumber(transaction[3]);
    const tx = {
        type: 2,
        chainId: handleNumber(transaction[0]).toNumber(),
        nonce: handleNumber(transaction[1]).toNumber(),
        maxPriorityFeePerGas: maxPriorityFeePerGas,
        maxFeePerGas: maxFeePerGas,
        gasPrice: null,
        gasLimit: handleNumber(transaction[4]),
        to: handleAddress(transaction[5]),
        value: handleNumber(transaction[6]),
        data: transaction[7],
        accessList: accessListify(transaction[8])
    };
    // Unsigned EIP-1559 Transaction
    if (transaction.length === 9) {
        return tx;
    }
    tx.hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(payload);
    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);
    return tx;
}
function _parseEip2930(payload) {
    const transaction = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.decode(payload.slice(1));
    if (transaction.length !== 8 && transaction.length !== 11) {
        logger.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(payload));
    }
    const tx = {
        type: 1,
        chainId: handleNumber(transaction[0]).toNumber(),
        nonce: handleNumber(transaction[1]).toNumber(),
        gasPrice: handleNumber(transaction[2]),
        gasLimit: handleNumber(transaction[3]),
        to: handleAddress(transaction[4]),
        value: handleNumber(transaction[5]),
        data: transaction[6],
        accessList: accessListify(transaction[7])
    };
    // Unsigned EIP-2930 Transaction
    if (transaction.length === 8) {
        return tx;
    }
    tx.hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(payload);
    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);
    return tx;
}
// Legacy Transactions and EIP-155
function _parse(rawTransaction) {
    const transaction = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.decode(rawTransaction);
    if (transaction.length !== 9 && transaction.length !== 6) {
        logger.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
    }
    const tx = {
        nonce: handleNumber(transaction[0]).toNumber(),
        gasPrice: handleNumber(transaction[1]),
        gasLimit: handleNumber(transaction[2]),
        to: handleAddress(transaction[3]),
        value: handleNumber(transaction[4]),
        data: transaction[5],
        chainId: 0
    };
    // Legacy unsigned transaction
    if (transaction.length === 6) {
        return tx;
    }
    try {
        tx.v = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(transaction[6]).toNumber();
    } catch (error) {
        // @TODO: What makes snese to do? The v is too big
        return tx;
    }
    tx.r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(transaction[7], 32);
    tx.s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])(transaction[8], 32);
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(tx.r).isZero() && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(tx.s).isZero()) {
        // EIP-155 unsigned transaction
        tx.chainId = tx.v;
        tx.v = 0;
    } else {
        // Signed Transaction
        tx.chainId = Math.floor((tx.v - 35) / 2);
        if (tx.chainId < 0) {
            tx.chainId = 0;
        }
        let recoveryParam = tx.v - 27;
        const raw = transaction.slice(0, 6);
        if (tx.chainId !== 0) {
            raw.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(tx.chainId));
            raw.push("0x");
            raw.push("0x");
            recoveryParam -= tx.chainId * 2 + 8;
        }
        const digest = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$rlp$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$rlp$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__.encode(raw));
        try {
            tx.from = recoverAddress(digest, {
                r: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(tx.r),
                s: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(tx.s),
                recoveryParam: recoveryParam
            });
        } catch (error) {}
        tx.hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(rawTransaction);
    }
    tx.type = null;
    return tx;
}
function parse(rawTransaction) {
    const payload = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(rawTransaction);
    // Legacy and EIP-155 Transactions
    if (payload[0] > 0x7f) {
        return _parse(payload);
    }
    // Typed Transaction (EIP-2718)
    switch(payload[0]){
        case 1:
            return _parseEip2930(payload);
        case 2:
            return _parseEip1559(payload);
        default:
            break;
    }
    return logger.throwError(`unsupported transaction type: ${payload[0]}`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
        operation: "parseTransaction",
        transactionType: payload[0]
    });
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "signing-key/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "EC": (()=>EC$1)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js [app-rsc] (ecmascript)");
;
;
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}
function createCommonjsModule(fn, basedir, module) {
    return module = {
        path: basedir,
        exports: {},
        require: function(path, base) {
            return commonjsRequire(path, base === undefined || base === null ? module.path : base);
        }
    }, fn(module, module.exports), module.exports;
}
function getDefaultExportFromNamespaceIfPresent(n) {
    return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
}
function getDefaultExportFromNamespaceIfNotNamed(n) {
    return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}
function getAugmentedNamespace(n) {
    if (n.__esModule) return n;
    var a = Object.defineProperty({}, '__esModule', {
        value: true
    });
    Object.keys(n).forEach(function(k) {
        var d = Object.getOwnPropertyDescriptor(n, k);
        Object.defineProperty(a, k, d.get ? d : {
            enumerable: true,
            get: function() {
                return n[k];
            }
        });
    });
    return a;
}
function commonjsRequire() {
    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}
var minimalisticAssert = assert;
function assert(val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
}
assert.equal = function assertEqual(l, r, msg) {
    if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};
var utils_1 = createCommonjsModule(function(module, exports) {
    'use strict';
    var utils = exports;
    function toArray(msg, enc) {
        if (Array.isArray(msg)) return msg.slice();
        if (!msg) return [];
        var res = [];
        if (typeof msg !== 'string') {
            for(var i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
            return res;
        }
        if (enc === 'hex') {
            msg = msg.replace(/[^a-z0-9]+/ig, '');
            if (msg.length % 2 !== 0) msg = '0' + msg;
            for(var i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
        } else {
            for(var i = 0; i < msg.length; i++){
                var c = msg.charCodeAt(i);
                var hi = c >> 8;
                var lo = c & 0xff;
                if (hi) res.push(hi, lo);
                else res.push(lo);
            }
        }
        return res;
    }
    utils.toArray = toArray;
    function zero2(word) {
        if (word.length === 1) return '0' + word;
        else return word;
    }
    utils.zero2 = zero2;
    function toHex(msg) {
        var res = '';
        for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));
        return res;
    }
    utils.toHex = toHex;
    utils.encode = function encode(arr, enc) {
        if (enc === 'hex') return toHex(arr);
        else return arr;
    };
});
var utils_1$1 = createCommonjsModule(function(module, exports) {
    'use strict';
    var utils = exports;
    utils.assert = minimalisticAssert;
    utils.toArray = utils_1.toArray;
    utils.zero2 = utils_1.zero2;
    utils.toHex = utils_1.toHex;
    utils.encode = utils_1.encode;
    // Represent num in a w-NAF form
    function getNAF(num, w, bits) {
        var naf = new Array(Math.max(num.bitLength(), bits) + 1);
        naf.fill(0);
        var ws = 1 << w + 1;
        var k = num.clone();
        for(var i = 0; i < naf.length; i++){
            var z;
            var mod = k.andln(ws - 1);
            if (k.isOdd()) {
                if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;
                else z = mod;
                k.isubn(z);
            } else {
                z = 0;
            }
            naf[i] = z;
            k.iushrn(1);
        }
        return naf;
    }
    utils.getNAF = getNAF;
    // Represent k1, k2 in a Joint Sparse Form
    function getJSF(k1, k2) {
        var jsf = [
            [],
            []
        ];
        k1 = k1.clone();
        k2 = k2.clone();
        var d1 = 0;
        var d2 = 0;
        var m8;
        while(k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0){
            // First phase
            var m14 = k1.andln(3) + d1 & 3;
            var m24 = k2.andln(3) + d2 & 3;
            if (m14 === 3) m14 = -1;
            if (m24 === 3) m24 = -1;
            var u1;
            if ((m14 & 1) === 0) {
                u1 = 0;
            } else {
                m8 = k1.andln(7) + d1 & 7;
                if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;
                else u1 = m14;
            }
            jsf[0].push(u1);
            var u2;
            if ((m24 & 1) === 0) {
                u2 = 0;
            } else {
                m8 = k2.andln(7) + d2 & 7;
                if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;
                else u2 = m24;
            }
            jsf[1].push(u2);
            // Second phase
            if (2 * d1 === u1 + 1) d1 = 1 - d1;
            if (2 * d2 === u2 + 1) d2 = 1 - d2;
            k1.iushrn(1);
            k2.iushrn(1);
        }
        return jsf;
    }
    utils.getJSF = getJSF;
    function cachedProperty(obj, name, computer) {
        var key = '_' + name;
        obj.prototype[name] = function cachedProperty() {
            return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
        };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
        return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](bytes, 'hex', 'le');
    }
    utils.intFromLE = intFromLE;
});
'use strict';
var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;
function BaseCurve(type, conf) {
    this.type = type;
    this.p = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](conf.p, 16);
    // Use Montgomery, when there is no fast reduction for the prime
    this.red = conf.prime ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].red(conf.prime) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].mont(this.p);
    // Useful for many curves
    this.zero = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](0).toRed(this.red);
    this.one = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](1).toRed(this.red);
    this.two = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](2).toRed(this.red);
    // Curve configuration, optional
    this.n = conf.n && new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](conf.n, 16);
    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
    // Temporary arrays
    this._wnafT1 = new Array(4);
    this._wnafT2 = new Array(4);
    this._wnafT3 = new Array(4);
    this._wnafT4 = new Array(4);
    this._bitLength = this.n ? this.n.bitLength() : 0;
    // Generalized Greg Maxwell's trick
    var adjustCount = this.n && this.p.div(this.n);
    if (!adjustCount || adjustCount.cmpn(100) > 0) {
        this.redN = null;
    } else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
    }
}
var base = BaseCurve;
BaseCurve.prototype.point = function point() {
    throw new Error('Not implemented');
};
BaseCurve.prototype.validate = function validate() {
    throw new Error('Not implemented');
};
BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
    assert$1(p.precomputed);
    var doubles = p._getDoubles();
    var naf = getNAF(k, 1, this._bitLength);
    var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
    I /= 3;
    // Translate into more windowed form
    var repr = [];
    var j;
    var nafW;
    for(j = 0; j < naf.length; j += doubles.step){
        nafW = 0;
        for(var l = j + doubles.step - 1; l >= j; l--)nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
    }
    var a = this.jpoint(null, null, null);
    var b = this.jpoint(null, null, null);
    for(var i = I; i > 0; i--){
        for(j = 0; j < repr.length; j++){
            nafW = repr[j];
            if (nafW === i) b = b.mixedAdd(doubles.points[j]);
            else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
    }
    return a.toP();
};
BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
    var w = 4;
    // Precompute window
    var nafPoints = p._getNAFPoints(w);
    w = nafPoints.wnd;
    var wnd = nafPoints.points;
    // Get NAF form
    var naf = getNAF(k, w, this._bitLength);
    // Add `this`*(N+1) for every w-NAF index
    var acc = this.jpoint(null, null, null);
    for(var i = naf.length - 1; i >= 0; i--){
        // Count zeroes
        for(var l = 0; i >= 0 && naf[i] === 0; i--)l++;
        if (i >= 0) l++;
        acc = acc.dblp(l);
        if (i < 0) break;
        var z = naf[i];
        assert$1(z !== 0);
        if (p.type === 'affine') {
            // J +- P
            if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);
            else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
        } else {
            // J +- J
            if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);
            else acc = acc.add(wnd[-z - 1 >> 1].neg());
        }
    }
    return p.type === 'affine' ? acc.toP() : acc;
};
BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
    var wndWidth = this._wnafT1;
    var wnd = this._wnafT2;
    var naf = this._wnafT3;
    // Fill all arrays
    var max = 0;
    var i;
    var j;
    var p;
    for(i = 0; i < len; i++){
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
    }
    // Comb small window NAFs
    for(i = len - 1; i >= 1; i -= 2){
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
            naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
            naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
            max = Math.max(naf[a].length, max);
            max = Math.max(naf[b].length, max);
            continue;
        }
        var comb = [
            points[a],
            /* 1 */ null,
            /* 3 */ null,
            /* 5 */ points[b]
        ];
        // Try to avoid Projective points, if possible
        if (points[a].y.cmp(points[b].y) === 0) {
            comb[1] = points[a].add(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].add(points[b].neg());
        } else {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [
            -3,
            /* -1 -1 */ -1,
            /* -1 0 */ -5,
            /* -1 1 */ -7,
            /* 0 -1 */ 0,
            /* 0 0 */ 7,
            /* 0 1 */ 5,
            /* 1 -1 */ 1,
            /* 1 0 */ 3
        ];
        var jsf = getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for(j = 0; j < max; j++){
            var ja = jsf[0][j] | 0;
            var jb = jsf[1][j] | 0;
            naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
            naf[b][j] = 0;
            wnd[a] = comb;
        }
    }
    var acc = this.jpoint(null, null, null);
    var tmp = this._wnafT4;
    for(i = max; i >= 0; i--){
        var k = 0;
        while(i >= 0){
            var zero = true;
            for(j = 0; j < len; j++){
                tmp[j] = naf[j][i] | 0;
                if (tmp[j] !== 0) zero = false;
            }
            if (!zero) break;
            k++;
            i--;
        }
        if (i >= 0) k++;
        acc = acc.dblp(k);
        if (i < 0) break;
        for(j = 0; j < len; j++){
            var z = tmp[j];
            p;
            if (z === 0) continue;
            else if (z > 0) p = wnd[j][z - 1 >> 1];
            else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
            if (p.type === 'affine') acc = acc.mixedAdd(p);
            else acc = acc.add(p);
        }
    }
    // Zeroify references
    for(i = 0; i < len; i++)wnd[i] = null;
    if (jacobianResult) return acc;
    else return acc.toP();
};
function BasePoint(curve, type) {
    this.curve = curve;
    this.type = type;
    this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function eq() {
    throw new Error('Not implemented');
};
BasePoint.prototype.validate = function validate() {
    return this.curve.validate(this);
};
BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
    bytes = utils_1$1.toArray(bytes, enc);
    var len = this.p.byteLength();
    // uncompressed, hybrid-odd, hybrid-even
    if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
        if (bytes[0] === 0x06) assert$1(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 0x07) assert$1(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
        return res;
    } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
        return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
    }
    throw new Error('Unknown point format');
};
BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
    return this.encode(enc, true);
};
BasePoint.prototype._encode = function _encode(compact) {
    var len = this.curve.p.byteLength();
    var x = this.getX().toArray('be', len);
    if (compact) return [
        this.getY().isEven() ? 0x02 : 0x03
    ].concat(x);
    return [
        0x04
    ].concat(x, this.getY().toArray('be', len));
};
BasePoint.prototype.encode = function encode(enc, compact) {
    return utils_1$1.encode(this._encode(compact), enc);
};
BasePoint.prototype.precompute = function precompute(power) {
    if (this.precomputed) return this;
    var precomputed = {
        doubles: null,
        naf: null,
        beta: null
    };
    precomputed.naf = this._getNAFPoints(8);
    precomputed.doubles = this._getDoubles(4, power);
    precomputed.beta = this._getBeta();
    this.precomputed = precomputed;
    return this;
};
BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
    if (!this.precomputed) return false;
    var doubles = this.precomputed.doubles;
    if (!doubles) return false;
    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
    var doubles = [
        this
    ];
    var acc = this;
    for(var i = 0; i < power; i += step){
        for(var j = 0; j < step; j++)acc = acc.dbl();
        doubles.push(acc);
    }
    return {
        step: step,
        points: doubles
    };
};
BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
    var res = [
        this
    ];
    var max = (1 << wnd) - 1;
    var dbl = max === 1 ? null : this.dbl();
    for(var i = 1; i < max; i++)res[i] = res[i - 1].add(dbl);
    return {
        wnd: wnd,
        points: res
    };
};
BasePoint.prototype._getBeta = function _getBeta() {
    return null;
};
BasePoint.prototype.dblp = function dblp(k) {
    var r = this;
    for(var i = 0; i < k; i++)r = r.dbl();
    return r;
};
var inherits_browser = createCommonjsModule(function(module) {
    if (typeof Object.create === 'function') {
        // implementation from standard node.js 'util' module
        module.exports = function inherits(ctor, superCtor) {
            if (superCtor) {
                ctor.super_ = superCtor;
                ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                        value: ctor,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
            }
        };
    } else {
        // old school shim for old browsers
        module.exports = function inherits(ctor, superCtor) {
            if (superCtor) {
                ctor.super_ = superCtor;
                var TempCtor = function() {};
                TempCtor.prototype = superCtor.prototype;
                ctor.prototype = new TempCtor();
                ctor.prototype.constructor = ctor;
            }
        };
    }
});
'use strict';
var assert$2 = utils_1$1.assert;
function ShortCurve(conf) {
    base.call(this, 'short', conf);
    this.a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](conf.a, 16).toRed(this.red);
    this.b = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](conf.b, 16).toRed(this.red);
    this.tinv = this.two.redInvm();
    this.zeroA = this.a.fromRed().cmpn(0) === 0;
    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
    // If the curve is endomorphic, precalculate beta and lambda
    this.endo = this._getEndomorphism(conf);
    this._endoWnafT1 = new Array(4);
    this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;
ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
    // No efficient endomorphism
    if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;
    // Compute beta and lambda, that lambda * P = (beta * Px; Py)
    var beta;
    var lambda;
    if (conf.beta) {
        beta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](conf.beta, 16).toRed(this.red);
    } else {
        var betas = this._getEndoRoots(this.p);
        // Choose the smallest beta
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
    }
    if (conf.lambda) {
        lambda = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](conf.lambda, 16);
    } else {
        // Choose the lambda that is matching selected beta
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
            lambda = lambdas[0];
        } else {
            lambda = lambdas[1];
            assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
    }
    // Get basis vectors, used for balanced length-two representation
    var basis;
    if (conf.basis) {
        basis = conf.basis.map(function(vec) {
            return {
                a: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](vec.a, 16),
                b: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](vec.b, 16)
            };
        });
    } else {
        basis = this._getEndoBasis(lambda);
    }
    return {
        beta: beta,
        lambda: lambda,
        basis: basis
    };
};
ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
    // Find roots of for x^2 + x + 1 in F
    // Root = (-1 +- Sqrt(-3)) / 2
    //
    var red = num === this.p ? this.red : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].mont(num);
    var tinv = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](2).toRed(red).redInvm();
    var ntinv = tinv.redNeg();
    var s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](3).toRed(red).redNeg().redSqrt().redMul(tinv);
    var l1 = ntinv.redAdd(s).fromRed();
    var l2 = ntinv.redSub(s).fromRed();
    return [
        l1,
        l2
    ];
};
ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
    // aprxSqrt >= sqrt(this.n)
    var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
    // 3.74
    // Run EGCD, until r(L + 1) < aprxSqrt
    var u = lambda;
    var v = this.n.clone();
    var x1 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](1);
    var y1 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](0);
    var x2 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](0);
    var y2 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](1);
    // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
    var a0;
    var b0;
    // First vector
    var a1;
    var b1;
    // Second vector
    var a2;
    var b2;
    var prevR;
    var i = 0;
    var r;
    var x;
    while(u.cmpn(0) !== 0){
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
            a0 = prevR.neg();
            b0 = x1;
            a1 = r.neg();
            b1 = x;
        } else if (a1 && ++i === 2) {
            break;
        }
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
    }
    a2 = r.neg();
    b2 = x;
    var len1 = a1.sqr().add(b1.sqr());
    var len2 = a2.sqr().add(b2.sqr());
    if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
    }
    // Normalize signs
    if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
    }
    if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
    }
    return [
        {
            a: a1,
            b: b1
        },
        {
            a: a2,
            b: b2
        }
    ];
};
ShortCurve.prototype._endoSplit = function _endoSplit(k) {
    var basis = this.endo.basis;
    var v1 = basis[0];
    var v2 = basis[1];
    var c1 = v2.b.mul(k).divRound(this.n);
    var c2 = v1.b.neg().mul(k).divRound(this.n);
    var p1 = c1.mul(v1.a);
    var p2 = c2.mul(v2.a);
    var q1 = c1.mul(v1.b);
    var q2 = c2.mul(v2.b);
    // Calculate answer
    var k1 = k.sub(p1).sub(p2);
    var k2 = q1.add(q2).neg();
    return {
        k1: k1,
        k2: k2
    };
};
ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
    x = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](x, 16);
    if (!x.red) x = x.toRed(this.red);
    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
    var y = y2.redSqrt();
    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');
    // XXX Is there any way to tell if the number is odd without converting it
    // to non-red form?
    var isOdd = y.fromRed().isOdd();
    if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
    return this.point(x, y);
};
ShortCurve.prototype.validate = function validate(point) {
    if (point.inf) return true;
    var x = point.x;
    var y = point.y;
    var ax = this.a.redMul(x);
    var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
    return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
    var npoints = this._endoWnafT1;
    var ncoeffs = this._endoWnafT2;
    for(var i = 0; i < points.length; i++){
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
            split.k1.ineg();
            p = p.neg(true);
        }
        if (split.k2.negative) {
            split.k2.ineg();
            beta = beta.neg(true);
        }
        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
    }
    var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
    // Clean-up references to points and coefficients
    for(var j = 0; j < i * 2; j++){
        npoints[j] = null;
        ncoeffs[j] = null;
    }
    return res;
};
function Point(curve, x, y, isRed) {
    base.BasePoint.call(this, curve, 'affine');
    if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
    } else {
        this.x = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](x, 16);
        this.y = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](y, 16);
        // Force redgomery representation when loading from JSON
        if (isRed) {
            this.x.forceRed(this.curve.red);
            this.y.forceRed(this.curve.red);
        }
        if (!this.x.red) this.x = this.x.toRed(this.curve.red);
        if (!this.y.red) this.y = this.y.toRed(this.curve.red);
        this.inf = false;
    }
}
inherits_browser(Point, base.BasePoint);
ShortCurve.prototype.point = function point(x, y, isRed) {
    return new Point(this, x, y, isRed);
};
ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
    return Point.fromJSON(this, obj, red);
};
Point.prototype._getBeta = function _getBeta() {
    if (!this.curve.endo) return;
    var pre = this.precomputed;
    if (pre && pre.beta) return pre.beta;
    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
            return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
            beta: null,
            naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(endoMul)
            },
            doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(endoMul)
            }
        };
    }
    return beta;
};
Point.prototype.toJSON = function toJSON() {
    if (!this.precomputed) return [
        this.x,
        this.y
    ];
    return [
        this.x,
        this.y,
        this.precomputed && {
            doubles: this.precomputed.doubles && {
                step: this.precomputed.doubles.step,
                points: this.precomputed.doubles.points.slice(1)
            },
            naf: this.precomputed.naf && {
                wnd: this.precomputed.naf.wnd,
                points: this.precomputed.naf.points.slice(1)
            }
        }
    ];
};
Point.fromJSON = function fromJSON(curve, obj, red) {
    if (typeof obj === 'string') obj = JSON.parse(obj);
    var res = curve.point(obj[0], obj[1], red);
    if (!obj[2]) return res;
    function obj2point(obj) {
        return curve.point(obj[0], obj[1], red);
    }
    var pre = obj[2];
    res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
            step: pre.doubles.step,
            points: [
                res
            ].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: [
                res
            ].concat(pre.naf.points.map(obj2point))
        }
    };
    return res;
};
Point.prototype.inspect = function inspect() {
    if (this.isInfinity()) return '<EC Point Infinity>';
    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};
Point.prototype.isInfinity = function isInfinity() {
    return this.inf;
};
Point.prototype.add = function add(p) {
    // O + P = P
    if (this.inf) return p;
    // P + O = P
    if (p.inf) return this;
    // P + P = 2P
    if (this.eq(p)) return this.dbl();
    // P + (-P) = O
    if (this.neg().eq(p)) return this.curve.point(null, null);
    // P + Q = O
    if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
    var c = this.y.redSub(p.y);
    if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
    var nx = c.redSqr().redISub(this.x).redISub(p.x);
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
};
Point.prototype.dbl = function dbl() {
    if (this.inf) return this;
    // 2P = O
    var ys1 = this.y.redAdd(this.y);
    if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
    var a = this.curve.a;
    var x2 = this.x.redSqr();
    var dyinv = ys1.redInvm();
    var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
    var nx = c.redSqr().redISub(this.x.redAdd(this.x));
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
};
Point.prototype.getX = function getX() {
    return this.x.fromRed();
};
Point.prototype.getY = function getY() {
    return this.y.fromRed();
};
Point.prototype.mul = function mul(k) {
    k = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](k, 16);
    if (this.isInfinity()) return this;
    else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);
    else if (this.curve.endo) return this.curve._endoWnafMulAdd([
        this
    ], [
        k
    ]);
    else return this.curve._wnafMul(this, k);
};
Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
    var points = [
        this,
        p2
    ];
    var coeffs = [
        k1,
        k2
    ];
    if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);
    else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
    var points = [
        this,
        p2
    ];
    var coeffs = [
        k1,
        k2
    ];
    if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);
    else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point.prototype.eq = function eq(p) {
    return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point.prototype.neg = function neg(_precompute) {
    if (this.inf) return this;
    var res = this.curve.point(this.x, this.y.redNeg());
    if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
            return p.neg();
        };
        res.precomputed = {
            naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(negate)
            },
            doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(negate)
            }
        };
    }
    return res;
};
Point.prototype.toJ = function toJ() {
    if (this.inf) return this.curve.jpoint(null, null, null);
    var res = this.curve.jpoint(this.x, this.y, this.curve.one);
    return res;
};
function JPoint(curve, x, y, z) {
    base.BasePoint.call(this, curve, 'jacobian');
    if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](0);
    } else {
        this.x = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](x, 16);
        this.y = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](y, 16);
        this.z = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](z, 16);
    }
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint, base.BasePoint);
ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
    return new JPoint(this, x, y, z);
};
JPoint.prototype.toP = function toP() {
    if (this.isInfinity()) return this.curve.point(null, null);
    var zinv = this.z.redInvm();
    var zinv2 = zinv.redSqr();
    var ax = this.x.redMul(zinv2);
    var ay = this.y.redMul(zinv2).redMul(zinv);
    return this.curve.point(ax, ay);
};
JPoint.prototype.neg = function neg() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint.prototype.add = function add(p) {
    // O + P = P
    if (this.isInfinity()) return p;
    // P + O = P
    if (p.isInfinity()) return this;
    // 12M + 4S + 7A
    var pz2 = p.z.redSqr();
    var z2 = this.z.redSqr();
    var u1 = this.x.redMul(pz2);
    var u2 = p.x.redMul(z2);
    var s1 = this.y.redMul(pz2.redMul(p.z));
    var s2 = p.y.redMul(z2.redMul(this.z));
    var h = u1.redSub(u2);
    var r = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
        else return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(p.z).redMul(h);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mixedAdd = function mixedAdd(p) {
    // O + P = P
    if (this.isInfinity()) return p.toJ();
    // P + O = P
    if (p.isInfinity()) return this;
    // 8M + 3S + 7A
    var z2 = this.z.redSqr();
    var u1 = this.x;
    var u2 = p.x.redMul(z2);
    var s1 = this.y;
    var s2 = p.y.redMul(z2).redMul(this.z);
    var h = u1.redSub(u2);
    var r = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
        else return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(h);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.dblp = function dblp(pow) {
    if (pow === 0) return this;
    if (this.isInfinity()) return this;
    if (!pow) return this.dbl();
    var i;
    if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for(i = 0; i < pow; i++)r = r.dbl();
        return r;
    }
    // 1M + 2S + 1A + N * (4S + 5M + 8A)
    // N = 1 => 6M + 6S + 9A
    var a = this.curve.a;
    var tinv = this.curve.tinv;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    // Reuse results
    var jyd = jy.redAdd(jy);
    for(i = 0; i < pow; i++){
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
        jx = nx;
        jz = nz;
        jyd = dny;
    }
    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint.prototype.dbl = function dbl() {
    if (this.isInfinity()) return this;
    if (this.curve.zeroA) return this._zeroDbl();
    else if (this.curve.threeA) return this._threeDbl();
    else return this._dbl();
};
JPoint.prototype._zeroDbl = function _zeroDbl() {
    var nx;
    var ny;
    var nz;
    // Z = 1
    if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 14A
        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a; a = 0
        var m = xx.redAdd(xx).redIAdd(xx);
        // T = M ^ 2 - 2*S
        var t = m.redSqr().redISub(s).redISub(s);
        // 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2*Y1
        nz = this.y.redAdd(this.y);
    } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-dbl-2009-l
        // 2M + 5S + 13A
        // A = X1^2
        var a = this.x.redSqr();
        // B = Y1^2
        var b = this.y.redSqr();
        // C = B^2
        var c = b.redSqr();
        // D = 2 * ((X1 + B)^2 - A - C)
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        // E = 3 * A
        var e = a.redAdd(a).redIAdd(a);
        // F = E^2
        var f = e.redSqr();
        // 8 * C
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        // X3 = F - 2 * D
        nx = f.redISub(d).redISub(d);
        // Y3 = E * (D - X3) - 8 * C
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        // Z3 = 2 * Y1 * Z1
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
    }
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._threeDbl = function _threeDbl() {
    var nx;
    var ny;
    var nz;
    // Z = 1
    if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 15A
        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        // T = M^2 - 2 * S
        var t = m.redSqr().redISub(s).redISub(s);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2 * Y1
        nz = this.y.redAdd(this.y);
    } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
        // 3M + 5S
        // delta = Z1^2
        var delta = this.z.redSqr();
        // gamma = Y1^2
        var gamma = this.y.redSqr();
        // beta = X1 * gamma
        var beta = this.x.redMul(gamma);
        // alpha = 3 * (X1 - delta) * (X1 + delta)
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        // X3 = alpha^2 - 8 * beta
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        // Z3 = (Y1 + Z1)^2 - gamma - delta
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
    }
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._dbl = function _dbl() {
    var a = this.curve.a;
    // 4M + 6S + 10A
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jx2 = jx.redSqr();
    var jy2 = jy.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var jxd4 = jx.redAdd(jx);
    jxd4 = jxd4.redIAdd(jxd4);
    var t1 = jxd4.redMul(jy2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var jyd8 = jy2.redSqr();
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    var ny = c.redMul(t2).redISub(jyd8);
    var nz = jy.redAdd(jy).redMul(jz);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.trpl = function trpl() {
    if (!this.curve.zeroA) return this.dbl().add(this);
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
    // 5M + 10S + ...
    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // ZZ = Z1^2
    var zz = this.z.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // M = 3 * XX + a * ZZ2; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // MM = M^2
    var mm = m.redSqr();
    // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
    var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    e = e.redIAdd(e);
    e = e.redAdd(e).redIAdd(e);
    e = e.redISub(mm);
    // EE = E^2
    var ee = e.redSqr();
    // T = 16*YYYY
    var t = yyyy.redIAdd(yyyy);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    // U = (M + E)^2 - MM - EE - T
    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
    // X3 = 4 * (X1 * EE - 4 * YY * U)
    var yyu4 = yy.redMul(u);
    yyu4 = yyu4.redIAdd(yyu4);
    yyu4 = yyu4.redIAdd(yyu4);
    var nx = this.x.redMul(ee).redISub(yyu4);
    nx = nx.redIAdd(nx);
    nx = nx.redIAdd(nx);
    // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    // Z3 = (Z1 + E)^2 - ZZ - EE
    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mul = function mul(k, kbase) {
    k = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](k, kbase);
    return this.curve._wnafMul(this, k);
};
JPoint.prototype.eq = function eq(p) {
    if (p.type === 'affine') return this.eq(p.toJ());
    if (this === p) return true;
    // x1 * z2^2 == x2 * z1^2
    var z2 = this.z.redSqr();
    var pz2 = p.z.redSqr();
    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;
    // y1 * z2^3 == y2 * z1^3
    var z3 = z2.redMul(this.z);
    var pz3 = pz2.redMul(p.z);
    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint.prototype.eqXToP = function eqXToP(x) {
    var zs = this.z.redSqr();
    var rx = x.toRed(this.curve.red).redMul(zs);
    if (this.x.cmp(rx) === 0) return true;
    var xc = x.clone();
    var t = this.curve.redN.redMul(zs);
    for(;;){
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0) return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0) return true;
    }
};
JPoint.prototype.inspect = function inspect() {
    if (this.isInfinity()) return '<EC JPoint Infinity>';
    return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
};
JPoint.prototype.isInfinity = function isInfinity() {
    // XXX This code assumes that zero is always zero in red
    return this.z.cmpn(0) === 0;
};
var curve_1 = createCommonjsModule(function(module, exports) {
    'use strict';
    var curve = exports;
    curve.base = base;
    curve.short = short_1;
    curve.mont = null;
    curve.edwards = null;
});
var curves_1 = createCommonjsModule(function(module, exports) {
    'use strict';
    var curves = exports;
    var assert = utils_1$1.assert;
    function PresetCurve(options) {
        if (options.type === 'short') this.curve = new curve_1.short(options);
        else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);
        else this.curve = new curve_1.mont(options);
        this.g = this.curve.g;
        this.n = this.curve.n;
        this.hash = options.hash;
        assert(this.g.validate(), 'Invalid curve');
        assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
        Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            get: function() {
                var curve = new PresetCurve(options);
                Object.defineProperty(curves, name, {
                    configurable: true,
                    enumerable: true,
                    value: curve
                });
                return curve;
            }
        });
    }
    defineCurve('p192', {
        type: 'short',
        prime: 'p192',
        p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
        a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
        b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
        n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256,
        gRed: false,
        g: [
            '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
            '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
        ]
    });
    defineCurve('p224', {
        type: 'short',
        prime: 'p224',
        p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
        a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
        b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
        n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256,
        gRed: false,
        g: [
            'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
            'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
        ]
    });
    defineCurve('p256', {
        type: 'short',
        prime: null,
        p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
        a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
        b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
        n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256,
        gRed: false,
        g: [
            '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
            '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
        ]
    });
    defineCurve('p384', {
        type: 'short',
        prime: null,
        p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
        a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
        b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
        n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha384,
        gRed: false,
        g: [
            'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7',
            '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
        ]
    });
    defineCurve('p521', {
        type: 'short',
        prime: null,
        p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
        a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
        b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
        n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha512,
        gRed: false,
        g: [
            '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
            '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650'
        ]
    });
    defineCurve('curve25519', {
        type: 'mont',
        prime: 'p25519',
        p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
        a: '76d06',
        b: '1',
        n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256,
        gRed: false,
        g: [
            '9'
        ]
    });
    defineCurve('ed25519', {
        type: 'edwards',
        prime: 'p25519',
        p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
        a: '-1',
        c: '1',
        // -121665 * (121666^(-1)) (mod P)
        d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
        n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256,
        gRed: false,
        g: [
            '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
            // 4/5
            '6666666666666666666666666666666666666666666666666666666666666658'
        ]
    });
    var pre;
    try {
        pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/ null.crash();
    } catch (e) {
        pre = undefined;
    }
    defineCurve('secp256k1', {
        type: 'short',
        prime: 'k256',
        p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
        a: '0',
        b: '7',
        n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
        h: '1',
        hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256,
        // Precomputed endomorphism
        beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
        lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
        basis: [
            {
                a: '3086d221a7d46bcde86c90e49284eb15',
                b: '-e4437ed6010e88286f547fa90abfe4c3'
            },
            {
                a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
                b: '3086d221a7d46bcde86c90e49284eb15'
            }
        ],
        gRed: false,
        g: [
            '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
            '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
            pre
        ]
    });
});
'use strict';
function HmacDRBG(options) {
    if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
    this.hash = options.hash;
    this.predResist = !!options.predResist;
    this.outLen = this.hash.outSize;
    this.minEntropy = options.minEntropy || this.hash.hmacStrength;
    this._reseed = null;
    this.reseedInterval = null;
    this.K = null;
    this.V = null;
    var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');
    var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');
    var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');
    minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
    this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG;
HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
    var seed = entropy.concat(nonce).concat(pers);
    this.K = new Array(this.outLen / 8);
    this.V = new Array(this.outLen / 8);
    for(var i = 0; i < this.V.length; i++){
        this.K[i] = 0x00;
        this.V[i] = 0x01;
    }
    this._update(seed);
    this._reseed = 1;
    this.reseedInterval = 0x1000000000000; // 2^48
};
HmacDRBG.prototype._hmac = function hmac() {
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].hmac(this.hash, this.K);
};
HmacDRBG.prototype._update = function update(seed) {
    var kmac = this._hmac().update(this.V).update([
        0x00
    ]);
    if (seed) kmac = kmac.update(seed);
    this.K = kmac.digest();
    this.V = this._hmac().update(this.V).digest();
    if (!seed) return;
    this.K = this._hmac().update(this.V).update([
        0x01
    ]).update(seed).digest();
    this.V = this._hmac().update(this.V).digest();
};
HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
    // Optional entropy enc
    if (typeof entropyEnc !== 'string') {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
    }
    entropy = utils_1.toArray(entropy, entropyEnc);
    add = utils_1.toArray(add, addEnc);
    minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
    this._update(entropy.concat(add || []));
    this._reseed = 1;
};
HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
    if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');
    // Optional encoding
    if (typeof enc !== 'string') {
        addEnc = add;
        add = enc;
        enc = null;
    }
    // Optional additional data
    if (add) {
        add = utils_1.toArray(add, addEnc || 'hex');
        this._update(add);
    }
    var temp = [];
    while(temp.length < len){
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
    }
    var res = temp.slice(0, len);
    this._update(add);
    this._reseed++;
    return utils_1.encode(res, enc);
};
'use strict';
var assert$3 = utils_1$1.assert;
function KeyPair(ec, options) {
    this.ec = ec;
    this.priv = null;
    this.pub = null;
    // KeyPair(ec, { priv: ..., pub: ... })
    if (options.priv) this._importPrivate(options.priv, options.privEnc);
    if (options.pub) this._importPublic(options.pub, options.pubEnc);
}
var key = KeyPair;
KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
    if (pub instanceof KeyPair) return pub;
    return new KeyPair(ec, {
        pub: pub,
        pubEnc: enc
    });
};
KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
    if (priv instanceof KeyPair) return priv;
    return new KeyPair(ec, {
        priv: priv,
        privEnc: enc
    });
};
KeyPair.prototype.validate = function validate() {
    var pub = this.getPublic();
    if (pub.isInfinity()) return {
        result: false,
        reason: 'Invalid public key'
    };
    if (!pub.validate()) return {
        result: false,
        reason: 'Public key is not a point'
    };
    if (!pub.mul(this.ec.curve.n).isInfinity()) return {
        result: false,
        reason: 'Public key * N != O'
    };
    return {
        result: true,
        reason: null
    };
};
KeyPair.prototype.getPublic = function getPublic(compact, enc) {
    // compact is optional argument
    if (typeof compact === 'string') {
        enc = compact;
        compact = null;
    }
    if (!this.pub) this.pub = this.ec.g.mul(this.priv);
    if (!enc) return this.pub;
    return this.pub.encode(enc, compact);
};
KeyPair.prototype.getPrivate = function getPrivate(enc) {
    if (enc === 'hex') return this.priv.toString(16, 2);
    else return this.priv;
};
KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
    this.priv = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](key, enc || 16);
    // Ensure that the priv won't be bigger than n, otherwise we may fail
    // in fixed multiplication method
    this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair.prototype._importPublic = function _importPublic(key, enc) {
    if (key.x || key.y) {
        // Montgomery points only have an `x` coordinate.
        // Weierstrass/Edwards points on the other hand have both `x` and
        // `y` coordinates.
        if (this.ec.curve.type === 'mont') {
            assert$3(key.x, 'Need x coordinate');
        } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {
            assert$3(key.x && key.y, 'Need both x and y coordinate');
        }
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
    }
    this.pub = this.ec.curve.decodePoint(key, enc);
};
// ECDH
KeyPair.prototype.derive = function derive(pub) {
    if (!pub.validate()) {
        assert$3(pub.validate(), 'public point not validated');
    }
    return pub.mul(this.priv).getX();
};
// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
    return this.ec.sign(msg, this, enc, options);
};
KeyPair.prototype.verify = function verify(msg, signature) {
    return this.ec.verify(msg, signature, this);
};
KeyPair.prototype.inspect = function inspect() {
    return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};
'use strict';
var assert$4 = utils_1$1.assert;
function Signature(options, enc) {
    if (options instanceof Signature) return options;
    if (this._importDER(options, enc)) return;
    assert$4(options.r && options.s, 'Signature without r or s');
    this.r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](options.r, 16);
    this.s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](options.s, 16);
    if (options.recoveryParam === undefined) this.recoveryParam = null;
    else this.recoveryParam = options.recoveryParam;
}
var signature = Signature;
function Position() {
    this.place = 0;
}
function getLength(buf, p) {
    var initial = buf[p.place++];
    if (!(initial & 0x80)) {
        return initial;
    }
    var octetLen = initial & 0xf;
    // Indefinite length or overflow
    if (octetLen === 0 || octetLen > 4) {
        return false;
    }
    var val = 0;
    for(var i = 0, off = p.place; i < octetLen; i++, off++){
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
    }
    // Leading zeroes
    if (val <= 0x7f) {
        return false;
    }
    p.place = off;
    return val;
}
function rmPadding(buf) {
    var i = 0;
    var len = buf.length - 1;
    while(!buf[i] && !(buf[i + 1] & 0x80) && i < len){
        i++;
    }
    if (i === 0) {
        return buf;
    }
    return buf.slice(i);
}
Signature.prototype._importDER = function _importDER(data, enc) {
    data = utils_1$1.toArray(data, enc);
    var p = new Position();
    if (data[p.place++] !== 0x30) {
        return false;
    }
    var len = getLength(data, p);
    if (len === false) {
        return false;
    }
    if (len + p.place !== data.length) {
        return false;
    }
    if (data[p.place++] !== 0x02) {
        return false;
    }
    var rlen = getLength(data, p);
    if (rlen === false) {
        return false;
    }
    var r = data.slice(p.place, rlen + p.place);
    p.place += rlen;
    if (data[p.place++] !== 0x02) {
        return false;
    }
    var slen = getLength(data, p);
    if (slen === false) {
        return false;
    }
    if (data.length !== slen + p.place) {
        return false;
    }
    var s = data.slice(p.place, slen + p.place);
    if (r[0] === 0) {
        if (r[1] & 0x80) {
            r = r.slice(1);
        } else {
            // Leading zeroes
            return false;
        }
    }
    if (s[0] === 0) {
        if (s[1] & 0x80) {
            s = s.slice(1);
        } else {
            // Leading zeroes
            return false;
        }
    }
    this.r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](r);
    this.s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](s);
    this.recoveryParam = null;
    return true;
};
function constructLength(arr, len) {
    if (len < 0x80) {
        arr.push(len);
        return;
    }
    var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
    arr.push(octets | 0x80);
    while(--octets){
        arr.push(len >>> (octets << 3) & 0xff);
    }
    arr.push(len);
}
Signature.prototype.toDER = function toDER(enc) {
    var r = this.r.toArray();
    var s = this.s.toArray();
    // Pad values
    if (r[0] & 0x80) r = [
        0
    ].concat(r);
    // Pad values
    if (s[0] & 0x80) s = [
        0
    ].concat(s);
    r = rmPadding(r);
    s = rmPadding(s);
    while(!s[0] && !(s[1] & 0x80)){
        s = s.slice(1);
    }
    var arr = [
        0x02
    ];
    constructLength(arr, r.length);
    arr = arr.concat(r);
    arr.push(0x02);
    constructLength(arr, s.length);
    var backHalf = arr.concat(s);
    var res = [
        0x30
    ];
    constructLength(res, backHalf.length);
    res = res.concat(backHalf);
    return utils_1$1.encode(res, enc);
};
'use strict';
var rand = function() {
    throw new Error('unsupported');
};
var assert$5 = utils_1$1.assert;
function EC(options) {
    if (!(this instanceof EC)) return new EC(options);
    // Shortcut `elliptic.ec(curve-name)`
    if (typeof options === 'string') {
        assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);
        options = curves_1[options];
    }
    // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
    if (options instanceof curves_1.PresetCurve) options = {
        curve: options
    };
    this.curve = options.curve.curve;
    this.n = this.curve.n;
    this.nh = this.n.ushrn(1);
    this.g = this.curve.g;
    // Point on curve
    this.g = options.curve.g;
    this.g.precompute(options.curve.n.bitLength() + 1);
    // Hash for function for DRBG
    this.hash = options.hash || options.curve.hash;
}
var ec = EC;
EC.prototype.keyPair = function keyPair(options) {
    return new key(this, options);
};
EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
    return key.fromPrivate(this, priv, enc);
};
EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
    return key.fromPublic(this, pub, enc);
};
EC.prototype.genKeyPair = function genKeyPair(options) {
    if (!options) options = {};
    // Instantiate Hmac_DRBG
    var drbg = new hmacDrbg({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || 'utf8',
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || 'utf8',
        nonce: this.n.toArray()
    });
    var bytes = this.n.byteLength();
    var ns2 = this.n.sub(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](2));
    for(;;){
        var priv = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](drbg.generate(bytes));
        if (priv.cmp(ns2) > 0) continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
    }
};
EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
    var delta = msg.byteLength() * 8 - this.n.bitLength();
    if (delta > 0) msg = msg.ushrn(delta);
    if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);
    else return msg;
};
EC.prototype.sign = function sign(msg, key, enc, options) {
    if (typeof enc === 'object') {
        options = enc;
        enc = null;
    }
    if (!options) options = {};
    key = this.keyFromPrivate(key, enc);
    msg = this._truncateToN(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](msg, 16));
    // Zero-extend key to provide enough entropy
    var bytes = this.n.byteLength();
    var bkey = key.getPrivate().toArray('be', bytes);
    // Zero-extend nonce to have the same byte size as N
    var nonce = msg.toArray('be', bytes);
    // Instantiate Hmac_DRBG
    var drbg = new hmacDrbg({
        hash: this.hash,
        entropy: bkey,
        nonce: nonce,
        pers: options.pers,
        persEnc: options.persEnc || 'utf8'
    });
    // Number of bytes to generate
    var ns1 = this.n.sub(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](1));
    for(var iter = 0;; iter++){
        var k = options.k ? options.k(iter) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity()) continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0) continue;
        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0) continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
        // Use complement of `s`, if it is > `n / 2`
        if (options.canonical && s.cmp(this.nh) > 0) {
            s = this.n.sub(s);
            recoveryParam ^= 1;
        }
        return new signature({
            r: r,
            s: s,
            recoveryParam: recoveryParam
        });
    }
};
EC.prototype.verify = function verify(msg, signature$1, key, enc) {
    msg = this._truncateToN(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](msg, 16));
    key = this.keyFromPublic(key, enc);
    signature$1 = new signature(signature$1, 'hex');
    // Perform primitive values validation
    var r = signature$1.r;
    var s = signature$1.s;
    if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;
    // Validate signature
    var sinv = s.invm(this.n);
    var u1 = sinv.mul(msg).umod(this.n);
    var u2 = sinv.mul(r).umod(this.n);
    var p;
    if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity()) return false;
        return p.getX().umod(this.n).cmp(r) === 0;
    }
    // NOTE: Greg Maxwell's trick, inspired by:
    // https://git.io/vad3K
    p = this.g.jmulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    // Compare `p.x` of Jacobian point with `r`,
    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
    // inverse of `p.z^2`
    return p.eqXToP(r);
};
EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
    assert$5((3 & j) === j, 'The recovery param is more than two bits');
    signature$1 = new signature(signature$1, enc);
    var n = this.n;
    var e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"](msg);
    var r = signature$1.r;
    var s = signature$1.s;
    // A set LSB signifies that the y-coordinate is odd
    var isYOdd = j & 1;
    var isSecondKey = j >> 1;
    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');
    // 1.1. Let x = r + jn.
    if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
    else r = this.curve.pointFromX(r, isYOdd);
    var rInv = signature$1.r.invm(n);
    var s1 = n.sub(e).mul(rInv).umod(n);
    var s2 = s.mul(rInv).umod(n);
    // 1.6.1 Compute Q = r^-1 (sR -  eG)
    //               Q = r^-1 (sR + -eG)
    return this.g.mulAdd(s1, r, s2);
};
EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
    signature$1 = new signature(signature$1, enc);
    if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;
    for(var i = 0; i < 4; i++){
        var Qprime;
        try {
            Qprime = this.recoverPubKey(e, signature$1, i);
        } catch (e) {
            continue;
        }
        if (Qprime.eq(Q)) return i;
    }
    throw new Error('Unable to find valid recovery factor');
};
var elliptic_1 = createCommonjsModule(function(module, exports) {
    'use strict';
    var elliptic = exports;
    elliptic.version = /*RicMoo:ethers*/ ({
        version: "6.5.4"
    }).version;
    elliptic.utils = utils_1$1;
    elliptic.rand = function() {
        throw new Error('unsupported');
    };
    elliptic.curve = curve_1;
    elliptic.curves = curves_1;
    // Protocols
    elliptic.ec = ec;
    elliptic.eddsa = null;
});
var EC$1 = elliptic_1.ec;
;
 //# sourceMappingURL=elliptic.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SigningKey": (()=>SigningKey),
    "computePublicKey": (()=>computePublicKey),
    "recoverPublicKey": (()=>recoverPublicKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$elliptic$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
let _curve = null;
function getCurve() {
    if (!_curve) {
        _curve = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$elliptic$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["EC"]("secp256k1");
    }
    return _curve;
}
class SigningKey {
    constructor(privateKey){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "curve", "secp256k1");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "privateKey", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(privateKey));
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataLength"])(this.privateKey) !== 32) {
            logger.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
        }
        const keyPair = getCurve().keyFromPrivate((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(this.privateKey));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_isSigningKey", true);
    }
    _addPoint(other) {
        const p0 = getCurve().keyFromPublic((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(this.publicKey));
        const p1 = getCurve().keyFromPublic((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(other));
        return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
    signDigest(digest) {
        const keyPair = getCurve().keyFromPrivate((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(this.privateKey));
        const digestBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(digest);
        if (digestBytes.length !== 32) {
            logger.throwArgumentError("bad digest length", "digest", digest);
        }
        const signature = keyPair.sign(digestBytes, {
            canonical: true
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitSignature"])({
            recoveryParam: signature.recoveryParam,
            r: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])("0x" + signature.r.toString(16), 32),
            s: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])("0x" + signature.s.toString(16), 32)
        });
    }
    computeSharedSecret(otherKey) {
        const keyPair = getCurve().keyFromPrivate((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(this.privateKey));
        const otherKeyPair = getCurve().keyFromPublic((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(computePublicKey(otherKey)));
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
    static isSigningKey(value) {
        return !!(value && value._isSigningKey);
    }
}
function recoverPublicKey(digest, signature) {
    const sig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitSignature"])(signature);
    const rs = {
        r: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(sig.r),
        s: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(sig.s)
    };
    return "0x" + getCurve().recoverPubKey((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(digest), rs, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key, compressed) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(key);
    if (bytes.length === 32) {
        const signingKey = new SigningKey(bytes);
        if (compressed) {
            return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
        }
        return signingKey.publicKey;
    } else if (bytes.length === 33) {
        if (compressed) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes);
        }
        return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
    } else if (bytes.length === 65) {
        if (!compressed) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes);
        }
        return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
    }
    return logger.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = assert;
function assert(val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
}
assert.equal = function assertEqual(l, r, msg) {
    if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};
}}),
"[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
if (typeof Object.create === 'function') {
    // implementation from standard node.js 'util' module
    module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                    value: ctor,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
        }
    };
} else {
    // old school shim for old browsers
    module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {};
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
        }
    };
}
}}),
"[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
try {
    var util = __turbopack_require__("[externals]/util [external] (util, cjs)");
    /* istanbul ignore next */ if (typeof util.inherits !== 'function') throw '';
    module.exports = util.inherits;
} catch (e) {
    /* istanbul ignore next */ module.exports = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js [app-rsc] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var assert = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)");
var inherits = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-rsc] (ecmascript)");
exports.inherits = inherits;
function isSurrogatePair(msg, i) {
    if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
        return false;
    }
    if (i < 0 || i + 1 >= msg.length) {
        return false;
    }
    return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}
function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg === 'string') {
        if (!enc) {
            // Inspired by stringToUtf8ByteArray() in closure-library by Google
            // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
            // Apache License 2.0
            // https://github.com/google/closure-library/blob/master/LICENSE
            var p = 0;
            for(var i = 0; i < msg.length; i++){
                var c = msg.charCodeAt(i);
                if (c < 128) {
                    res[p++] = c;
                } else if (c < 2048) {
                    res[p++] = c >> 6 | 192;
                    res[p++] = c & 63 | 128;
                } else if (isSurrogatePair(msg, i)) {
                    c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
                    res[p++] = c >> 18 | 240;
                    res[p++] = c >> 12 & 63 | 128;
                    res[p++] = c >> 6 & 63 | 128;
                    res[p++] = c & 63 | 128;
                } else {
                    res[p++] = c >> 12 | 224;
                    res[p++] = c >> 6 & 63 | 128;
                    res[p++] = c & 63 | 128;
                }
            }
        } else if (enc === 'hex') {
            msg = msg.replace(/[^a-z0-9]+/ig, '');
            if (msg.length % 2 !== 0) msg = '0' + msg;
            for(i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
    } else {
        for(i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
    }
    return res;
}
exports.toArray = toArray;
function toHex(msg) {
    var res = '';
    for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));
    return res;
}
exports.toHex = toHex;
function htonl(w) {
    var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;
    return res >>> 0;
}
exports.htonl = htonl;
function toHex32(msg, endian) {
    var res = '';
    for(var i = 0; i < msg.length; i++){
        var w = msg[i];
        if (endian === 'little') w = htonl(w);
        res += zero8(w.toString(16));
    }
    return res;
}
exports.toHex32 = toHex32;
function zero2(word) {
    if (word.length === 1) return '0' + word;
    else return word;
}
exports.zero2 = zero2;
function zero8(word) {
    if (word.length === 7) return '0' + word;
    else if (word.length === 6) return '00' + word;
    else if (word.length === 5) return '000' + word;
    else if (word.length === 4) return '0000' + word;
    else if (word.length === 3) return '00000' + word;
    else if (word.length === 2) return '000000' + word;
    else if (word.length === 1) return '0000000' + word;
    else return word;
}
exports.zero8 = zero8;
function join32(msg, start, end, endian) {
    var len = end - start;
    assert(len % 4 === 0);
    var res = new Array(len / 4);
    for(var i = 0, k = start; i < res.length; i++, k += 4){
        var w;
        if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
        else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
    }
    return res;
}
exports.join32 = join32;
function split32(msg, endian) {
    var res = new Array(msg.length * 4);
    for(var i = 0, k = 0; i < msg.length; i++, k += 4){
        var m = msg[i];
        if (endian === 'big') {
            res[k] = m >>> 24;
            res[k + 1] = m >>> 16 & 0xff;
            res[k + 2] = m >>> 8 & 0xff;
            res[k + 3] = m & 0xff;
        } else {
            res[k + 3] = m >>> 24;
            res[k + 2] = m >>> 16 & 0xff;
            res[k + 1] = m >>> 8 & 0xff;
            res[k] = m & 0xff;
        }
    }
    return res;
}
exports.split32 = split32;
function rotr32(w, b) {
    return w >>> b | w << 32 - b;
}
exports.rotr32 = rotr32;
function rotl32(w, b) {
    return w << b | w >>> 32 - b;
}
exports.rotl32 = rotl32;
function sum32(a, b) {
    return a + b >>> 0;
}
exports.sum32 = sum32;
function sum32_3(a, b, c) {
    return a + b + c >>> 0;
}
exports.sum32_3 = sum32_3;
function sum32_4(a, b, c, d) {
    return a + b + c + d >>> 0;
}
exports.sum32_4 = sum32_4;
function sum32_5(a, b, c, d, e) {
    return a + b + c + d + e >>> 0;
}
exports.sum32_5 = sum32_5;
function sum64(buf, pos, ah, al) {
    var bh = buf[pos];
    var bl = buf[pos + 1];
    var lo = al + bl >>> 0;
    var hi = (lo < al ? 1 : 0) + ah + bh;
    buf[pos] = hi >>> 0;
    buf[pos + 1] = lo;
}
exports.sum64 = sum64;
function sum64_hi(ah, al, bh, bl) {
    var lo = al + bl >>> 0;
    var hi = (lo < al ? 1 : 0) + ah + bh;
    return hi >>> 0;
}
exports.sum64_hi = sum64_hi;
function sum64_lo(ah, al, bh, bl) {
    var lo = al + bl;
    return lo >>> 0;
}
exports.sum64_lo = sum64_lo;
function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
    var carry = 0;
    var lo = al;
    lo = lo + bl >>> 0;
    carry += lo < al ? 1 : 0;
    lo = lo + cl >>> 0;
    carry += lo < cl ? 1 : 0;
    lo = lo + dl >>> 0;
    carry += lo < dl ? 1 : 0;
    var hi = ah + bh + ch + dh + carry;
    return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;
function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
    var lo = al + bl + cl + dl;
    return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;
function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
    var carry = 0;
    var lo = al;
    lo = lo + bl >>> 0;
    carry += lo < al ? 1 : 0;
    lo = lo + cl >>> 0;
    carry += lo < cl ? 1 : 0;
    lo = lo + dl >>> 0;
    carry += lo < dl ? 1 : 0;
    lo = lo + el >>> 0;
    carry += lo < el ? 1 : 0;
    var hi = ah + bh + ch + dh + eh + carry;
    return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;
function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
    var lo = al + bl + cl + dl + el;
    return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;
function rotr64_hi(ah, al, num) {
    var r = al << 32 - num | ah >>> num;
    return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;
function rotr64_lo(ah, al, num) {
    var r = ah << 32 - num | al >>> num;
    return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;
function shr64_hi(ah, al, num) {
    return ah >>> num;
}
exports.shr64_hi = shr64_hi;
function shr64_lo(ah, al, num) {
    var r = ah << 32 - num | al >>> num;
    return r >>> 0;
}
exports.shr64_lo = shr64_lo;
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var assert = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)");
function BlockHash() {
    this.pending = null;
    this.pendingTotal = 0;
    this.blockSize = this.constructor.blockSize;
    this.outSize = this.constructor.outSize;
    this.hmacStrength = this.constructor.hmacStrength;
    this.padLength = this.constructor.padLength / 8;
    this.endian = 'big';
    this._delta8 = this.blockSize / 8;
    this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;
BlockHash.prototype.update = function update(msg, enc) {
    // Convert message to array, pad it, and join into 32bit blocks
    msg = utils.toArray(msg, enc);
    if (!this.pending) this.pending = msg;
    else this.pending = this.pending.concat(msg);
    this.pendingTotal += msg.length;
    // Enough data, try updating
    if (this.pending.length >= this._delta8) {
        msg = this.pending;
        // Process pending data in blocks
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0) this.pending = null;
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for(var i = 0; i < msg.length; i += this._delta32)this._update(msg, i, i + this._delta32);
    }
    return this;
};
BlockHash.prototype.digest = function digest(enc) {
    this.update(this._pad());
    assert(this.pending === null);
    return this._digest(enc);
};
BlockHash.prototype._pad = function pad() {
    var len = this.pendingTotal;
    var bytes = this._delta8;
    var k = bytes - (len + this.padLength) % bytes;
    var res = new Array(k + this.padLength);
    res[0] = 0x80;
    for(var i = 1; i < k; i++)res[i] = 0;
    // Append length
    len <<= 3;
    if (this.endian === 'big') {
        for(var t = 8; t < this.padLength; t++)res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 0xff;
        res[i++] = len >>> 16 & 0xff;
        res[i++] = len >>> 8 & 0xff;
        res[i++] = len & 0xff;
    } else {
        res[i++] = len & 0xff;
        res[i++] = len >>> 8 & 0xff;
        res[i++] = len >>> 16 & 0xff;
        res[i++] = len >>> 24 & 0xff;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for(t = 8; t < this.padLength; t++)res[i++] = 0;
    }
    return res;
};
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/common.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var rotr32 = utils.rotr32;
function ft_1(s, x, y, z) {
    if (s === 0) return ch32(x, y, z);
    if (s === 1 || s === 3) return p32(x, y, z);
    if (s === 2) return maj32(x, y, z);
}
exports.ft_1 = ft_1;
function ch32(x, y, z) {
    return x & y ^ ~x & z;
}
exports.ch32 = ch32;
function maj32(x, y, z) {
    return x & y ^ x & z ^ y & z;
}
exports.maj32 = maj32;
function p32(x, y, z) {
    return x ^ y ^ z;
}
exports.p32 = p32;
function s0_256(x) {
    return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;
function s1_256(x) {
    return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;
function g0_256(x) {
    return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
}
exports.g0_256 = g0_256;
function g1_256(x) {
    return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
}
exports.g1_256 = g1_256;
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/1.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var common = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js [app-rsc] (ecmascript)");
var shaCommon = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/common.js [app-rsc] (ecmascript)");
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;
var sha1_K = [
    0x5A827999,
    0x6ED9EBA1,
    0x8F1BBCDC,
    0xCA62C1D6
];
function SHA1() {
    if (!(this instanceof SHA1)) return new SHA1();
    BlockHash.call(this);
    this.h = [
        0x67452301,
        0xefcdab89,
        0x98badcfe,
        0x10325476,
        0xc3d2e1f0
    ];
    this.W = new Array(80);
}
utils.inherits(SHA1, BlockHash);
module.exports = SHA1;
SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;
SHA1.prototype._update = function _update(msg, start) {
    var W = this.W;
    for(var i = 0; i < 16; i++)W[i] = msg[start + i];
    for(; i < W.length; i++)W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
    var a = this.h[0];
    var b = this.h[1];
    var c = this.h[2];
    var d = this.h[3];
    var e = this.h[4];
    for(i = 0; i < W.length; i++){
        var s = ~~(i / 20);
        var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32(b, 30);
        b = a;
        a = t;
    }
    this.h[0] = sum32(this.h[0], a);
    this.h[1] = sum32(this.h[1], b);
    this.h[2] = sum32(this.h[2], c);
    this.h[3] = sum32(this.h[3], d);
    this.h[4] = sum32(this.h[4], e);
};
SHA1.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'big');
    else return utils.split32(this.h, 'big');
};
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/256.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var common = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js [app-rsc] (ecmascript)");
var shaCommon = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/common.js [app-rsc] (ecmascript)");
var assert = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)");
var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;
var BlockHash = common.BlockHash;
var sha256_K = [
    0x428a2f98,
    0x71374491,
    0xb5c0fbcf,
    0xe9b5dba5,
    0x3956c25b,
    0x59f111f1,
    0x923f82a4,
    0xab1c5ed5,
    0xd807aa98,
    0x12835b01,
    0x243185be,
    0x550c7dc3,
    0x72be5d74,
    0x80deb1fe,
    0x9bdc06a7,
    0xc19bf174,
    0xe49b69c1,
    0xefbe4786,
    0x0fc19dc6,
    0x240ca1cc,
    0x2de92c6f,
    0x4a7484aa,
    0x5cb0a9dc,
    0x76f988da,
    0x983e5152,
    0xa831c66d,
    0xb00327c8,
    0xbf597fc7,
    0xc6e00bf3,
    0xd5a79147,
    0x06ca6351,
    0x14292967,
    0x27b70a85,
    0x2e1b2138,
    0x4d2c6dfc,
    0x53380d13,
    0x650a7354,
    0x766a0abb,
    0x81c2c92e,
    0x92722c85,
    0xa2bfe8a1,
    0xa81a664b,
    0xc24b8b70,
    0xc76c51a3,
    0xd192e819,
    0xd6990624,
    0xf40e3585,
    0x106aa070,
    0x19a4c116,
    0x1e376c08,
    0x2748774c,
    0x34b0bcb5,
    0x391c0cb3,
    0x4ed8aa4a,
    0x5b9cca4f,
    0x682e6ff3,
    0x748f82ee,
    0x78a5636f,
    0x84c87814,
    0x8cc70208,
    0x90befffa,
    0xa4506ceb,
    0xbef9a3f7,
    0xc67178f2
];
function SHA256() {
    if (!(this instanceof SHA256)) return new SHA256();
    BlockHash.call(this);
    this.h = [
        0x6a09e667,
        0xbb67ae85,
        0x3c6ef372,
        0xa54ff53a,
        0x510e527f,
        0x9b05688c,
        0x1f83d9ab,
        0x5be0cd19
    ];
    this.k = sha256_K;
    this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;
SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;
SHA256.prototype._update = function _update(msg, start) {
    var W = this.W;
    for(var i = 0; i < 16; i++)W[i] = msg[start + i];
    for(; i < W.length; i++)W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
    var a = this.h[0];
    var b = this.h[1];
    var c = this.h[2];
    var d = this.h[3];
    var e = this.h[4];
    var f = this.h[5];
    var g = this.h[6];
    var h = this.h[7];
    assert(this.k.length === W.length);
    for(i = 0; i < W.length; i++){
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32(T1, T2);
    }
    this.h[0] = sum32(this.h[0], a);
    this.h[1] = sum32(this.h[1], b);
    this.h[2] = sum32(this.h[2], c);
    this.h[3] = sum32(this.h[3], d);
    this.h[4] = sum32(this.h[4], e);
    this.h[5] = sum32(this.h[5], f);
    this.h[6] = sum32(this.h[6], g);
    this.h[7] = sum32(this.h[7], h);
};
SHA256.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'big');
    else return utils.split32(this.h, 'big');
};
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/224.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var SHA256 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/256.js [app-rsc] (ecmascript)");
function SHA224() {
    if (!(this instanceof SHA224)) return new SHA224();
    SHA256.call(this);
    this.h = [
        0xc1059ed8,
        0x367cd507,
        0x3070dd17,
        0xf70e5939,
        0xffc00b31,
        0x68581511,
        0x64f98fa7,
        0xbefa4fa4
    ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;
SHA224.prototype._digest = function digest(enc) {
    // Just truncate output
    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');
    else return utils.split32(this.h.slice(0, 7), 'big');
};
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/512.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var common = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js [app-rsc] (ecmascript)");
var assert = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)");
var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;
var BlockHash = common.BlockHash;
var sha512_K = [
    0x428a2f98,
    0xd728ae22,
    0x71374491,
    0x23ef65cd,
    0xb5c0fbcf,
    0xec4d3b2f,
    0xe9b5dba5,
    0x8189dbbc,
    0x3956c25b,
    0xf348b538,
    0x59f111f1,
    0xb605d019,
    0x923f82a4,
    0xaf194f9b,
    0xab1c5ed5,
    0xda6d8118,
    0xd807aa98,
    0xa3030242,
    0x12835b01,
    0x45706fbe,
    0x243185be,
    0x4ee4b28c,
    0x550c7dc3,
    0xd5ffb4e2,
    0x72be5d74,
    0xf27b896f,
    0x80deb1fe,
    0x3b1696b1,
    0x9bdc06a7,
    0x25c71235,
    0xc19bf174,
    0xcf692694,
    0xe49b69c1,
    0x9ef14ad2,
    0xefbe4786,
    0x384f25e3,
    0x0fc19dc6,
    0x8b8cd5b5,
    0x240ca1cc,
    0x77ac9c65,
    0x2de92c6f,
    0x592b0275,
    0x4a7484aa,
    0x6ea6e483,
    0x5cb0a9dc,
    0xbd41fbd4,
    0x76f988da,
    0x831153b5,
    0x983e5152,
    0xee66dfab,
    0xa831c66d,
    0x2db43210,
    0xb00327c8,
    0x98fb213f,
    0xbf597fc7,
    0xbeef0ee4,
    0xc6e00bf3,
    0x3da88fc2,
    0xd5a79147,
    0x930aa725,
    0x06ca6351,
    0xe003826f,
    0x14292967,
    0x0a0e6e70,
    0x27b70a85,
    0x46d22ffc,
    0x2e1b2138,
    0x5c26c926,
    0x4d2c6dfc,
    0x5ac42aed,
    0x53380d13,
    0x9d95b3df,
    0x650a7354,
    0x8baf63de,
    0x766a0abb,
    0x3c77b2a8,
    0x81c2c92e,
    0x47edaee6,
    0x92722c85,
    0x1482353b,
    0xa2bfe8a1,
    0x4cf10364,
    0xa81a664b,
    0xbc423001,
    0xc24b8b70,
    0xd0f89791,
    0xc76c51a3,
    0x0654be30,
    0xd192e819,
    0xd6ef5218,
    0xd6990624,
    0x5565a910,
    0xf40e3585,
    0x5771202a,
    0x106aa070,
    0x32bbd1b8,
    0x19a4c116,
    0xb8d2d0c8,
    0x1e376c08,
    0x5141ab53,
    0x2748774c,
    0xdf8eeb99,
    0x34b0bcb5,
    0xe19b48a8,
    0x391c0cb3,
    0xc5c95a63,
    0x4ed8aa4a,
    0xe3418acb,
    0x5b9cca4f,
    0x7763e373,
    0x682e6ff3,
    0xd6b2b8a3,
    0x748f82ee,
    0x5defb2fc,
    0x78a5636f,
    0x43172f60,
    0x84c87814,
    0xa1f0ab72,
    0x8cc70208,
    0x1a6439ec,
    0x90befffa,
    0x23631e28,
    0xa4506ceb,
    0xde82bde9,
    0xbef9a3f7,
    0xb2c67915,
    0xc67178f2,
    0xe372532b,
    0xca273ece,
    0xea26619c,
    0xd186b8c7,
    0x21c0c207,
    0xeada7dd6,
    0xcde0eb1e,
    0xf57d4f7f,
    0xee6ed178,
    0x06f067aa,
    0x72176fba,
    0x0a637dc5,
    0xa2c898a6,
    0x113f9804,
    0xbef90dae,
    0x1b710b35,
    0x131c471b,
    0x28db77f5,
    0x23047d84,
    0x32caab7b,
    0x40c72493,
    0x3c9ebe0a,
    0x15c9bebc,
    0x431d67c4,
    0x9c100d4c,
    0x4cc5d4be,
    0xcb3e42b6,
    0x597f299c,
    0xfc657e2a,
    0x5fcb6fab,
    0x3ad6faec,
    0x6c44198c,
    0x4a475817
];
function SHA512() {
    if (!(this instanceof SHA512)) return new SHA512();
    BlockHash.call(this);
    this.h = [
        0x6a09e667,
        0xf3bcc908,
        0xbb67ae85,
        0x84caa73b,
        0x3c6ef372,
        0xfe94f82b,
        0xa54ff53a,
        0x5f1d36f1,
        0x510e527f,
        0xade682d1,
        0x9b05688c,
        0x2b3e6c1f,
        0x1f83d9ab,
        0xfb41bd6b,
        0x5be0cd19,
        0x137e2179
    ];
    this.k = sha512_K;
    this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;
SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;
SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
    var W = this.W;
    // 32 x 32bit words
    for(var i = 0; i < 32; i++)W[i] = msg[start + i];
    for(; i < W.length; i += 2){
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14]; // i - 7
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32]; // i - 16
        var c3_lo = W[i - 31];
        W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
        W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
    }
};
SHA512.prototype._update = function _update(msg, start) {
    this._prepareBlock(msg, start);
    var W = this.W;
    var ah = this.h[0];
    var al = this.h[1];
    var bh = this.h[2];
    var bl = this.h[3];
    var ch = this.h[4];
    var cl = this.h[5];
    var dh = this.h[6];
    var dl = this.h[7];
    var eh = this.h[8];
    var el = this.h[9];
    var fh = this.h[10];
    var fl = this.h[11];
    var gh = this.h[12];
    var gl = this.h[13];
    var hh = this.h[14];
    var hl = this.h[15];
    assert(this.k.length === W.length);
    for(var i = 0; i < W.length; i += 2){
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
    }
    sum64(this.h, 0, ah, al);
    sum64(this.h, 2, bh, bl);
    sum64(this.h, 4, ch, cl);
    sum64(this.h, 6, dh, dl);
    sum64(this.h, 8, eh, el);
    sum64(this.h, 10, fh, fl);
    sum64(this.h, 12, gh, gl);
    sum64(this.h, 14, hh, hl);
};
SHA512.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'big');
    else return utils.split32(this.h, 'big');
};
function ch64_hi(xh, xl, yh, yl, zh) {
    var r = xh & yh ^ ~xh & zh;
    if (r < 0) r += 0x100000000;
    return r;
}
function ch64_lo(xh, xl, yh, yl, zh, zl) {
    var r = xl & yl ^ ~xl & zl;
    if (r < 0) r += 0x100000000;
    return r;
}
function maj64_hi(xh, xl, yh, yl, zh) {
    var r = xh & yh ^ xh & zh ^ yh & zh;
    if (r < 0) r += 0x100000000;
    return r;
}
function maj64_lo(xh, xl, yh, yl, zh, zl) {
    var r = xl & yl ^ xl & zl ^ yl & zl;
    if (r < 0) r += 0x100000000;
    return r;
}
function s0_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 28);
    var c1_hi = rotr64_hi(xl, xh, 2); // 34
    var c2_hi = rotr64_hi(xl, xh, 7); // 39
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function s0_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 28);
    var c1_lo = rotr64_lo(xl, xh, 2); // 34
    var c2_lo = rotr64_lo(xl, xh, 7); // 39
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
function s1_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 14);
    var c1_hi = rotr64_hi(xh, xl, 18);
    var c2_hi = rotr64_hi(xl, xh, 9); // 41
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function s1_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 14);
    var c1_lo = rotr64_lo(xh, xl, 18);
    var c2_lo = rotr64_lo(xl, xh, 9); // 41
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
function g0_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 1);
    var c1_hi = rotr64_hi(xh, xl, 8);
    var c2_hi = shr64_hi(xh, xl, 7);
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function g0_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 1);
    var c1_lo = rotr64_lo(xh, xl, 8);
    var c2_lo = shr64_lo(xh, xl, 7);
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
function g1_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 19);
    var c1_hi = rotr64_hi(xl, xh, 29); // 61
    var c2_hi = shr64_hi(xh, xl, 6);
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function g1_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 19);
    var c1_lo = rotr64_lo(xl, xh, 29); // 61
    var c2_lo = shr64_lo(xh, xl, 6);
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/384.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var SHA512 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/512.js [app-rsc] (ecmascript)");
function SHA384() {
    if (!(this instanceof SHA384)) return new SHA384();
    SHA512.call(this);
    this.h = [
        0xcbbb9d5d,
        0xc1059ed8,
        0x629a292a,
        0x367cd507,
        0x9159015a,
        0x3070dd17,
        0x152fecd8,
        0xf70e5939,
        0x67332667,
        0xffc00b31,
        0x8eb44a87,
        0x68581511,
        0xdb0c2e0d,
        0x64f98fa7,
        0x47b5481d,
        0xbefa4fa4
    ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;
SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;
SHA384.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');
    else return utils.split32(this.h.slice(0, 12), 'big');
};
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
exports.sha1 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/1.js [app-rsc] (ecmascript)");
exports.sha224 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/224.js [app-rsc] (ecmascript)");
exports.sha256 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/256.js [app-rsc] (ecmascript)");
exports.sha384 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/384.js [app-rsc] (ecmascript)");
exports.sha512 = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/512.js [app-rsc] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/ripemd.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var common = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js [app-rsc] (ecmascript)");
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;
function RIPEMD160() {
    if (!(this instanceof RIPEMD160)) return new RIPEMD160();
    BlockHash.call(this);
    this.h = [
        0x67452301,
        0xefcdab89,
        0x98badcfe,
        0x10325476,
        0xc3d2e1f0
    ];
    this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;
RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;
RIPEMD160.prototype._update = function update(msg, start) {
    var A = this.h[0];
    var B = this.h[1];
    var C = this.h[2];
    var D = this.h[3];
    var E = this.h[4];
    var Ah = A;
    var Bh = B;
    var Ch = C;
    var Dh = D;
    var Eh = E;
    for(var j = 0; j < 80; j++){
        var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
    }
    T = sum32_3(this.h[1], C, Dh);
    this.h[1] = sum32_3(this.h[2], D, Eh);
    this.h[2] = sum32_3(this.h[3], E, Ah);
    this.h[3] = sum32_3(this.h[4], A, Bh);
    this.h[4] = sum32_3(this.h[0], B, Ch);
    this.h[0] = T;
};
RIPEMD160.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'little');
    else return utils.split32(this.h, 'little');
};
function f(j, x, y, z) {
    if (j <= 15) return x ^ y ^ z;
    else if (j <= 31) return x & y | ~x & z;
    else if (j <= 47) return (x | ~y) ^ z;
    else if (j <= 63) return x & z | y & ~z;
    else return x ^ (y | ~z);
}
function K(j) {
    if (j <= 15) return 0x00000000;
    else if (j <= 31) return 0x5a827999;
    else if (j <= 47) return 0x6ed9eba1;
    else if (j <= 63) return 0x8f1bbcdc;
    else return 0xa953fd4e;
}
function Kh(j) {
    if (j <= 15) return 0x50a28be6;
    else if (j <= 31) return 0x5c4dd124;
    else if (j <= 47) return 0x6d703ef3;
    else if (j <= 63) return 0x7a6d76e9;
    else return 0x00000000;
}
var r = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    7,
    4,
    13,
    1,
    10,
    6,
    15,
    3,
    12,
    0,
    9,
    5,
    2,
    14,
    11,
    8,
    3,
    10,
    14,
    4,
    9,
    15,
    8,
    1,
    2,
    7,
    0,
    6,
    13,
    11,
    5,
    12,
    1,
    9,
    11,
    10,
    0,
    8,
    12,
    4,
    13,
    3,
    7,
    15,
    14,
    5,
    6,
    2,
    4,
    0,
    5,
    9,
    7,
    12,
    2,
    10,
    14,
    1,
    3,
    8,
    11,
    6,
    15,
    13
];
var rh = [
    5,
    14,
    7,
    0,
    9,
    2,
    11,
    4,
    13,
    6,
    15,
    8,
    1,
    10,
    3,
    12,
    6,
    11,
    3,
    7,
    0,
    13,
    5,
    10,
    14,
    15,
    8,
    12,
    4,
    9,
    1,
    2,
    15,
    5,
    1,
    3,
    7,
    14,
    6,
    9,
    11,
    8,
    12,
    2,
    10,
    0,
    4,
    13,
    8,
    6,
    4,
    1,
    3,
    11,
    15,
    0,
    5,
    12,
    2,
    13,
    9,
    7,
    10,
    14,
    12,
    15,
    10,
    4,
    1,
    5,
    8,
    7,
    6,
    2,
    13,
    14,
    0,
    3,
    9,
    11
];
var s = [
    11,
    14,
    15,
    12,
    5,
    8,
    7,
    9,
    11,
    13,
    14,
    15,
    6,
    7,
    9,
    8,
    7,
    6,
    8,
    13,
    11,
    9,
    7,
    15,
    7,
    12,
    15,
    9,
    11,
    7,
    13,
    12,
    11,
    13,
    6,
    7,
    14,
    9,
    13,
    15,
    14,
    8,
    13,
    6,
    5,
    12,
    7,
    5,
    11,
    12,
    14,
    15,
    14,
    15,
    9,
    8,
    9,
    14,
    5,
    6,
    8,
    6,
    5,
    12,
    9,
    15,
    5,
    11,
    6,
    8,
    13,
    12,
    5,
    12,
    13,
    14,
    11,
    8,
    5,
    6
];
var sh = [
    8,
    9,
    9,
    11,
    13,
    15,
    15,
    5,
    7,
    7,
    8,
    11,
    14,
    14,
    12,
    6,
    9,
    13,
    15,
    7,
    12,
    8,
    9,
    11,
    7,
    7,
    12,
    7,
    6,
    15,
    13,
    11,
    9,
    7,
    15,
    11,
    8,
    6,
    6,
    14,
    12,
    13,
    5,
    14,
    13,
    13,
    7,
    5,
    15,
    5,
    8,
    11,
    14,
    14,
    6,
    14,
    6,
    9,
    12,
    9,
    12,
    5,
    15,
    8,
    8,
    5,
    12,
    9,
    12,
    5,
    14,
    6,
    8,
    13,
    6,
    5,
    15,
    13,
    11,
    11
];
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/hmac.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
var assert = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)");
function Hmac(hash, key, enc) {
    if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
    this.Hash = hash;
    this.blockSize = hash.blockSize / 8;
    this.outSize = hash.outSize / 8;
    this.inner = null;
    this.outer = null;
    this._init(utils.toArray(key, enc));
}
module.exports = Hmac;
Hmac.prototype._init = function init(key) {
    // Shorten key, if needed
    if (key.length > this.blockSize) key = new this.Hash().update(key).digest();
    assert(key.length <= this.blockSize);
    // Add padding to key
    for(var i = key.length; i < this.blockSize; i++)key.push(0);
    for(i = 0; i < key.length; i++)key[i] ^= 0x36;
    this.inner = new this.Hash().update(key);
    // 0x36 ^ 0x5c = 0x6a
    for(i = 0; i < key.length; i++)key[i] ^= 0x6a;
    this.outer = new this.Hash().update(key);
};
Hmac.prototype.update = function update(msg, enc) {
    this.inner.update(msg, enc);
    return this;
};
Hmac.prototype.digest = function digest(enc) {
    this.outer.update(this.inner.digest());
    return this.outer.digest(enc);
};
}}),
"[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var hash = exports;
hash.utils = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js [app-rsc] (ecmascript)");
hash.common = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js [app-rsc] (ecmascript)");
hash.sha = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha.js [app-rsc] (ecmascript)");
hash.ripemd = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/ripemd.js [app-rsc] (ecmascript)");
hash.hmac = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/hmac.js [app-rsc] (ecmascript)");
// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;
}}),
"[project]/node_modules/.pnpm/@ethersproject+wallet@5.7.0/node_modules/@ethersproject/wallet/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "wallet/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+wallet@5.7.0/node_modules/@ethersproject/wallet/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Wallet": (()=>Wallet),
    "verifyMessage": (()=>verifyMessage),
    "verifyTypedData": (()=>verifyTypedData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wallet$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wallet$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+wallet@5.7.0/node_modules/@ethersproject/wallet/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$provider$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$provider$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$message$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/message.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__TypedDataEncoder__as__$5f$TypedDataEncoder$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/typed-data.js [app-rsc] (ecmascript) <export TypedDataEncoder as _TypedDataEncoder>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__encrypt__as__encryptKeystore$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js [app-rsc] (ecmascript) <export encrypt as encryptKeystore>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/random.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wallet$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wallet$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
function isAccount(value) {
    return value != null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isHexString"])(value.privateKey, 32) && value.address != null;
}
function hasMnemonic(value) {
    const mnemonic = value.mnemonic;
    return mnemonic && mnemonic.phrase;
}
class Wallet extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$signer$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$signer$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Signer"] {
    constructor(privateKey, provider){
        super();
        if (isAccount(privateKey)) {
            const signingKey = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SigningKey"](privateKey.privateKey);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_signingKey", ()=>signingKey);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeAddress"])(this.publicKey));
            if (this.address !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(privateKey.address)) {
                logger.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
            }
            if (hasMnemonic(privateKey)) {
                const srcMnemonic = privateKey.mnemonic;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_mnemonic", ()=>({
                        phrase: srcMnemonic.phrase,
                        path: srcMnemonic.path || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultPath"],
                        locale: srcMnemonic.locale || "en"
                    }));
                const mnemonic = this.mnemonic;
                const node = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["HDNode"].fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeAddress"])(node.privateKey) !== this.address) {
                    logger.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
                }
            } else {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_mnemonic", ()=>null);
            }
        } else {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SigningKey"].isSigningKey(privateKey)) {
                /* istanbul ignore if */ if (privateKey.curve !== "secp256k1") {
                    logger.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
                }
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_signingKey", ()=>privateKey);
            } else {
                // A lot of common tools do not prefix private keys with a 0x (see: #1166)
                if (typeof privateKey === "string") {
                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {
                        privateKey = "0x" + privateKey;
                    }
                }
                const signingKey = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SigningKey"](privateKey);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_signingKey", ()=>signingKey);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_mnemonic", ()=>null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeAddress"])(this.publicKey));
        }
        /* istanbul ignore if */ if (provider && !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$abstract$2d$provider$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$abstract$2d$provider$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Provider"].isProvider(provider)) {
            logger.throwArgumentError("invalid provider", "provider", provider);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "provider", provider || null);
    }
    get mnemonic() {
        return this._mnemonic();
    }
    get privateKey() {
        return this._signingKey().privateKey;
    }
    get publicKey() {
        return this._signingKey().publicKey;
    }
    getAddress() {
        return Promise.resolve(this.address);
    }
    connect(provider) {
        return new Wallet(this, provider);
    }
    signTransaction(transaction) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["resolveProperties"])(transaction).then((tx)=>{
            if (tx.from != null) {
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(tx.from) !== this.address) {
                    logger.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
                }
                delete tx.from;
            }
            const signature = this._signingKey().signDigest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["serialize"])(tx)));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["serialize"])(tx, signature);
        });
    }
    signMessage(message) {
        return __awaiter(this, void 0, void 0, function*() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinSignature"])(this._signingKey().signDigest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$message$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hashMessage"])(message)));
        });
    }
    _signTypedData(domain, types, value) {
        return __awaiter(this, void 0, void 0, function*() {
            // Populate any ENS names
            const populated = yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__TypedDataEncoder__as__$5f$TypedDataEncoder$3e$__["_TypedDataEncoder"].resolveNames(domain, types, value, (name)=>{
                if (this.provider == null) {
                    logger.throwError("cannot resolve ENS names without a provider", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                        operation: "resolveName",
                        value: name
                    });
                }
                return this.provider.resolveName(name);
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["joinSignature"])(this._signingKey().signDigest(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__TypedDataEncoder__as__$5f$TypedDataEncoder$3e$__["_TypedDataEncoder"].hash(populated.domain, types, populated.value)));
        });
    }
    encrypt(password, options, progressCallback) {
        if (typeof options === "function" && !progressCallback) {
            progressCallback = options;
            options = {};
        }
        if (progressCallback && typeof progressCallback !== "function") {
            throw new Error("invalid callback");
        }
        if (!options) {
            options = {};
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__encrypt__as__encryptKeystore$3e$__["encryptKeystore"])(this, password, options, progressCallback);
    }
    /**
     *  Static methods to create Wallet instances.
     */ static createRandom(options) {
        let entropy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["randomBytes"])(16);
        if (!options) {
            options = {};
        }
        if (options.extraEntropy) {
            entropy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
                entropy,
                options.extraEntropy
            ])), 0, 16));
        }
        const mnemonic = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["entropyToMnemonic"])(entropy, options.locale);
        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);
    }
    static fromEncryptedJson(json, password, progressCallback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["decryptJsonWallet"])(json, password, progressCallback).then((account)=>{
            return new Wallet(account);
        });
    }
    static fromEncryptedJsonSync(json, password) {
        return new Wallet((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["decryptJsonWalletSync"])(json, password));
    }
    static fromMnemonic(mnemonic, path, wordlist) {
        if (!path) {
            path = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultPath"];
        }
        return new Wallet(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["HDNode"].fromMnemonic(mnemonic, null, wordlist).derivePath(path));
    }
}
function verifyMessage(message, signature) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["recoverAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$message$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hashMessage"])(message), signature);
}
function verifyTypedData(domain, types, value, signature) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["recoverAddress"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$typed$2d$data$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__TypedDataEncoder__as__$5f$TypedDataEncoder$3e$__["_TypedDataEncoder"].hash(domain, types, value), signature);
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "hdnode/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HDNode": (()=>HDNode),
    "defaultPath": (()=>defaultPath),
    "entropyToMnemonic": (()=>entropyToMnemonic),
    "getAccountPath": (()=>getAccountPath),
    "isValidMnemonic": (()=>isValidMnemonic),
    "mnemonicToEntropy": (()=>mnemonicToEntropy),
    "mnemonicToSeed": (()=>mnemonicToSeed)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$basex$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$basex$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+basex@5.7.0/node_modules/@ethersproject/basex/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/sha2.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlists$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/wordlists.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/types.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$pbkdf2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$pbkdf2$2f$lib$2e$esm$2f$pbkdf2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+pbkdf2@5.7.0/node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
const N = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
// "Bitcoin seed"
const MasterSecret = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])("Bitcoin seed");
const HardenedBit = 0x80000000;
// Returns a byte with the MSB bits set
function getUpperMask(bits) {
    return (1 << bits) - 1 << 8 - bits;
}
// Returns a byte with the LSB bits set
function getLowerMask(bits) {
    return (1 << bits) - 1;
}
function bytes32(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(value), 32);
}
function base58check(data) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$basex$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$basex$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Base58"].encode((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
        data,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"])(data)), 0, 4)
    ]));
}
function getWordlist(wordlist) {
    if (wordlist == null) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlists$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["wordlists"]["en"];
    }
    if (typeof wordlist === "string") {
        const words = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlists$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["wordlists"][wordlist];
        if (words == null) {
            logger.throwArgumentError("unknown locale", "wordlist", wordlist);
        }
        return words;
    }
    return wordlist;
}
const _constructorGuard = {};
const defaultPath = "m/44'/60'/0'/0/0";
;
class HDNode {
    /**
     *  This constructor should not be called directly.
     *
     *  Please use:
     *   - fromMnemonic
     *   - fromSeed
     */ constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath){
        /* istanbul ignore if */ if (constructorGuard !== _constructorGuard) {
            throw new Error("HDNode constructor cannot be called directly");
        }
        if (privateKey) {
            const signingKey = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SigningKey"](privateKey);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "privateKey", signingKey.privateKey);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "publicKey", signingKey.compressedPublicKey);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "privateKey", null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "publicKey", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(publicKey));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "parentFingerprint", parentFingerprint);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "fingerprint", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexDataSlice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ripemd160"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"])(this.publicKey)), 0, 4));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "address", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeAddress"])(this.publicKey));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "chainCode", chainCode);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "index", index);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "depth", depth);
        if (mnemonicOrPath == null) {
            // From a source that does not preserve the path (e.g. extended keys)
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "mnemonic", null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "path", null);
        } else if (typeof mnemonicOrPath === "string") {
            // From a source that does not preserve the mnemonic (e.g. neutered)
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "mnemonic", null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "path", mnemonicOrPath);
        } else {
            // From a fully qualified source
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "mnemonic", mnemonicOrPath);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "path", mnemonicOrPath.path);
        }
    }
    get extendedKey() {
        // We only support the mainnet values for now, but if anyone needs
        // testnet values, let me know. I believe current sentiment is that
        // we should always use mainnet, and use BIP-44 to derive the network
        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4
        //   - Testnet: public=0x043587CF, private=0x04358394
        if (this.depth >= 256) {
            throw new Error("Depth too large!");
        }
        return base58check((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
            this.privateKey != null ? "0x0488ADE4" : "0x0488B21E",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(this.depth),
            this.parentFingerprint,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexZeroPad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(this.index), 4),
            this.chainCode,
            this.privateKey != null ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
                "0x00",
                this.privateKey
            ]) : this.publicKey
        ]));
    }
    neuter() {
        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
    }
    _derive(index) {
        if (index > 0xffffffff) {
            throw new Error("invalid index - " + String(index));
        }
        // Base path
        let path = this.path;
        if (path) {
            path += "/" + (index & ~HardenedBit);
        }
        const data = new Uint8Array(37);
        if (index & HardenedBit) {
            if (!this.privateKey) {
                throw new Error("cannot derive child of neutered node");
            }
            // Data = 0x00 || ser_256(k_par)
            data.set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(this.privateKey), 1);
            // Hardened path
            if (path) {
                path += "'";
            }
        } else {
            // Data = ser_p(point(k_par))
            data.set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(this.publicKey));
        }
        // Data += ser_32(i)
        for(let i = 24; i >= 0; i -= 8){
            data[33 + (i >> 3)] = index >> 24 - i & 0xff;
        }
        const I = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeHmac"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SupportedAlgorithm"].sha512, this.chainCode, data));
        const IL = I.slice(0, 32);
        const IR = I.slice(32);
        // The private key
        let ki = null;
        // The public key
        let Ki = null;
        if (this.privateKey) {
            ki = bytes32(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(IL).add(this.privateKey).mod(N));
        } else {
            const ek = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$signing$2d$key$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$signing$2d$key$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SigningKey"]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(IL));
            Ki = ek._addPoint(this.publicKey);
        }
        let mnemonicOrPath = path;
        const srcMnemonic = this.mnemonic;
        if (srcMnemonic) {
            mnemonicOrPath = Object.freeze({
                phrase: srcMnemonic.phrase,
                path: path,
                locale: srcMnemonic.locale || "en"
            });
        }
        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);
    }
    derivePath(path) {
        const components = path.split("/");
        if (components.length === 0 || components[0] === "m" && this.depth !== 0) {
            throw new Error("invalid path - " + path);
        }
        if (components[0] === "m") {
            components.shift();
        }
        let result = this;
        for(let i = 0; i < components.length; i++){
            const component = components[i];
            if (component.match(/^[0-9]+'$/)) {
                const index = parseInt(component.substring(0, component.length - 1));
                if (index >= HardenedBit) {
                    throw new Error("invalid path index - " + component);
                }
                result = result._derive(HardenedBit + index);
            } else if (component.match(/^[0-9]+$/)) {
                const index = parseInt(component);
                if (index >= HardenedBit) {
                    throw new Error("invalid path index - " + component);
                }
                result = result._derive(index);
            } else {
                throw new Error("invalid path component - " + component);
            }
        }
        return result;
    }
    static _fromSeed(seed, mnemonic) {
        const seedArray = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(seed);
        if (seedArray.length < 16 || seedArray.length > 64) {
            throw new Error("invalid seed");
        }
        const I = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeHmac"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SupportedAlgorithm"].sha512, MasterSecret, seedArray));
        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
    }
    static fromMnemonic(mnemonic, password, wordlist) {
        // If a locale name was passed in, find the associated wordlist
        wordlist = getWordlist(wordlist);
        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)
        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);
        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
            phrase: mnemonic,
            path: "m",
            locale: wordlist.locale
        });
    }
    static fromSeed(seed) {
        return HDNode._fromSeed(seed, null);
    }
    static fromExtendedKey(extendedKey) {
        const bytes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$basex$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$basex$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Base58"].decode(extendedKey);
        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {
            logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
        }
        const depth = bytes[4];
        const parentFingerprint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes.slice(5, 9));
        const index = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes.slice(9, 13)).substring(2), 16);
        const chainCode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes.slice(13, 45));
        const key = bytes.slice(45, 78);
        switch((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes.slice(0, 4))){
            // Public Key
            case "0x0488b21e":
            case "0x043587cf":
                return new HDNode(_constructorGuard, null, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(key), parentFingerprint, chainCode, index, depth, null);
            // Private Key
            case "0x0488ade4":
            case "0x04358394 ":
                if (key[0] !== 0) {
                    break;
                }
                return new HDNode(_constructorGuard, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
        }
        return logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    }
}
function mnemonicToSeed(mnemonic, password) {
    if (!password) {
        password = "";
    }
    const salt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])("mnemonic" + password, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["UnicodeNormalizationForm"].NFKD);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$pbkdf2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$pbkdf2$2f$lib$2e$esm$2f$pbkdf2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["pbkdf2"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(mnemonic, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["UnicodeNormalizationForm"].NFKD), salt, 2048, 64, "sha512");
}
function mnemonicToEntropy(mnemonic, wordlist) {
    wordlist = getWordlist(wordlist);
    logger.checkNormalize();
    const words = wordlist.split(mnemonic);
    if (words.length % 3 !== 0) {
        throw new Error("invalid mnemonic");
    }
    const entropy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(new Uint8Array(Math.ceil(11 * words.length / 8)));
    let offset = 0;
    for(let i = 0; i < words.length; i++){
        let index = wordlist.getWordIndex(words[i].normalize("NFKD"));
        if (index === -1) {
            throw new Error("invalid mnemonic");
        }
        for(let bit = 0; bit < 11; bit++){
            if (index & 1 << 10 - bit) {
                entropy[offset >> 3] |= 1 << 7 - offset % 8;
            }
            offset++;
        }
    }
    const entropyBits = 32 * words.length / 3;
    const checksumBits = words.length / 3;
    const checksumMask = getUpperMask(checksumBits);
    const checksum = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"])(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;
    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
        throw new Error("invalid checksum");
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(entropy.slice(0, entropyBits / 8));
}
function entropyToMnemonic(entropy, wordlist) {
    wordlist = getWordlist(wordlist);
    entropy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(entropy);
    if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {
        throw new Error("invalid entropy");
    }
    const indices = [
        0
    ];
    let remainingBits = 11;
    for(let i = 0; i < entropy.length; i++){
        // Consume the whole byte (with still more to go)
        if (remainingBits > 8) {
            indices[indices.length - 1] <<= 8;
            indices[indices.length - 1] |= entropy[i];
            remainingBits -= 8;
        // This byte will complete an 11-bit index
        } else {
            indices[indices.length - 1] <<= remainingBits;
            indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits;
            // Start the next word
            indices.push(entropy[i] & getLowerMask(8 - remainingBits));
            remainingBits += 3;
        }
    }
    // Compute the checksum bits
    const checksumBits = entropy.length / 4;
    const checksum = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"])(entropy))[0] & getUpperMask(checksumBits);
    // Shift the checksum into the word indices
    indices[indices.length - 1] <<= checksumBits;
    indices[indices.length - 1] |= checksum >> 8 - checksumBits;
    return wordlist.join(indices.map((index)=>wordlist.getWord(index)));
}
function isValidMnemonic(mnemonic, wordlist) {
    try {
        mnemonicToEntropy(mnemonic, wordlist);
        return true;
    } catch (error) {}
    return false;
}
function getAccountPath(index) {
    if (typeof index !== "number" || index < 0 || index >= HardenedBit || index % 1) {
        logger.throwArgumentError("invalid account index", "index", index);
    }
    return `m/44'/60'/${index}'/0/0`;
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+basex@5.7.0/node_modules/@ethersproject/basex/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * var basex = require("base-x");
 *
 * This implementation is heavily based on base-x. The main reason to
 * deviate was to prevent the dependency of Buffer.
 *
 * Contributors:
 *
 * base-x encoding
 * Forked from https://github.com/cryptocoinjs/bs58
 * Originally written by Mike Hearn for BitcoinJ
 * Copyright (c) 2011 Google Inc
 * Ported to JavaScript by Stefan Thomas
 * Merged Buffer refactorings from base58-native by Stephen Pair
 * Copyright (c) 2013 BitPay Inc
 *
 * The MIT License (MIT)
 *
 * Copyright base-x contributors (c) 2016
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */ __turbopack_esm__({
    "Base32": (()=>Base32),
    "Base58": (()=>Base58),
    "BaseX": (()=>BaseX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
;
;
class BaseX {
    constructor(alphabet){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "alphabet", alphabet);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "base", alphabet.length);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_alphabetMap", {});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "_leader", alphabet.charAt(0));
        // pre-compute lookup table
        for(let i = 0; i < alphabet.length; i++){
            this._alphabetMap[alphabet.charAt(i)] = i;
        }
    }
    encode(value) {
        let source = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
        if (source.length === 0) {
            return "";
        }
        let digits = [
            0
        ];
        for(let i = 0; i < source.length; ++i){
            let carry = source[i];
            for(let j = 0; j < digits.length; ++j){
                carry += digits[j] << 8;
                digits[j] = carry % this.base;
                carry = carry / this.base | 0;
            }
            while(carry > 0){
                digits.push(carry % this.base);
                carry = carry / this.base | 0;
            }
        }
        let string = "";
        // deal with leading zeros
        for(let k = 0; source[k] === 0 && k < source.length - 1; ++k){
            string += this._leader;
        }
        // convert digits to a string
        for(let q = digits.length - 1; q >= 0; --q){
            string += this.alphabet[digits[q]];
        }
        return string;
    }
    decode(value) {
        if (typeof value !== "string") {
            throw new TypeError("Expected String");
        }
        let bytes = [];
        if (value.length === 0) {
            return new Uint8Array(bytes);
        }
        bytes.push(0);
        for(let i = 0; i < value.length; i++){
            let byte = this._alphabetMap[value[i]];
            if (byte === undefined) {
                throw new Error("Non-base" + this.base + " character");
            }
            let carry = byte;
            for(let j = 0; j < bytes.length; ++j){
                carry += bytes[j] * this.base;
                bytes[j] = carry & 0xff;
                carry >>= 8;
            }
            while(carry > 0){
                bytes.push(carry & 0xff);
                carry >>= 8;
            }
        }
        // deal with leading zeros
        for(let k = 0; value[k] === this._leader && k < value.length - 1; ++k){
            bytes.push(0);
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(new Uint8Array(bytes.reverse()));
    }
}
const Base32 = new BaseX("abcdefghijklmnopqrstuvwxyz234567");
const Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
;
 //console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))
 //console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "sha2/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/types.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SupportedAlgorithm": (()=>SupportedAlgorithm)
});
var SupportedAlgorithm;
(function(SupportedAlgorithm) {
    SupportedAlgorithm["sha256"] = "sha256";
    SupportedAlgorithm["sha512"] = "sha512";
})(SupportedAlgorithm || (SupportedAlgorithm = {}));
; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/sha2.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "computeHmac": (()=>computeHmac),
    "ripemd160": (()=>ripemd160),
    "sha256": (()=>sha256),
    "sha512": (()=>sha512)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/_version.js [app-rsc] (ecmascript)");
//const _ripemd160 = _hash.ripemd160;
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/types.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
function ripemd160(data) {
    return "0x" + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].ripemd160().update((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data)).digest("hex");
}
function sha256(data) {
    return "0x" + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha256().update((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data)).digest("hex");
}
function sha512(data) {
    return "0x" + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].sha512().update((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data)).digest("hex");
}
function computeHmac(algorithm, key, data) {
    if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SupportedAlgorithm"][algorithm]) {
        logger.throwError("unsupported algorithm " + algorithm, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
            operation: "hmac",
            algorithm: algorithm
        });
    }
    return "0x" + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].hmac(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$hash$2e$js$40$1$2e$1$2e$7$2f$node_modules$2f$hash$2e$js$2f$lib$2f$hash$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"][algorithm], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(key)).update((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data)).digest("hex");
} //# sourceMappingURL=sha2.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SupportedAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["SupportedAlgorithm"]),
    "computeHmac": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeHmac"]),
    "ripemd160": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ripemd160"]),
    "sha256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"]),
    "sha512": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha512"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$types$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/types.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/sha2.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SupportedAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["SupportedAlgorithm"]),
    "computeHmac": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["computeHmac"]),
    "ripemd160": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ripemd160"]),
    "sha256": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["sha256"]),
    "sha512": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["sha512"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "wordlists/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/wordlist.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Wordlist": (()=>Wordlist),
    "logger": (()=>logger)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hash@5.7.0/node_modules/@ethersproject/hash/lib.esm/id.js [app-rsc] (ecmascript)");
"use strict";
// This gets overridden by rollup
const exportWordlist = false;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
class Wordlist {
    constructor(locale){
        logger.checkAbstract(new.target, Wordlist);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineReadOnly"])(this, "locale", locale);
    }
    // Subclasses may override this
    split(mnemonic) {
        return mnemonic.toLowerCase().split(/ +/g);
    }
    // Subclasses may override this
    join(words) {
        return words.join(" ");
    }
    static check(wordlist) {
        const words = [];
        for(let i = 0; i < 2048; i++){
            const word = wordlist.getWord(i);
            /* istanbul ignore if */ if (i !== wordlist.getWordIndex(word)) {
                return "0x";
            }
            words.push(word);
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hash$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hash$2f$lib$2e$esm$2f$id$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["id"])(words.join("\n") + "\n");
    }
    static register(lang, name) {
        if (!name) {
            name = lang.locale;
        }
        /* istanbul ignore if */ if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
    }
} //# sourceMappingURL=wordlist.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/lang-en.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "langEn": (()=>langEn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlist$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/wordlist.js [app-rsc] (ecmascript)");
"use strict";
;
const words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
let wordlist = null;
function loadWords(lang) {
    if (wordlist != null) {
        return;
    }
    wordlist = words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ");
    // Verify the computed list matches the official list
    /* istanbul ignore if */ if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlist$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Wordlist"].check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
        wordlist = null;
        throw new Error("BIP39 Wordlist for en (English) FAILED");
    }
}
class LangEn extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlist$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Wordlist"] {
    constructor(){
        super("en");
    }
    getWord(index) {
        loadWords(this);
        return wordlist[index];
    }
    getWordIndex(word) {
        loadWords(this);
        return wordlist.indexOf(word);
    }
}
const langEn = new LangEn();
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$wordlist$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Wordlist"].register(langEn);
;
 //# sourceMappingURL=lang-en.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/wordlists.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "wordlists": (()=>wordlists)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$lang$2d$en$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/lib.esm/lang-en.js [app-rsc] (ecmascript)");
"use strict";
;
const wordlists = {
    en: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$wordlists$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$wordlists$2f$lib$2e$esm$2f$lang$2d$en$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["langEn"]
}; //# sourceMappingURL=wordlists.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+pbkdf2@5.7.0/node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "pbkdf2": (()=>pbkdf2)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/sha2.js [app-rsc] (ecmascript)");
"use strict";
;
;
function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {
    password = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(password);
    salt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(salt);
    let hLen;
    let l = 1;
    const DK = new Uint8Array(keylen);
    const block1 = new Uint8Array(salt.length + 4);
    block1.set(salt);
    //salt.copy(block1, 0, 0, salt.length)
    let r;
    let T;
    for(let i = 1; i <= l; i++){
        //block1.writeUInt32BE(i, salt.length)
        block1[salt.length] = i >> 24 & 0xff;
        block1[salt.length + 1] = i >> 16 & 0xff;
        block1[salt.length + 2] = i >> 8 & 0xff;
        block1[salt.length + 3] = i & 0xff;
        //let U = createHmac(password).update(block1).digest();
        let U = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeHmac"])(hashAlgorithm, password, block1));
        if (!hLen) {
            hLen = U.length;
            T = new Uint8Array(hLen);
            l = Math.ceil(keylen / hLen);
            r = keylen - (l - 1) * hLen;
        }
        //U.copy(T, 0, 0, hLen)
        T.set(U);
        for(let j = 1; j < iterations; j++){
            //U = createHmac(password).update(U).digest();
            U = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeHmac"])(hashAlgorithm, password, U));
            for(let k = 0; k < hLen; k++)T[k] ^= U[k];
        }
        const destPos = (i - 1) * hLen;
        const len = i === l ? r : hLen;
        //T.copy(DK, destPos, 0, len)
        DK.set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(T).slice(0, len), destPos);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(DK);
} //# sourceMappingURL=pbkdf2.js.map
}}),
"[project]/node_modules/.pnpm/aes-js@3.0.0/node_modules/aes-js/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
(function(root) {
    function checkInt(value) {
        return parseInt(value) === value;
    }
    function checkInts(arrayish) {
        if (!checkInt(arrayish.length)) {
            return false;
        }
        for(var i = 0; i < arrayish.length; i++){
            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
                return false;
            }
        }
        return true;
    }
    function coerceArray(arg, copy) {
        // ArrayBuffer view
        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {
            if (copy) {
                if (arg.slice) {
                    arg = arg.slice();
                } else {
                    arg = Array.prototype.slice.call(arg);
                }
            }
            return arg;
        }
        // It's an array; check it is a valid representation of a byte
        if (Array.isArray(arg)) {
            if (!checkInts(arg)) {
                throw new Error('Array contains invalid value: ' + arg);
            }
            return new Uint8Array(arg);
        }
        // Something else, but behaves like an array (maybe a Buffer? Arguments?)
        if (checkInt(arg.length) && checkInts(arg)) {
            return new Uint8Array(arg);
        }
        throw new Error('unsupported array-like object');
    }
    function createArray(length) {
        return new Uint8Array(length);
    }
    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
        if (sourceStart != null || sourceEnd != null) {
            if (sourceArray.slice) {
                sourceArray = sourceArray.slice(sourceStart, sourceEnd);
            } else {
                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
            }
        }
        targetArray.set(sourceArray, targetStart);
    }
    var convertUtf8 = function() {
        function toBytes(text) {
            var result = [], i = 0;
            text = encodeURI(text);
            while(i < text.length){
                var c = text.charCodeAt(i++);
                // if it is a % sign, encode the following 2 bytes as a hex value
                if (c === 37) {
                    result.push(parseInt(text.substr(i, 2), 16));
                    i += 2;
                // otherwise, just the actual byte
                } else {
                    result.push(c);
                }
            }
            return coerceArray(result);
        }
        function fromBytes(bytes) {
            var result = [], i = 0;
            while(i < bytes.length){
                var c = bytes[i];
                if (c < 128) {
                    result.push(String.fromCharCode(c));
                    i++;
                } else if (c > 191 && c < 224) {
                    result.push(String.fromCharCode((c & 0x1f) << 6 | bytes[i + 1] & 0x3f));
                    i += 2;
                } else {
                    result.push(String.fromCharCode((c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f));
                    i += 3;
                }
            }
            return result.join('');
        }
        return {
            toBytes: toBytes,
            fromBytes: fromBytes
        };
    }();
    var convertHex = function() {
        function toBytes(text) {
            var result = [];
            for(var i = 0; i < text.length; i += 2){
                result.push(parseInt(text.substr(i, 2), 16));
            }
            return result;
        }
        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
        var Hex = '0123456789abcdef';
        function fromBytes(bytes) {
            var result = [];
            for(var i = 0; i < bytes.length; i++){
                var v = bytes[i];
                result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
            }
            return result.join('');
        }
        return {
            toBytes: toBytes,
            fromBytes: fromBytes
        };
    }();
    // Number of rounds by keysize
    var numberOfRounds = {
        16: 10,
        24: 12,
        32: 14
    };
    // Round constant words
    var rcon = [
        0x01,
        0x02,
        0x04,
        0x08,
        0x10,
        0x20,
        0x40,
        0x80,
        0x1b,
        0x36,
        0x6c,
        0xd8,
        0xab,
        0x4d,
        0x9a,
        0x2f,
        0x5e,
        0xbc,
        0x63,
        0xc6,
        0x97,
        0x35,
        0x6a,
        0xd4,
        0xb3,
        0x7d,
        0xfa,
        0xef,
        0xc5,
        0x91
    ];
    // S-box and Inverse S-box (S is for Substitution)
    var S = [
        0x63,
        0x7c,
        0x77,
        0x7b,
        0xf2,
        0x6b,
        0x6f,
        0xc5,
        0x30,
        0x01,
        0x67,
        0x2b,
        0xfe,
        0xd7,
        0xab,
        0x76,
        0xca,
        0x82,
        0xc9,
        0x7d,
        0xfa,
        0x59,
        0x47,
        0xf0,
        0xad,
        0xd4,
        0xa2,
        0xaf,
        0x9c,
        0xa4,
        0x72,
        0xc0,
        0xb7,
        0xfd,
        0x93,
        0x26,
        0x36,
        0x3f,
        0xf7,
        0xcc,
        0x34,
        0xa5,
        0xe5,
        0xf1,
        0x71,
        0xd8,
        0x31,
        0x15,
        0x04,
        0xc7,
        0x23,
        0xc3,
        0x18,
        0x96,
        0x05,
        0x9a,
        0x07,
        0x12,
        0x80,
        0xe2,
        0xeb,
        0x27,
        0xb2,
        0x75,
        0x09,
        0x83,
        0x2c,
        0x1a,
        0x1b,
        0x6e,
        0x5a,
        0xa0,
        0x52,
        0x3b,
        0xd6,
        0xb3,
        0x29,
        0xe3,
        0x2f,
        0x84,
        0x53,
        0xd1,
        0x00,
        0xed,
        0x20,
        0xfc,
        0xb1,
        0x5b,
        0x6a,
        0xcb,
        0xbe,
        0x39,
        0x4a,
        0x4c,
        0x58,
        0xcf,
        0xd0,
        0xef,
        0xaa,
        0xfb,
        0x43,
        0x4d,
        0x33,
        0x85,
        0x45,
        0xf9,
        0x02,
        0x7f,
        0x50,
        0x3c,
        0x9f,
        0xa8,
        0x51,
        0xa3,
        0x40,
        0x8f,
        0x92,
        0x9d,
        0x38,
        0xf5,
        0xbc,
        0xb6,
        0xda,
        0x21,
        0x10,
        0xff,
        0xf3,
        0xd2,
        0xcd,
        0x0c,
        0x13,
        0xec,
        0x5f,
        0x97,
        0x44,
        0x17,
        0xc4,
        0xa7,
        0x7e,
        0x3d,
        0x64,
        0x5d,
        0x19,
        0x73,
        0x60,
        0x81,
        0x4f,
        0xdc,
        0x22,
        0x2a,
        0x90,
        0x88,
        0x46,
        0xee,
        0xb8,
        0x14,
        0xde,
        0x5e,
        0x0b,
        0xdb,
        0xe0,
        0x32,
        0x3a,
        0x0a,
        0x49,
        0x06,
        0x24,
        0x5c,
        0xc2,
        0xd3,
        0xac,
        0x62,
        0x91,
        0x95,
        0xe4,
        0x79,
        0xe7,
        0xc8,
        0x37,
        0x6d,
        0x8d,
        0xd5,
        0x4e,
        0xa9,
        0x6c,
        0x56,
        0xf4,
        0xea,
        0x65,
        0x7a,
        0xae,
        0x08,
        0xba,
        0x78,
        0x25,
        0x2e,
        0x1c,
        0xa6,
        0xb4,
        0xc6,
        0xe8,
        0xdd,
        0x74,
        0x1f,
        0x4b,
        0xbd,
        0x8b,
        0x8a,
        0x70,
        0x3e,
        0xb5,
        0x66,
        0x48,
        0x03,
        0xf6,
        0x0e,
        0x61,
        0x35,
        0x57,
        0xb9,
        0x86,
        0xc1,
        0x1d,
        0x9e,
        0xe1,
        0xf8,
        0x98,
        0x11,
        0x69,
        0xd9,
        0x8e,
        0x94,
        0x9b,
        0x1e,
        0x87,
        0xe9,
        0xce,
        0x55,
        0x28,
        0xdf,
        0x8c,
        0xa1,
        0x89,
        0x0d,
        0xbf,
        0xe6,
        0x42,
        0x68,
        0x41,
        0x99,
        0x2d,
        0x0f,
        0xb0,
        0x54,
        0xbb,
        0x16
    ];
    var Si = [
        0x52,
        0x09,
        0x6a,
        0xd5,
        0x30,
        0x36,
        0xa5,
        0x38,
        0xbf,
        0x40,
        0xa3,
        0x9e,
        0x81,
        0xf3,
        0xd7,
        0xfb,
        0x7c,
        0xe3,
        0x39,
        0x82,
        0x9b,
        0x2f,
        0xff,
        0x87,
        0x34,
        0x8e,
        0x43,
        0x44,
        0xc4,
        0xde,
        0xe9,
        0xcb,
        0x54,
        0x7b,
        0x94,
        0x32,
        0xa6,
        0xc2,
        0x23,
        0x3d,
        0xee,
        0x4c,
        0x95,
        0x0b,
        0x42,
        0xfa,
        0xc3,
        0x4e,
        0x08,
        0x2e,
        0xa1,
        0x66,
        0x28,
        0xd9,
        0x24,
        0xb2,
        0x76,
        0x5b,
        0xa2,
        0x49,
        0x6d,
        0x8b,
        0xd1,
        0x25,
        0x72,
        0xf8,
        0xf6,
        0x64,
        0x86,
        0x68,
        0x98,
        0x16,
        0xd4,
        0xa4,
        0x5c,
        0xcc,
        0x5d,
        0x65,
        0xb6,
        0x92,
        0x6c,
        0x70,
        0x48,
        0x50,
        0xfd,
        0xed,
        0xb9,
        0xda,
        0x5e,
        0x15,
        0x46,
        0x57,
        0xa7,
        0x8d,
        0x9d,
        0x84,
        0x90,
        0xd8,
        0xab,
        0x00,
        0x8c,
        0xbc,
        0xd3,
        0x0a,
        0xf7,
        0xe4,
        0x58,
        0x05,
        0xb8,
        0xb3,
        0x45,
        0x06,
        0xd0,
        0x2c,
        0x1e,
        0x8f,
        0xca,
        0x3f,
        0x0f,
        0x02,
        0xc1,
        0xaf,
        0xbd,
        0x03,
        0x01,
        0x13,
        0x8a,
        0x6b,
        0x3a,
        0x91,
        0x11,
        0x41,
        0x4f,
        0x67,
        0xdc,
        0xea,
        0x97,
        0xf2,
        0xcf,
        0xce,
        0xf0,
        0xb4,
        0xe6,
        0x73,
        0x96,
        0xac,
        0x74,
        0x22,
        0xe7,
        0xad,
        0x35,
        0x85,
        0xe2,
        0xf9,
        0x37,
        0xe8,
        0x1c,
        0x75,
        0xdf,
        0x6e,
        0x47,
        0xf1,
        0x1a,
        0x71,
        0x1d,
        0x29,
        0xc5,
        0x89,
        0x6f,
        0xb7,
        0x62,
        0x0e,
        0xaa,
        0x18,
        0xbe,
        0x1b,
        0xfc,
        0x56,
        0x3e,
        0x4b,
        0xc6,
        0xd2,
        0x79,
        0x20,
        0x9a,
        0xdb,
        0xc0,
        0xfe,
        0x78,
        0xcd,
        0x5a,
        0xf4,
        0x1f,
        0xdd,
        0xa8,
        0x33,
        0x88,
        0x07,
        0xc7,
        0x31,
        0xb1,
        0x12,
        0x10,
        0x59,
        0x27,
        0x80,
        0xec,
        0x5f,
        0x60,
        0x51,
        0x7f,
        0xa9,
        0x19,
        0xb5,
        0x4a,
        0x0d,
        0x2d,
        0xe5,
        0x7a,
        0x9f,
        0x93,
        0xc9,
        0x9c,
        0xef,
        0xa0,
        0xe0,
        0x3b,
        0x4d,
        0xae,
        0x2a,
        0xf5,
        0xb0,
        0xc8,
        0xeb,
        0xbb,
        0x3c,
        0x83,
        0x53,
        0x99,
        0x61,
        0x17,
        0x2b,
        0x04,
        0x7e,
        0xba,
        0x77,
        0xd6,
        0x26,
        0xe1,
        0x69,
        0x14,
        0x63,
        0x55,
        0x21,
        0x0c,
        0x7d
    ];
    // Transformations for encryption
    var T1 = [
        0xc66363a5,
        0xf87c7c84,
        0xee777799,
        0xf67b7b8d,
        0xfff2f20d,
        0xd66b6bbd,
        0xde6f6fb1,
        0x91c5c554,
        0x60303050,
        0x02010103,
        0xce6767a9,
        0x562b2b7d,
        0xe7fefe19,
        0xb5d7d762,
        0x4dababe6,
        0xec76769a,
        0x8fcaca45,
        0x1f82829d,
        0x89c9c940,
        0xfa7d7d87,
        0xeffafa15,
        0xb25959eb,
        0x8e4747c9,
        0xfbf0f00b,
        0x41adadec,
        0xb3d4d467,
        0x5fa2a2fd,
        0x45afafea,
        0x239c9cbf,
        0x53a4a4f7,
        0xe4727296,
        0x9bc0c05b,
        0x75b7b7c2,
        0xe1fdfd1c,
        0x3d9393ae,
        0x4c26266a,
        0x6c36365a,
        0x7e3f3f41,
        0xf5f7f702,
        0x83cccc4f,
        0x6834345c,
        0x51a5a5f4,
        0xd1e5e534,
        0xf9f1f108,
        0xe2717193,
        0xabd8d873,
        0x62313153,
        0x2a15153f,
        0x0804040c,
        0x95c7c752,
        0x46232365,
        0x9dc3c35e,
        0x30181828,
        0x379696a1,
        0x0a05050f,
        0x2f9a9ab5,
        0x0e070709,
        0x24121236,
        0x1b80809b,
        0xdfe2e23d,
        0xcdebeb26,
        0x4e272769,
        0x7fb2b2cd,
        0xea75759f,
        0x1209091b,
        0x1d83839e,
        0x582c2c74,
        0x341a1a2e,
        0x361b1b2d,
        0xdc6e6eb2,
        0xb45a5aee,
        0x5ba0a0fb,
        0xa45252f6,
        0x763b3b4d,
        0xb7d6d661,
        0x7db3b3ce,
        0x5229297b,
        0xdde3e33e,
        0x5e2f2f71,
        0x13848497,
        0xa65353f5,
        0xb9d1d168,
        0x00000000,
        0xc1eded2c,
        0x40202060,
        0xe3fcfc1f,
        0x79b1b1c8,
        0xb65b5bed,
        0xd46a6abe,
        0x8dcbcb46,
        0x67bebed9,
        0x7239394b,
        0x944a4ade,
        0x984c4cd4,
        0xb05858e8,
        0x85cfcf4a,
        0xbbd0d06b,
        0xc5efef2a,
        0x4faaaae5,
        0xedfbfb16,
        0x864343c5,
        0x9a4d4dd7,
        0x66333355,
        0x11858594,
        0x8a4545cf,
        0xe9f9f910,
        0x04020206,
        0xfe7f7f81,
        0xa05050f0,
        0x783c3c44,
        0x259f9fba,
        0x4ba8a8e3,
        0xa25151f3,
        0x5da3a3fe,
        0x804040c0,
        0x058f8f8a,
        0x3f9292ad,
        0x219d9dbc,
        0x70383848,
        0xf1f5f504,
        0x63bcbcdf,
        0x77b6b6c1,
        0xafdada75,
        0x42212163,
        0x20101030,
        0xe5ffff1a,
        0xfdf3f30e,
        0xbfd2d26d,
        0x81cdcd4c,
        0x180c0c14,
        0x26131335,
        0xc3ecec2f,
        0xbe5f5fe1,
        0x359797a2,
        0x884444cc,
        0x2e171739,
        0x93c4c457,
        0x55a7a7f2,
        0xfc7e7e82,
        0x7a3d3d47,
        0xc86464ac,
        0xba5d5de7,
        0x3219192b,
        0xe6737395,
        0xc06060a0,
        0x19818198,
        0x9e4f4fd1,
        0xa3dcdc7f,
        0x44222266,
        0x542a2a7e,
        0x3b9090ab,
        0x0b888883,
        0x8c4646ca,
        0xc7eeee29,
        0x6bb8b8d3,
        0x2814143c,
        0xa7dede79,
        0xbc5e5ee2,
        0x160b0b1d,
        0xaddbdb76,
        0xdbe0e03b,
        0x64323256,
        0x743a3a4e,
        0x140a0a1e,
        0x924949db,
        0x0c06060a,
        0x4824246c,
        0xb85c5ce4,
        0x9fc2c25d,
        0xbdd3d36e,
        0x43acacef,
        0xc46262a6,
        0x399191a8,
        0x319595a4,
        0xd3e4e437,
        0xf279798b,
        0xd5e7e732,
        0x8bc8c843,
        0x6e373759,
        0xda6d6db7,
        0x018d8d8c,
        0xb1d5d564,
        0x9c4e4ed2,
        0x49a9a9e0,
        0xd86c6cb4,
        0xac5656fa,
        0xf3f4f407,
        0xcfeaea25,
        0xca6565af,
        0xf47a7a8e,
        0x47aeaee9,
        0x10080818,
        0x6fbabad5,
        0xf0787888,
        0x4a25256f,
        0x5c2e2e72,
        0x381c1c24,
        0x57a6a6f1,
        0x73b4b4c7,
        0x97c6c651,
        0xcbe8e823,
        0xa1dddd7c,
        0xe874749c,
        0x3e1f1f21,
        0x964b4bdd,
        0x61bdbddc,
        0x0d8b8b86,
        0x0f8a8a85,
        0xe0707090,
        0x7c3e3e42,
        0x71b5b5c4,
        0xcc6666aa,
        0x904848d8,
        0x06030305,
        0xf7f6f601,
        0x1c0e0e12,
        0xc26161a3,
        0x6a35355f,
        0xae5757f9,
        0x69b9b9d0,
        0x17868691,
        0x99c1c158,
        0x3a1d1d27,
        0x279e9eb9,
        0xd9e1e138,
        0xebf8f813,
        0x2b9898b3,
        0x22111133,
        0xd26969bb,
        0xa9d9d970,
        0x078e8e89,
        0x339494a7,
        0x2d9b9bb6,
        0x3c1e1e22,
        0x15878792,
        0xc9e9e920,
        0x87cece49,
        0xaa5555ff,
        0x50282878,
        0xa5dfdf7a,
        0x038c8c8f,
        0x59a1a1f8,
        0x09898980,
        0x1a0d0d17,
        0x65bfbfda,
        0xd7e6e631,
        0x844242c6,
        0xd06868b8,
        0x824141c3,
        0x299999b0,
        0x5a2d2d77,
        0x1e0f0f11,
        0x7bb0b0cb,
        0xa85454fc,
        0x6dbbbbd6,
        0x2c16163a
    ];
    var T2 = [
        0xa5c66363,
        0x84f87c7c,
        0x99ee7777,
        0x8df67b7b,
        0x0dfff2f2,
        0xbdd66b6b,
        0xb1de6f6f,
        0x5491c5c5,
        0x50603030,
        0x03020101,
        0xa9ce6767,
        0x7d562b2b,
        0x19e7fefe,
        0x62b5d7d7,
        0xe64dabab,
        0x9aec7676,
        0x458fcaca,
        0x9d1f8282,
        0x4089c9c9,
        0x87fa7d7d,
        0x15effafa,
        0xebb25959,
        0xc98e4747,
        0x0bfbf0f0,
        0xec41adad,
        0x67b3d4d4,
        0xfd5fa2a2,
        0xea45afaf,
        0xbf239c9c,
        0xf753a4a4,
        0x96e47272,
        0x5b9bc0c0,
        0xc275b7b7,
        0x1ce1fdfd,
        0xae3d9393,
        0x6a4c2626,
        0x5a6c3636,
        0x417e3f3f,
        0x02f5f7f7,
        0x4f83cccc,
        0x5c683434,
        0xf451a5a5,
        0x34d1e5e5,
        0x08f9f1f1,
        0x93e27171,
        0x73abd8d8,
        0x53623131,
        0x3f2a1515,
        0x0c080404,
        0x5295c7c7,
        0x65462323,
        0x5e9dc3c3,
        0x28301818,
        0xa1379696,
        0x0f0a0505,
        0xb52f9a9a,
        0x090e0707,
        0x36241212,
        0x9b1b8080,
        0x3ddfe2e2,
        0x26cdebeb,
        0x694e2727,
        0xcd7fb2b2,
        0x9fea7575,
        0x1b120909,
        0x9e1d8383,
        0x74582c2c,
        0x2e341a1a,
        0x2d361b1b,
        0xb2dc6e6e,
        0xeeb45a5a,
        0xfb5ba0a0,
        0xf6a45252,
        0x4d763b3b,
        0x61b7d6d6,
        0xce7db3b3,
        0x7b522929,
        0x3edde3e3,
        0x715e2f2f,
        0x97138484,
        0xf5a65353,
        0x68b9d1d1,
        0x00000000,
        0x2cc1eded,
        0x60402020,
        0x1fe3fcfc,
        0xc879b1b1,
        0xedb65b5b,
        0xbed46a6a,
        0x468dcbcb,
        0xd967bebe,
        0x4b723939,
        0xde944a4a,
        0xd4984c4c,
        0xe8b05858,
        0x4a85cfcf,
        0x6bbbd0d0,
        0x2ac5efef,
        0xe54faaaa,
        0x16edfbfb,
        0xc5864343,
        0xd79a4d4d,
        0x55663333,
        0x94118585,
        0xcf8a4545,
        0x10e9f9f9,
        0x06040202,
        0x81fe7f7f,
        0xf0a05050,
        0x44783c3c,
        0xba259f9f,
        0xe34ba8a8,
        0xf3a25151,
        0xfe5da3a3,
        0xc0804040,
        0x8a058f8f,
        0xad3f9292,
        0xbc219d9d,
        0x48703838,
        0x04f1f5f5,
        0xdf63bcbc,
        0xc177b6b6,
        0x75afdada,
        0x63422121,
        0x30201010,
        0x1ae5ffff,
        0x0efdf3f3,
        0x6dbfd2d2,
        0x4c81cdcd,
        0x14180c0c,
        0x35261313,
        0x2fc3ecec,
        0xe1be5f5f,
        0xa2359797,
        0xcc884444,
        0x392e1717,
        0x5793c4c4,
        0xf255a7a7,
        0x82fc7e7e,
        0x477a3d3d,
        0xacc86464,
        0xe7ba5d5d,
        0x2b321919,
        0x95e67373,
        0xa0c06060,
        0x98198181,
        0xd19e4f4f,
        0x7fa3dcdc,
        0x66442222,
        0x7e542a2a,
        0xab3b9090,
        0x830b8888,
        0xca8c4646,
        0x29c7eeee,
        0xd36bb8b8,
        0x3c281414,
        0x79a7dede,
        0xe2bc5e5e,
        0x1d160b0b,
        0x76addbdb,
        0x3bdbe0e0,
        0x56643232,
        0x4e743a3a,
        0x1e140a0a,
        0xdb924949,
        0x0a0c0606,
        0x6c482424,
        0xe4b85c5c,
        0x5d9fc2c2,
        0x6ebdd3d3,
        0xef43acac,
        0xa6c46262,
        0xa8399191,
        0xa4319595,
        0x37d3e4e4,
        0x8bf27979,
        0x32d5e7e7,
        0x438bc8c8,
        0x596e3737,
        0xb7da6d6d,
        0x8c018d8d,
        0x64b1d5d5,
        0xd29c4e4e,
        0xe049a9a9,
        0xb4d86c6c,
        0xfaac5656,
        0x07f3f4f4,
        0x25cfeaea,
        0xafca6565,
        0x8ef47a7a,
        0xe947aeae,
        0x18100808,
        0xd56fbaba,
        0x88f07878,
        0x6f4a2525,
        0x725c2e2e,
        0x24381c1c,
        0xf157a6a6,
        0xc773b4b4,
        0x5197c6c6,
        0x23cbe8e8,
        0x7ca1dddd,
        0x9ce87474,
        0x213e1f1f,
        0xdd964b4b,
        0xdc61bdbd,
        0x860d8b8b,
        0x850f8a8a,
        0x90e07070,
        0x427c3e3e,
        0xc471b5b5,
        0xaacc6666,
        0xd8904848,
        0x05060303,
        0x01f7f6f6,
        0x121c0e0e,
        0xa3c26161,
        0x5f6a3535,
        0xf9ae5757,
        0xd069b9b9,
        0x91178686,
        0x5899c1c1,
        0x273a1d1d,
        0xb9279e9e,
        0x38d9e1e1,
        0x13ebf8f8,
        0xb32b9898,
        0x33221111,
        0xbbd26969,
        0x70a9d9d9,
        0x89078e8e,
        0xa7339494,
        0xb62d9b9b,
        0x223c1e1e,
        0x92158787,
        0x20c9e9e9,
        0x4987cece,
        0xffaa5555,
        0x78502828,
        0x7aa5dfdf,
        0x8f038c8c,
        0xf859a1a1,
        0x80098989,
        0x171a0d0d,
        0xda65bfbf,
        0x31d7e6e6,
        0xc6844242,
        0xb8d06868,
        0xc3824141,
        0xb0299999,
        0x775a2d2d,
        0x111e0f0f,
        0xcb7bb0b0,
        0xfca85454,
        0xd66dbbbb,
        0x3a2c1616
    ];
    var T3 = [
        0x63a5c663,
        0x7c84f87c,
        0x7799ee77,
        0x7b8df67b,
        0xf20dfff2,
        0x6bbdd66b,
        0x6fb1de6f,
        0xc55491c5,
        0x30506030,
        0x01030201,
        0x67a9ce67,
        0x2b7d562b,
        0xfe19e7fe,
        0xd762b5d7,
        0xabe64dab,
        0x769aec76,
        0xca458fca,
        0x829d1f82,
        0xc94089c9,
        0x7d87fa7d,
        0xfa15effa,
        0x59ebb259,
        0x47c98e47,
        0xf00bfbf0,
        0xadec41ad,
        0xd467b3d4,
        0xa2fd5fa2,
        0xafea45af,
        0x9cbf239c,
        0xa4f753a4,
        0x7296e472,
        0xc05b9bc0,
        0xb7c275b7,
        0xfd1ce1fd,
        0x93ae3d93,
        0x266a4c26,
        0x365a6c36,
        0x3f417e3f,
        0xf702f5f7,
        0xcc4f83cc,
        0x345c6834,
        0xa5f451a5,
        0xe534d1e5,
        0xf108f9f1,
        0x7193e271,
        0xd873abd8,
        0x31536231,
        0x153f2a15,
        0x040c0804,
        0xc75295c7,
        0x23654623,
        0xc35e9dc3,
        0x18283018,
        0x96a13796,
        0x050f0a05,
        0x9ab52f9a,
        0x07090e07,
        0x12362412,
        0x809b1b80,
        0xe23ddfe2,
        0xeb26cdeb,
        0x27694e27,
        0xb2cd7fb2,
        0x759fea75,
        0x091b1209,
        0x839e1d83,
        0x2c74582c,
        0x1a2e341a,
        0x1b2d361b,
        0x6eb2dc6e,
        0x5aeeb45a,
        0xa0fb5ba0,
        0x52f6a452,
        0x3b4d763b,
        0xd661b7d6,
        0xb3ce7db3,
        0x297b5229,
        0xe33edde3,
        0x2f715e2f,
        0x84971384,
        0x53f5a653,
        0xd168b9d1,
        0x00000000,
        0xed2cc1ed,
        0x20604020,
        0xfc1fe3fc,
        0xb1c879b1,
        0x5bedb65b,
        0x6abed46a,
        0xcb468dcb,
        0xbed967be,
        0x394b7239,
        0x4ade944a,
        0x4cd4984c,
        0x58e8b058,
        0xcf4a85cf,
        0xd06bbbd0,
        0xef2ac5ef,
        0xaae54faa,
        0xfb16edfb,
        0x43c58643,
        0x4dd79a4d,
        0x33556633,
        0x85941185,
        0x45cf8a45,
        0xf910e9f9,
        0x02060402,
        0x7f81fe7f,
        0x50f0a050,
        0x3c44783c,
        0x9fba259f,
        0xa8e34ba8,
        0x51f3a251,
        0xa3fe5da3,
        0x40c08040,
        0x8f8a058f,
        0x92ad3f92,
        0x9dbc219d,
        0x38487038,
        0xf504f1f5,
        0xbcdf63bc,
        0xb6c177b6,
        0xda75afda,
        0x21634221,
        0x10302010,
        0xff1ae5ff,
        0xf30efdf3,
        0xd26dbfd2,
        0xcd4c81cd,
        0x0c14180c,
        0x13352613,
        0xec2fc3ec,
        0x5fe1be5f,
        0x97a23597,
        0x44cc8844,
        0x17392e17,
        0xc45793c4,
        0xa7f255a7,
        0x7e82fc7e,
        0x3d477a3d,
        0x64acc864,
        0x5de7ba5d,
        0x192b3219,
        0x7395e673,
        0x60a0c060,
        0x81981981,
        0x4fd19e4f,
        0xdc7fa3dc,
        0x22664422,
        0x2a7e542a,
        0x90ab3b90,
        0x88830b88,
        0x46ca8c46,
        0xee29c7ee,
        0xb8d36bb8,
        0x143c2814,
        0xde79a7de,
        0x5ee2bc5e,
        0x0b1d160b,
        0xdb76addb,
        0xe03bdbe0,
        0x32566432,
        0x3a4e743a,
        0x0a1e140a,
        0x49db9249,
        0x060a0c06,
        0x246c4824,
        0x5ce4b85c,
        0xc25d9fc2,
        0xd36ebdd3,
        0xacef43ac,
        0x62a6c462,
        0x91a83991,
        0x95a43195,
        0xe437d3e4,
        0x798bf279,
        0xe732d5e7,
        0xc8438bc8,
        0x37596e37,
        0x6db7da6d,
        0x8d8c018d,
        0xd564b1d5,
        0x4ed29c4e,
        0xa9e049a9,
        0x6cb4d86c,
        0x56faac56,
        0xf407f3f4,
        0xea25cfea,
        0x65afca65,
        0x7a8ef47a,
        0xaee947ae,
        0x08181008,
        0xbad56fba,
        0x7888f078,
        0x256f4a25,
        0x2e725c2e,
        0x1c24381c,
        0xa6f157a6,
        0xb4c773b4,
        0xc65197c6,
        0xe823cbe8,
        0xdd7ca1dd,
        0x749ce874,
        0x1f213e1f,
        0x4bdd964b,
        0xbddc61bd,
        0x8b860d8b,
        0x8a850f8a,
        0x7090e070,
        0x3e427c3e,
        0xb5c471b5,
        0x66aacc66,
        0x48d89048,
        0x03050603,
        0xf601f7f6,
        0x0e121c0e,
        0x61a3c261,
        0x355f6a35,
        0x57f9ae57,
        0xb9d069b9,
        0x86911786,
        0xc15899c1,
        0x1d273a1d,
        0x9eb9279e,
        0xe138d9e1,
        0xf813ebf8,
        0x98b32b98,
        0x11332211,
        0x69bbd269,
        0xd970a9d9,
        0x8e89078e,
        0x94a73394,
        0x9bb62d9b,
        0x1e223c1e,
        0x87921587,
        0xe920c9e9,
        0xce4987ce,
        0x55ffaa55,
        0x28785028,
        0xdf7aa5df,
        0x8c8f038c,
        0xa1f859a1,
        0x89800989,
        0x0d171a0d,
        0xbfda65bf,
        0xe631d7e6,
        0x42c68442,
        0x68b8d068,
        0x41c38241,
        0x99b02999,
        0x2d775a2d,
        0x0f111e0f,
        0xb0cb7bb0,
        0x54fca854,
        0xbbd66dbb,
        0x163a2c16
    ];
    var T4 = [
        0x6363a5c6,
        0x7c7c84f8,
        0x777799ee,
        0x7b7b8df6,
        0xf2f20dff,
        0x6b6bbdd6,
        0x6f6fb1de,
        0xc5c55491,
        0x30305060,
        0x01010302,
        0x6767a9ce,
        0x2b2b7d56,
        0xfefe19e7,
        0xd7d762b5,
        0xababe64d,
        0x76769aec,
        0xcaca458f,
        0x82829d1f,
        0xc9c94089,
        0x7d7d87fa,
        0xfafa15ef,
        0x5959ebb2,
        0x4747c98e,
        0xf0f00bfb,
        0xadadec41,
        0xd4d467b3,
        0xa2a2fd5f,
        0xafafea45,
        0x9c9cbf23,
        0xa4a4f753,
        0x727296e4,
        0xc0c05b9b,
        0xb7b7c275,
        0xfdfd1ce1,
        0x9393ae3d,
        0x26266a4c,
        0x36365a6c,
        0x3f3f417e,
        0xf7f702f5,
        0xcccc4f83,
        0x34345c68,
        0xa5a5f451,
        0xe5e534d1,
        0xf1f108f9,
        0x717193e2,
        0xd8d873ab,
        0x31315362,
        0x15153f2a,
        0x04040c08,
        0xc7c75295,
        0x23236546,
        0xc3c35e9d,
        0x18182830,
        0x9696a137,
        0x05050f0a,
        0x9a9ab52f,
        0x0707090e,
        0x12123624,
        0x80809b1b,
        0xe2e23ddf,
        0xebeb26cd,
        0x2727694e,
        0xb2b2cd7f,
        0x75759fea,
        0x09091b12,
        0x83839e1d,
        0x2c2c7458,
        0x1a1a2e34,
        0x1b1b2d36,
        0x6e6eb2dc,
        0x5a5aeeb4,
        0xa0a0fb5b,
        0x5252f6a4,
        0x3b3b4d76,
        0xd6d661b7,
        0xb3b3ce7d,
        0x29297b52,
        0xe3e33edd,
        0x2f2f715e,
        0x84849713,
        0x5353f5a6,
        0xd1d168b9,
        0x00000000,
        0xeded2cc1,
        0x20206040,
        0xfcfc1fe3,
        0xb1b1c879,
        0x5b5bedb6,
        0x6a6abed4,
        0xcbcb468d,
        0xbebed967,
        0x39394b72,
        0x4a4ade94,
        0x4c4cd498,
        0x5858e8b0,
        0xcfcf4a85,
        0xd0d06bbb,
        0xefef2ac5,
        0xaaaae54f,
        0xfbfb16ed,
        0x4343c586,
        0x4d4dd79a,
        0x33335566,
        0x85859411,
        0x4545cf8a,
        0xf9f910e9,
        0x02020604,
        0x7f7f81fe,
        0x5050f0a0,
        0x3c3c4478,
        0x9f9fba25,
        0xa8a8e34b,
        0x5151f3a2,
        0xa3a3fe5d,
        0x4040c080,
        0x8f8f8a05,
        0x9292ad3f,
        0x9d9dbc21,
        0x38384870,
        0xf5f504f1,
        0xbcbcdf63,
        0xb6b6c177,
        0xdada75af,
        0x21216342,
        0x10103020,
        0xffff1ae5,
        0xf3f30efd,
        0xd2d26dbf,
        0xcdcd4c81,
        0x0c0c1418,
        0x13133526,
        0xecec2fc3,
        0x5f5fe1be,
        0x9797a235,
        0x4444cc88,
        0x1717392e,
        0xc4c45793,
        0xa7a7f255,
        0x7e7e82fc,
        0x3d3d477a,
        0x6464acc8,
        0x5d5de7ba,
        0x19192b32,
        0x737395e6,
        0x6060a0c0,
        0x81819819,
        0x4f4fd19e,
        0xdcdc7fa3,
        0x22226644,
        0x2a2a7e54,
        0x9090ab3b,
        0x8888830b,
        0x4646ca8c,
        0xeeee29c7,
        0xb8b8d36b,
        0x14143c28,
        0xdede79a7,
        0x5e5ee2bc,
        0x0b0b1d16,
        0xdbdb76ad,
        0xe0e03bdb,
        0x32325664,
        0x3a3a4e74,
        0x0a0a1e14,
        0x4949db92,
        0x06060a0c,
        0x24246c48,
        0x5c5ce4b8,
        0xc2c25d9f,
        0xd3d36ebd,
        0xacacef43,
        0x6262a6c4,
        0x9191a839,
        0x9595a431,
        0xe4e437d3,
        0x79798bf2,
        0xe7e732d5,
        0xc8c8438b,
        0x3737596e,
        0x6d6db7da,
        0x8d8d8c01,
        0xd5d564b1,
        0x4e4ed29c,
        0xa9a9e049,
        0x6c6cb4d8,
        0x5656faac,
        0xf4f407f3,
        0xeaea25cf,
        0x6565afca,
        0x7a7a8ef4,
        0xaeaee947,
        0x08081810,
        0xbabad56f,
        0x787888f0,
        0x25256f4a,
        0x2e2e725c,
        0x1c1c2438,
        0xa6a6f157,
        0xb4b4c773,
        0xc6c65197,
        0xe8e823cb,
        0xdddd7ca1,
        0x74749ce8,
        0x1f1f213e,
        0x4b4bdd96,
        0xbdbddc61,
        0x8b8b860d,
        0x8a8a850f,
        0x707090e0,
        0x3e3e427c,
        0xb5b5c471,
        0x6666aacc,
        0x4848d890,
        0x03030506,
        0xf6f601f7,
        0x0e0e121c,
        0x6161a3c2,
        0x35355f6a,
        0x5757f9ae,
        0xb9b9d069,
        0x86869117,
        0xc1c15899,
        0x1d1d273a,
        0x9e9eb927,
        0xe1e138d9,
        0xf8f813eb,
        0x9898b32b,
        0x11113322,
        0x6969bbd2,
        0xd9d970a9,
        0x8e8e8907,
        0x9494a733,
        0x9b9bb62d,
        0x1e1e223c,
        0x87879215,
        0xe9e920c9,
        0xcece4987,
        0x5555ffaa,
        0x28287850,
        0xdfdf7aa5,
        0x8c8c8f03,
        0xa1a1f859,
        0x89898009,
        0x0d0d171a,
        0xbfbfda65,
        0xe6e631d7,
        0x4242c684,
        0x6868b8d0,
        0x4141c382,
        0x9999b029,
        0x2d2d775a,
        0x0f0f111e,
        0xb0b0cb7b,
        0x5454fca8,
        0xbbbbd66d,
        0x16163a2c
    ];
    // Transformations for decryption
    var T5 = [
        0x51f4a750,
        0x7e416553,
        0x1a17a4c3,
        0x3a275e96,
        0x3bab6bcb,
        0x1f9d45f1,
        0xacfa58ab,
        0x4be30393,
        0x2030fa55,
        0xad766df6,
        0x88cc7691,
        0xf5024c25,
        0x4fe5d7fc,
        0xc52acbd7,
        0x26354480,
        0xb562a38f,
        0xdeb15a49,
        0x25ba1b67,
        0x45ea0e98,
        0x5dfec0e1,
        0xc32f7502,
        0x814cf012,
        0x8d4697a3,
        0x6bd3f9c6,
        0x038f5fe7,
        0x15929c95,
        0xbf6d7aeb,
        0x955259da,
        0xd4be832d,
        0x587421d3,
        0x49e06929,
        0x8ec9c844,
        0x75c2896a,
        0xf48e7978,
        0x99583e6b,
        0x27b971dd,
        0xbee14fb6,
        0xf088ad17,
        0xc920ac66,
        0x7dce3ab4,
        0x63df4a18,
        0xe51a3182,
        0x97513360,
        0x62537f45,
        0xb16477e0,
        0xbb6bae84,
        0xfe81a01c,
        0xf9082b94,
        0x70486858,
        0x8f45fd19,
        0x94de6c87,
        0x527bf8b7,
        0xab73d323,
        0x724b02e2,
        0xe31f8f57,
        0x6655ab2a,
        0xb2eb2807,
        0x2fb5c203,
        0x86c57b9a,
        0xd33708a5,
        0x302887f2,
        0x23bfa5b2,
        0x02036aba,
        0xed16825c,
        0x8acf1c2b,
        0xa779b492,
        0xf307f2f0,
        0x4e69e2a1,
        0x65daf4cd,
        0x0605bed5,
        0xd134621f,
        0xc4a6fe8a,
        0x342e539d,
        0xa2f355a0,
        0x058ae132,
        0xa4f6eb75,
        0x0b83ec39,
        0x4060efaa,
        0x5e719f06,
        0xbd6e1051,
        0x3e218af9,
        0x96dd063d,
        0xdd3e05ae,
        0x4de6bd46,
        0x91548db5,
        0x71c45d05,
        0x0406d46f,
        0x605015ff,
        0x1998fb24,
        0xd6bde997,
        0x894043cc,
        0x67d99e77,
        0xb0e842bd,
        0x07898b88,
        0xe7195b38,
        0x79c8eedb,
        0xa17c0a47,
        0x7c420fe9,
        0xf8841ec9,
        0x00000000,
        0x09808683,
        0x322bed48,
        0x1e1170ac,
        0x6c5a724e,
        0xfd0efffb,
        0x0f853856,
        0x3daed51e,
        0x362d3927,
        0x0a0fd964,
        0x685ca621,
        0x9b5b54d1,
        0x24362e3a,
        0x0c0a67b1,
        0x9357e70f,
        0xb4ee96d2,
        0x1b9b919e,
        0x80c0c54f,
        0x61dc20a2,
        0x5a774b69,
        0x1c121a16,
        0xe293ba0a,
        0xc0a02ae5,
        0x3c22e043,
        0x121b171d,
        0x0e090d0b,
        0xf28bc7ad,
        0x2db6a8b9,
        0x141ea9c8,
        0x57f11985,
        0xaf75074c,
        0xee99ddbb,
        0xa37f60fd,
        0xf701269f,
        0x5c72f5bc,
        0x44663bc5,
        0x5bfb7e34,
        0x8b432976,
        0xcb23c6dc,
        0xb6edfc68,
        0xb8e4f163,
        0xd731dcca,
        0x42638510,
        0x13972240,
        0x84c61120,
        0x854a247d,
        0xd2bb3df8,
        0xaef93211,
        0xc729a16d,
        0x1d9e2f4b,
        0xdcb230f3,
        0x0d8652ec,
        0x77c1e3d0,
        0x2bb3166c,
        0xa970b999,
        0x119448fa,
        0x47e96422,
        0xa8fc8cc4,
        0xa0f03f1a,
        0x567d2cd8,
        0x223390ef,
        0x87494ec7,
        0xd938d1c1,
        0x8ccaa2fe,
        0x98d40b36,
        0xa6f581cf,
        0xa57ade28,
        0xdab78e26,
        0x3fadbfa4,
        0x2c3a9de4,
        0x5078920d,
        0x6a5fcc9b,
        0x547e4662,
        0xf68d13c2,
        0x90d8b8e8,
        0x2e39f75e,
        0x82c3aff5,
        0x9f5d80be,
        0x69d0937c,
        0x6fd52da9,
        0xcf2512b3,
        0xc8ac993b,
        0x10187da7,
        0xe89c636e,
        0xdb3bbb7b,
        0xcd267809,
        0x6e5918f4,
        0xec9ab701,
        0x834f9aa8,
        0xe6956e65,
        0xaaffe67e,
        0x21bccf08,
        0xef15e8e6,
        0xbae79bd9,
        0x4a6f36ce,
        0xea9f09d4,
        0x29b07cd6,
        0x31a4b2af,
        0x2a3f2331,
        0xc6a59430,
        0x35a266c0,
        0x744ebc37,
        0xfc82caa6,
        0xe090d0b0,
        0x33a7d815,
        0xf104984a,
        0x41ecdaf7,
        0x7fcd500e,
        0x1791f62f,
        0x764dd68d,
        0x43efb04d,
        0xccaa4d54,
        0xe49604df,
        0x9ed1b5e3,
        0x4c6a881b,
        0xc12c1fb8,
        0x4665517f,
        0x9d5eea04,
        0x018c355d,
        0xfa877473,
        0xfb0b412e,
        0xb3671d5a,
        0x92dbd252,
        0xe9105633,
        0x6dd64713,
        0x9ad7618c,
        0x37a10c7a,
        0x59f8148e,
        0xeb133c89,
        0xcea927ee,
        0xb761c935,
        0xe11ce5ed,
        0x7a47b13c,
        0x9cd2df59,
        0x55f2733f,
        0x1814ce79,
        0x73c737bf,
        0x53f7cdea,
        0x5ffdaa5b,
        0xdf3d6f14,
        0x7844db86,
        0xcaaff381,
        0xb968c43e,
        0x3824342c,
        0xc2a3405f,
        0x161dc372,
        0xbce2250c,
        0x283c498b,
        0xff0d9541,
        0x39a80171,
        0x080cb3de,
        0xd8b4e49c,
        0x6456c190,
        0x7bcb8461,
        0xd532b670,
        0x486c5c74,
        0xd0b85742
    ];
    var T6 = [
        0x5051f4a7,
        0x537e4165,
        0xc31a17a4,
        0x963a275e,
        0xcb3bab6b,
        0xf11f9d45,
        0xabacfa58,
        0x934be303,
        0x552030fa,
        0xf6ad766d,
        0x9188cc76,
        0x25f5024c,
        0xfc4fe5d7,
        0xd7c52acb,
        0x80263544,
        0x8fb562a3,
        0x49deb15a,
        0x6725ba1b,
        0x9845ea0e,
        0xe15dfec0,
        0x02c32f75,
        0x12814cf0,
        0xa38d4697,
        0xc66bd3f9,
        0xe7038f5f,
        0x9515929c,
        0xebbf6d7a,
        0xda955259,
        0x2dd4be83,
        0xd3587421,
        0x2949e069,
        0x448ec9c8,
        0x6a75c289,
        0x78f48e79,
        0x6b99583e,
        0xdd27b971,
        0xb6bee14f,
        0x17f088ad,
        0x66c920ac,
        0xb47dce3a,
        0x1863df4a,
        0x82e51a31,
        0x60975133,
        0x4562537f,
        0xe0b16477,
        0x84bb6bae,
        0x1cfe81a0,
        0x94f9082b,
        0x58704868,
        0x198f45fd,
        0x8794de6c,
        0xb7527bf8,
        0x23ab73d3,
        0xe2724b02,
        0x57e31f8f,
        0x2a6655ab,
        0x07b2eb28,
        0x032fb5c2,
        0x9a86c57b,
        0xa5d33708,
        0xf2302887,
        0xb223bfa5,
        0xba02036a,
        0x5ced1682,
        0x2b8acf1c,
        0x92a779b4,
        0xf0f307f2,
        0xa14e69e2,
        0xcd65daf4,
        0xd50605be,
        0x1fd13462,
        0x8ac4a6fe,
        0x9d342e53,
        0xa0a2f355,
        0x32058ae1,
        0x75a4f6eb,
        0x390b83ec,
        0xaa4060ef,
        0x065e719f,
        0x51bd6e10,
        0xf93e218a,
        0x3d96dd06,
        0xaedd3e05,
        0x464de6bd,
        0xb591548d,
        0x0571c45d,
        0x6f0406d4,
        0xff605015,
        0x241998fb,
        0x97d6bde9,
        0xcc894043,
        0x7767d99e,
        0xbdb0e842,
        0x8807898b,
        0x38e7195b,
        0xdb79c8ee,
        0x47a17c0a,
        0xe97c420f,
        0xc9f8841e,
        0x00000000,
        0x83098086,
        0x48322bed,
        0xac1e1170,
        0x4e6c5a72,
        0xfbfd0eff,
        0x560f8538,
        0x1e3daed5,
        0x27362d39,
        0x640a0fd9,
        0x21685ca6,
        0xd19b5b54,
        0x3a24362e,
        0xb10c0a67,
        0x0f9357e7,
        0xd2b4ee96,
        0x9e1b9b91,
        0x4f80c0c5,
        0xa261dc20,
        0x695a774b,
        0x161c121a,
        0x0ae293ba,
        0xe5c0a02a,
        0x433c22e0,
        0x1d121b17,
        0x0b0e090d,
        0xadf28bc7,
        0xb92db6a8,
        0xc8141ea9,
        0x8557f119,
        0x4caf7507,
        0xbbee99dd,
        0xfda37f60,
        0x9ff70126,
        0xbc5c72f5,
        0xc544663b,
        0x345bfb7e,
        0x768b4329,
        0xdccb23c6,
        0x68b6edfc,
        0x63b8e4f1,
        0xcad731dc,
        0x10426385,
        0x40139722,
        0x2084c611,
        0x7d854a24,
        0xf8d2bb3d,
        0x11aef932,
        0x6dc729a1,
        0x4b1d9e2f,
        0xf3dcb230,
        0xec0d8652,
        0xd077c1e3,
        0x6c2bb316,
        0x99a970b9,
        0xfa119448,
        0x2247e964,
        0xc4a8fc8c,
        0x1aa0f03f,
        0xd8567d2c,
        0xef223390,
        0xc787494e,
        0xc1d938d1,
        0xfe8ccaa2,
        0x3698d40b,
        0xcfa6f581,
        0x28a57ade,
        0x26dab78e,
        0xa43fadbf,
        0xe42c3a9d,
        0x0d507892,
        0x9b6a5fcc,
        0x62547e46,
        0xc2f68d13,
        0xe890d8b8,
        0x5e2e39f7,
        0xf582c3af,
        0xbe9f5d80,
        0x7c69d093,
        0xa96fd52d,
        0xb3cf2512,
        0x3bc8ac99,
        0xa710187d,
        0x6ee89c63,
        0x7bdb3bbb,
        0x09cd2678,
        0xf46e5918,
        0x01ec9ab7,
        0xa8834f9a,
        0x65e6956e,
        0x7eaaffe6,
        0x0821bccf,
        0xe6ef15e8,
        0xd9bae79b,
        0xce4a6f36,
        0xd4ea9f09,
        0xd629b07c,
        0xaf31a4b2,
        0x312a3f23,
        0x30c6a594,
        0xc035a266,
        0x37744ebc,
        0xa6fc82ca,
        0xb0e090d0,
        0x1533a7d8,
        0x4af10498,
        0xf741ecda,
        0x0e7fcd50,
        0x2f1791f6,
        0x8d764dd6,
        0x4d43efb0,
        0x54ccaa4d,
        0xdfe49604,
        0xe39ed1b5,
        0x1b4c6a88,
        0xb8c12c1f,
        0x7f466551,
        0x049d5eea,
        0x5d018c35,
        0x73fa8774,
        0x2efb0b41,
        0x5ab3671d,
        0x5292dbd2,
        0x33e91056,
        0x136dd647,
        0x8c9ad761,
        0x7a37a10c,
        0x8e59f814,
        0x89eb133c,
        0xeecea927,
        0x35b761c9,
        0xede11ce5,
        0x3c7a47b1,
        0x599cd2df,
        0x3f55f273,
        0x791814ce,
        0xbf73c737,
        0xea53f7cd,
        0x5b5ffdaa,
        0x14df3d6f,
        0x867844db,
        0x81caaff3,
        0x3eb968c4,
        0x2c382434,
        0x5fc2a340,
        0x72161dc3,
        0x0cbce225,
        0x8b283c49,
        0x41ff0d95,
        0x7139a801,
        0xde080cb3,
        0x9cd8b4e4,
        0x906456c1,
        0x617bcb84,
        0x70d532b6,
        0x74486c5c,
        0x42d0b857
    ];
    var T7 = [
        0xa75051f4,
        0x65537e41,
        0xa4c31a17,
        0x5e963a27,
        0x6bcb3bab,
        0x45f11f9d,
        0x58abacfa,
        0x03934be3,
        0xfa552030,
        0x6df6ad76,
        0x769188cc,
        0x4c25f502,
        0xd7fc4fe5,
        0xcbd7c52a,
        0x44802635,
        0xa38fb562,
        0x5a49deb1,
        0x1b6725ba,
        0x0e9845ea,
        0xc0e15dfe,
        0x7502c32f,
        0xf012814c,
        0x97a38d46,
        0xf9c66bd3,
        0x5fe7038f,
        0x9c951592,
        0x7aebbf6d,
        0x59da9552,
        0x832dd4be,
        0x21d35874,
        0x692949e0,
        0xc8448ec9,
        0x896a75c2,
        0x7978f48e,
        0x3e6b9958,
        0x71dd27b9,
        0x4fb6bee1,
        0xad17f088,
        0xac66c920,
        0x3ab47dce,
        0x4a1863df,
        0x3182e51a,
        0x33609751,
        0x7f456253,
        0x77e0b164,
        0xae84bb6b,
        0xa01cfe81,
        0x2b94f908,
        0x68587048,
        0xfd198f45,
        0x6c8794de,
        0xf8b7527b,
        0xd323ab73,
        0x02e2724b,
        0x8f57e31f,
        0xab2a6655,
        0x2807b2eb,
        0xc2032fb5,
        0x7b9a86c5,
        0x08a5d337,
        0x87f23028,
        0xa5b223bf,
        0x6aba0203,
        0x825ced16,
        0x1c2b8acf,
        0xb492a779,
        0xf2f0f307,
        0xe2a14e69,
        0xf4cd65da,
        0xbed50605,
        0x621fd134,
        0xfe8ac4a6,
        0x539d342e,
        0x55a0a2f3,
        0xe132058a,
        0xeb75a4f6,
        0xec390b83,
        0xefaa4060,
        0x9f065e71,
        0x1051bd6e,
        0x8af93e21,
        0x063d96dd,
        0x05aedd3e,
        0xbd464de6,
        0x8db59154,
        0x5d0571c4,
        0xd46f0406,
        0x15ff6050,
        0xfb241998,
        0xe997d6bd,
        0x43cc8940,
        0x9e7767d9,
        0x42bdb0e8,
        0x8b880789,
        0x5b38e719,
        0xeedb79c8,
        0x0a47a17c,
        0x0fe97c42,
        0x1ec9f884,
        0x00000000,
        0x86830980,
        0xed48322b,
        0x70ac1e11,
        0x724e6c5a,
        0xfffbfd0e,
        0x38560f85,
        0xd51e3dae,
        0x3927362d,
        0xd9640a0f,
        0xa621685c,
        0x54d19b5b,
        0x2e3a2436,
        0x67b10c0a,
        0xe70f9357,
        0x96d2b4ee,
        0x919e1b9b,
        0xc54f80c0,
        0x20a261dc,
        0x4b695a77,
        0x1a161c12,
        0xba0ae293,
        0x2ae5c0a0,
        0xe0433c22,
        0x171d121b,
        0x0d0b0e09,
        0xc7adf28b,
        0xa8b92db6,
        0xa9c8141e,
        0x198557f1,
        0x074caf75,
        0xddbbee99,
        0x60fda37f,
        0x269ff701,
        0xf5bc5c72,
        0x3bc54466,
        0x7e345bfb,
        0x29768b43,
        0xc6dccb23,
        0xfc68b6ed,
        0xf163b8e4,
        0xdccad731,
        0x85104263,
        0x22401397,
        0x112084c6,
        0x247d854a,
        0x3df8d2bb,
        0x3211aef9,
        0xa16dc729,
        0x2f4b1d9e,
        0x30f3dcb2,
        0x52ec0d86,
        0xe3d077c1,
        0x166c2bb3,
        0xb999a970,
        0x48fa1194,
        0x642247e9,
        0x8cc4a8fc,
        0x3f1aa0f0,
        0x2cd8567d,
        0x90ef2233,
        0x4ec78749,
        0xd1c1d938,
        0xa2fe8cca,
        0x0b3698d4,
        0x81cfa6f5,
        0xde28a57a,
        0x8e26dab7,
        0xbfa43fad,
        0x9de42c3a,
        0x920d5078,
        0xcc9b6a5f,
        0x4662547e,
        0x13c2f68d,
        0xb8e890d8,
        0xf75e2e39,
        0xaff582c3,
        0x80be9f5d,
        0x937c69d0,
        0x2da96fd5,
        0x12b3cf25,
        0x993bc8ac,
        0x7da71018,
        0x636ee89c,
        0xbb7bdb3b,
        0x7809cd26,
        0x18f46e59,
        0xb701ec9a,
        0x9aa8834f,
        0x6e65e695,
        0xe67eaaff,
        0xcf0821bc,
        0xe8e6ef15,
        0x9bd9bae7,
        0x36ce4a6f,
        0x09d4ea9f,
        0x7cd629b0,
        0xb2af31a4,
        0x23312a3f,
        0x9430c6a5,
        0x66c035a2,
        0xbc37744e,
        0xcaa6fc82,
        0xd0b0e090,
        0xd81533a7,
        0x984af104,
        0xdaf741ec,
        0x500e7fcd,
        0xf62f1791,
        0xd68d764d,
        0xb04d43ef,
        0x4d54ccaa,
        0x04dfe496,
        0xb5e39ed1,
        0x881b4c6a,
        0x1fb8c12c,
        0x517f4665,
        0xea049d5e,
        0x355d018c,
        0x7473fa87,
        0x412efb0b,
        0x1d5ab367,
        0xd25292db,
        0x5633e910,
        0x47136dd6,
        0x618c9ad7,
        0x0c7a37a1,
        0x148e59f8,
        0x3c89eb13,
        0x27eecea9,
        0xc935b761,
        0xe5ede11c,
        0xb13c7a47,
        0xdf599cd2,
        0x733f55f2,
        0xce791814,
        0x37bf73c7,
        0xcdea53f7,
        0xaa5b5ffd,
        0x6f14df3d,
        0xdb867844,
        0xf381caaf,
        0xc43eb968,
        0x342c3824,
        0x405fc2a3,
        0xc372161d,
        0x250cbce2,
        0x498b283c,
        0x9541ff0d,
        0x017139a8,
        0xb3de080c,
        0xe49cd8b4,
        0xc1906456,
        0x84617bcb,
        0xb670d532,
        0x5c74486c,
        0x5742d0b8
    ];
    var T8 = [
        0xf4a75051,
        0x4165537e,
        0x17a4c31a,
        0x275e963a,
        0xab6bcb3b,
        0x9d45f11f,
        0xfa58abac,
        0xe303934b,
        0x30fa5520,
        0x766df6ad,
        0xcc769188,
        0x024c25f5,
        0xe5d7fc4f,
        0x2acbd7c5,
        0x35448026,
        0x62a38fb5,
        0xb15a49de,
        0xba1b6725,
        0xea0e9845,
        0xfec0e15d,
        0x2f7502c3,
        0x4cf01281,
        0x4697a38d,
        0xd3f9c66b,
        0x8f5fe703,
        0x929c9515,
        0x6d7aebbf,
        0x5259da95,
        0xbe832dd4,
        0x7421d358,
        0xe0692949,
        0xc9c8448e,
        0xc2896a75,
        0x8e7978f4,
        0x583e6b99,
        0xb971dd27,
        0xe14fb6be,
        0x88ad17f0,
        0x20ac66c9,
        0xce3ab47d,
        0xdf4a1863,
        0x1a3182e5,
        0x51336097,
        0x537f4562,
        0x6477e0b1,
        0x6bae84bb,
        0x81a01cfe,
        0x082b94f9,
        0x48685870,
        0x45fd198f,
        0xde6c8794,
        0x7bf8b752,
        0x73d323ab,
        0x4b02e272,
        0x1f8f57e3,
        0x55ab2a66,
        0xeb2807b2,
        0xb5c2032f,
        0xc57b9a86,
        0x3708a5d3,
        0x2887f230,
        0xbfa5b223,
        0x036aba02,
        0x16825ced,
        0xcf1c2b8a,
        0x79b492a7,
        0x07f2f0f3,
        0x69e2a14e,
        0xdaf4cd65,
        0x05bed506,
        0x34621fd1,
        0xa6fe8ac4,
        0x2e539d34,
        0xf355a0a2,
        0x8ae13205,
        0xf6eb75a4,
        0x83ec390b,
        0x60efaa40,
        0x719f065e,
        0x6e1051bd,
        0x218af93e,
        0xdd063d96,
        0x3e05aedd,
        0xe6bd464d,
        0x548db591,
        0xc45d0571,
        0x06d46f04,
        0x5015ff60,
        0x98fb2419,
        0xbde997d6,
        0x4043cc89,
        0xd99e7767,
        0xe842bdb0,
        0x898b8807,
        0x195b38e7,
        0xc8eedb79,
        0x7c0a47a1,
        0x420fe97c,
        0x841ec9f8,
        0x00000000,
        0x80868309,
        0x2bed4832,
        0x1170ac1e,
        0x5a724e6c,
        0x0efffbfd,
        0x8538560f,
        0xaed51e3d,
        0x2d392736,
        0x0fd9640a,
        0x5ca62168,
        0x5b54d19b,
        0x362e3a24,
        0x0a67b10c,
        0x57e70f93,
        0xee96d2b4,
        0x9b919e1b,
        0xc0c54f80,
        0xdc20a261,
        0x774b695a,
        0x121a161c,
        0x93ba0ae2,
        0xa02ae5c0,
        0x22e0433c,
        0x1b171d12,
        0x090d0b0e,
        0x8bc7adf2,
        0xb6a8b92d,
        0x1ea9c814,
        0xf1198557,
        0x75074caf,
        0x99ddbbee,
        0x7f60fda3,
        0x01269ff7,
        0x72f5bc5c,
        0x663bc544,
        0xfb7e345b,
        0x4329768b,
        0x23c6dccb,
        0xedfc68b6,
        0xe4f163b8,
        0x31dccad7,
        0x63851042,
        0x97224013,
        0xc6112084,
        0x4a247d85,
        0xbb3df8d2,
        0xf93211ae,
        0x29a16dc7,
        0x9e2f4b1d,
        0xb230f3dc,
        0x8652ec0d,
        0xc1e3d077,
        0xb3166c2b,
        0x70b999a9,
        0x9448fa11,
        0xe9642247,
        0xfc8cc4a8,
        0xf03f1aa0,
        0x7d2cd856,
        0x3390ef22,
        0x494ec787,
        0x38d1c1d9,
        0xcaa2fe8c,
        0xd40b3698,
        0xf581cfa6,
        0x7ade28a5,
        0xb78e26da,
        0xadbfa43f,
        0x3a9de42c,
        0x78920d50,
        0x5fcc9b6a,
        0x7e466254,
        0x8d13c2f6,
        0xd8b8e890,
        0x39f75e2e,
        0xc3aff582,
        0x5d80be9f,
        0xd0937c69,
        0xd52da96f,
        0x2512b3cf,
        0xac993bc8,
        0x187da710,
        0x9c636ee8,
        0x3bbb7bdb,
        0x267809cd,
        0x5918f46e,
        0x9ab701ec,
        0x4f9aa883,
        0x956e65e6,
        0xffe67eaa,
        0xbccf0821,
        0x15e8e6ef,
        0xe79bd9ba,
        0x6f36ce4a,
        0x9f09d4ea,
        0xb07cd629,
        0xa4b2af31,
        0x3f23312a,
        0xa59430c6,
        0xa266c035,
        0x4ebc3774,
        0x82caa6fc,
        0x90d0b0e0,
        0xa7d81533,
        0x04984af1,
        0xecdaf741,
        0xcd500e7f,
        0x91f62f17,
        0x4dd68d76,
        0xefb04d43,
        0xaa4d54cc,
        0x9604dfe4,
        0xd1b5e39e,
        0x6a881b4c,
        0x2c1fb8c1,
        0x65517f46,
        0x5eea049d,
        0x8c355d01,
        0x877473fa,
        0x0b412efb,
        0x671d5ab3,
        0xdbd25292,
        0x105633e9,
        0xd647136d,
        0xd7618c9a,
        0xa10c7a37,
        0xf8148e59,
        0x133c89eb,
        0xa927eece,
        0x61c935b7,
        0x1ce5ede1,
        0x47b13c7a,
        0xd2df599c,
        0xf2733f55,
        0x14ce7918,
        0xc737bf73,
        0xf7cdea53,
        0xfdaa5b5f,
        0x3d6f14df,
        0x44db8678,
        0xaff381ca,
        0x68c43eb9,
        0x24342c38,
        0xa3405fc2,
        0x1dc37216,
        0xe2250cbc,
        0x3c498b28,
        0x0d9541ff,
        0xa8017139,
        0x0cb3de08,
        0xb4e49cd8,
        0x56c19064,
        0xcb84617b,
        0x32b670d5,
        0x6c5c7448,
        0xb85742d0
    ];
    // Transformations for decryption key expansion
    var U1 = [
        0x00000000,
        0x0e090d0b,
        0x1c121a16,
        0x121b171d,
        0x3824342c,
        0x362d3927,
        0x24362e3a,
        0x2a3f2331,
        0x70486858,
        0x7e416553,
        0x6c5a724e,
        0x62537f45,
        0x486c5c74,
        0x4665517f,
        0x547e4662,
        0x5a774b69,
        0xe090d0b0,
        0xee99ddbb,
        0xfc82caa6,
        0xf28bc7ad,
        0xd8b4e49c,
        0xd6bde997,
        0xc4a6fe8a,
        0xcaaff381,
        0x90d8b8e8,
        0x9ed1b5e3,
        0x8ccaa2fe,
        0x82c3aff5,
        0xa8fc8cc4,
        0xa6f581cf,
        0xb4ee96d2,
        0xbae79bd9,
        0xdb3bbb7b,
        0xd532b670,
        0xc729a16d,
        0xc920ac66,
        0xe31f8f57,
        0xed16825c,
        0xff0d9541,
        0xf104984a,
        0xab73d323,
        0xa57ade28,
        0xb761c935,
        0xb968c43e,
        0x9357e70f,
        0x9d5eea04,
        0x8f45fd19,
        0x814cf012,
        0x3bab6bcb,
        0x35a266c0,
        0x27b971dd,
        0x29b07cd6,
        0x038f5fe7,
        0x0d8652ec,
        0x1f9d45f1,
        0x119448fa,
        0x4be30393,
        0x45ea0e98,
        0x57f11985,
        0x59f8148e,
        0x73c737bf,
        0x7dce3ab4,
        0x6fd52da9,
        0x61dc20a2,
        0xad766df6,
        0xa37f60fd,
        0xb16477e0,
        0xbf6d7aeb,
        0x955259da,
        0x9b5b54d1,
        0x894043cc,
        0x87494ec7,
        0xdd3e05ae,
        0xd33708a5,
        0xc12c1fb8,
        0xcf2512b3,
        0xe51a3182,
        0xeb133c89,
        0xf9082b94,
        0xf701269f,
        0x4de6bd46,
        0x43efb04d,
        0x51f4a750,
        0x5ffdaa5b,
        0x75c2896a,
        0x7bcb8461,
        0x69d0937c,
        0x67d99e77,
        0x3daed51e,
        0x33a7d815,
        0x21bccf08,
        0x2fb5c203,
        0x058ae132,
        0x0b83ec39,
        0x1998fb24,
        0x1791f62f,
        0x764dd68d,
        0x7844db86,
        0x6a5fcc9b,
        0x6456c190,
        0x4e69e2a1,
        0x4060efaa,
        0x527bf8b7,
        0x5c72f5bc,
        0x0605bed5,
        0x080cb3de,
        0x1a17a4c3,
        0x141ea9c8,
        0x3e218af9,
        0x302887f2,
        0x223390ef,
        0x2c3a9de4,
        0x96dd063d,
        0x98d40b36,
        0x8acf1c2b,
        0x84c61120,
        0xaef93211,
        0xa0f03f1a,
        0xb2eb2807,
        0xbce2250c,
        0xe6956e65,
        0xe89c636e,
        0xfa877473,
        0xf48e7978,
        0xdeb15a49,
        0xd0b85742,
        0xc2a3405f,
        0xccaa4d54,
        0x41ecdaf7,
        0x4fe5d7fc,
        0x5dfec0e1,
        0x53f7cdea,
        0x79c8eedb,
        0x77c1e3d0,
        0x65daf4cd,
        0x6bd3f9c6,
        0x31a4b2af,
        0x3fadbfa4,
        0x2db6a8b9,
        0x23bfa5b2,
        0x09808683,
        0x07898b88,
        0x15929c95,
        0x1b9b919e,
        0xa17c0a47,
        0xaf75074c,
        0xbd6e1051,
        0xb3671d5a,
        0x99583e6b,
        0x97513360,
        0x854a247d,
        0x8b432976,
        0xd134621f,
        0xdf3d6f14,
        0xcd267809,
        0xc32f7502,
        0xe9105633,
        0xe7195b38,
        0xf5024c25,
        0xfb0b412e,
        0x9ad7618c,
        0x94de6c87,
        0x86c57b9a,
        0x88cc7691,
        0xa2f355a0,
        0xacfa58ab,
        0xbee14fb6,
        0xb0e842bd,
        0xea9f09d4,
        0xe49604df,
        0xf68d13c2,
        0xf8841ec9,
        0xd2bb3df8,
        0xdcb230f3,
        0xcea927ee,
        0xc0a02ae5,
        0x7a47b13c,
        0x744ebc37,
        0x6655ab2a,
        0x685ca621,
        0x42638510,
        0x4c6a881b,
        0x5e719f06,
        0x5078920d,
        0x0a0fd964,
        0x0406d46f,
        0x161dc372,
        0x1814ce79,
        0x322bed48,
        0x3c22e043,
        0x2e39f75e,
        0x2030fa55,
        0xec9ab701,
        0xe293ba0a,
        0xf088ad17,
        0xfe81a01c,
        0xd4be832d,
        0xdab78e26,
        0xc8ac993b,
        0xc6a59430,
        0x9cd2df59,
        0x92dbd252,
        0x80c0c54f,
        0x8ec9c844,
        0xa4f6eb75,
        0xaaffe67e,
        0xb8e4f163,
        0xb6edfc68,
        0x0c0a67b1,
        0x02036aba,
        0x10187da7,
        0x1e1170ac,
        0x342e539d,
        0x3a275e96,
        0x283c498b,
        0x26354480,
        0x7c420fe9,
        0x724b02e2,
        0x605015ff,
        0x6e5918f4,
        0x44663bc5,
        0x4a6f36ce,
        0x587421d3,
        0x567d2cd8,
        0x37a10c7a,
        0x39a80171,
        0x2bb3166c,
        0x25ba1b67,
        0x0f853856,
        0x018c355d,
        0x13972240,
        0x1d9e2f4b,
        0x47e96422,
        0x49e06929,
        0x5bfb7e34,
        0x55f2733f,
        0x7fcd500e,
        0x71c45d05,
        0x63df4a18,
        0x6dd64713,
        0xd731dcca,
        0xd938d1c1,
        0xcb23c6dc,
        0xc52acbd7,
        0xef15e8e6,
        0xe11ce5ed,
        0xf307f2f0,
        0xfd0efffb,
        0xa779b492,
        0xa970b999,
        0xbb6bae84,
        0xb562a38f,
        0x9f5d80be,
        0x91548db5,
        0x834f9aa8,
        0x8d4697a3
    ];
    var U2 = [
        0x00000000,
        0x0b0e090d,
        0x161c121a,
        0x1d121b17,
        0x2c382434,
        0x27362d39,
        0x3a24362e,
        0x312a3f23,
        0x58704868,
        0x537e4165,
        0x4e6c5a72,
        0x4562537f,
        0x74486c5c,
        0x7f466551,
        0x62547e46,
        0x695a774b,
        0xb0e090d0,
        0xbbee99dd,
        0xa6fc82ca,
        0xadf28bc7,
        0x9cd8b4e4,
        0x97d6bde9,
        0x8ac4a6fe,
        0x81caaff3,
        0xe890d8b8,
        0xe39ed1b5,
        0xfe8ccaa2,
        0xf582c3af,
        0xc4a8fc8c,
        0xcfa6f581,
        0xd2b4ee96,
        0xd9bae79b,
        0x7bdb3bbb,
        0x70d532b6,
        0x6dc729a1,
        0x66c920ac,
        0x57e31f8f,
        0x5ced1682,
        0x41ff0d95,
        0x4af10498,
        0x23ab73d3,
        0x28a57ade,
        0x35b761c9,
        0x3eb968c4,
        0x0f9357e7,
        0x049d5eea,
        0x198f45fd,
        0x12814cf0,
        0xcb3bab6b,
        0xc035a266,
        0xdd27b971,
        0xd629b07c,
        0xe7038f5f,
        0xec0d8652,
        0xf11f9d45,
        0xfa119448,
        0x934be303,
        0x9845ea0e,
        0x8557f119,
        0x8e59f814,
        0xbf73c737,
        0xb47dce3a,
        0xa96fd52d,
        0xa261dc20,
        0xf6ad766d,
        0xfda37f60,
        0xe0b16477,
        0xebbf6d7a,
        0xda955259,
        0xd19b5b54,
        0xcc894043,
        0xc787494e,
        0xaedd3e05,
        0xa5d33708,
        0xb8c12c1f,
        0xb3cf2512,
        0x82e51a31,
        0x89eb133c,
        0x94f9082b,
        0x9ff70126,
        0x464de6bd,
        0x4d43efb0,
        0x5051f4a7,
        0x5b5ffdaa,
        0x6a75c289,
        0x617bcb84,
        0x7c69d093,
        0x7767d99e,
        0x1e3daed5,
        0x1533a7d8,
        0x0821bccf,
        0x032fb5c2,
        0x32058ae1,
        0x390b83ec,
        0x241998fb,
        0x2f1791f6,
        0x8d764dd6,
        0x867844db,
        0x9b6a5fcc,
        0x906456c1,
        0xa14e69e2,
        0xaa4060ef,
        0xb7527bf8,
        0xbc5c72f5,
        0xd50605be,
        0xde080cb3,
        0xc31a17a4,
        0xc8141ea9,
        0xf93e218a,
        0xf2302887,
        0xef223390,
        0xe42c3a9d,
        0x3d96dd06,
        0x3698d40b,
        0x2b8acf1c,
        0x2084c611,
        0x11aef932,
        0x1aa0f03f,
        0x07b2eb28,
        0x0cbce225,
        0x65e6956e,
        0x6ee89c63,
        0x73fa8774,
        0x78f48e79,
        0x49deb15a,
        0x42d0b857,
        0x5fc2a340,
        0x54ccaa4d,
        0xf741ecda,
        0xfc4fe5d7,
        0xe15dfec0,
        0xea53f7cd,
        0xdb79c8ee,
        0xd077c1e3,
        0xcd65daf4,
        0xc66bd3f9,
        0xaf31a4b2,
        0xa43fadbf,
        0xb92db6a8,
        0xb223bfa5,
        0x83098086,
        0x8807898b,
        0x9515929c,
        0x9e1b9b91,
        0x47a17c0a,
        0x4caf7507,
        0x51bd6e10,
        0x5ab3671d,
        0x6b99583e,
        0x60975133,
        0x7d854a24,
        0x768b4329,
        0x1fd13462,
        0x14df3d6f,
        0x09cd2678,
        0x02c32f75,
        0x33e91056,
        0x38e7195b,
        0x25f5024c,
        0x2efb0b41,
        0x8c9ad761,
        0x8794de6c,
        0x9a86c57b,
        0x9188cc76,
        0xa0a2f355,
        0xabacfa58,
        0xb6bee14f,
        0xbdb0e842,
        0xd4ea9f09,
        0xdfe49604,
        0xc2f68d13,
        0xc9f8841e,
        0xf8d2bb3d,
        0xf3dcb230,
        0xeecea927,
        0xe5c0a02a,
        0x3c7a47b1,
        0x37744ebc,
        0x2a6655ab,
        0x21685ca6,
        0x10426385,
        0x1b4c6a88,
        0x065e719f,
        0x0d507892,
        0x640a0fd9,
        0x6f0406d4,
        0x72161dc3,
        0x791814ce,
        0x48322bed,
        0x433c22e0,
        0x5e2e39f7,
        0x552030fa,
        0x01ec9ab7,
        0x0ae293ba,
        0x17f088ad,
        0x1cfe81a0,
        0x2dd4be83,
        0x26dab78e,
        0x3bc8ac99,
        0x30c6a594,
        0x599cd2df,
        0x5292dbd2,
        0x4f80c0c5,
        0x448ec9c8,
        0x75a4f6eb,
        0x7eaaffe6,
        0x63b8e4f1,
        0x68b6edfc,
        0xb10c0a67,
        0xba02036a,
        0xa710187d,
        0xac1e1170,
        0x9d342e53,
        0x963a275e,
        0x8b283c49,
        0x80263544,
        0xe97c420f,
        0xe2724b02,
        0xff605015,
        0xf46e5918,
        0xc544663b,
        0xce4a6f36,
        0xd3587421,
        0xd8567d2c,
        0x7a37a10c,
        0x7139a801,
        0x6c2bb316,
        0x6725ba1b,
        0x560f8538,
        0x5d018c35,
        0x40139722,
        0x4b1d9e2f,
        0x2247e964,
        0x2949e069,
        0x345bfb7e,
        0x3f55f273,
        0x0e7fcd50,
        0x0571c45d,
        0x1863df4a,
        0x136dd647,
        0xcad731dc,
        0xc1d938d1,
        0xdccb23c6,
        0xd7c52acb,
        0xe6ef15e8,
        0xede11ce5,
        0xf0f307f2,
        0xfbfd0eff,
        0x92a779b4,
        0x99a970b9,
        0x84bb6bae,
        0x8fb562a3,
        0xbe9f5d80,
        0xb591548d,
        0xa8834f9a,
        0xa38d4697
    ];
    var U3 = [
        0x00000000,
        0x0d0b0e09,
        0x1a161c12,
        0x171d121b,
        0x342c3824,
        0x3927362d,
        0x2e3a2436,
        0x23312a3f,
        0x68587048,
        0x65537e41,
        0x724e6c5a,
        0x7f456253,
        0x5c74486c,
        0x517f4665,
        0x4662547e,
        0x4b695a77,
        0xd0b0e090,
        0xddbbee99,
        0xcaa6fc82,
        0xc7adf28b,
        0xe49cd8b4,
        0xe997d6bd,
        0xfe8ac4a6,
        0xf381caaf,
        0xb8e890d8,
        0xb5e39ed1,
        0xa2fe8cca,
        0xaff582c3,
        0x8cc4a8fc,
        0x81cfa6f5,
        0x96d2b4ee,
        0x9bd9bae7,
        0xbb7bdb3b,
        0xb670d532,
        0xa16dc729,
        0xac66c920,
        0x8f57e31f,
        0x825ced16,
        0x9541ff0d,
        0x984af104,
        0xd323ab73,
        0xde28a57a,
        0xc935b761,
        0xc43eb968,
        0xe70f9357,
        0xea049d5e,
        0xfd198f45,
        0xf012814c,
        0x6bcb3bab,
        0x66c035a2,
        0x71dd27b9,
        0x7cd629b0,
        0x5fe7038f,
        0x52ec0d86,
        0x45f11f9d,
        0x48fa1194,
        0x03934be3,
        0x0e9845ea,
        0x198557f1,
        0x148e59f8,
        0x37bf73c7,
        0x3ab47dce,
        0x2da96fd5,
        0x20a261dc,
        0x6df6ad76,
        0x60fda37f,
        0x77e0b164,
        0x7aebbf6d,
        0x59da9552,
        0x54d19b5b,
        0x43cc8940,
        0x4ec78749,
        0x05aedd3e,
        0x08a5d337,
        0x1fb8c12c,
        0x12b3cf25,
        0x3182e51a,
        0x3c89eb13,
        0x2b94f908,
        0x269ff701,
        0xbd464de6,
        0xb04d43ef,
        0xa75051f4,
        0xaa5b5ffd,
        0x896a75c2,
        0x84617bcb,
        0x937c69d0,
        0x9e7767d9,
        0xd51e3dae,
        0xd81533a7,
        0xcf0821bc,
        0xc2032fb5,
        0xe132058a,
        0xec390b83,
        0xfb241998,
        0xf62f1791,
        0xd68d764d,
        0xdb867844,
        0xcc9b6a5f,
        0xc1906456,
        0xe2a14e69,
        0xefaa4060,
        0xf8b7527b,
        0xf5bc5c72,
        0xbed50605,
        0xb3de080c,
        0xa4c31a17,
        0xa9c8141e,
        0x8af93e21,
        0x87f23028,
        0x90ef2233,
        0x9de42c3a,
        0x063d96dd,
        0x0b3698d4,
        0x1c2b8acf,
        0x112084c6,
        0x3211aef9,
        0x3f1aa0f0,
        0x2807b2eb,
        0x250cbce2,
        0x6e65e695,
        0x636ee89c,
        0x7473fa87,
        0x7978f48e,
        0x5a49deb1,
        0x5742d0b8,
        0x405fc2a3,
        0x4d54ccaa,
        0xdaf741ec,
        0xd7fc4fe5,
        0xc0e15dfe,
        0xcdea53f7,
        0xeedb79c8,
        0xe3d077c1,
        0xf4cd65da,
        0xf9c66bd3,
        0xb2af31a4,
        0xbfa43fad,
        0xa8b92db6,
        0xa5b223bf,
        0x86830980,
        0x8b880789,
        0x9c951592,
        0x919e1b9b,
        0x0a47a17c,
        0x074caf75,
        0x1051bd6e,
        0x1d5ab367,
        0x3e6b9958,
        0x33609751,
        0x247d854a,
        0x29768b43,
        0x621fd134,
        0x6f14df3d,
        0x7809cd26,
        0x7502c32f,
        0x5633e910,
        0x5b38e719,
        0x4c25f502,
        0x412efb0b,
        0x618c9ad7,
        0x6c8794de,
        0x7b9a86c5,
        0x769188cc,
        0x55a0a2f3,
        0x58abacfa,
        0x4fb6bee1,
        0x42bdb0e8,
        0x09d4ea9f,
        0x04dfe496,
        0x13c2f68d,
        0x1ec9f884,
        0x3df8d2bb,
        0x30f3dcb2,
        0x27eecea9,
        0x2ae5c0a0,
        0xb13c7a47,
        0xbc37744e,
        0xab2a6655,
        0xa621685c,
        0x85104263,
        0x881b4c6a,
        0x9f065e71,
        0x920d5078,
        0xd9640a0f,
        0xd46f0406,
        0xc372161d,
        0xce791814,
        0xed48322b,
        0xe0433c22,
        0xf75e2e39,
        0xfa552030,
        0xb701ec9a,
        0xba0ae293,
        0xad17f088,
        0xa01cfe81,
        0x832dd4be,
        0x8e26dab7,
        0x993bc8ac,
        0x9430c6a5,
        0xdf599cd2,
        0xd25292db,
        0xc54f80c0,
        0xc8448ec9,
        0xeb75a4f6,
        0xe67eaaff,
        0xf163b8e4,
        0xfc68b6ed,
        0x67b10c0a,
        0x6aba0203,
        0x7da71018,
        0x70ac1e11,
        0x539d342e,
        0x5e963a27,
        0x498b283c,
        0x44802635,
        0x0fe97c42,
        0x02e2724b,
        0x15ff6050,
        0x18f46e59,
        0x3bc54466,
        0x36ce4a6f,
        0x21d35874,
        0x2cd8567d,
        0x0c7a37a1,
        0x017139a8,
        0x166c2bb3,
        0x1b6725ba,
        0x38560f85,
        0x355d018c,
        0x22401397,
        0x2f4b1d9e,
        0x642247e9,
        0x692949e0,
        0x7e345bfb,
        0x733f55f2,
        0x500e7fcd,
        0x5d0571c4,
        0x4a1863df,
        0x47136dd6,
        0xdccad731,
        0xd1c1d938,
        0xc6dccb23,
        0xcbd7c52a,
        0xe8e6ef15,
        0xe5ede11c,
        0xf2f0f307,
        0xfffbfd0e,
        0xb492a779,
        0xb999a970,
        0xae84bb6b,
        0xa38fb562,
        0x80be9f5d,
        0x8db59154,
        0x9aa8834f,
        0x97a38d46
    ];
    var U4 = [
        0x00000000,
        0x090d0b0e,
        0x121a161c,
        0x1b171d12,
        0x24342c38,
        0x2d392736,
        0x362e3a24,
        0x3f23312a,
        0x48685870,
        0x4165537e,
        0x5a724e6c,
        0x537f4562,
        0x6c5c7448,
        0x65517f46,
        0x7e466254,
        0x774b695a,
        0x90d0b0e0,
        0x99ddbbee,
        0x82caa6fc,
        0x8bc7adf2,
        0xb4e49cd8,
        0xbde997d6,
        0xa6fe8ac4,
        0xaff381ca,
        0xd8b8e890,
        0xd1b5e39e,
        0xcaa2fe8c,
        0xc3aff582,
        0xfc8cc4a8,
        0xf581cfa6,
        0xee96d2b4,
        0xe79bd9ba,
        0x3bbb7bdb,
        0x32b670d5,
        0x29a16dc7,
        0x20ac66c9,
        0x1f8f57e3,
        0x16825ced,
        0x0d9541ff,
        0x04984af1,
        0x73d323ab,
        0x7ade28a5,
        0x61c935b7,
        0x68c43eb9,
        0x57e70f93,
        0x5eea049d,
        0x45fd198f,
        0x4cf01281,
        0xab6bcb3b,
        0xa266c035,
        0xb971dd27,
        0xb07cd629,
        0x8f5fe703,
        0x8652ec0d,
        0x9d45f11f,
        0x9448fa11,
        0xe303934b,
        0xea0e9845,
        0xf1198557,
        0xf8148e59,
        0xc737bf73,
        0xce3ab47d,
        0xd52da96f,
        0xdc20a261,
        0x766df6ad,
        0x7f60fda3,
        0x6477e0b1,
        0x6d7aebbf,
        0x5259da95,
        0x5b54d19b,
        0x4043cc89,
        0x494ec787,
        0x3e05aedd,
        0x3708a5d3,
        0x2c1fb8c1,
        0x2512b3cf,
        0x1a3182e5,
        0x133c89eb,
        0x082b94f9,
        0x01269ff7,
        0xe6bd464d,
        0xefb04d43,
        0xf4a75051,
        0xfdaa5b5f,
        0xc2896a75,
        0xcb84617b,
        0xd0937c69,
        0xd99e7767,
        0xaed51e3d,
        0xa7d81533,
        0xbccf0821,
        0xb5c2032f,
        0x8ae13205,
        0x83ec390b,
        0x98fb2419,
        0x91f62f17,
        0x4dd68d76,
        0x44db8678,
        0x5fcc9b6a,
        0x56c19064,
        0x69e2a14e,
        0x60efaa40,
        0x7bf8b752,
        0x72f5bc5c,
        0x05bed506,
        0x0cb3de08,
        0x17a4c31a,
        0x1ea9c814,
        0x218af93e,
        0x2887f230,
        0x3390ef22,
        0x3a9de42c,
        0xdd063d96,
        0xd40b3698,
        0xcf1c2b8a,
        0xc6112084,
        0xf93211ae,
        0xf03f1aa0,
        0xeb2807b2,
        0xe2250cbc,
        0x956e65e6,
        0x9c636ee8,
        0x877473fa,
        0x8e7978f4,
        0xb15a49de,
        0xb85742d0,
        0xa3405fc2,
        0xaa4d54cc,
        0xecdaf741,
        0xe5d7fc4f,
        0xfec0e15d,
        0xf7cdea53,
        0xc8eedb79,
        0xc1e3d077,
        0xdaf4cd65,
        0xd3f9c66b,
        0xa4b2af31,
        0xadbfa43f,
        0xb6a8b92d,
        0xbfa5b223,
        0x80868309,
        0x898b8807,
        0x929c9515,
        0x9b919e1b,
        0x7c0a47a1,
        0x75074caf,
        0x6e1051bd,
        0x671d5ab3,
        0x583e6b99,
        0x51336097,
        0x4a247d85,
        0x4329768b,
        0x34621fd1,
        0x3d6f14df,
        0x267809cd,
        0x2f7502c3,
        0x105633e9,
        0x195b38e7,
        0x024c25f5,
        0x0b412efb,
        0xd7618c9a,
        0xde6c8794,
        0xc57b9a86,
        0xcc769188,
        0xf355a0a2,
        0xfa58abac,
        0xe14fb6be,
        0xe842bdb0,
        0x9f09d4ea,
        0x9604dfe4,
        0x8d13c2f6,
        0x841ec9f8,
        0xbb3df8d2,
        0xb230f3dc,
        0xa927eece,
        0xa02ae5c0,
        0x47b13c7a,
        0x4ebc3774,
        0x55ab2a66,
        0x5ca62168,
        0x63851042,
        0x6a881b4c,
        0x719f065e,
        0x78920d50,
        0x0fd9640a,
        0x06d46f04,
        0x1dc37216,
        0x14ce7918,
        0x2bed4832,
        0x22e0433c,
        0x39f75e2e,
        0x30fa5520,
        0x9ab701ec,
        0x93ba0ae2,
        0x88ad17f0,
        0x81a01cfe,
        0xbe832dd4,
        0xb78e26da,
        0xac993bc8,
        0xa59430c6,
        0xd2df599c,
        0xdbd25292,
        0xc0c54f80,
        0xc9c8448e,
        0xf6eb75a4,
        0xffe67eaa,
        0xe4f163b8,
        0xedfc68b6,
        0x0a67b10c,
        0x036aba02,
        0x187da710,
        0x1170ac1e,
        0x2e539d34,
        0x275e963a,
        0x3c498b28,
        0x35448026,
        0x420fe97c,
        0x4b02e272,
        0x5015ff60,
        0x5918f46e,
        0x663bc544,
        0x6f36ce4a,
        0x7421d358,
        0x7d2cd856,
        0xa10c7a37,
        0xa8017139,
        0xb3166c2b,
        0xba1b6725,
        0x8538560f,
        0x8c355d01,
        0x97224013,
        0x9e2f4b1d,
        0xe9642247,
        0xe0692949,
        0xfb7e345b,
        0xf2733f55,
        0xcd500e7f,
        0xc45d0571,
        0xdf4a1863,
        0xd647136d,
        0x31dccad7,
        0x38d1c1d9,
        0x23c6dccb,
        0x2acbd7c5,
        0x15e8e6ef,
        0x1ce5ede1,
        0x07f2f0f3,
        0x0efffbfd,
        0x79b492a7,
        0x70b999a9,
        0x6bae84bb,
        0x62a38fb5,
        0x5d80be9f,
        0x548db591,
        0x4f9aa883,
        0x4697a38d
    ];
    function convertToInt32(bytes) {
        var result = [];
        for(var i = 0; i < bytes.length; i += 4){
            result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);
        }
        return result;
    }
    var AES = function(key) {
        if (!(this instanceof AES)) {
            throw Error('AES must be instanitated with `new`');
        }
        Object.defineProperty(this, 'key', {
            value: coerceArray(key, true)
        });
        this._prepare();
    };
    AES.prototype._prepare = function() {
        var rounds = numberOfRounds[this.key.length];
        if (rounds == null) {
            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
        }
        // encryption round keys
        this._Ke = [];
        // decryption round keys
        this._Kd = [];
        for(var i = 0; i <= rounds; i++){
            this._Ke.push([
                0,
                0,
                0,
                0
            ]);
            this._Kd.push([
                0,
                0,
                0,
                0
            ]);
        }
        var roundKeyCount = (rounds + 1) * 4;
        var KC = this.key.length / 4;
        // convert the key into ints
        var tk = convertToInt32(this.key);
        // copy values into round key arrays
        var index;
        for(var i = 0; i < KC; i++){
            index = i >> 2;
            this._Ke[index][i % 4] = tk[i];
            this._Kd[rounds - index][i % 4] = tk[i];
        }
        // key expansion (fips-197 section 5.2)
        var rconpointer = 0;
        var t = KC, tt;
        while(t < roundKeyCount){
            tt = tk[KC - 1];
            tk[0] ^= S[tt >> 16 & 0xFF] << 24 ^ S[tt >> 8 & 0xFF] << 16 ^ S[tt & 0xFF] << 8 ^ S[tt >> 24 & 0xFF] ^ rcon[rconpointer] << 24;
            rconpointer += 1;
            // key expansion (for non-256 bit)
            if (KC != 8) {
                for(var i = 1; i < KC; i++){
                    tk[i] ^= tk[i - 1];
                }
            // key expansion for 256-bit keys is "slightly different" (fips-197)
            } else {
                for(var i = 1; i < KC / 2; i++){
                    tk[i] ^= tk[i - 1];
                }
                tt = tk[KC / 2 - 1];
                tk[KC / 2] ^= S[tt & 0xFF] ^ S[tt >> 8 & 0xFF] << 8 ^ S[tt >> 16 & 0xFF] << 16 ^ S[tt >> 24 & 0xFF] << 24;
                for(var i = KC / 2 + 1; i < KC; i++){
                    tk[i] ^= tk[i - 1];
                }
            }
            // copy values into round key arrays
            var i = 0, r, c;
            while(i < KC && t < roundKeyCount){
                r = t >> 2;
                c = t % 4;
                this._Ke[r][c] = tk[i];
                this._Kd[rounds - r][c] = tk[i++];
                t++;
            }
        }
        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)
        for(var r = 1; r < rounds; r++){
            for(var c = 0; c < 4; c++){
                tt = this._Kd[r][c];
                this._Kd[r][c] = U1[tt >> 24 & 0xFF] ^ U2[tt >> 16 & 0xFF] ^ U3[tt >> 8 & 0xFF] ^ U4[tt & 0xFF];
            }
        }
    };
    AES.prototype.encrypt = function(plaintext) {
        if (plaintext.length != 16) {
            throw new Error('invalid plaintext size (must be 16 bytes)');
        }
        var rounds = this._Ke.length - 1;
        var a = [
            0,
            0,
            0,
            0
        ];
        // convert plaintext to (ints ^ key)
        var t = convertToInt32(plaintext);
        for(var i = 0; i < 4; i++){
            t[i] ^= this._Ke[0][i];
        }
        // apply round transforms
        for(var r = 1; r < rounds; r++){
            for(var i = 0; i < 4; i++){
                a[i] = T1[t[i] >> 24 & 0xff] ^ T2[t[(i + 1) % 4] >> 16 & 0xff] ^ T3[t[(i + 2) % 4] >> 8 & 0xff] ^ T4[t[(i + 3) % 4] & 0xff] ^ this._Ke[r][i];
            }
            t = a.slice();
        }
        // the last round is special
        var result = createArray(16), tt;
        for(var i = 0; i < 4; i++){
            tt = this._Ke[rounds][i];
            result[4 * i] = (S[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;
            result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;
            result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;
            result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;
        }
        return result;
    };
    AES.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length != 16) {
            throw new Error('invalid ciphertext size (must be 16 bytes)');
        }
        var rounds = this._Kd.length - 1;
        var a = [
            0,
            0,
            0,
            0
        ];
        // convert plaintext to (ints ^ key)
        var t = convertToInt32(ciphertext);
        for(var i = 0; i < 4; i++){
            t[i] ^= this._Kd[0][i];
        }
        // apply round transforms
        for(var r = 1; r < rounds; r++){
            for(var i = 0; i < 4; i++){
                a[i] = T5[t[i] >> 24 & 0xff] ^ T6[t[(i + 3) % 4] >> 16 & 0xff] ^ T7[t[(i + 2) % 4] >> 8 & 0xff] ^ T8[t[(i + 1) % 4] & 0xff] ^ this._Kd[r][i];
            }
            t = a.slice();
        }
        // the last round is special
        var result = createArray(16), tt;
        for(var i = 0; i < 4; i++){
            tt = this._Kd[rounds][i];
            result[4 * i] = (Si[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;
            result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;
            result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;
            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;
        }
        return result;
    };
    /**
     *  Mode Of Operation - Electonic Codebook (ECB)
     */ var ModeOfOperationECB = function(key) {
        if (!(this instanceof ModeOfOperationECB)) {
            throw Error('AES must be instanitated with `new`');
        }
        this.description = "Electronic Code Block";
        this.name = "ecb";
        this._aes = new AES(key);
    };
    ModeOfOperationECB.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);
        if (plaintext.length % 16 !== 0) {
            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
        }
        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);
        for(var i = 0; i < plaintext.length; i += 16){
            copyArray(plaintext, block, 0, i, i + 16);
            block = this._aes.encrypt(block);
            copyArray(block, ciphertext, i);
        }
        return ciphertext;
    };
    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);
        if (ciphertext.length % 16 !== 0) {
            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
        }
        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);
        for(var i = 0; i < ciphertext.length; i += 16){
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            copyArray(block, plaintext, i);
        }
        return plaintext;
    };
    /**
     *  Mode Of Operation - Cipher Block Chaining (CBC)
     */ var ModeOfOperationCBC = function(key, iv) {
        if (!(this instanceof ModeOfOperationCBC)) {
            throw Error('AES must be instanitated with `new`');
        }
        this.description = "Cipher Block Chaining";
        this.name = "cbc";
        if (!iv) {
            iv = createArray(16);
        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 bytes)');
        }
        this._lastCipherblock = coerceArray(iv, true);
        this._aes = new AES(key);
    };
    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);
        if (plaintext.length % 16 !== 0) {
            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
        }
        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);
        for(var i = 0; i < plaintext.length; i += 16){
            copyArray(plaintext, block, 0, i, i + 16);
            for(var j = 0; j < 16; j++){
                block[j] ^= this._lastCipherblock[j];
            }
            this._lastCipherblock = this._aes.encrypt(block);
            copyArray(this._lastCipherblock, ciphertext, i);
        }
        return ciphertext;
    };
    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);
        if (ciphertext.length % 16 !== 0) {
            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
        }
        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);
        for(var i = 0; i < ciphertext.length; i += 16){
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            for(var j = 0; j < 16; j++){
                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
            }
            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
        }
        return plaintext;
    };
    /**
     *  Mode Of Operation - Cipher Feedback (CFB)
     */ var ModeOfOperationCFB = function(key, iv, segmentSize) {
        if (!(this instanceof ModeOfOperationCFB)) {
            throw Error('AES must be instanitated with `new`');
        }
        this.description = "Cipher Feedback";
        this.name = "cfb";
        if (!iv) {
            iv = createArray(16);
        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 size)');
        }
        if (!segmentSize) {
            segmentSize = 1;
        }
        this.segmentSize = segmentSize;
        this._shiftRegister = coerceArray(iv, true);
        this._aes = new AES(key);
    };
    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
        if (plaintext.length % this.segmentSize != 0) {
            throw new Error('invalid plaintext size (must be segmentSize bytes)');
        }
        var encrypted = coerceArray(plaintext, true);
        var xorSegment;
        for(var i = 0; i < encrypted.length; i += this.segmentSize){
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for(var j = 0; j < this.segmentSize; j++){
                encrypted[i + j] ^= xorSegment[j];
            }
            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }
        return encrypted;
    };
    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length % this.segmentSize != 0) {
            throw new Error('invalid ciphertext size (must be segmentSize bytes)');
        }
        var plaintext = coerceArray(ciphertext, true);
        var xorSegment;
        for(var i = 0; i < plaintext.length; i += this.segmentSize){
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for(var j = 0; j < this.segmentSize; j++){
                plaintext[i + j] ^= xorSegment[j];
            }
            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }
        return plaintext;
    };
    /**
     *  Mode Of Operation - Output Feedback (OFB)
     */ var ModeOfOperationOFB = function(key, iv) {
        if (!(this instanceof ModeOfOperationOFB)) {
            throw Error('AES must be instanitated with `new`');
        }
        this.description = "Output Feedback";
        this.name = "ofb";
        if (!iv) {
            iv = createArray(16);
        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 bytes)');
        }
        this._lastPrecipher = coerceArray(iv, true);
        this._lastPrecipherIndex = 16;
        this._aes = new AES(key);
    };
    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);
        for(var i = 0; i < encrypted.length; i++){
            if (this._lastPrecipherIndex === 16) {
                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
                this._lastPrecipherIndex = 0;
            }
            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
        }
        return encrypted;
    };
    // Decryption is symetric
    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;
    /**
     *  Counter object for CTR common mode of operation
     */ var Counter = function(initialValue) {
        if (!(this instanceof Counter)) {
            throw Error('Counter must be instanitated with `new`');
        }
        // We allow 0, but anything false-ish uses the default 1
        if (initialValue !== 0 && !initialValue) {
            initialValue = 1;
        }
        if (typeof initialValue === 'number') {
            this._counter = createArray(16);
            this.setValue(initialValue);
        } else {
            this.setBytes(initialValue);
        }
    };
    Counter.prototype.setValue = function(value) {
        if (typeof value !== 'number' || parseInt(value) != value) {
            throw new Error('invalid counter value (must be an integer)');
        }
        for(var index = 15; index >= 0; --index){
            this._counter[index] = value % 256;
            value = value >> 8;
        }
    };
    Counter.prototype.setBytes = function(bytes) {
        bytes = coerceArray(bytes, true);
        if (bytes.length != 16) {
            throw new Error('invalid counter bytes size (must be 16 bytes)');
        }
        this._counter = bytes;
    };
    Counter.prototype.increment = function() {
        for(var i = 15; i >= 0; i--){
            if (this._counter[i] === 255) {
                this._counter[i] = 0;
            } else {
                this._counter[i]++;
                break;
            }
        }
    };
    /**
     *  Mode Of Operation - Counter (CTR)
     */ var ModeOfOperationCTR = function(key, counter) {
        if (!(this instanceof ModeOfOperationCTR)) {
            throw Error('AES must be instanitated with `new`');
        }
        this.description = "Counter";
        this.name = "ctr";
        if (!(counter instanceof Counter)) {
            counter = new Counter(counter);
        }
        this._counter = counter;
        this._remainingCounter = null;
        this._remainingCounterIndex = 16;
        this._aes = new AES(key);
    };
    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);
        for(var i = 0; i < encrypted.length; i++){
            if (this._remainingCounterIndex === 16) {
                this._remainingCounter = this._aes.encrypt(this._counter._counter);
                this._remainingCounterIndex = 0;
                this._counter.increment();
            }
            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
        }
        return encrypted;
    };
    // Decryption is symetric
    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;
    ///////////////////////
    // Padding
    // See:https://tools.ietf.org/html/rfc2315
    function pkcs7pad(data) {
        data = coerceArray(data, true);
        var padder = 16 - data.length % 16;
        var result = createArray(data.length + padder);
        copyArray(data, result);
        for(var i = data.length; i < result.length; i++){
            result[i] = padder;
        }
        return result;
    }
    function pkcs7strip(data) {
        data = coerceArray(data, true);
        if (data.length < 16) {
            throw new Error('PKCS#7 invalid length');
        }
        var padder = data[data.length - 1];
        if (padder > 16) {
            throw new Error('PKCS#7 padding byte out of range');
        }
        var length = data.length - padder;
        for(var i = 0; i < padder; i++){
            if (data[length + i] !== padder) {
                throw new Error('PKCS#7 invalid padding byte');
            }
        }
        var result = createArray(length);
        copyArray(data, result, 0, 0, length);
        return result;
    }
    ///////////////////////
    // Exporting
    // The block cipher
    var aesjs = {
        AES: AES,
        Counter: Counter,
        ModeOfOperation: {
            ecb: ModeOfOperationECB,
            cbc: ModeOfOperationCBC,
            cfb: ModeOfOperationCFB,
            ofb: ModeOfOperationOFB,
            ctr: ModeOfOperationCTR
        },
        utils: {
            hex: convertHex,
            utf8: convertUtf8
        },
        padding: {
            pkcs7: {
                pad: pkcs7pad,
                strip: pkcs7strip
            }
        },
        _arrayTest: {
            coerceArray: coerceArray,
            createArray: createArray,
            copyArray: copyArray
        }
    };
    // node.js
    if ("TURBOPACK compile-time truthy", 1) {
        module.exports = aesjs;
    // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
    } else {
        "TURBOPACK unreachable";
    }
})(this);
}}),
"[project]/node_modules/.pnpm/scrypt-js@3.0.1/node_modules/scrypt-js/scrypt.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
(function(root) {
    const MAX_VALUE = 0x7fffffff;
    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:
    // See: https://github.com/dchest/scrypt-async-js
    function SHA256(m) {
        const K = new Uint32Array([
            0x428a2f98,
            0x71374491,
            0xb5c0fbcf,
            0xe9b5dba5,
            0x3956c25b,
            0x59f111f1,
            0x923f82a4,
            0xab1c5ed5,
            0xd807aa98,
            0x12835b01,
            0x243185be,
            0x550c7dc3,
            0x72be5d74,
            0x80deb1fe,
            0x9bdc06a7,
            0xc19bf174,
            0xe49b69c1,
            0xefbe4786,
            0x0fc19dc6,
            0x240ca1cc,
            0x2de92c6f,
            0x4a7484aa,
            0x5cb0a9dc,
            0x76f988da,
            0x983e5152,
            0xa831c66d,
            0xb00327c8,
            0xbf597fc7,
            0xc6e00bf3,
            0xd5a79147,
            0x06ca6351,
            0x14292967,
            0x27b70a85,
            0x2e1b2138,
            0x4d2c6dfc,
            0x53380d13,
            0x650a7354,
            0x766a0abb,
            0x81c2c92e,
            0x92722c85,
            0xa2bfe8a1,
            0xa81a664b,
            0xc24b8b70,
            0xc76c51a3,
            0xd192e819,
            0xd6990624,
            0xf40e3585,
            0x106aa070,
            0x19a4c116,
            0x1e376c08,
            0x2748774c,
            0x34b0bcb5,
            0x391c0cb3,
            0x4ed8aa4a,
            0x5b9cca4f,
            0x682e6ff3,
            0x748f82ee,
            0x78a5636f,
            0x84c87814,
            0x8cc70208,
            0x90befffa,
            0xa4506ceb,
            0xbef9a3f7,
            0xc67178f2
        ]);
        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;
        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;
        const w = new Uint32Array(64);
        function blocks(p) {
            let off = 0, len = p.length;
            while(len >= 64){
                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;
                for(i = 0; i < 16; i++){
                    j = off + i * 4;
                    w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;
                }
                for(i = 16; i < 64; i++){
                    u = w[i - 2];
                    t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;
                    u = w[i - 15];
                    t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;
                    w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0) | 0;
                }
                for(i = 0; i < 64; i++){
                    t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;
                    t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;
                    h = g;
                    g = f;
                    f = e;
                    e = d + t1 | 0;
                    d = c;
                    c = b;
                    b = a;
                    a = t1 + t2 | 0;
                }
                h0 = h0 + a | 0;
                h1 = h1 + b | 0;
                h2 = h2 + c | 0;
                h3 = h3 + d | 0;
                h4 = h4 + e | 0;
                h5 = h5 + f | 0;
                h6 = h6 + g | 0;
                h7 = h7 + h | 0;
                off += 64;
                len -= 64;
            }
        }
        blocks(m);
        let i, bytesLeft = m.length % 64, bitLenHi = m.length / 0x20000000 | 0, bitLenLo = m.length << 3, numZeros = bytesLeft < 56 ? 56 : 120, p = m.slice(m.length - bytesLeft, m.length);
        p.push(0x80);
        for(i = bytesLeft + 1; i < numZeros; i++){
            p.push(0);
        }
        p.push(bitLenHi >>> 24 & 0xff);
        p.push(bitLenHi >>> 16 & 0xff);
        p.push(bitLenHi >>> 8 & 0xff);
        p.push(bitLenHi >>> 0 & 0xff);
        p.push(bitLenLo >>> 24 & 0xff);
        p.push(bitLenLo >>> 16 & 0xff);
        p.push(bitLenLo >>> 8 & 0xff);
        p.push(bitLenLo >>> 0 & 0xff);
        blocks(p);
        return [
            h0 >>> 24 & 0xff,
            h0 >>> 16 & 0xff,
            h0 >>> 8 & 0xff,
            h0 >>> 0 & 0xff,
            h1 >>> 24 & 0xff,
            h1 >>> 16 & 0xff,
            h1 >>> 8 & 0xff,
            h1 >>> 0 & 0xff,
            h2 >>> 24 & 0xff,
            h2 >>> 16 & 0xff,
            h2 >>> 8 & 0xff,
            h2 >>> 0 & 0xff,
            h3 >>> 24 & 0xff,
            h3 >>> 16 & 0xff,
            h3 >>> 8 & 0xff,
            h3 >>> 0 & 0xff,
            h4 >>> 24 & 0xff,
            h4 >>> 16 & 0xff,
            h4 >>> 8 & 0xff,
            h4 >>> 0 & 0xff,
            h5 >>> 24 & 0xff,
            h5 >>> 16 & 0xff,
            h5 >>> 8 & 0xff,
            h5 >>> 0 & 0xff,
            h6 >>> 24 & 0xff,
            h6 >>> 16 & 0xff,
            h6 >>> 8 & 0xff,
            h6 >>> 0 & 0xff,
            h7 >>> 24 & 0xff,
            h7 >>> 16 & 0xff,
            h7 >>> 8 & 0xff,
            h7 >>> 0 & 0xff
        ];
    }
    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
        // compress password if it's longer than hash block length
        password = password.length <= 64 ? password : SHA256(password);
        const innerLen = 64 + salt.length + 4;
        const inner = new Array(innerLen);
        const outerKey = new Array(64);
        let i;
        let dk = [];
        // inner = (password ^ ipad) || salt || counter
        for(i = 0; i < 64; i++){
            inner[i] = 0x36;
        }
        for(i = 0; i < password.length; i++){
            inner[i] ^= password[i];
        }
        for(i = 0; i < salt.length; i++){
            inner[64 + i] = salt[i];
        }
        for(i = innerLen - 4; i < innerLen; i++){
            inner[i] = 0;
        }
        // outerKey = password ^ opad
        for(i = 0; i < 64; i++)outerKey[i] = 0x5c;
        for(i = 0; i < password.length; i++)outerKey[i] ^= password[i];
        // increments counter inside inner
        function incrementCounter() {
            for(let i = innerLen - 1; i >= innerLen - 4; i--){
                inner[i]++;
                if (inner[i] <= 0xff) return;
                inner[i] = 0;
            }
        }
        // output blocks = SHA256(outerKey || SHA256(inner)) ...
        while(dkLen >= 32){
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
            dkLen -= 32;
        }
        if (dkLen > 0) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
        }
        return dk;
    }
    // The following is an adaptation of scryptsy
    // See: https://www.npmjs.com/package/scryptsy
    function blockmix_salsa8(BY, Yi, r, x, _X) {
        let i;
        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);
        for(i = 0; i < 2 * r; i++){
            blockxor(BY, i * 16, _X, 16);
            salsa20_8(_X, x);
            arraycopy(_X, 0, BY, Yi + i * 16, 16);
        }
        for(i = 0; i < r; i++){
            arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);
        }
        for(i = 0; i < r; i++){
            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
        }
    }
    function R(a, b) {
        return a << b | a >>> 32 - b;
    }
    function salsa20_8(B, x) {
        arraycopy(B, 0, x, 0, 16);
        for(let i = 8; i > 0; i -= 2){
            x[4] ^= R(x[0] + x[12], 7);
            x[8] ^= R(x[4] + x[0], 9);
            x[12] ^= R(x[8] + x[4], 13);
            x[0] ^= R(x[12] + x[8], 18);
            x[9] ^= R(x[5] + x[1], 7);
            x[13] ^= R(x[9] + x[5], 9);
            x[1] ^= R(x[13] + x[9], 13);
            x[5] ^= R(x[1] + x[13], 18);
            x[14] ^= R(x[10] + x[6], 7);
            x[2] ^= R(x[14] + x[10], 9);
            x[6] ^= R(x[2] + x[14], 13);
            x[10] ^= R(x[6] + x[2], 18);
            x[3] ^= R(x[15] + x[11], 7);
            x[7] ^= R(x[3] + x[15], 9);
            x[11] ^= R(x[7] + x[3], 13);
            x[15] ^= R(x[11] + x[7], 18);
            x[1] ^= R(x[0] + x[3], 7);
            x[2] ^= R(x[1] + x[0], 9);
            x[3] ^= R(x[2] + x[1], 13);
            x[0] ^= R(x[3] + x[2], 18);
            x[6] ^= R(x[5] + x[4], 7);
            x[7] ^= R(x[6] + x[5], 9);
            x[4] ^= R(x[7] + x[6], 13);
            x[5] ^= R(x[4] + x[7], 18);
            x[11] ^= R(x[10] + x[9], 7);
            x[8] ^= R(x[11] + x[10], 9);
            x[9] ^= R(x[8] + x[11], 13);
            x[10] ^= R(x[9] + x[8], 18);
            x[12] ^= R(x[15] + x[14], 7);
            x[13] ^= R(x[12] + x[15], 9);
            x[14] ^= R(x[13] + x[12], 13);
            x[15] ^= R(x[14] + x[13], 18);
        }
        for(let i = 0; i < 16; ++i){
            B[i] += x[i];
        }
    }
    // naive approach... going back to loop unrolling may yield additional performance
    function blockxor(S, Si, D, len) {
        for(let i = 0; i < len; i++){
            D[i] ^= S[Si + i];
        }
    }
    function arraycopy(src, srcPos, dest, destPos, length) {
        while(length--){
            dest[destPos++] = src[srcPos++];
        }
    }
    function checkBufferish(o) {
        if (!o || typeof o.length !== 'number') {
            return false;
        }
        for(let i = 0; i < o.length; i++){
            const v = o[i];
            if (typeof v !== 'number' || v % 1 || v < 0 || v >= 256) {
                return false;
            }
        }
        return true;
    }
    function ensureInteger(value, name) {
        if (typeof value !== "number" || value % 1) {
            throw new Error('invalid ' + name);
        }
        return value;
    }
    // N = Cpu cost, r = Memory cost, p = parallelization cost
    // callback(error, progress, key)
    function _scrypt(password, salt, N, r, p, dkLen, callback) {
        N = ensureInteger(N, 'N');
        r = ensureInteger(r, 'r');
        p = ensureInteger(p, 'p');
        dkLen = ensureInteger(dkLen, 'dkLen');
        if (N === 0 || (N & N - 1) !== 0) {
            throw new Error('N must be power of 2');
        }
        if (N > MAX_VALUE / 128 / r) {
            throw new Error('N too large');
        }
        if (r > MAX_VALUE / 128 / p) {
            throw new Error('r too large');
        }
        if (!checkBufferish(password)) {
            throw new Error('password must be an array or buffer');
        }
        password = Array.prototype.slice.call(password);
        if (!checkBufferish(salt)) {
            throw new Error('salt must be an array or buffer');
        }
        salt = Array.prototype.slice.call(salt);
        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
        const B = new Uint32Array(p * 32 * r);
        for(let i = 0; i < B.length; i++){
            const j = i * 4;
            B[i] = (b[j + 3] & 0xff) << 24 | (b[j + 2] & 0xff) << 16 | (b[j + 1] & 0xff) << 8 | (b[j + 0] & 0xff) << 0;
        }
        const XY = new Uint32Array(64 * r);
        const V = new Uint32Array(32 * r * N);
        const Yi = 32 * r;
        // scratch space
        const x = new Uint32Array(16); // salsa20_8
        const _X = new Uint32Array(16); // blockmix_salsa8
        const totalOps = p * N * 2;
        let currentOp = 0;
        let lastPercent10 = null;
        // Set this to true to abandon the scrypt on the next step
        let stop = false;
        // State information
        let state = 0;
        let i0 = 0, i1;
        let Bi;
        // How many blockmix_salsa8 can we do per step?
        const limit = callback ? parseInt(1000 / r) : 0xffffffff;
        // Trick from scrypt-async; if there is a setImmediate shim in place, use it
        const nextTick = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;
        // This is really all I changed; making scryptsy a state machine so we occasionally
        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo
        const incrementalSMix = function() {
            if (stop) {
                return callback(new Error('cancelled'), currentOp / totalOps);
            }
            let steps;
            switch(state){
                case 0:
                    // for (var i = 0; i < p; i++)...
                    Bi = i0 * 32 * r;
                    arraycopy(B, Bi, XY, 0, Yi); // ROMix - 1
                    state = 1; // Move to ROMix 2
                    i1 = 0;
                // Fall through
                case 1:
                    // Run up to 1000 steps of the first inner smix loop
                    steps = N - i1;
                    if (steps > limit) {
                        steps = limit;
                    }
                    for(let i = 0; i < steps; i++){
                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi) // ROMix - 3
                        ;
                        blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 4
                    }
                    // for (var i = 0; i < N; i++)
                    i1 += steps;
                    currentOp += steps;
                    if (callback) {
                        // Call the callback with the progress (optionally stopping us)
                        const percent10 = parseInt(1000 * currentOp / totalOps);
                        if (percent10 !== lastPercent10) {
                            stop = callback(null, currentOp / totalOps);
                            if (stop) {
                                break;
                            }
                            lastPercent10 = percent10;
                        }
                    }
                    if (i1 < N) {
                        break;
                    }
                    i1 = 0; // Move to ROMix 6
                    state = 2;
                // Fall through
                case 2:
                    // Run up to 1000 steps of the second inner smix loop
                    steps = N - i1;
                    if (steps > limit) {
                        steps = limit;
                    }
                    for(let i = 0; i < steps; i++){
                        const offset = (2 * r - 1) * 16; // ROMix - 7
                        const j = XY[offset] & N - 1;
                        blockxor(V, j * Yi, XY, Yi); // ROMix - 8 (inner)
                        blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 9 (outer)
                    }
                    // for (var i = 0; i < N; i++)...
                    i1 += steps;
                    currentOp += steps;
                    // Call the callback with the progress (optionally stopping us)
                    if (callback) {
                        const percent10 = parseInt(1000 * currentOp / totalOps);
                        if (percent10 !== lastPercent10) {
                            stop = callback(null, currentOp / totalOps);
                            if (stop) {
                                break;
                            }
                            lastPercent10 = percent10;
                        }
                    }
                    if (i1 < N) {
                        break;
                    }
                    arraycopy(XY, 0, B, Bi, Yi); // ROMix - 10
                    // for (var i = 0; i < p; i++)...
                    i0++;
                    if (i0 < p) {
                        state = 0;
                        break;
                    }
                    b = [];
                    for(let i = 0; i < B.length; i++){
                        b.push(B[i] >> 0 & 0xff);
                        b.push(B[i] >> 8 & 0xff);
                        b.push(B[i] >> 16 & 0xff);
                        b.push(B[i] >> 24 & 0xff);
                    }
                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);
                    // Send the result to the callback
                    if (callback) {
                        callback(null, 1.0, derivedKey);
                    }
                    // Done; don't break (which would reschedule)
                    return derivedKey;
            }
            // Schedule the next steps
            if (callback) {
                nextTick(incrementalSMix);
            }
        };
        // Run the smix state machine until completion
        if (!callback) {
            while(true){
                const derivedKey = incrementalSMix();
                if (derivedKey != undefined) {
                    return derivedKey;
                }
            }
        }
        // Bootstrap the async incremental smix
        incrementalSMix();
    }
    const lib = {
        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {
            return new Promise(function(resolve, reject) {
                let lastProgress = 0;
                if (progressCallback) {
                    progressCallback(0);
                }
                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {
                    if (error) {
                        reject(error);
                    } else if (key) {
                        if (progressCallback && lastProgress !== 1) {
                            progressCallback(1);
                        }
                        resolve(new Uint8Array(key));
                    } else if (progressCallback && progress !== lastProgress) {
                        lastProgress = progress;
                        return progressCallback(progress);
                    }
                });
            });
        },
        syncScrypt: function(password, salt, N, r, p, dkLen) {
            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));
        }
    };
    // node.js
    if ("TURBOPACK compile-time truthy", 1) {
        module.exports = lib;
    // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
    } else {
        "TURBOPACK unreachable";
    }
})(this);
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "json-wallets/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/utils.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getPassword": (()=>getPassword),
    "looseArrayify": (()=>looseArrayify),
    "searchPath": (()=>searchPath),
    "uuidV4": (()=>uuidV4),
    "zpad": (()=>zpad)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
"use strict";
;
;
function looseArrayify(hexString) {
    if (typeof hexString === 'string' && hexString.substring(0, 2) !== '0x') {
        hexString = '0x' + hexString;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(hexString);
}
function zpad(value, length) {
    value = String(value);
    while(value.length < length){
        value = '0' + value;
    }
    return value;
}
function getPassword(password) {
    if (typeof password === 'string') {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(password, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["UnicodeNormalizationForm"].NFKC);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(password);
}
function searchPath(object, path) {
    let currentChild = object;
    const comps = path.toLowerCase().split('/');
    for(let i = 0; i < comps.length; i++){
        // Search for a child object with a case-insensitive matching key
        let matchingChild = null;
        for(const key in currentChild){
            if (key.toLowerCase() === comps[i]) {
                matchingChild = currentChild[key];
                break;
            }
        }
        // Didn't find one. :'(
        if (matchingChild === null) {
            return null;
        }
        // Now check this child...
        currentChild = matchingChild;
    }
    return currentChild;
}
function uuidV4(randomBytes) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(randomBytes);
    // Section: 4.1.3:
    // - time_hi_and_version[12:16] = 0b0100
    bytes[6] = bytes[6] & 0x0f | 0x40;
    // Section 4.4
    // - clock_seq_hi_and_reserved[6] = 0b0
    // - clock_seq_hi_and_reserved[7] = 0b1
    bytes[8] = bytes[8] & 0x3f | 0x80;
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(bytes);
    return [
        value.substring(2, 10),
        value.substring(10, 14),
        value.substring(14, 18),
        value.substring(18, 22),
        value.substring(22, 34)
    ].join("-");
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "KeystoreAccount": (()=>KeystoreAccount),
    "decrypt": (()=>decrypt),
    "decryptSync": (()=>decryptSync),
    "encrypt": (()=>encrypt)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/aes-js@3.0.0/node_modules/aes-js/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$scrypt$2d$js$40$3$2e$0$2e$1$2f$node_modules$2f$scrypt$2d$js$2f$scrypt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/scrypt-js@3.0.1/node_modules/scrypt-js/scrypt.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/utils.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$pbkdf2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$pbkdf2$2f$lib$2e$esm$2f$pbkdf2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+pbkdf2@5.7.0/node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/random.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
;
;
;
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
// Exported Types
function hasMnemonic(value) {
    return value != null && value.mnemonic && value.mnemonic.phrase;
}
class KeystoreAccount extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Description"] {
    isKeystoreAccount(value) {
        return !!(value && value._isKeystoreAccount);
    }
}
function _decrypt(data, key, ciphertext) {
    const cipher = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/cipher");
    if (cipher === "aes-128-ctr") {
        const iv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/cipherparams/iv"));
        const counter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].Counter(iv);
        const aesCtr = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].ModeOfOperation.ctr(key, counter);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(aesCtr.decrypt(ciphertext));
    }
    return null;
}
function _getAccount(data, key) {
    const ciphertext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/ciphertext"));
    const computedMAC = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
        key.slice(16, 32),
        ciphertext
    ]))).substring(2);
    if (computedMAC !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/mac").toLowerCase()) {
        throw new Error("invalid password");
    }
    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);
    if (!privateKey) {
        logger.throwError("unsupported cipher", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
            operation: "decrypt"
        });
    }
    const mnemonicKey = key.slice(32, 64);
    const address = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeAddress"])(privateKey);
    if (data.address) {
        let check = data.address.toLowerCase();
        if (check.substring(0, 2) !== "0x") {
            check = "0x" + check;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(check) !== address) {
            throw new Error("address mismatch");
        }
    }
    const account = {
        _isKeystoreAccount: true,
        address: address,
        privateKey: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(privateKey)
    };
    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "x-ethers/version") === "0.1") {
        const mnemonicCiphertext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "x-ethers/mnemonicCiphertext"));
        const mnemonicIv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "x-ethers/mnemonicCounter"));
        const mnemonicCounter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].Counter(mnemonicIv);
        const mnemonicAesCtr = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
        const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "x-ethers/path") || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultPath"];
        const locale = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "x-ethers/locale") || "en";
        const entropy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(mnemonicAesCtr.decrypt(mnemonicCiphertext));
        try {
            const mnemonic = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["entropyToMnemonic"])(entropy, locale);
            const node = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["HDNode"].fromMnemonic(mnemonic, null, locale).derivePath(path);
            if (node.privateKey != account.privateKey) {
                throw new Error("mnemonic mismatch");
            }
            account.mnemonic = node.mnemonic;
        } catch (error) {
            // If we don't have the locale wordlist installed to
            // read this mnemonic, just bail and don't set the
            // mnemonic
            if (error.code !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.INVALID_ARGUMENT || error.argument !== "wordlist") {
                throw error;
            }
        }
    }
    return new KeystoreAccount(account);
}
function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$pbkdf2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$pbkdf2$2f$lib$2e$esm$2f$pbkdf2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["pbkdf2"])(passwordBytes, salt, count, dkLen, prfFunc));
}
function pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {
    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
}
function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
    const passwordBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getPassword"])(password);
    const kdf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdf");
    if (kdf && typeof kdf === "string") {
        const throwError = function(name, value) {
            return logger.throwArgumentError("invalid key-derivation function parameters", name, value);
        };
        if (kdf.toLowerCase() === "scrypt") {
            const salt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/salt"));
            const N = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/n"));
            const r = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/r"));
            const p = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/p"));
            // Check for all required parameters
            if (!N || !r || !p) {
                throwError("kdf", kdf);
            }
            // Make sure N is a power of 2
            if ((N & N - 1) !== 0) {
                throwError("N", N);
            }
            const dkLen = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/dklen"));
            if (dkLen !== 32) {
                throwError("dklen", dkLen);
            }
            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);
        } else if (kdf.toLowerCase() === "pbkdf2") {
            const salt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/salt"));
            let prfFunc = null;
            const prf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/prf");
            if (prf === "hmac-sha256") {
                prfFunc = "sha256";
            } else if (prf === "hmac-sha512") {
                prfFunc = "sha512";
            } else {
                throwError("prf", prf);
            }
            const count = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/c"));
            const dkLen = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "crypto/kdfparams/dklen"));
            if (dkLen !== 32) {
                throwError("dklen", dkLen);
            }
            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);
        }
    }
    return logger.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
}
function decryptSync(json, password) {
    const data = JSON.parse(json);
    const key = _computeKdfKey(data, password, pbkdf2Sync, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$scrypt$2d$js$40$3$2e$0$2e$1$2f$node_modules$2f$scrypt$2d$js$2f$scrypt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].syncScrypt);
    return _getAccount(data, key);
}
function decrypt(json, password, progressCallback) {
    return __awaiter(this, void 0, void 0, function*() {
        const data = JSON.parse(json);
        const key = yield _computeKdfKey(data, password, pbkdf2, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$scrypt$2d$js$40$3$2e$0$2e$1$2f$node_modules$2f$scrypt$2d$js$2f$scrypt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].scrypt, progressCallback);
        return _getAccount(data, key);
    });
}
function encrypt(account, password, options, progressCallback) {
    try {
        // Check the address matches the private key
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(account.address) !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$transactions$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$transactions$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["computeAddress"])(account.privateKey)) {
            throw new Error("address/privateKey mismatch");
        }
        // Check the mnemonic (if any) matches the private key
        if (hasMnemonic(account)) {
            const mnemonic = account.mnemonic;
            const node = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["HDNode"].fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultPath"]);
            if (node.privateKey != account.privateKey) {
                throw new Error("mnemonic mismatch");
            }
        }
    } catch (e) {
        return Promise.reject(e);
    }
    // The options are optional, so adjust the call as needed
    if (typeof options === "function" && !progressCallback) {
        progressCallback = options;
        options = {};
    }
    if (!options) {
        options = {};
    }
    const privateKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(account.privateKey);
    const passwordBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getPassword"])(password);
    let entropy = null;
    let path = null;
    let locale = null;
    if (hasMnemonic(account)) {
        const srcMnemonic = account.mnemonic;
        entropy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mnemonicToEntropy"])(srcMnemonic.phrase, srcMnemonic.locale || "en"));
        path = srcMnemonic.path || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$hdnode$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$hdnode$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultPath"];
        locale = srcMnemonic.locale || "en";
    }
    let client = options.client;
    if (!client) {
        client = "ethers.js";
    }
    // Check/generate the salt
    let salt = null;
    if (options.salt) {
        salt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(options.salt);
    } else {
        salt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["randomBytes"])(32);
        ;
    }
    // Override initialization vector
    let iv = null;
    if (options.iv) {
        iv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(options.iv);
        if (iv.length !== 16) {
            throw new Error("invalid iv");
        }
    } else {
        iv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["randomBytes"])(16);
    }
    // Override the uuid
    let uuidRandom = null;
    if (options.uuid) {
        uuidRandom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(options.uuid);
        if (uuidRandom.length !== 16) {
            throw new Error("invalid uuid");
        }
    } else {
        uuidRandom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["randomBytes"])(16);
    }
    // Override the scrypt password-based key derivation function parameters
    let N = 1 << 17, r = 8, p = 1;
    if (options.scrypt) {
        if (options.scrypt.N) {
            N = options.scrypt.N;
        }
        if (options.scrypt.r) {
            r = options.scrypt.r;
        }
        if (options.scrypt.p) {
            p = options.scrypt.p;
        }
    }
    // We take 64 bytes:
    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)
    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$scrypt$2d$js$40$3$2e$0$2e$1$2f$node_modules$2f$scrypt$2d$js$2f$scrypt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key)=>{
        key = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(key);
        // This will be used to encrypt the wallet (as per Web3 secret storage)
        const derivedKey = key.slice(0, 16);
        const macPrefix = key.slice(16, 32);
        // This will be used to encrypt the mnemonic phrase (if any)
        const mnemonicKey = key.slice(32, 64);
        // Encrypt the private key
        const counter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].Counter(iv);
        const aesCtr = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].ModeOfOperation.ctr(derivedKey, counter);
        const ciphertext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(aesCtr.encrypt(privateKey));
        // Compute the message authentication code, used to check the password
        const mac = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])([
            macPrefix,
            ciphertext
        ]));
        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition
        const data = {
            address: account.address.substring(2).toLowerCase(),
            id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["uuidV4"])(uuidRandom),
            version: 3,
            crypto: {
                cipher: "aes-128-ctr",
                cipherparams: {
                    iv: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(iv).substring(2)
                },
                ciphertext: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(ciphertext).substring(2),
                kdf: "scrypt",
                kdfparams: {
                    salt: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(salt).substring(2),
                    n: N,
                    dklen: 32,
                    p: p,
                    r: r
                },
                mac: mac.substring(2)
            }
        };
        // If we have a mnemonic, encrypt it into the JSON wallet
        if (entropy) {
            const mnemonicIv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["randomBytes"])(16);
            const mnemonicCounter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].Counter(mnemonicIv);
            const mnemonicAesCtr = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
            const mnemonicCiphertext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(mnemonicAesCtr.encrypt(entropy));
            const now = new Date();
            const timestamp = now.getUTCFullYear() + "-" + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zpad"])(now.getUTCMonth() + 1, 2) + "-" + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zpad"])(now.getUTCDate(), 2) + "T" + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zpad"])(now.getUTCHours(), 2) + "-" + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zpad"])(now.getUTCMinutes(), 2) + "-" + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zpad"])(now.getUTCSeconds(), 2) + ".0Z";
            data["x-ethers"] = {
                client: client,
                gethFilename: "UTC--" + timestamp + "--" + data.address,
                mnemonicCounter: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(mnemonicIv).substring(2),
                mnemonicCiphertext: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(mnemonicCiphertext).substring(2),
                path: path,
                locale: locale,
                version: "0.1"
            };
        }
        return JSON.stringify(data);
    });
} //# sourceMappingURL=keystore.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js [app-rsc] (ecmascript) <export encrypt as encryptKeystore>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encryptKeystore": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["encrypt"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js [app-rsc] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/inspect.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getJsonWalletAddress": (()=>getJsonWalletAddress),
    "isCrowdsaleWallet": (()=>isCrowdsaleWallet),
    "isKeystoreWallet": (()=>isKeystoreWallet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
function isCrowdsaleWallet(json) {
    let data = null;
    try {
        data = JSON.parse(json);
    } catch (error) {
        return false;
    }
    return data.encseed && data.ethaddr;
}
function isKeystoreWallet(json) {
    let data = null;
    try {
        data = JSON.parse(json);
    } catch (error) {
        return false;
    }
    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
        return false;
    }
    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff
    return true;
}
function getJsonWalletAddress(json) {
    if (isCrowdsaleWallet(json)) {
        try {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(JSON.parse(json).ethaddr);
        } catch (error) {
            return null;
        }
    }
    if (isKeystoreWallet(json)) {
        try {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])(JSON.parse(json).address);
        } catch (error) {
            return null;
        }
    }
    return null;
} //# sourceMappingURL=inspect.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CrowdsaleAccount": (()=>CrowdsaleAccount),
    "decrypt": (()=>decrypt)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/aes-js@3.0.0/node_modules/aes-js/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/utils.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$pbkdf2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$pbkdf2$2f$lib$2e$esm$2f$pbkdf2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+pbkdf2@5.7.0/node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
class CrowdsaleAccount extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Description"] {
    isCrowdsaleAccount(value) {
        return !!(value && value._isCrowdsaleAccount);
    }
}
function decrypt(json, password) {
    const data = JSON.parse(json);
    password = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getPassword"])(password);
    // Ethereum Address
    const ethaddr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$address$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "ethaddr"));
    // Encrypted Seed
    const encseed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["looseArrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$utils$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["searchPath"])(data, "encseed"));
    if (!encseed || encseed.length % 16 !== 0) {
        logger.throwArgumentError("invalid encseed", "json", json);
    }
    const key = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$pbkdf2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$pbkdf2$2f$lib$2e$esm$2f$pbkdf2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["pbkdf2"])(password, password, 2000, 32, "sha256")).slice(0, 16);
    const iv = encseed.slice(0, 16);
    const encryptedSeed = encseed.slice(16);
    // Decrypt the seed
    const aesCbc = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].ModeOfOperation.cbc(key, iv);
    const seed = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aes$2d$js$40$3$2e$0$2e$0$2f$node_modules$2f$aes$2d$js$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].padding.pkcs7.strip((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(aesCbc.decrypt(encryptedSeed)));
    // This wallet format is weird... Convert the binary encoded hex to a string.
    let seedHex = "";
    for(let i = 0; i < seed.length; i++){
        seedHex += String.fromCharCode(seed[i]);
    }
    const seedHexBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(seedHex);
    const privateKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(seedHexBytes);
    return new CrowdsaleAccount({
        _isCrowdsaleAccount: true,
        address: ethaddr,
        privateKey: privateKey
    });
} //# sourceMappingURL=crowdsale.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decryptJsonWallet": (()=>decryptJsonWallet),
    "decryptJsonWalletSync": (()=>decryptJsonWalletSync)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/inspect.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$crowdsale$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
function decryptJsonWallet(json, password, progressCallback) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isCrowdsaleWallet"])(json)) {
        if (progressCallback) {
            progressCallback(0);
        }
        const account = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$crowdsale$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decrypt"])(json, password);
        if (progressCallback) {
            progressCallback(1);
        }
        return Promise.resolve(account);
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isKeystoreWallet"])(json)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decrypt"])(json, password, progressCallback);
    }
    return Promise.reject(new Error("invalid JSON wallet"));
}
function decryptJsonWalletSync(json, password) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isCrowdsaleWallet"])(json)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$crowdsale$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decrypt"])(json, password);
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isKeystoreWallet"])(json)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decryptSync"])(json, password);
    }
    throw new Error("invalid JSON wallet");
}
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decryptCrowdsale": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$crowdsale$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decrypt"]),
    "decryptJsonWallet": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["decryptJsonWallet"]),
    "decryptJsonWalletSync": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["decryptJsonWalletSync"]),
    "decryptKeystore": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decrypt"]),
    "decryptKeystoreSync": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decryptSync"]),
    "encryptKeystore": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["encrypt"]),
    "getJsonWalletAddress": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getJsonWalletAddress"]),
    "isCrowdsaleWallet": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isCrowdsaleWallet"]),
    "isKeystoreWallet": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isKeystoreWallet"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$crowdsale$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$keystore$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$inspect$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/inspect.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decryptCrowdsale": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decryptCrowdsale"]),
    "decryptJsonWallet": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decryptJsonWallet"]),
    "decryptJsonWalletSync": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decryptJsonWalletSync"]),
    "decryptKeystore": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decryptKeystore"]),
    "decryptKeystoreSync": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decryptKeystoreSync"]),
    "encryptKeystore": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encryptKeystore"]),
    "getJsonWalletAddress": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["getJsonWalletAddress"]),
    "isCrowdsaleWallet": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["isCrowdsaleWallet"]),
    "isKeystoreWallet": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["isKeystoreWallet"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$json$2d$wallets$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$json$2d$wallets$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "random/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/random.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "randomBytes": (()=>randomBytes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
// Debugging line for testing browser lib in node
//const window = { crypto: { getRandomValues: () => { } } };
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis
function getGlobal() {
    if (typeof self !== 'undefined') {
        return self;
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    if (typeof global !== 'undefined') {
        return global;
    }
    throw new Error('unable to locate global object');
}
;
const anyGlobal = getGlobal();
let crypto = anyGlobal.crypto || anyGlobal.msCrypto;
if (!crypto || !crypto.getRandomValues) {
    logger.warn("WARNING: Missing strong random number source");
    crypto = {
        getRandomValues: function(buffer) {
            return logger.throwError("no secure random source avaialble", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.UNSUPPORTED_OPERATION, {
                operation: "crypto.getRandomValues"
            });
        }
    };
}
function randomBytes(length) {
    if (length <= 0 || length > 1024 || length % 1 || length != length) {
        logger.throwArgumentError("invalid length", "length", length);
    }
    const result = new Uint8Array(length);
    crypto.getRandomValues(result);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(result);
}
; //# sourceMappingURL=random.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/shuffle.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "shuffled": (()=>shuffled)
});
"use strict";
function shuffled(array) {
    array = array.slice();
    for(let i = array.length - 1; i > 0; i--){
        const j = Math.floor(Math.random() * (i + 1));
        const tmp = array[i];
        array[i] = array[j];
        array[j] = tmp;
    }
    return array;
} //# sourceMappingURL=shuffle.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
"use strict";
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "randomBytes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["randomBytes"]),
    "shuffled": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$shuffle$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shuffled"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$random$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/random.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$shuffle$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/shuffle.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "randomBytes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["randomBytes"]),
    "shuffled": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["shuffled"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$random$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$random$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "web/5.7.1"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/lib.esm/geturl.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getUrl": (()=>getUrl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
function getUrl(href, options) {
    return __awaiter(this, void 0, void 0, function*() {
        if (options == null) {
            options = {};
        }
        const request = {
            method: options.method || "GET",
            headers: options.headers || {},
            body: options.body || undefined
        };
        if (options.skipFetchSetup !== true) {
            request.mode = "cors"; // no-cors, cors, *same-origin
            request.cache = "no-cache"; // *default, no-cache, reload, force-cache, only-if-cached
            request.credentials = "same-origin"; // include, *same-origin, omit
            request.redirect = "follow"; // manual, *follow, error
            request.referrer = "client"; // no-referrer, *client
        }
        ;
        if (options.fetchOptions != null) {
            const opts = options.fetchOptions;
            if (opts.mode) {
                request.mode = opts.mode;
            }
            if (opts.cache) {
                request.cache = opts.cache;
            }
            if (opts.credentials) {
                request.credentials = opts.credentials;
            }
            if (opts.redirect) {
                request.redirect = opts.redirect;
            }
            if (opts.referrer) {
                request.referrer = opts.referrer;
            }
        }
        const response = yield fetch(href, request);
        const body = yield response.arrayBuffer();
        const headers = {};
        if (response.headers.forEach) {
            response.headers.forEach((value, key)=>{
                headers[key.toLowerCase()] = value;
            });
        } else {
            response.headers.keys().forEach((key)=>{
                headers[key.toLowerCase()] = response.headers.get(key);
            });
        }
        return {
            headers: headers,
            statusCode: response.status,
            statusMessage: response.statusText,
            body: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(new Uint8Array(body))
        };
    });
} //# sourceMappingURL=geturl.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "_fetchData": (()=>_fetchData),
    "fetchJson": (()=>fetchJson),
    "poll": (()=>poll)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$web$40$5$2e$7$2e$1$2f$node_modules$2f40$ethersproject$2f$web$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/base64.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$web$40$5$2e$7$2e$1$2f$node_modules$2f40$ethersproject$2f$web$2f$lib$2e$esm$2f$geturl$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/lib.esm/geturl.js [app-rsc] (ecmascript)");
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
;
;
;
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$web$40$5$2e$7$2e$1$2f$node_modules$2f40$ethersproject$2f$web$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
function staller(duration) {
    return new Promise((resolve)=>{
        setTimeout(resolve, duration);
    });
}
function bodyify(value, type) {
    if (value == null) {
        return null;
    }
    if (typeof value === "string") {
        return value;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isBytesLike"])(value)) {
        if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
            try {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8String"])(value);
            } catch (error) {}
            ;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])(value);
    }
    return value;
}
function unpercent(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code)=>{
        return String.fromCharCode(parseInt(code, 16));
    }));
}
function _fetchData(connection, body, processFunc) {
    // How many times to retry in the event of a throttle
    const attemptLimit = typeof connection === "object" && connection.throttleLimit != null ? connection.throttleLimit : 12;
    logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
    const throttleCallback = typeof connection === "object" ? connection.throttleCallback : null;
    const throttleSlotInterval = typeof connection === "object" && typeof connection.throttleSlotInterval === "number" ? connection.throttleSlotInterval : 100;
    logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
    const errorPassThrough = typeof connection === "object" ? !!connection.errorPassThrough : false;
    const headers = {};
    let url = null;
    // @TODO: Allow ConnectionInfo to override some of these values
    const options = {
        method: "GET"
    };
    let allow304 = false;
    let timeout = 2 * 60 * 1000;
    if (typeof connection === "string") {
        url = connection;
    } else if (typeof connection === "object") {
        if (connection == null || connection.url == null) {
            logger.throwArgumentError("missing URL", "connection.url", connection);
        }
        url = connection.url;
        if (typeof connection.timeout === "number" && connection.timeout > 0) {
            timeout = connection.timeout;
        }
        if (connection.headers) {
            for(const key in connection.headers){
                headers[key.toLowerCase()] = {
                    key: key,
                    value: String(connection.headers[key])
                };
                if ([
                    "if-none-match",
                    "if-modified-since"
                ].indexOf(key.toLowerCase()) >= 0) {
                    allow304 = true;
                }
            }
        }
        options.allowGzip = !!connection.allowGzip;
        if (connection.user != null && connection.password != null) {
            if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
                logger.throwError("basic authentication requires a secure https url", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.INVALID_ARGUMENT, {
                    argument: "url",
                    url: url,
                    user: connection.user,
                    password: "[REDACTED]"
                });
            }
            const authorization = connection.user + ":" + connection.password;
            headers["authorization"] = {
                key: "Authorization",
                value: "Basic " + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["encode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(authorization))
            };
        }
        if (connection.skipFetchSetup != null) {
            options.skipFetchSetup = !!connection.skipFetchSetup;
        }
        if (connection.fetchOptions != null) {
            options.fetchOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(connection.fetchOptions);
        }
    }
    const reData = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i");
    const dataMatch = url ? url.match(reData) : null;
    if (dataMatch) {
        try {
            const response = {
                statusCode: 200,
                statusMessage: "OK",
                headers: {
                    "content-type": dataMatch[1] || "text/plain"
                },
                body: dataMatch[2] ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decode"])(dataMatch[3]) : unpercent(dataMatch[3])
            };
            let result = response.body;
            if (processFunc) {
                result = processFunc(response.body, response);
            }
            return Promise.resolve(result);
        } catch (error) {
            logger.throwError("processing response error", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.SERVER_ERROR, {
                body: bodyify(dataMatch[1], dataMatch[2]),
                error: error,
                requestBody: null,
                requestMethod: "GET",
                url: url
            });
        }
    }
    if (body) {
        options.method = "POST";
        options.body = body;
        if (headers["content-type"] == null) {
            headers["content-type"] = {
                key: "Content-Type",
                value: "application/octet-stream"
            };
        }
        if (headers["content-length"] == null) {
            headers["content-length"] = {
                key: "Content-Length",
                value: String(body.length)
            };
        }
    }
    const flatHeaders = {};
    Object.keys(headers).forEach((key)=>{
        const header = headers[key];
        flatHeaders[header.key] = header.value;
    });
    options.headers = flatHeaders;
    const runningTimeout = function() {
        let timer = null;
        const promise = new Promise(function(resolve, reject) {
            if (timeout) {
                timer = setTimeout(()=>{
                    if (timer == null) {
                        return;
                    }
                    timer = null;
                    reject(logger.makeError("timeout", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.TIMEOUT, {
                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        timeout: timeout,
                        url: url
                    }));
                }, timeout);
            }
        });
        const cancel = function() {
            if (timer == null) {
                return;
            }
            clearTimeout(timer);
            timer = null;
        };
        return {
            promise,
            cancel
        };
    }();
    const runningFetch = function() {
        return __awaiter(this, void 0, void 0, function*() {
            for(let attempt = 0; attempt < attemptLimit; attempt++){
                let response = null;
                try {
                    response = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$web$40$5$2e$7$2e$1$2f$node_modules$2f40$ethersproject$2f$web$2f$lib$2e$esm$2f$geturl$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getUrl"])(url, options);
                    if (attempt < attemptLimit) {
                        if (response.statusCode === 301 || response.statusCode === 302) {
                            // Redirection; for now we only support absolute locataions
                            const location = response.headers.location || "";
                            if (options.method === "GET" && location.match(/^https:/)) {
                                url = response.headers.location;
                                continue;
                            }
                        } else if (response.statusCode === 429) {
                            // Exponential back-off throttling
                            let tryAgain = true;
                            if (throttleCallback) {
                                tryAgain = yield throttleCallback(attempt, url);
                            }
                            if (tryAgain) {
                                let stall = 0;
                                const retryAfter = response.headers["retry-after"];
                                if (typeof retryAfter === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                                    stall = parseInt(retryAfter) * 1000;
                                } else {
                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                }
                                //console.log("Stalling 429");
                                yield staller(stall);
                                continue;
                            }
                        }
                    }
                } catch (error) {
                    response = error.response;
                    if (response == null) {
                        runningTimeout.cancel();
                        logger.throwError("missing response", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.SERVER_ERROR, {
                            requestBody: bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            serverError: error,
                            url: url
                        });
                    }
                }
                let body = response.body;
                if (allow304 && response.statusCode === 304) {
                    body = null;
                } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {
                    runningTimeout.cancel();
                    logger.throwError("bad response", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.SERVER_ERROR, {
                        status: response.statusCode,
                        headers: response.headers,
                        body: bodyify(body, response.headers ? response.headers["content-type"] : null),
                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        url: url
                    });
                }
                if (processFunc) {
                    try {
                        const result = yield processFunc(body, response);
                        runningTimeout.cancel();
                        return result;
                    } catch (error) {
                        // Allow the processFunc to trigger a throttle
                        if (error.throttleRetry && attempt < attemptLimit) {
                            let tryAgain = true;
                            if (throttleCallback) {
                                tryAgain = yield throttleCallback(attempt, url);
                            }
                            if (tryAgain) {
                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                //console.log("Stalling callback");
                                yield staller(timeout);
                                continue;
                            }
                        }
                        runningTimeout.cancel();
                        logger.throwError("processing response error", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.SERVER_ERROR, {
                            body: bodyify(body, response.headers ? response.headers["content-type"] : null),
                            error: error,
                            requestBody: bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            url: url
                        });
                    }
                }
                runningTimeout.cancel();
                // If we had a processFunc, it either returned a T or threw above.
                // The "body" is now a Uint8Array.
                return body;
            }
            return logger.throwError("failed response", Logger.errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url: url
            });
        });
    }();
    return Promise.race([
        runningTimeout.promise,
        runningFetch
    ]);
}
function fetchJson(connection, json, processFunc) {
    let processJsonFunc = (value, response)=>{
        let result = null;
        if (value != null) {
            try {
                result = JSON.parse((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8String"])(value));
            } catch (error) {
                logger.throwError("invalid JSON", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"].errors.SERVER_ERROR, {
                    body: value,
                    error: error
                });
            }
        }
        if (processFunc) {
            result = processFunc(result, response);
        }
        return result;
    };
    // If we have json to send, we must
    // - add content-type of application/json (unless already overridden)
    // - convert the json to bytes
    let body = null;
    if (json != null) {
        body = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(json);
        // Create a connection with the content-type set for JSON
        const updated = typeof connection === "string" ? {
            url: connection
        } : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(connection);
        if (updated.headers) {
            const hasContentType = Object.keys(updated.headers).filter((k)=>k.toLowerCase() === "content-type").length !== 0;
            if (!hasContentType) {
                updated.headers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(updated.headers);
                updated.headers["content-type"] = "application/json";
            }
        } else {
            updated.headers = {
                "content-type": "application/json"
            };
        }
        connection = updated;
    }
    return _fetchData(connection, body, processJsonFunc);
}
function poll(func, options) {
    if (!options) {
        options = {};
    }
    options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$properties$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$properties$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["shallowCopy"])(options);
    if (options.floor == null) {
        options.floor = 0;
    }
    if (options.ceiling == null) {
        options.ceiling = 10000;
    }
    if (options.interval == null) {
        options.interval = 250;
    }
    return new Promise(function(resolve, reject) {
        let timer = null;
        let done = false;
        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.
        const cancel = ()=>{
            if (done) {
                return false;
            }
            done = true;
            if (timer) {
                clearTimeout(timer);
            }
            return true;
        };
        if (options.timeout) {
            timer = setTimeout(()=>{
                if (cancel()) {
                    reject(new Error("timeout"));
                }
            }, options.timeout);
        }
        const retryLimit = options.retryLimit;
        let attempt = 0;
        function check() {
            return func().then(function(result) {
                // If we have a result, or are allowed null then we're done
                if (result !== undefined) {
                    if (cancel()) {
                        resolve(result);
                    }
                } else if (options.oncePoll) {
                    options.oncePoll.once("poll", check);
                } else if (options.onceBlock) {
                    options.onceBlock.once("block", check);
                // Otherwise, exponential back-off (up to 10s) our next request
                } else if (!done) {
                    attempt++;
                    if (attempt > retryLimit) {
                        if (cancel()) {
                            reject(new Error("retry limit reached"));
                        }
                        return;
                    }
                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                    if (timeout < options.floor) {
                        timeout = options.floor;
                    }
                    if (timeout > options.ceiling) {
                        timeout = options.ceiling;
                    }
                    setTimeout(check, timeout);
                }
                return null;
            }, function(error) {
                if (cancel()) {
                    reject(error);
                }
            });
        }
        check();
    });
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/base64.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decode": (()=>decode),
    "encode": (()=>encode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
"use strict";
;
function decode(textData) {
    textData = atob(textData);
    const data = [];
    for(let i = 0; i < textData.length; i++){
        data.push(textData.charCodeAt(i));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data);
}
function encode(data) {
    data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(data);
    let textData = "";
    for(let i = 0; i < data.length; i++){
        textData += String.fromCharCode(data[i]);
    }
    return btoa(textData);
} //# sourceMappingURL=base64.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
"use strict";
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["decode"]),
    "encode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["encode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$base64$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/base64.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decode"]),
    "encode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$base64$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$base64$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/lib.esm/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/bech32@1.1.4/node_modules/bech32/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';
// pre-compute lookup table
var ALPHABET_MAP = {};
for(var z = 0; z < ALPHABET.length; z++){
    var x = ALPHABET.charAt(z);
    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');
    ALPHABET_MAP[x] = z;
}
function polymodStep(pre) {
    var b = pre >> 25;
    return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;
}
function prefixChk(prefix) {
    var chk = 1;
    for(var i = 0; i < prefix.length; ++i){
        var c = prefix.charCodeAt(i);
        if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')';
        chk = polymodStep(chk) ^ c >> 5;
    }
    chk = polymodStep(chk);
    for(i = 0; i < prefix.length; ++i){
        var v = prefix.charCodeAt(i);
        chk = polymodStep(chk) ^ v & 0x1f;
    }
    return chk;
}
function encode(prefix, words, LIMIT) {
    LIMIT = LIMIT || 90;
    if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');
    prefix = prefix.toLowerCase();
    // determine chk mod
    var chk = prefixChk(prefix);
    if (typeof chk === 'string') throw new Error(chk);
    var result = prefix + '1';
    for(var i = 0; i < words.length; ++i){
        var x = words[i];
        if (x >> 5 !== 0) throw new Error('Non 5-bit word');
        chk = polymodStep(chk) ^ x;
        result += ALPHABET.charAt(x);
    }
    for(i = 0; i < 6; ++i){
        chk = polymodStep(chk);
    }
    chk ^= 1;
    for(i = 0; i < 6; ++i){
        var v = chk >> (5 - i) * 5 & 0x1f;
        result += ALPHABET.charAt(v);
    }
    return result;
}
function __decode(str, LIMIT) {
    LIMIT = LIMIT || 90;
    if (str.length < 8) return str + ' too short';
    if (str.length > LIMIT) return 'Exceeds length limit';
    // don't allow mixed case
    var lowered = str.toLowerCase();
    var uppered = str.toUpperCase();
    if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str;
    str = lowered;
    var split = str.lastIndexOf('1');
    if (split === -1) return 'No separator character for ' + str;
    if (split === 0) return 'Missing prefix for ' + str;
    var prefix = str.slice(0, split);
    var wordChars = str.slice(split + 1);
    if (wordChars.length < 6) return 'Data too short';
    var chk = prefixChk(prefix);
    if (typeof chk === 'string') return chk;
    var words = [];
    for(var i = 0; i < wordChars.length; ++i){
        var c = wordChars.charAt(i);
        var v = ALPHABET_MAP[c];
        if (v === undefined) return 'Unknown character ' + c;
        chk = polymodStep(chk) ^ v;
        // not in the checksum?
        if (i + 6 >= wordChars.length) continue;
        words.push(v);
    }
    if (chk !== 1) return 'Invalid checksum for ' + str;
    return {
        prefix: prefix,
        words: words
    };
}
function decodeUnsafe() {
    var res = __decode.apply(null, arguments);
    if (typeof res === 'object') return res;
}
function decode(str) {
    var res = __decode.apply(null, arguments);
    if (typeof res === 'object') return res;
    throw new Error(res);
}
function convert(data, inBits, outBits, pad) {
    var value = 0;
    var bits = 0;
    var maxV = (1 << outBits) - 1;
    var result = [];
    for(var i = 0; i < data.length; ++i){
        value = value << inBits | data[i];
        bits += inBits;
        while(bits >= outBits){
            bits -= outBits;
            result.push(value >> bits & maxV);
        }
    }
    if (pad) {
        if (bits > 0) {
            result.push(value << outBits - bits & maxV);
        }
    } else {
        if (bits >= inBits) return 'Excess padding';
        if (value << outBits - bits & maxV) return 'Non-zero padding';
    }
    return result;
}
function toWordsUnsafe(bytes) {
    var res = convert(bytes, 8, 5, true);
    if (Array.isArray(res)) return res;
}
function toWords(bytes) {
    var res = convert(bytes, 8, 5, true);
    if (Array.isArray(res)) return res;
    throw new Error(res);
}
function fromWordsUnsafe(words) {
    var res = convert(words, 5, 8, false);
    if (Array.isArray(res)) return res;
}
function fromWords(words) {
    var res = convert(words, 5, 8, false);
    if (Array.isArray(res)) return res;
    throw new Error(res);
}
module.exports = {
    decodeUnsafe: decodeUnsafe,
    decode: decode,
    encode: encode,
    toWordsUnsafe: toWordsUnsafe,
    toWords: toWords,
    fromWordsUnsafe: fromWordsUnsafe,
    fromWords: fromWords
};
}}),
"[project]/node_modules/.pnpm/@ethersproject+networks@5.7.1/node_modules/@ethersproject/networks/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "networks/5.7.1"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+networks@5.7.1/node_modules/@ethersproject/networks/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getNetwork": (()=>getNetwork)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$networks$40$5$2e$7$2e$1$2f$node_modules$2f40$ethersproject$2f$networks$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+networks@5.7.1/node_modules/@ethersproject/networks/lib.esm/_version.js [app-rsc] (ecmascript)");
"use strict";
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$networks$40$5$2e$7$2e$1$2f$node_modules$2f40$ethersproject$2f$networks$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
;
function isRenetworkable(value) {
    return value && typeof value.renetwork === "function";
}
function ethDefaultProvider(network) {
    const func = function(providers, options) {
        if (options == null) {
            options = {};
        }
        const providerList = [];
        if (providers.InfuraProvider && options.infura !== "-") {
            try {
                providerList.push(new providers.InfuraProvider(network, options.infura));
            } catch (error) {}
        }
        if (providers.EtherscanProvider && options.etherscan !== "-") {
            try {
                providerList.push(new providers.EtherscanProvider(network, options.etherscan));
            } catch (error) {}
        }
        if (providers.AlchemyProvider && options.alchemy !== "-") {
            try {
                providerList.push(new providers.AlchemyProvider(network, options.alchemy));
            } catch (error) {}
        }
        if (providers.PocketProvider && options.pocket !== "-") {
            // These networks are currently faulty on Pocket as their
            // network does not handle the Berlin hardfork, which is
            // live on these ones.
            // @TODO: This goes away once Pocket has upgraded their nodes
            const skip = [
                "goerli",
                "ropsten",
                "rinkeby",
                "sepolia"
            ];
            try {
                const provider = new providers.PocketProvider(network, options.pocket);
                if (provider.network && skip.indexOf(provider.network.name) === -1) {
                    providerList.push(provider);
                }
            } catch (error) {}
        }
        if (providers.CloudflareProvider && options.cloudflare !== "-") {
            try {
                providerList.push(new providers.CloudflareProvider(network));
            } catch (error) {}
        }
        if (providers.AnkrProvider && options.ankr !== "-") {
            try {
                const skip = [
                    "ropsten"
                ];
                const provider = new providers.AnkrProvider(network, options.ankr);
                if (provider.network && skip.indexOf(provider.network.name) === -1) {
                    providerList.push(provider);
                }
            } catch (error) {}
        }
        if (providerList.length === 0) {
            return null;
        }
        if (providers.FallbackProvider) {
            let quorum = 1;
            if (options.quorum != null) {
                quorum = options.quorum;
            } else if (network === "homestead") {
                quorum = 2;
            }
            return new providers.FallbackProvider(providerList, quorum);
        }
        return providerList[0];
    };
    func.renetwork = function(network) {
        return ethDefaultProvider(network);
    };
    return func;
}
function etcDefaultProvider(url, network) {
    const func = function(providers, options) {
        if (providers.JsonRpcProvider) {
            return new providers.JsonRpcProvider(url, network);
        }
        return null;
    };
    func.renetwork = function(network) {
        return etcDefaultProvider(url, network);
    };
    return func;
}
const homestead = {
    chainId: 1,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "homestead",
    _defaultProvider: ethDefaultProvider("homestead")
};
const ropsten = {
    chainId: 3,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "ropsten",
    _defaultProvider: ethDefaultProvider("ropsten")
};
const classicMordor = {
    chainId: 63,
    name: "classicMordor",
    _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
};
// See: https://chainlist.org
const networks = {
    unspecified: {
        chainId: 0,
        name: "unspecified"
    },
    homestead: homestead,
    mainnet: homestead,
    morden: {
        chainId: 2,
        name: "morden"
    },
    ropsten: ropsten,
    testnet: ropsten,
    rinkeby: {
        chainId: 4,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "rinkeby",
        _defaultProvider: ethDefaultProvider("rinkeby")
    },
    kovan: {
        chainId: 42,
        name: "kovan",
        _defaultProvider: ethDefaultProvider("kovan")
    },
    goerli: {
        chainId: 5,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "goerli",
        _defaultProvider: ethDefaultProvider("goerli")
    },
    kintsugi: {
        chainId: 1337702,
        name: "kintsugi"
    },
    sepolia: {
        chainId: 11155111,
        name: "sepolia",
        _defaultProvider: ethDefaultProvider("sepolia")
    },
    // ETC (See: #351)
    classic: {
        chainId: 61,
        name: "classic",
        _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/etc", "classic")
    },
    classicMorden: {
        chainId: 62,
        name: "classicMorden"
    },
    classicMordor: classicMordor,
    classicTestnet: classicMordor,
    classicKotti: {
        chainId: 6,
        name: "classicKotti",
        _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/kotti", "classicKotti")
    },
    xdai: {
        chainId: 100,
        name: "xdai"
    },
    matic: {
        chainId: 137,
        name: "matic",
        _defaultProvider: ethDefaultProvider("matic")
    },
    maticmum: {
        chainId: 80001,
        name: "maticmum"
    },
    optimism: {
        chainId: 10,
        name: "optimism",
        _defaultProvider: ethDefaultProvider("optimism")
    },
    "optimism-kovan": {
        chainId: 69,
        name: "optimism-kovan"
    },
    "optimism-goerli": {
        chainId: 420,
        name: "optimism-goerli"
    },
    arbitrum: {
        chainId: 42161,
        name: "arbitrum"
    },
    "arbitrum-rinkeby": {
        chainId: 421611,
        name: "arbitrum-rinkeby"
    },
    "arbitrum-goerli": {
        chainId: 421613,
        name: "arbitrum-goerli"
    },
    bnb: {
        chainId: 56,
        name: "bnb"
    },
    bnbt: {
        chainId: 97,
        name: "bnbt"
    }
};
function getNetwork(network) {
    // No network (null)
    if (network == null) {
        return null;
    }
    if (typeof network === "number") {
        for(const name in networks){
            const standard = networks[name];
            if (standard.chainId === network) {
                return {
                    name: standard.name,
                    chainId: standard.chainId,
                    ensAddress: standard.ensAddress || null,
                    _defaultProvider: standard._defaultProvider || null
                };
            }
        }
        return {
            chainId: network,
            name: "unknown"
        };
    }
    if (typeof network === "string") {
        const standard = networks[network];
        if (standard == null) {
            return null;
        }
        return {
            name: standard.name,
            chainId: standard.chainId,
            ensAddress: standard.ensAddress,
            _defaultProvider: standard._defaultProvider || null
        };
    }
    const standard = networks[network.name];
    // Not a standard network; check that it is a valid network in general
    if (!standard) {
        if (typeof network.chainId !== "number") {
            logger.throwArgumentError("invalid network chainId", "network", network);
        }
        return network;
    }
    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)
    if (network.chainId !== 0 && network.chainId !== standard.chainId) {
        logger.throwArgumentError("network chainId mismatch", "network", network);
    }
    // @TODO: In the next major version add an attach function to a defaultProvider
    // class and move the _defaultProvider internal to this file (extend Network)
    let defaultProvider = network._defaultProvider || null;
    if (defaultProvider == null && standard._defaultProvider) {
        if (isRenetworkable(standard._defaultProvider)) {
            defaultProvider = standard._defaultProvider.renetwork(network);
        } else {
            defaultProvider = standard._defaultProvider;
        }
    }
    // Standard Network (allow overriding the ENS address)
    return {
        name: network.name,
        chainId: standard.chainId,
        ensAddress: network.ensAddress || standard.ensAddress || null,
        _defaultProvider: defaultProvider
    };
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+units@5.7.0/node_modules/@ethersproject/units/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "units/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+units@5.7.0/node_modules/@ethersproject/units/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "commify": (()=>commify),
    "formatEther": (()=>formatEther),
    "formatUnits": (()=>formatUnits),
    "parseEther": (()=>parseEther),
    "parseUnits": (()=>parseUnits)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$units$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$units$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+units@5.7.0/node_modules/@ethersproject/units/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$fixednumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$units$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$units$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
const names = [
    "wei",
    "kwei",
    "mwei",
    "gwei",
    "szabo",
    "finney",
    "ether"
];
function commify(value) {
    const comps = String(value).split(".");
    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === "." || value === "-.") {
        logger.throwArgumentError("invalid value", "value", value);
    }
    // Make sure we have at least one whole digit (0 if none)
    let whole = comps[0];
    let negative = "";
    if (whole.substring(0, 1) === "-") {
        negative = "-";
        whole = whole.substring(1);
    }
    // Make sure we have at least 1 whole digit with no leading zeros
    while(whole.substring(0, 1) === "0"){
        whole = whole.substring(1);
    }
    if (whole === "") {
        whole = "0";
    }
    let suffix = "";
    if (comps.length === 2) {
        suffix = "." + (comps[1] || "0");
    }
    while(suffix.length > 2 && suffix[suffix.length - 1] === "0"){
        suffix = suffix.substring(0, suffix.length - 1);
    }
    const formatted = [];
    while(whole.length){
        if (whole.length <= 3) {
            formatted.unshift(whole);
            break;
        } else {
            const index = whole.length - 3;
            formatted.unshift(whole.substring(index));
            whole = whole.substring(0, index);
        }
    }
    return negative + formatted.join(",") + suffix;
}
function formatUnits(value, unitName) {
    if (typeof unitName === "string") {
        const index = names.indexOf(unitName);
        if (index !== -1) {
            unitName = 3 * index;
        }
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$fixednumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["formatFixed"])(value, unitName != null ? unitName : 18);
}
function parseUnits(value, unitName) {
    if (typeof value !== "string") {
        logger.throwArgumentError("value must be a string", "value", value);
    }
    if (typeof unitName === "string") {
        const index = names.indexOf(unitName);
        if (index !== -1) {
            unitName = 3 * index;
        }
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$fixednumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["parseFixed"])(value, unitName != null ? unitName : 18);
}
function formatEther(wei) {
    return formatUnits(wei, 18);
}
function parseEther(ether) {
    return parseUnits(ether, 18);
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+solidity@5.7.0/node_modules/@ethersproject/solidity/lib.esm/_version.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = "solidity/5.7.0"; //# sourceMappingURL=_version.js.map
}}),
"[project]/node_modules/.pnpm/@ethersproject+solidity@5.7.0/node_modules/@ethersproject/solidity/lib.esm/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "keccak256": (()=>keccak256),
    "pack": (()=>pack),
    "sha256": (()=>sha256)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$solidity$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$solidity$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+solidity@5.7.0/node_modules/@ethersproject/solidity/lib.esm/_version.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/lib.esm/index.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/lib.esm/sha2.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
const regexBytes = new RegExp("^bytes([0-9]+)$");
const regexNumber = new RegExp("^(u?int)([0-9]*)$");
const regexArray = new RegExp("^(.*)\\[([0-9]*)\\]$");
const Zeros = "0000000000000000000000000000000000000000000000000000000000000000";
;
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$logger$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$logger$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["Logger"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$solidity$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$solidity$2f$lib$2e$esm$2f$_version$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["version"]);
function _pack(type, value, isArray) {
    switch(type){
        case "address":
            if (isArray) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zeroPad"])(value, 32);
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
        case "string":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$strings$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(value);
        case "bytes":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
        case "bool":
            value = value ? "0x01" : "0x00";
            if (isArray) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zeroPad"])(value, 32);
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value);
    }
    let match = type.match(regexNumber);
    if (match) {
        //let signed = (match[1] === "int")
        let size = parseInt(match[2] || "256");
        if (match[2] && String(size) !== match[2] || size % 8 !== 0 || size === 0 || size > 256) {
            logger.throwArgumentError("invalid number type", "type", type);
        }
        if (isArray) {
            size = 256;
        }
        value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bignumber$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["BigNumber"].from(value).toTwos(size);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zeroPad"])(value, size / 8);
    }
    match = type.match(regexBytes);
    if (match) {
        const size = parseInt(match[1]);
        if (String(size) !== match[1] || size === 0 || size > 32) {
            logger.throwArgumentError("invalid bytes type", "type", type);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])(value).byteLength !== size) {
            logger.throwArgumentError(`invalid value for ${type}`, "value", value);
        }
        if (isArray) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["arrayify"])((value + Zeros).substring(0, 66));
        }
        return value;
    }
    match = type.match(regexArray);
    if (match && Array.isArray(value)) {
        const baseType = match[1];
        const count = parseInt(match[2] || String(value.length));
        if (count != value.length) {
            logger.throwArgumentError(`invalid array length for ${type}`, "value", value);
        }
        const result = [];
        value.forEach(function(value) {
            result.push(_pack(baseType, value, true));
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])(result);
    }
    return logger.throwArgumentError("invalid type", "type", type);
}
function pack(types, values) {
    if (types.length != values.length) {
        logger.throwArgumentError("wrong number of values; expected ${ types.length }", "values", values);
    }
    const tight = [];
    types.forEach(function(type, index) {
        tight.push(_pack(type, values[index]));
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hexlify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$bytes$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$bytes$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["concat"])(tight));
}
function keccak256(types, values) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$keccak256$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$keccak256$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keccak256"])(pack(types, values));
}
function sha256(types, values) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ethersproject$2b$sha2$40$5$2e$7$2e$0$2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sha256"])(pack(types, values));
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto/crypto-wrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.random32Bytes = exports.encryptWithAes256gcm = exports.encryptWithAes256cbc = exports.decryptWithAes256gcm = exports.decryptWithAes256cbc = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const crypto_1 = __turbopack_require__("[externals]/crypto [external] (crypto, cjs)");
// Algorithm name used for aes256-cbc encryption with the package 'crypto'
const AES_256_CBC_ALGORITHM = 'aes-256-cbc';
// Algorithm name used for aes256-gcm encryption with the package 'crypto'
const AES_256_GCM_ALGORITHM = 'aes-256-gcm';
// Size of the initialization vector used for the aes256-cbc & aes256-gcm encryption
const INITIALIZATION_VECTOR_LENGTH = 16;
const AUTH_TAG_LENGTH = 16;
/**
 * Generates 32 cryptographically strong pseudo-random bytes
 *
 * @returns Promise resolving the 32 bytes generated
 */ function random32Bytes() {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        // eslint-disable-next-line no-magic-numbers
        return randomBytes(32);
    });
}
exports.random32Bytes = random32Bytes;
/**
 * Encrypts a buffer using AES-256-cbc plus a random Initialization Vector (IV)
 *
 * @param data the data to encrypt
 * @param key the key that will be used for the encryption
 *
 * @returns Promise resolving a buffer containing the IV and the encrypted data
 */ function encryptWithAes256cbc(data, key) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        // Generate randomly the Initialization Vector
        const iv = yield randomBytes(INITIALIZATION_VECTOR_LENGTH);
        // Create the cipher object to encrypt data
        const cipher = (0, crypto_1.createCipheriv)(AES_256_CBC_ALGORITHM, key, iv);
        // Encrypt data
        const encrypted = cipher.update(data);
        // Concat the IV and the encrypted data, the call of final() makes the cipher not usable and flush the buffer
        return Buffer.concat([
            iv,
            encrypted,
            cipher.final()
        ]);
    });
}
exports.encryptWithAes256cbc = encryptWithAes256cbc;
/**
 * Encrypts a buffer using AES-256-gcm plus a random Initialization Vector (IV)
 *
 * @param data the data to encrypt
 * @param key the key that will be used for the encryption
 *
 * @returns Promise resolving a buffer containing the IV and the encrypted data
 */ function encryptWithAes256gcm(data, key) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        // Generate randomly the Initialization Vector
        const iv = yield randomBytes(INITIALIZATION_VECTOR_LENGTH);
        // Create the cipher object to encrypt data
        const cipher = (0, crypto_1.createCipheriv)(AES_256_GCM_ALGORITHM, key, iv);
        const encrypted = cipher.update(data);
        const final = cipher.final();
        const authTag = cipher.getAuthTag();
        // Concat the IV and the encrypted data, the call of final() makes the cipher not usable and flush the buffer
        return Buffer.concat([
            iv,
            authTag,
            encrypted,
            final
        ]);
    });
}
exports.encryptWithAes256gcm = encryptWithAes256gcm;
/**
 * Decrypts an encrypted buffer using AES-256-cbc plus a random Initialization Vector (IV)
 *
 * @param encrypted the data to decrypt
 * @param key key of the encryption
 *
 * @returns Promise resolving a buffer containing the data decrypted
 */ function decryptWithAes256cbc(encryptedAndIv, key) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        // Get the IV
        const iv = encryptedAndIv.slice(0, INITIALIZATION_VECTOR_LENGTH);
        // Get the encrypted data itself
        const encryptedData = encryptedAndIv.slice(INITIALIZATION_VECTOR_LENGTH);
        // Create the decipher object
        const decipher = (0, crypto_1.createDecipheriv)(AES_256_CBC_ALGORITHM, key, iv);
        // decipher.setAuthTag(authTag);
        // Return the buffer decrypted (the call of final() makes the decipher not usable and flush the buffer)
        return Buffer.concat([
            decipher.update(encryptedData),
            decipher.final()
        ]);
    });
}
exports.decryptWithAes256cbc = decryptWithAes256cbc;
/**
 * Decrypts an encrypted buffer using AES-256-gcm plus a random Initialization Vector (IV)
 *
 * @param encrypted the data to decrypt
 * @param key key of the encryption
 *
 * @returns Promise resolving a buffer containing the data decrypted
 */ function decryptWithAes256gcm(encryptedAndIv, key) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        // Get the IV
        const iv = encryptedAndIv.slice(0, INITIALIZATION_VECTOR_LENGTH);
        // Get the Auth tag
        const authTag = encryptedAndIv.slice(INITIALIZATION_VECTOR_LENGTH, INITIALIZATION_VECTOR_LENGTH + AUTH_TAG_LENGTH);
        // Get the encrypted data itself
        const encryptedData = encryptedAndIv.slice(INITIALIZATION_VECTOR_LENGTH + AUTH_TAG_LENGTH);
        // Create the decipher object
        const decipher = (0, crypto_1.createDecipheriv)(AES_256_GCM_ALGORITHM, key, iv);
        decipher.setAuthTag(authTag);
        // Return the buffer decrypted (the call of final() makes the decipher not usable and flush the buffer)
        return Buffer.concat([
            decipher.update(encryptedData),
            decipher.final()
        ]);
    });
}
exports.decryptWithAes256gcm = decryptWithAes256gcm;
/**
 * Generates N cryptographically strong pseudo-random bytes
 *
 * @param n the number of bytes to generate
 *
 * @returns Promise resolving the N bytes generated
 */ function randomBytes(n) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        return new Promise((resolve, reject)=>{
            (0, crypto_1.randomBytes)(n, (error, buffer)=>{
                if (error) {
                    return reject(`Error generating random bytes: ${error}`);
                }
                return resolve(buffer);
            });
        });
    });
} //# sourceMappingURL=crypto-wrapper.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto/ec-utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ecSign = exports.ecRecover = exports.getAddressFromPublicKey = exports.getAddressFromPrivateKey = exports.ecEncrypt = exports.ecDecrypt = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const secp256k1_1 = __turbopack_require__("[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/index.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const eccrypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@toruslabs+eccrypto@4.0.0/node_modules/@toruslabs/eccrypto/dist/eccrypto.esm.js [app-rsc] (ecmascript)");
/**
 * Function to derive the address from an EC private key
 *
 * @param privateKey the private key to derive
 *
 * @returns the address
 */ function getAddressFromPrivateKey(privateKey) {
    try {
        if (!privateKey.match(/^0x/)) {
            privateKey = `0x` + privateKey;
        }
        return ethers_1.ethers.utils.computeAddress(ethers_1.ethers.utils.hexlify(privateKey));
    } catch (e) {
        if (e.message === 'private key length is invalid' || e.message === 'Expected private key to be an Uint8Array with length 32' || e.code === 'INVALID_ARGUMENT') {
            throw new Error('The private key must be a string representing 32 bytes');
        }
        throw e;
    }
}
exports.getAddressFromPrivateKey = getAddressFromPrivateKey;
/**
 * Function to derive the address from an EC public key
 *
 * @param publicKey the public key to derive
 *
 * @returns the address
 */ function getAddressFromPublicKey(publicKey) {
    try {
        return ethers_1.ethers.utils.computeAddress(compressPublicKey(publicKey));
    } catch (e) {
        if (e.message === 'public key length is invalid' || e.message === 'Expected public key to be an Uint8Array with length [33, 65]' || e.code === 'INVALID_ARGUMENT') {
            throw new Error('The public key must be a string representing 64 bytes');
        }
        throw e;
    }
}
exports.getAddressFromPublicKey = getAddressFromPublicKey;
/**
 * Function ecSigndata with ECDSA
 *
 * @param data the data to sign
 *
 * @returns the signature
 */ function ecSign(privateKey, data) {
    try {
        const signingKey = new ethers_1.ethers.utils.SigningKey(privateKey);
        return ethers_1.ethers.utils.joinSignature(signingKey.signDigest(data));
    } catch (e) {
        if (e.message === 'private key length is invalid' || e.message === 'Expected private key to be an Uint8Array with length 32' || e.code === 'INVALID_ARGUMENT') {
            throw new Error('The private key must be a string representing 32 bytes');
        }
        throw e;
    }
}
exports.ecSign = ecSign;
/**
 * Function to recover address from a signature
 *
 * @param signature the signature
 * @param data the data signed
 *
 * @returns the address
 */ function ecRecover(signature, data) {
    try {
        signature = signature.replace(/^0x/, '');
        data = data.replace(/^0x/, '');
        // split into v-value and sig
        const sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars
        const vValue = signature.slice(-2); // last 2 chars
        const recoveryNumber = vValue === '1c' ? 1 : 0;
        return ethers_1.ethers.utils.computeAddress(Buffer.from((0, secp256k1_1.ecdsaRecover)(new Uint8Array(Buffer.from(sigOnly, 'hex')), recoveryNumber, new Uint8Array(Buffer.from(data, 'hex')), false)));
    } catch (e) {
        if (e.message === 'signature length is invalid' || e.message === 'Expected signature to be an Uint8Array with length 64' || e.code === 'INVALID_ARGUMENT') {
            throw new Error('The signature must be a string representing 66 bytes');
        }
        throw e;
    }
}
exports.ecRecover = ecRecover;
/**
 * Function to encrypt data with a public key
 *
 * @param publicKey the public key to encrypt with
 * @param data the data to encrypt
 *
 * @returns the encrypted data
 */ function ecEncrypt(publicKey, data) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        try {
            // encrypts the data with the publicKey, returns the encrypted data with encryption parameters (such as IV..)
            const compressed = compressPublicKey(publicKey);
            const encrypted = yield (0, eccrypto_1.encrypt)(Buffer.from(compressed), Buffer.from(data));
            // Transforms the object with the encrypted data into a smaller string-representation.
            return Buffer.concat([
                encrypted.iv,
                (0, secp256k1_1.publicKeyConvert)(encrypted.ephemPublicKey),
                encrypted.mac,
                encrypted.ciphertext
            ]).toString('hex');
        } catch (e) {
            if (e.message === 'public key length is invalid' || e.message === 'Expected public key to be an Uint8Array with length [33, 65]') {
                throw new Error('The public key must be a string representing 64 bytes');
            }
            throw e;
        }
    });
}
exports.ecEncrypt = ecEncrypt;
/**
 * Function to decrypt data with a public key
 *
 * @param privateKey the private key to decrypt with
 * @param data the data to decrypt
 *
 * @returns the decrypted data
 */ function ecDecrypt(privateKey, data) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        try {
            const buf = yield (0, eccrypto_1.decrypt)(Buffer.from(privateKey.replace(/^0x/, ''), 'hex'), eciesSplit(data));
            return buf.toString();
        } catch (e) {
            if (e.message === 'Bad private key' || e.message === 'Expected private key to be an Uint8Array with length 32') {
                throw new Error('The private key must be a string representing 32 bytes');
            }
            if (e.message === 'public key length is invalid' || e.message === 'Expected public key to be an Uint8Array with length [33, 65]' || e.message === 'Bad MAC' || e.message === 'bad MAC after trying padded' || e.message === 'the public key could not be parsed or is invalid' || e.message === 'Public Key could not be parsed') {
                throw new Error('The encrypted data is not well formatted');
            }
            throw e;
        }
    });
}
exports.ecDecrypt = ecDecrypt;
/**
 * Converts a public key to its compressed form.
 */ function compressPublicKey(publicKey) {
    publicKey = publicKey.replace(/^0x/, '');
    // if there are more bytes than the key itself, it means there is already a prefix
    if (publicKey.length % 32 === 0) {
        publicKey = `04${publicKey}`;
    }
    return (0, secp256k1_1.publicKeyConvert)(Buffer.from(publicKey, 'hex'));
}
/**
 * Split an encrypted string to ECIES params
 * inspired from https://github.com/pubkey/eth-crypto/blob/master/src/ecDecrypt-with-private-key.js
 */ const eciesSplit = (str)=>{
    const buf = Buffer.from(str, 'hex');
    const ephemPublicKeyStr = buf.toString('hex', 16, 49);
    return {
        iv: Buffer.from(buf.toString('hex', 0, 16), 'hex'),
        mac: Buffer.from(buf.toString('hex', 49, 81), 'hex'),
        ciphertext: Buffer.from(buf.toString('hex', 81, buf.length), 'hex'),
        ephemPublicKey: Buffer.from((0, secp256k1_1.publicKeyConvert)(new Uint8Array(Buffer.from(ephemPublicKeyStr, 'hex')), false))
    };
}; //# sourceMappingURL=ec-utils.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.normalizeKeccak256Hash = exports.normalize = exports.last20bytesOfNormalizedKeccak256Hash = exports.keccak256Hash = exports.generate8randomBytes = exports.generate32BufferKey = exports.ecSign = exports.ecRecover = exports.getAddressFromPublicKey = exports.getAddressFromPrivateKey = exports.ecEncrypt = exports.ecDecrypt = exports.random32Bytes = exports.encryptWithAes256gcm = exports.encryptWithAes256cbc = exports.decryptWithAes256gcm = exports.decryptWithAes256cbc = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const crypto_wrapper_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto/crypto-wrapper.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "decryptWithAes256cbc", {
    enumerable: true,
    get: function() {
        return crypto_wrapper_1.decryptWithAes256cbc;
    }
});
Object.defineProperty(exports, "decryptWithAes256gcm", {
    enumerable: true,
    get: function() {
        return crypto_wrapper_1.decryptWithAes256gcm;
    }
});
Object.defineProperty(exports, "encryptWithAes256cbc", {
    enumerable: true,
    get: function() {
        return crypto_wrapper_1.encryptWithAes256cbc;
    }
});
Object.defineProperty(exports, "encryptWithAes256gcm", {
    enumerable: true,
    get: function() {
        return crypto_wrapper_1.encryptWithAes256gcm;
    }
});
Object.defineProperty(exports, "random32Bytes", {
    enumerable: true,
    get: function() {
        return crypto_wrapper_1.random32Bytes;
    }
});
const ec_utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto/ec-utils.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ecDecrypt", {
    enumerable: true,
    get: function() {
        return ec_utils_1.ecDecrypt;
    }
});
Object.defineProperty(exports, "ecEncrypt", {
    enumerable: true,
    get: function() {
        return ec_utils_1.ecEncrypt;
    }
});
Object.defineProperty(exports, "getAddressFromPrivateKey", {
    enumerable: true,
    get: function() {
        return ec_utils_1.getAddressFromPrivateKey;
    }
});
Object.defineProperty(exports, "getAddressFromPublicKey", {
    enumerable: true,
    get: function() {
        return ec_utils_1.getAddressFromPublicKey;
    }
});
Object.defineProperty(exports, "ecRecover", {
    enumerable: true,
    get: function() {
        return ec_utils_1.ecRecover;
    }
});
Object.defineProperty(exports, "ecSign", {
    enumerable: true,
    get: function() {
        return ec_utils_1.ecSign;
    }
});
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/utils.js [app-rsc] (ecmascript)");
/**
 * Hashes with the keccak256 algorithm with a normalization before and formats it
 *
 * @notice It will sort the object by keys before hashing
 *
 * @param data The data to hash
 * @returns The hashed data multi-formatted
 */ function normalizeKeccak256Hash(data) {
    return {
        type: types_1.MultiFormatTypes.HashTypes.TYPE.KECCAK256,
        value: keccak256Hash(normalize(data))
    };
}
exports.normalizeKeccak256Hash = normalizeKeccak256Hash;
/**
 * Normalizes data: sorts the object by keys and convert it in string
 *
 * @param data The data to normalize
 * @returns The normalized data
 */ function normalize(data) {
    if (data === undefined) {
        return 'undefined';
    }
    // deeply sort data keys
    const sortedData = (0, utils_1.deepSort)(data);
    // convert to string and lowerCase it, to be case insensitive (e.g: avoid ethereum address casing checksum)
    return JSON.stringify(sortedData).toLowerCase();
}
exports.normalize = normalize;
/**
 * Hashes with the keccak256 algorithm
 *
 * @param data The string to hash
 * @returns The hashed data multi-formatted
 */ function keccak256Hash(data) {
    return ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.toUtf8Bytes(data));
}
exports.keccak256Hash = keccak256Hash;
/**
 * Hashes with the keccak256 algorithm with a normalization before and formats it
 *
 * @notice It will sort the object by keys before hashing
 *
 * @param data The data to hash
 * @returns The hashed data multi-formatted
 */ function last20bytesOfNormalizedKeccak256Hash(data) {
    const hash = keccak256Hash(normalize(data));
    // eslint-disable-next-line no-magic-numbers
    return `0x${hash.slice(-40)}`;
}
exports.last20bytesOfNormalizedKeccak256Hash = last20bytesOfNormalizedKeccak256Hash;
/**
 * Generates a 32 bytes key in a base64 string
 *
 * @returns a random buffer of 32 bytes in a base64 string
 */ function generate32BufferKey() {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        return (yield (0, crypto_wrapper_1.random32Bytes)()).toString('base64');
    });
}
exports.generate32BufferKey = generate32BufferKey;
/**
 * Generate 8 random bytes and return as a hexadecimal string.
 * Used for salt in ETH input data.
 * Example: 'ea3bc7caf64110ca'
 *
 * @returns a string of 8 random bytes
 */ function generate8randomBytes() {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        const random32BytesHex = yield (0, crypto_wrapper_1.random32Bytes)();
        return random32BytesHex.slice(0, 8).toString('hex');
    });
}
exports.generate8randomBytes = generate8randomBytes; //# sourceMappingURL=crypto.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.validatePaginationParams = exports.notNull = exports.uniqueByProperty = exports.unique = exports.timeoutPromise = exports.isString = exports.getCurrentTimestampInSecond = exports.flatten2DimensionsArray = exports.deepSort = exports.deepCopy = void 0;
const crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto.js [app-rsc] (ecmascript)");
const MILLISECOND_IN_SECOND = 1000;
/**
 * Function to check if a variable is a string
 *
 * @param any variable variable to check
 *
 * @returns boolean true, if variable is a string or a String
 */ function isString(variable) {
    return typeof variable === 'string' || variable instanceof String;
}
exports.isString = isString;
/**
 * Function return a deep copy of the parameter
 *
 * @param any variable variable to copy
 *
 * @returns any the deep copy
 */ function deepCopy(variable) {
    return JSON.parse(JSON.stringify(variable));
}
exports.deepCopy = deepCopy;
/**
 * Function return the object with keys deeply sorted
 *
 * @param any nestedObject the object to deeply sort
 *
 * @returns any the object deeply sorted
 */ function deepSort(nestedObject) {
    // sort objects in arrays
    if (nestedObject instanceof Array) {
        return nestedObject.map((i)=>deepSort(i));
    }
    // sort data keys
    if (nestedObject instanceof Object) {
        return Object.keys(nestedObject).sort().reduce((sorted, key)=>{
            sorted[key] = deepSort(nestedObject[key]);
            return sorted;
        }, {});
    }
    return nestedObject;
}
exports.deepSort = deepSort;
/**
 * Separates the duplicated object from an array
 * Two object are assumed identical if their normalized Keccak256 hashes are equal
 * Normalize here is a lowed case JSON stringify of the properties alphabetical sorted
 *
 * @param array the array to curate
 * @returns an object containing the array with only unique element and an object with the duplication
 */ function unique(array) {
    const result = array.reduce((accumulator, element)=>{
        const hash = (0, crypto_1.normalizeKeccak256Hash)(element);
        if (accumulator.uniqueItemsHashes.includes(hash.value)) {
            // if already included, adds it to the array of duplicates
            accumulator.duplicates.push(element);
        } else {
            // if not already included, includes it and reports the hash
            accumulator.uniqueItems.push(element);
            accumulator.uniqueItemsHashes.push(hash.value);
        }
        return accumulator;
    }, {
        uniqueItems: [],
        duplicates: [],
        uniqueItemsHashes: []
    });
    return {
        uniqueItems: result.uniqueItems,
        duplicates: result.duplicates
    };
}
exports.unique = unique;
/**
 * Separates the duplicated object from an array from a property
 * Two object are assumed identical if the value of the properties whose name is given in parameter have their normalized Keccak256 hashes equals
 * Normalize here is a lowed case JSON stringify of the properties alphabetical sorted
 *
 * @param array the array to curate
 * @returns an object containing the array with only unique element and an object with the duplication
 */ function uniqueByProperty(array, property) {
    const result = array.reduce((accumulator, element)=>{
        const hash = (0, crypto_1.normalizeKeccak256Hash)(element[property]);
        if (accumulator.uniqueItemsHashes.includes(hash.value)) {
            // if already included, adds it to the array of duplicates
            accumulator.duplicates.push(element);
        } else {
            // if not already included, includes it and reports the hash
            accumulator.uniqueItems.push(element);
            accumulator.uniqueItemsHashes.push(hash.value);
        }
        return accumulator;
    }, {
        uniqueItems: [],
        duplicates: [],
        uniqueItemsHashes: []
    });
    return {
        uniqueItems: result.uniqueItems,
        duplicates: result.duplicates
    };
}
exports.uniqueByProperty = uniqueByProperty;
/**
 * Function return the timestamp in second
 *
 * @returns number current timestamp in second
 */ function getCurrentTimestampInSecond() {
    return Math.floor(Date.now() / MILLISECOND_IN_SECOND);
}
exports.getCurrentTimestampInSecond = getCurrentTimestampInSecond;
/** Function return a two dimensions array flatten
 * @param any[] twoDimensionsArray the array to flatten
 *
 * @returns any[] the flat array
 */ function flatten2DimensionsArray(twoDimensionsArray) {
    return twoDimensionsArray.reduce((accumulator, current)=>accumulator.concat(current), []);
}
exports.flatten2DimensionsArray = flatten2DimensionsArray;
/**
 * Function that returns a promise that rejects when the specified timeout is reached
 * @param timeout Timeout threshold to throw the error
 * @param message Timeout error message
 */ function timeoutPromise(promise, timeout, message) {
    const timeoutPromise = new Promise((_resolve, reject)=>{
        setTimeout(()=>reject(new Error(message)), timeout);
    });
    return Promise.race([
        timeoutPromise,
        promise
    ]);
}
exports.timeoutPromise = timeoutPromise;
function notNull(x) {
    return x !== null && x !== undefined;
}
exports.notNull = notNull;
/**
 * Validates the pagination parameters.
 *
 * @param page
 * @param pageSize
 */ function validatePaginationParams(page, pageSize) {
    if (page !== undefined && page < 1) {
        throw new Error(`Page number must be greater than or equal to 1 but it is ${page}`);
    }
    if (pageSize !== undefined && pageSize <= 0) {
        throw new Error(`Page size must be positive but it is ${pageSize}`);
    }
}
exports.validatePaginationParams = validatePaginationParams; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/amount.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.reduceAmount = exports.isValidAmount = exports.addAmount = void 0;
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/utils.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const regexInteger = RegExp(/^[\d]+$/);
/**
 * Function to check if the amount is valid (representation of a positive integer)
 *
 * @param RequestLogicAmount amount the amount to check
 *
 * @returns boolean true if amount is a valid amount
 */ function isValidAmount(amount) {
    return (0, utils_1.isString)(amount) && regexInteger.test(amount) || typeof amount === 'number' && Number.isSafeInteger(Number(amount)) && Number(amount) >= 0;
}
exports.isValidAmount = isValidAmount;
/**
 * Function to add an amount by another
 *
 * @param RequestLogicAmount amount the base amount (positive integer)
 * @param RequestLogicAmount delta the amount to add (positive integer)
 *
 * @returns string the new amount in a string format
 */ function addAmount(amount, delta) {
    if (!isValidAmount(amount)) {
        throw Error('amount must represent a positive integer');
    }
    if (!isValidAmount(delta)) {
        throw Error('delta must represent a positive integer');
    }
    const amountBN = ethers_1.BigNumber.from(amount);
    const deltaBN = ethers_1.BigNumber.from(delta);
    return amountBN.add(deltaBN).toString();
}
exports.addAmount = addAmount;
/**
 * Function to reduce an amount by another
 *
 * Throw if the new amount is not valid (i.e: negative..)
 *
 * @param RequestLogicAmount amount the base amount (positive integer)
 * @param RequestLogicAmount delta the amount to reduce (positive integer)
 *
 * @returns string the new amount in a string format
 */ function reduceAmount(amount, delta) {
    if (!isValidAmount(amount)) {
        throw Error('amount must represent a positive integer');
    }
    if (!isValidAmount(delta)) {
        throw Error('delta must represent a positive integer');
    }
    const amountBN = ethers_1.BigNumber.from(amount);
    const deltaBN = ethers_1.BigNumber.from(delta);
    const newAmount = amountBN.sub(deltaBN).toString();
    // Check if the new amount is valid (basically it is not negative)
    if (!isValidAmount(newAmount)) {
        throw Error('result of reduce is not valid');
    }
    return newAmount;
}
exports.reduceAmount = reduceAmount; //# sourceMappingURL=amount.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/bignumber.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.maxBigNumber = exports.minBigNumber = void 0;
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
/** Returns the minimum of two big numbers */ const minBigNumber = (a, b)=>ethers_1.BigNumber.from(a).lt(b) ? ethers_1.BigNumber.from(a) : ethers_1.BigNumber.from(b);
exports.minBigNumber = minBigNumber;
/** Returns the maximum of two big numbers */ const maxBigNumber = (a, b)=>ethers_1.BigNumber.from(a).gt(b) ? ethers_1.BigNumber.from(a) : ethers_1.BigNumber.from(b);
exports.maxBigNumber = maxBigNumber; //# sourceMappingURL=bignumber.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/cached-throttle.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cachedThrottle = void 0;
/**
 * A method that calls the target function at most once every `minimumDelay` milliseconds and
 * returns the cached return value in the meantime.
 *
 * @param target The target function
 * @param minimumDelay The minimum delay between calls to the target function in milliseconds
 */ const cachedThrottle = (target, minimumDelay)=>{
    if (!(target instanceof Function)) {
        throw new Error('Target can only be a function');
    }
    // The last cached response
    let cachedResponse = null;
    // the last time the function was called
    let lastCall = Number.NEGATIVE_INFINITY;
    return (...args)=>{
        if (!cachedResponse || Date.now() >= lastCall + minimumDelay) {
            lastCall = Date.now();
            cachedResponse = target(...args);
        }
        return cachedResponse;
    };
};
exports.cachedThrottle = cachedThrottle; //# sourceMappingURL=cached-throttle.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/encryption.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getIdentityFromEncryptionParams = exports.encrypt = exports.decrypt = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const index_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Function to get the identity from the encryption parameters
 *
 * @param encryptionParams encryption parameters
 *
 * @returns the identity behind the encryption parameters
 */ function getIdentityFromEncryptionParams(encryptionParams) {
    if (encryptionParams.method === types_1.EncryptionTypes.METHOD.ECIES) {
        return {
            type: types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS,
            value: (0, index_1.getAddressFromPublicKey)(encryptionParams.key)
        };
    }
    throw new Error('encryptionParams.method not supported');
}
exports.getIdentityFromEncryptionParams = getIdentityFromEncryptionParams;
/**
 * Encrypts data using encryption parameters
 *
 * IMPORTANT: This must be used for test purpose only. A cipher provider must be used in production.
 *
 * @param data the data to sign
 * @param encryptionParams Encryption parameters
 * @returns the encrypted data
 */ function encrypt(data, encryptionParams) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        if (encryptionParams.method === types_1.EncryptionTypes.METHOD.ECIES) {
            const encryptedData = yield (0, index_1.ecEncrypt)(encryptionParams.key, data);
            return {
                type: types_1.EncryptionTypes.METHOD.ECIES,
                value: encryptedData
            };
        }
        if (encryptionParams.method === types_1.EncryptionTypes.METHOD.AES256_CBC) {
            const encryptedDataBuffer = yield (0, index_1.encryptWithAes256cbc)(Buffer.from(data, 'utf-8'), Buffer.from(encryptionParams.key, 'base64'));
            return {
                type: types_1.EncryptionTypes.METHOD.AES256_CBC,
                value: encryptedDataBuffer.toString('base64')
            };
        }
        if (encryptionParams.method === types_1.EncryptionTypes.METHOD.AES256_GCM) {
            const encryptedDataBuffer = yield (0, index_1.encryptWithAes256gcm)(Buffer.from(data, 'utf-8'), Buffer.from(encryptionParams.key, 'base64'));
            return {
                type: types_1.EncryptionTypes.METHOD.AES256_GCM,
                value: encryptedDataBuffer.toString('base64')
            };
        }
        throw new Error('encryptionParams.method not supported');
    });
}
exports.encrypt = encrypt;
/**
 * Decrypt data using decryption parameters
 *
 * IMPORTANT: This must be used for test purpose only. An decryption provider must be used in production.
 *
 * @param encryptedData the encrypted data
 * @param key the decryption parameters
 * @returns the decrypted data
 */ function decrypt(encryptedData, decryptionParams) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        if (encryptedData.type === types_1.EncryptionTypes.METHOD.ECIES) {
            if (decryptionParams.method !== types_1.EncryptionTypes.METHOD.ECIES) {
                throw new Error(`decryptionParams.method should be ${types_1.EncryptionTypes.METHOD.ECIES}`);
            }
            return (0, index_1.ecDecrypt)(decryptionParams.key, encryptedData.value);
        }
        if (encryptedData.type === types_1.EncryptionTypes.METHOD.AES256_CBC) {
            if (decryptionParams.method !== types_1.EncryptionTypes.METHOD.AES256_CBC) {
                throw new Error(`decryptionParams.method should be ${types_1.EncryptionTypes.METHOD.AES256_CBC}`);
            }
            const dataBuffer = yield (0, index_1.decryptWithAes256cbc)(// remove the multi-format padding and decode from the base64 to a buffer
            Buffer.from(encryptedData.value, 'base64'), Buffer.from(decryptionParams.key, 'base64'));
            return dataBuffer.toString();
        }
        if (encryptedData.type === types_1.EncryptionTypes.METHOD.AES256_GCM) {
            if (decryptionParams.method !== types_1.EncryptionTypes.METHOD.AES256_GCM) {
                throw new Error(`decryptionParams.method should be ${types_1.EncryptionTypes.METHOD.AES256_GCM}`);
            }
            const dataBuffer = yield (0, index_1.decryptWithAes256gcm)(// remove the multi-format padding and decode from the base64 to a buffer
            Buffer.from(encryptedData.value, 'base64'), Buffer.from(decryptionParams.key, 'base64'));
            return dataBuffer.toString();
        }
        throw new Error('encryptedData method not supported');
    });
}
exports.decrypt = decrypt; //# sourceMappingURL=encryption.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/normalize-gas-fees.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.normalizeGasFees = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const index_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * The function estimates gas fee with EIP-1559.
 * @returns an object containing:
 * - maxFeePerGas: The maximum fee per unit of gas for this transaction.
 *   maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas
 *   The baseFeePerGas depends on how full the previous blocks were.
 * - maxPriorityFeePerGas: The maximum priority fee per unit of gas for this transaction.
 */ function normalizeGasFees({ logger, gasPriceMin, gasPriceMax, gasPriceMultiplier, suggestFees }) {
    return tslib_1.__awaiter(this, void 0, void 0, function*() {
        try {
            const suggestedFee = yield suggestFees();
            const baseFee = (0, index_1.maxBigNumber)(suggestedFee.baseFee, gasPriceMin || ethers_1.constants.Zero);
            const maxPriorityFeePerGas = (0, index_1.maxBigNumber)(suggestedFee.maxPriorityFee, gasPriceMin || ethers_1.constants.Zero);
            const maxFeePerGasInit = baseFee.add(maxPriorityFeePerGas).mul(gasPriceMultiplier || 100).div(100);
            const maxFeePerGas = gasPriceMax ? (0, index_1.minBigNumber)(maxFeePerGasInit, gasPriceMax) : maxFeePerGasInit;
            if (maxPriorityFeePerGas.eq(0) || maxFeePerGas.eq(0)) {
                logger.warn(`normalizeGasFees: maxPriorityFeePerGas or maxFeePerGas too low (maxPriorityFeePerGas: ${maxPriorityFeePerGas.toString()} / maxFeePerGas: ${maxFeePerGas.toString()})`);
                return {};
            }
            return {
                maxPriorityFeePerGas,
                maxFeePerGas
            };
        } catch (e) {
            logger.error(`normalizeGasFees error: ${e}`);
            return {};
        }
    });
}
exports.normalizeGasFees = normalizeGasFees; //# sourceMappingURL=normalize-gas-fees.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/identity.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.supportedIdentities = exports.normalizeIdentityValue = exports.identityHasError = exports.areEqualIdentities = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const supportedIdentities = [
    types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS,
    types_1.IdentityTypes.TYPE.ETHEREUM_SMART_CONTRACT
];
exports.supportedIdentities = supportedIdentities;
/**
 * Checks if two identities are equals
 *
 * @param IIdentity id1 first identity
 * @param IIdentity id2 second identity
 * @returns boolean
 */ function areEqualIdentities(id1, id2) {
    return !!id1 && !!id2 && id1.type === id2.type && normalizeIdentityValue(id1.value) === normalizeIdentityValue(id2.value);
}
exports.areEqualIdentities = areEqualIdentities;
/**
 * Normalizes identity values
 *
 * @param string value value to normalize
 * @returns string value normalized
 */ function normalizeIdentityValue(value) {
    return value.toLowerCase();
}
exports.normalizeIdentityValue = normalizeIdentityValue;
/**
 * Checks if the identity has an error
 *
 * @param id identity to check
 * @returns the error or null if valid
 */ function identityHasError(id) {
    if (!supportedIdentities.includes(id.type)) {
        return 'identity type not supported';
    }
    if (id.value.match(/^0x[a-fA-F0-9]{40}$/) === null) {
        return 'identity value must be an ethereum address';
    }
    return null;
}
exports.identityHasError = identityHasError; //# sourceMappingURL=identity.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/providers.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.networkRpcs = exports.getCeloProvider = exports.getDefaultProvider = exports.isEip1559Supported = exports.initPaymentDetectionApiKeys = exports.setProviderFactory = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
let warned = false;
/**
 * Default API_KEYS configuration, can be overridden using initPaymentDetectionApiKeys
 */ let providersApiKeys = {
    // fallback to Ethers v5 default projectId
    infura: ()=>process.env.RN_INFURA_KEY || '84842078b09946638c03157f83405213'
};
/**
 * @param defaultProviderOptions Default Provider Options as specified in https://docs.ethers.io/v5/api/providers/#providers-getDefaultProvider  */ const initPaymentDetectionApiKeys = (defaultProviderOptions)=>{
    providersApiKeys = Object.assign(Object.assign({}, providersApiKeys), defaultProviderOptions);
};
exports.initPaymentDetectionApiKeys = initPaymentDetectionApiKeys;
/**
 * Define default URLs for networks supported by Request payment detection but not by ethers' Infura Provider
 */ const networkRpcs = {
    private: ethers_1.providers.JsonRpcProvider.defaultUrl(),
    matic: 'https://polygon-rpc.com/',
    fantom: 'https://rpc.ftm.tools',
    fuse: 'https://rpc.fuse.io',
    bsctest: 'https://data-seed-prebsc-1-s1.binance.org:8545',
    bsc: 'https://bsc-dataseed1.binance.org/',
    xdai: 'https://rpc.ankr.com/gnosis',
    celo: 'https://forno.celo.org',
    'arbitrum-rinkeby': 'https://rinkeby.arbitrum.io/rpc',
    'arbitrum-one': 'https://arb1.arbitrum.io/rpc',
    avalanche: 'https://api.avax.network/ext/bc/C/rpc',
    optimism: 'https://mainnet.optimism.io',
    moonbeam: 'https://moonbeam.public.blastapi.io',
    tombchain: 'https://rpc.tombchain.com/',
    mantle: 'https://rpc.mantle.xyz/',
    'mantle-testnet': 'https://rpc.testnet.mantle.xyz/',
    core: 'https://rpc.coredao.org/',
    zksynceratestnet: 'https://testnet.era.zksync.dev',
    zksyncera: 'https://mainnet.era.zksync.io',
    sepolia: 'https://rpc.sepolia.org/',
    base: 'https://mainnet.base.org/'
};
exports.networkRpcs = networkRpcs;
/**
 * @see getDefaultProvider
 */ const defaultProviderFactory = (network)=>{
    if (!network) {
        network = 'homestead';
    }
    // Returns environment variable override
    const envVar = (process === null || process === void 0 ? void 0 : process.env) ? process.env[`RN_WEB3_RPC_URL_${network.toUpperCase()}`] : null;
    if (envVar) {
        return envVar;
    }
    // check default RPCs
    if (networkRpcs[network]) {
        return networkRpcs[network];
    }
    // use Infura, if supported
    try {
        // try getting the URL for the given network. Will throw if not supported.
        ethers_1.providers.InfuraProvider.getUrl(ethers_1.providers.getNetwork(network), {});
        const apiKey = typeof providersApiKeys.infura === 'function' ? providersApiKeys.infura() : providersApiKeys.infura;
        if (!apiKey && !warned) {
            console.warn(`No API Key specified for Infura, using ethers default API key.
      This is not recommended for Production environments.
      To override Infura's default api key, use RN_INFURA_KEY environment variable, or call
      initPaymentDetectionApiKeys({ infura: () => "myApiKey" });
      `);
            warned = true;
        }
        return new ethers_1.providers.InfuraProvider(network, apiKey);
    } catch (e) {
    // suppress errors
    }
    if (!warned) {
        console.warn(`No provider is specified for network ${network}, using ethers default provider.
      This is not recommended for Production environments.
      Use setProviderFactory to override the default provider`);
        warned = true;
    }
    // use getDefaultProvider to keep the original behaviour
    return ethers_1.providers.getDefaultProvider(network, providersApiKeys);
};
/**
 * Defines the behaviour to obtain a Provider for a given Network.
 * May be overridden using setProviderFactory
 */ let currentProviderFactory = defaultProviderFactory;
/**
 * Override the default providerFactory, which relies mainly on Infura.
 * @param providerFactory if not specify, will reset to the default factory
 */ const setProviderFactory = (providerFactory)=>{
    currentProviderFactory = providerFactory || defaultProviderFactory;
};
exports.setProviderFactory = setProviderFactory;
/**
 * Returns a Web3 Provider for the given `network`.
 *
 * Configuration options:
 * - Specify `RN_WEB3_RPC_URL_[NETWORK]` environment variable to override the default behaviour
 * - Specify `RN_INFURA_KEY` to override the default Infura API KEY (recommended)
 * - Use `initPaymentDetectionApiKeys` to override Infura API KEY when `RN_INFURA_KEY` is not usable
 * - Use `setProviderFactory` for more complex configurations with multiple networks
 *
 * @param network the blockchain network. See https://chainid.network/chains.json `network` field for reference
 */ const getDefaultProvider = (network)=>{
    const provider = currentProviderFactory(network, defaultProviderFactory);
    if (typeof provider === 'string') {
        return new ethers_1.providers.StaticJsonRpcProvider(provider);
    }
    return provider;
};
exports.getDefaultProvider = getDefaultProvider;
const getCeloProvider = ()=>{
    const provider = new ethers_1.providers.JsonRpcProvider('https://forno.celo.org');
    const originalBlockFormatter = provider.formatter._block;
    provider.formatter._block = (value, format)=>{
        return originalBlockFormatter(Object.assign({
            gasLimit: ethers_1.constants.Zero
        }, value), format);
    };
    return provider;
};
exports.getCeloProvider = getCeloProvider;
const isEip1559Supported = (provider, logger)=>tslib_1.__awaiter(void 0, void 0, void 0, function*() {
        try {
            yield provider.send('eth_feeHistory', [
                ethers_1.utils.hexStripZeros(ethers_1.utils.hexlify(1)),
                'latest',
                []
            ]);
            return true;
        } catch (e) {
            logger && logger.warn('This RPC provider does not support the "eth_feeHistory" method: switching to legacy gas price');
            return false;
        }
    });
exports.isEip1559Supported = isEip1559Supported; //# sourceMappingURL=providers.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/retry.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.retry = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
// Default amount of retries
const DEFAULT_MAX_RETRIES = 5;
// Default delay between retries
const DEFAULT_RETRY_DELAY = 100;
// Default exponential backoff delay increment
const DEFAULT_EXPONENTIAL_BACKOFF_DELAY = 0;
// Maximum exponential backoff delay allowed
const DEFAULT_MAX_EXPONENTIAL_BACKOFF_DELAY = 30000;
/**
 * A method that retries a function a defined amount of times if it fails.
 *
 * @param target The target function
 * @param [options] Retry configuration options
 * @param [options.context] The context to run the function
 * @param [options.maxRetries=DEFAULT_MAX_RETRIES] The maximum amount of retries for the function
 * @param [options.retryDelay=DEFAULT_RETRY_DELAY] The delay between retries
 * @param [options.exponentialBackoffDelay=DEFAULT_EXPONENTIAL_BACKOFF_DELAY] The exponential backoff delay increment
 * @param [options.maxExponentialBackoffDelay=DEFAULT_MAX_EXPONENTIAL_BACKOFF_DELAY] The maximum exponential backoff delay allowed
 */ const retry = (target, { context, maxRetries = DEFAULT_MAX_RETRIES, retryDelay = DEFAULT_RETRY_DELAY, exponentialBackoffDelay = DEFAULT_EXPONENTIAL_BACKOFF_DELAY, maxExponentialBackoffDelay = DEFAULT_MAX_EXPONENTIAL_BACKOFF_DELAY } = {})=>{
    // If a context was passed in, bind it to the target function
    if (context) {
        target = target.bind(context);
    }
    // Returns an external function that will contain the retry counter
    return (...args)=>tslib_1.__awaiter(void 0, void 0, void 0, function*() {
            // The current amount of retries
            let retry = 0;
            // Returns the retrying function that can be called
            return function retryFunction(...innerArgs) {
                return tslib_1.__awaiter(this, void 0, void 0, function*() {
                    try {
                        // Call the target function with the target object as context
                        return yield target(...innerArgs);
                    } catch (e) {
                        // If the function throws, try again if we have retries left
                        if (retry < maxRetries) {
                            retry++;
                            // Wait for the delay before retrying
                            yield new Promise((resolve)=>setTimeout(resolve, retryDelay + Math.min(maxExponentialBackoffDelay, exponentialBackoffDelay / 2 * Math.pow(2, retry))));
                            return retryFunction(...innerArgs);
                        } else {
                            // If no retries are left, throw the error
                            throw e;
                        }
                    }
                });
            }(...args);
        });
};
exports.retry = retry; //# sourceMappingURL=retry.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/signature.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sign = exports.recoverSigner = exports.getIdentityFromSignatureParams = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto.js [app-rsc] (ecmascript)");
// Use to localize the parameter V in an ECDSA signature in hex format
const V_POSITION_FROM_END_IN_ECDSA_HEX = -2;
/**
 * Function to get the signer identity from the signature parameters
 *
 * @param ISignatureParameters signatureParams Signature parameters
 *
 * @returns REQUEST_ROLE the role of the signer (payee, payer or third party)
 */ function getIdentityFromSignatureParams(signatureParams) {
    if (signatureParams.method === types_1.SignatureTypes.METHOD.ECDSA) {
        return {
            type: types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS,
            value: (0, crypto_1.getAddressFromPrivateKey)(signatureParams.privateKey)
        };
    }
    throw new Error('signatureParams.method not supported');
}
exports.getIdentityFromSignatureParams = getIdentityFromSignatureParams;
/**
 * Function to sign data from signature parameters
 *
 * This must be used for test purpose only. A signature providers must be used in production.
 *
 * @param data the data to sign
 * @param signatureParams Signature parameters
 * @returns ISignature the signature
 */ function sign(data, signatureParams) {
    let value;
    if (signatureParams.method === types_1.SignatureTypes.METHOD.ECDSA) {
        value = (0, crypto_1.ecSign)(signatureParams.privateKey, (0, crypto_1.normalizeKeccak256Hash)(data).value);
        return {
            data,
            signature: {
                method: signatureParams.method,
                value
            }
        };
    }
    if (signatureParams.method === types_1.SignatureTypes.METHOD.ECDSA_ETHEREUM) {
        const normalizedData = (0, crypto_1.normalize)(data);
        value = (0, crypto_1.ecSign)(signatureParams.privateKey, ethers_1.ethers.utils.hashMessage(normalizedData));
        return {
            data,
            signature: {
                method: signatureParams.method,
                value
            }
        };
    }
    throw new Error('signatureParams.method not supported');
}
exports.sign = sign;
/**
 * Function to recover signer identity from a signature
 *
 * IMPORTANT: this is used to recover from the signature made by the signature providers
 *
 * @param signedData the data signed
 * @returns identity of the signer
 */ function recoverSigner(signedData) {
    let value;
    if (signedData.signature.method === types_1.SignatureTypes.METHOD.ECDSA) {
        value = (0, crypto_1.ecRecover)(signedData.signature.value, (0, crypto_1.normalizeKeccak256Hash)(signedData.data).value);
        return {
            type: types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS,
            value
        };
    }
    if (signedData.signature.method === types_1.SignatureTypes.METHOD.ECDSA_ETHEREUM) {
        // In ethereum V = 0x1B or 0x1C instead of 0x00 or 0x01
        // We make the replacement here
        const v = signedData.signature.value.slice(V_POSITION_FROM_END_IN_ECDSA_HEX);
        let signature = signedData.signature.value;
        if (v.toLowerCase() === '00') {
            signature = `${signedData.signature.value.slice(0, V_POSITION_FROM_END_IN_ECDSA_HEX)}1b`;
        } else if (v.toLowerCase() === '01') {
            signature = `${signedData.signature.value.slice(0, V_POSITION_FROM_END_IN_ECDSA_HEX)}1b`;
        }
        const normalizedData = ethers_1.ethers.utils.hashMessage((0, crypto_1.normalize)(signedData.data));
        value = (0, crypto_1.ecRecover)(signature, normalizedData).toLowerCase();
        return {
            type: types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS,
            value
        };
    }
    throw new Error('signatureParams.method not supported');
}
exports.recoverSigner = recoverSigner; //# sourceMappingURL=signature.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/simple-logger.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SimpleLogger = void 0;
/* eslint-disable no-console */ const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
// The default log level to use if none is used at the constructor.
const DEFAULT_LOG_LEVEL = types_1.LogTypes.LogLevel.QUIET;
/**
 * Simple logger that outputs content to the console.
 */ class SimpleLogger {
    /**
     * Creates an instance of SimpleLogger
     *
     * @param [maxLogLevel=DEFAULT_LOG_LEVEL] The maximum log level for this logger
     */ constructor(maxLogLevel = DEFAULT_LOG_LEVEL){
        /**
         * The output console to use for logging
         */ this.output = console;
        this.maxLogLevel = maxLogLevel;
    }
    /**
     * Logs an error message
     *
     * @param message The error message to log
     * @param [tags] The array of tags concerning this message
     */ error(message, tags) {
        if (this.maxLogLevel >= types_1.LogTypes.LogLevel.ERROR) {
            this.output.error(this.formatLog(types_1.LogTypes.LogLevel.ERROR, message, tags));
        }
    }
    /**
     * Logs a warning message
     *
     * @param message The warning message to log
     * @param [tags] The array of tags concerning this message
     */ warn(message, tags) {
        if (this.maxLogLevel >= types_1.LogTypes.LogLevel.WARN) {
            this.output.warn(this.formatLog(types_1.LogTypes.LogLevel.WARN, message, tags));
        }
    }
    /**
     * Logs an info message
     *
     * @param message The info message to log
     * @param [tags] The array of tags concerning this message
     */ info(message, tags) {
        if (this.maxLogLevel >= types_1.LogTypes.LogLevel.INFO) {
            this.output.info(this.formatLog(types_1.LogTypes.LogLevel.INFO, message, tags));
        }
    }
    /**
     * Logs a debug message
     *
     * @param message The debug message to log
     * @param [tags] The array of tags concerning this message
     */ debug(message, tags) {
        if (this.maxLogLevel >= types_1.LogTypes.LogLevel.DEBUG) {
            this.output.debug(this.formatLog(types_1.LogTypes.LogLevel.DEBUG, message, tags));
        }
    }
    /**
     * Formats the message on the log format
     * The format is: ISO date|level|message|tag1,tag2,...,tagM
     *
     * @param level The log level of the message
     * @param message The log message
     * @param [tags] The log tags
     * @returns A string with the formatted log message
     */ formatLog(level, message, tags) {
        const now = new Date();
        let log = `${now.toISOString()}|${types_1.LogTypes.LogLevel[level]}|${message}`;
        if (tags && tags.length) {
            this.checkForSeparator(tags, '|');
            const tagList = tags.join(',');
            log += `|${tagList}`;
        }
        return log;
    }
    /**
     * Throws if tags contain the log separator character
     *
     * @param tags The list of tags to check
     * @param separator The log separator character
     */ checkForSeparator(tags, separator) {
        if (tags.some((tag)=>tag.includes(separator))) {
            throw new Error(`Log tags can't can't contain ${separator} character`);
        }
    }
}
exports.SimpleLogger = SimpleLogger; //# sourceMappingURL=simple-logger.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/**
 * Collection of general purpose utility function
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.uniqueByProperty = exports.unique = exports.timeoutPromise = exports.isString = exports.getCurrentTimestampInSecond = exports.flatten2DimensionsArray = exports.deepSort = exports.deepCopy = exports.SimpleLogger = exports.sign = exports.recoverSigner = exports.getIdentityFromSignatureParams = exports.retry = exports.networkRpcs = exports.getCeloProvider = exports.getDefaultProvider = exports.isEip1559Supported = exports.initPaymentDetectionApiKeys = exports.setProviderFactory = exports.supportedIdentities = exports.normalizeIdentityValue = exports.identityHasError = exports.areEqualIdentities = exports.normalizeGasFees = exports.getIdentityFromEncryptionParams = exports.encrypt = exports.decrypt = exports.normalizeKeccak256Hash = exports.normalize = exports.last20bytesOfNormalizedKeccak256Hash = exports.keccak256Hash = exports.generate8randomBytes = exports.generate32BufferKey = exports.ecSign = exports.ecRecover = exports.getAddressFromPublicKey = exports.getAddressFromPrivateKey = exports.ecEncrypt = exports.ecDecrypt = exports.random32Bytes = exports.encryptWithAes256gcm = exports.encryptWithAes256cbc = exports.decryptWithAes256gcm = exports.decryptWithAes256cbc = exports.cachedThrottle = exports.maxBigNumber = exports.minBigNumber = exports.reduceAmount = exports.isValidAmount = exports.addAmount = void 0;
exports.validatePaginationParams = exports.notNull = void 0;
var amount_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/amount.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "addAmount", {
    enumerable: true,
    get: function() {
        return amount_1.addAmount;
    }
});
Object.defineProperty(exports, "isValidAmount", {
    enumerable: true,
    get: function() {
        return amount_1.isValidAmount;
    }
});
Object.defineProperty(exports, "reduceAmount", {
    enumerable: true,
    get: function() {
        return amount_1.reduceAmount;
    }
});
var bignumber_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/bignumber.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "minBigNumber", {
    enumerable: true,
    get: function() {
        return bignumber_1.minBigNumber;
    }
});
Object.defineProperty(exports, "maxBigNumber", {
    enumerable: true,
    get: function() {
        return bignumber_1.maxBigNumber;
    }
});
var cached_throttle_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/cached-throttle.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "cachedThrottle", {
    enumerable: true,
    get: function() {
        return cached_throttle_1.cachedThrottle;
    }
});
var crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/crypto.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "decryptWithAes256cbc", {
    enumerable: true,
    get: function() {
        return crypto_1.decryptWithAes256cbc;
    }
});
Object.defineProperty(exports, "decryptWithAes256gcm", {
    enumerable: true,
    get: function() {
        return crypto_1.decryptWithAes256gcm;
    }
});
Object.defineProperty(exports, "encryptWithAes256cbc", {
    enumerable: true,
    get: function() {
        return crypto_1.encryptWithAes256cbc;
    }
});
Object.defineProperty(exports, "encryptWithAes256gcm", {
    enumerable: true,
    get: function() {
        return crypto_1.encryptWithAes256gcm;
    }
});
Object.defineProperty(exports, "random32Bytes", {
    enumerable: true,
    get: function() {
        return crypto_1.random32Bytes;
    }
});
Object.defineProperty(exports, "ecDecrypt", {
    enumerable: true,
    get: function() {
        return crypto_1.ecDecrypt;
    }
});
Object.defineProperty(exports, "ecEncrypt", {
    enumerable: true,
    get: function() {
        return crypto_1.ecEncrypt;
    }
});
Object.defineProperty(exports, "getAddressFromPrivateKey", {
    enumerable: true,
    get: function() {
        return crypto_1.getAddressFromPrivateKey;
    }
});
Object.defineProperty(exports, "getAddressFromPublicKey", {
    enumerable: true,
    get: function() {
        return crypto_1.getAddressFromPublicKey;
    }
});
Object.defineProperty(exports, "ecRecover", {
    enumerable: true,
    get: function() {
        return crypto_1.ecRecover;
    }
});
Object.defineProperty(exports, "ecSign", {
    enumerable: true,
    get: function() {
        return crypto_1.ecSign;
    }
});
Object.defineProperty(exports, "generate32BufferKey", {
    enumerable: true,
    get: function() {
        return crypto_1.generate32BufferKey;
    }
});
Object.defineProperty(exports, "generate8randomBytes", {
    enumerable: true,
    get: function() {
        return crypto_1.generate8randomBytes;
    }
});
Object.defineProperty(exports, "keccak256Hash", {
    enumerable: true,
    get: function() {
        return crypto_1.keccak256Hash;
    }
});
Object.defineProperty(exports, "last20bytesOfNormalizedKeccak256Hash", {
    enumerable: true,
    get: function() {
        return crypto_1.last20bytesOfNormalizedKeccak256Hash;
    }
});
Object.defineProperty(exports, "normalize", {
    enumerable: true,
    get: function() {
        return crypto_1.normalize;
    }
});
Object.defineProperty(exports, "normalizeKeccak256Hash", {
    enumerable: true,
    get: function() {
        return crypto_1.normalizeKeccak256Hash;
    }
});
var encryption_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/encryption.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "decrypt", {
    enumerable: true,
    get: function() {
        return encryption_1.decrypt;
    }
});
Object.defineProperty(exports, "encrypt", {
    enumerable: true,
    get: function() {
        return encryption_1.encrypt;
    }
});
Object.defineProperty(exports, "getIdentityFromEncryptionParams", {
    enumerable: true,
    get: function() {
        return encryption_1.getIdentityFromEncryptionParams;
    }
});
var normalize_gas_fees_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/normalize-gas-fees.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "normalizeGasFees", {
    enumerable: true,
    get: function() {
        return normalize_gas_fees_1.normalizeGasFees;
    }
});
var identity_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/identity.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "areEqualIdentities", {
    enumerable: true,
    get: function() {
        return identity_1.areEqualIdentities;
    }
});
Object.defineProperty(exports, "identityHasError", {
    enumerable: true,
    get: function() {
        return identity_1.identityHasError;
    }
});
Object.defineProperty(exports, "normalizeIdentityValue", {
    enumerable: true,
    get: function() {
        return identity_1.normalizeIdentityValue;
    }
});
Object.defineProperty(exports, "supportedIdentities", {
    enumerable: true,
    get: function() {
        return identity_1.supportedIdentities;
    }
});
var providers_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/providers.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "setProviderFactory", {
    enumerable: true,
    get: function() {
        return providers_1.setProviderFactory;
    }
});
Object.defineProperty(exports, "initPaymentDetectionApiKeys", {
    enumerable: true,
    get: function() {
        return providers_1.initPaymentDetectionApiKeys;
    }
});
Object.defineProperty(exports, "isEip1559Supported", {
    enumerable: true,
    get: function() {
        return providers_1.isEip1559Supported;
    }
});
Object.defineProperty(exports, "getDefaultProvider", {
    enumerable: true,
    get: function() {
        return providers_1.getDefaultProvider;
    }
});
Object.defineProperty(exports, "getCeloProvider", {
    enumerable: true,
    get: function() {
        return providers_1.getCeloProvider;
    }
});
Object.defineProperty(exports, "networkRpcs", {
    enumerable: true,
    get: function() {
        return providers_1.networkRpcs;
    }
});
var retry_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/retry.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "retry", {
    enumerable: true,
    get: function() {
        return retry_1.retry;
    }
});
var signature_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/signature.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "getIdentityFromSignatureParams", {
    enumerable: true,
    get: function() {
        return signature_1.getIdentityFromSignatureParams;
    }
});
Object.defineProperty(exports, "recoverSigner", {
    enumerable: true,
    get: function() {
        return signature_1.recoverSigner;
    }
});
Object.defineProperty(exports, "sign", {
    enumerable: true,
    get: function() {
        return signature_1.sign;
    }
});
var simple_logger_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/simple-logger.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "SimpleLogger", {
    enumerable: true,
    get: function() {
        return simple_logger_1.SimpleLogger;
    }
});
var utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/utils.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "deepCopy", {
    enumerable: true,
    get: function() {
        return utils_1.deepCopy;
    }
});
Object.defineProperty(exports, "deepSort", {
    enumerable: true,
    get: function() {
        return utils_1.deepSort;
    }
});
Object.defineProperty(exports, "flatten2DimensionsArray", {
    enumerable: true,
    get: function() {
        return utils_1.flatten2DimensionsArray;
    }
});
Object.defineProperty(exports, "getCurrentTimestampInSecond", {
    enumerable: true,
    get: function() {
        return utils_1.getCurrentTimestampInSecond;
    }
});
Object.defineProperty(exports, "isString", {
    enumerable: true,
    get: function() {
        return utils_1.isString;
    }
});
Object.defineProperty(exports, "timeoutPromise", {
    enumerable: true,
    get: function() {
        return utils_1.timeoutPromise;
    }
});
Object.defineProperty(exports, "unique", {
    enumerable: true,
    get: function() {
        return utils_1.unique;
    }
});
Object.defineProperty(exports, "uniqueByProperty", {
    enumerable: true,
    get: function() {
        return utils_1.uniqueByProperty;
    }
});
Object.defineProperty(exports, "notNull", {
    enumerable: true,
    get: function() {
        return utils_1.notNull;
    }
});
Object.defineProperty(exports, "validatePaginationParams", {
    enumerable: true,
    get: function() {
        return utils_1.validatePaginationParams;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var fs = __turbopack_require__("[externals]/fs [external] (fs, cjs)");
var path = __turbopack_require__("[externals]/path [external] (path, cjs)");
var os = __turbopack_require__("[externals]/os [external] (os, cjs)");
// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'
var runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : ("TURBOPACK ident replacement", __turbopack_require_real__) // eslint-disable-line
;
var vars = process.config && process.config.variables || {};
var prebuildsOnly = !!process.env.PREBUILDS_ONLY;
var abi = process.versions.modules // TODO: support old node where this is undef
;
var runtime = isElectron() ? 'electron' : isNwjs() ? 'node-webkit' : 'node';
var arch = process.env.npm_config_arch || os.arch();
var platform = process.env.npm_config_platform || os.platform();
var libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc');
var armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || '';
var uv = (process.versions.uv || '').split('.')[0];
module.exports = load;
function load(dir) {
    return runtimeRequire(load.resolve(dir));
}
load.resolve = load.path = function(dir) {
    dir = path.resolve(dir || '.');
    try {
        var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_');
        if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD'];
    } catch (err) {}
    if (!prebuildsOnly) {
        var release = getFirst(path.join(dir, 'build/Release'), matchBuild);
        if (release) return release;
        var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild);
        if (debug) return debug;
    }
    var prebuild = resolve(dir);
    if (prebuild) return prebuild;
    var nearby = resolve(path.dirname(process.execPath));
    if (nearby) return nearby;
    var target = [
        'platform=' + platform,
        'arch=' + arch,
        'runtime=' + runtime,
        'abi=' + abi,
        'uv=' + uv,
        armv ? 'armv=' + armv : '',
        'libc=' + libc,
        'node=' + process.versions.node,
        process.versions.electron ? 'electron=' + process.versions.electron : '',
        typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line
    ].filter(Boolean).join(' ');
    throw new Error('No native build was found for ' + target + '\n    loaded from: ' + dir + '\n');
    function resolve(dir) {
        // Find matching "prebuilds/<platform>-<arch>" directory
        var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple);
        var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0];
        if (!tuple) return;
        // Find most specific flavor first
        var prebuilds = path.join(dir, 'prebuilds', tuple.name);
        var parsed = readdirSync(prebuilds).map(parseTags);
        var candidates = parsed.filter(matchTags(runtime, abi));
        var winner = candidates.sort(compareTags(runtime))[0];
        if (winner) return path.join(prebuilds, winner.file);
    }
};
function readdirSync(dir) {
    try {
        return fs.readdirSync(dir);
    } catch (err) {
        return [];
    }
}
function getFirst(dir, filter) {
    var files = readdirSync(dir).filter(filter);
    return files[0] && path.join(dir, files[0]);
}
function matchBuild(name) {
    return /\.node$/.test(name);
}
function parseTuple(name) {
    // Example: darwin-x64+arm64
    var arr = name.split('-');
    if (arr.length !== 2) return;
    var platform = arr[0];
    var architectures = arr[1].split('+');
    if (!platform) return;
    if (!architectures.length) return;
    if (!architectures.every(Boolean)) return;
    return {
        name,
        platform,
        architectures
    };
}
function matchTuple(platform, arch) {
    return function(tuple) {
        if (tuple == null) return false;
        if (tuple.platform !== platform) return false;
        return tuple.architectures.includes(arch);
    };
}
function compareTuples(a, b) {
    // Prefer single-arch prebuilds over multi-arch
    return a.architectures.length - b.architectures.length;
}
function parseTags(file) {
    var arr = file.split('.');
    var extension = arr.pop();
    var tags = {
        file: file,
        specificity: 0
    };
    if (extension !== 'node') return;
    for(var i = 0; i < arr.length; i++){
        var tag = arr[i];
        if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {
            tags.runtime = tag;
        } else if (tag === 'napi') {
            tags.napi = true;
        } else if (tag.slice(0, 3) === 'abi') {
            tags.abi = tag.slice(3);
        } else if (tag.slice(0, 2) === 'uv') {
            tags.uv = tag.slice(2);
        } else if (tag.slice(0, 4) === 'armv') {
            tags.armv = tag.slice(4);
        } else if (tag === 'glibc' || tag === 'musl') {
            tags.libc = tag;
        } else {
            continue;
        }
        tags.specificity++;
    }
    return tags;
}
function matchTags(runtime, abi) {
    return function(tags) {
        if (tags == null) return false;
        if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false;
        if (tags.abi && tags.abi !== abi && !tags.napi) return false;
        if (tags.uv && tags.uv !== uv) return false;
        if (tags.armv && tags.armv !== armv) return false;
        if (tags.libc && tags.libc !== libc) return false;
        return true;
    };
}
function runtimeAgnostic(tags) {
    return tags.runtime === 'node' && tags.napi;
}
function compareTags(runtime) {
    // Precedence: non-agnostic runtime, abi over napi, then by specificity.
    return function(a, b) {
        if (a.runtime !== b.runtime) {
            return a.runtime === runtime ? -1 : 1;
        } else if (a.abi !== b.abi) {
            return a.abi ? -1 : 1;
        } else if (a.specificity !== b.specificity) {
            return a.specificity > b.specificity ? -1 : 1;
        } else {
            return 0;
        }
    };
}
function isNwjs() {
    return !!(process.versions && process.versions.nw);
}
function isElectron() {
    if (process.versions && process.versions.electron) return true;
    if (process.env.ELECTRON_RUN_AS_NODE) return true;
    return "undefined" !== 'undefined' && window.process && window.process.type === 'renderer';
}
function isAlpine(platform) {
    return platform === 'linux' && fs.existsSync('/etc/alpine-release');
}
// Exposed for unit tests
// TODO: move to lib
load.parseTags = parseTags;
load.matchTags = matchTags;
load.compareTags = compareTags;
load.parseTuple = parseTuple;
load.matchTuple = matchTuple;
load.compareTuples = compareTuples;
}}),
"[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : ("TURBOPACK ident replacement", __turbopack_require_real__) // eslint-disable-line
;
if (typeof runtimeRequire.addon === 'function') {
    module.exports = runtimeRequire.addon.bind(runtimeRequire);
} else {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js [app-rsc] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const errors = {
    IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',
    TWEAK_ADD: 'The tweak was out of range or the resulted private key is invalid',
    TWEAK_MUL: 'The tweak was out of range or equal to zero',
    CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',
    SECKEY_INVALID: 'Private Key is invalid',
    PUBKEY_PARSE: 'Public Key could not be parsed',
    PUBKEY_SERIALIZE: 'Public Key serialization error',
    PUBKEY_COMBINE: 'The sum of the public keys is not valid',
    SIG_PARSE: 'Signature could not be parsed',
    SIGN: 'The nonce generation function failed, or the private key was invalid',
    RECOVER: 'Public key could not be recover',
    ECDH: 'Scalar was invalid (zero or overflow)'
};
function assert(cond, msg) {
    if (!cond) throw new Error(msg);
}
function isUint8Array(name, value, length) {
    assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`);
    if (length !== undefined) {
        if (Array.isArray(length)) {
            const numbers = length.join(', ');
            const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`;
            assert(length.includes(value.length), msg);
        } else {
            const msg = `Expected ${name} to be an Uint8Array with length ${length}`;
            assert(value.length === length, msg);
        }
    }
}
function isCompressed(value) {
    assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean');
}
function getAssertedOutput(output = (len)=>new Uint8Array(len), length) {
    if (typeof output === 'function') output = output(length);
    isUint8Array('output', output, length);
    return output;
}
function toTypeString(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
}
module.exports = (secp256k1)=>{
    return {
        contextRandomize (seed) {
            assert(seed === null || seed instanceof Uint8Array, 'Expected seed to be an Uint8Array or null');
            if (seed !== null) isUint8Array('seed', seed, 32);
            switch(secp256k1.contextRandomize(seed)){
                case 1:
                    throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW);
            }
        },
        privateKeyVerify (seckey) {
            isUint8Array('private key', seckey, 32);
            return secp256k1.privateKeyVerify(seckey) === 0;
        },
        privateKeyNegate (seckey) {
            isUint8Array('private key', seckey, 32);
            switch(secp256k1.privateKeyNegate(seckey)){
                case 0:
                    return seckey;
                case 1:
                    throw new Error(errors.IMPOSSIBLE_CASE);
            }
        },
        privateKeyTweakAdd (seckey, tweak) {
            isUint8Array('private key', seckey, 32);
            isUint8Array('tweak', tweak, 32);
            switch(secp256k1.privateKeyTweakAdd(seckey, tweak)){
                case 0:
                    return seckey;
                case 1:
                    throw new Error(errors.TWEAK_ADD);
            }
        },
        privateKeyTweakMul (seckey, tweak) {
            isUint8Array('private key', seckey, 32);
            isUint8Array('tweak', tweak, 32);
            switch(secp256k1.privateKeyTweakMul(seckey, tweak)){
                case 0:
                    return seckey;
                case 1:
                    throw new Error(errors.TWEAK_MUL);
            }
        },
        publicKeyVerify (pubkey) {
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            return secp256k1.publicKeyVerify(pubkey) === 0;
        },
        publicKeyCreate (seckey, compressed = true, output) {
            isUint8Array('private key', seckey, 32);
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.publicKeyCreate(output, seckey)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.SECKEY_INVALID);
                case 2:
                    throw new Error(errors.PUBKEY_SERIALIZE);
            }
        },
        publicKeyConvert (pubkey, compressed = true, output) {
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.publicKeyConvert(output, pubkey)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.PUBKEY_PARSE);
                case 2:
                    throw new Error(errors.PUBKEY_SERIALIZE);
            }
        },
        publicKeyNegate (pubkey, compressed = true, output) {
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.publicKeyNegate(output, pubkey)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.PUBKEY_PARSE);
                case 2:
                    throw new Error(errors.IMPOSSIBLE_CASE);
                case 3:
                    throw new Error(errors.PUBKEY_SERIALIZE);
            }
        },
        publicKeyCombine (pubkeys, compressed = true, output) {
            assert(Array.isArray(pubkeys), 'Expected public keys to be an Array');
            assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items');
            for (const pubkey of pubkeys){
                isUint8Array('public key', pubkey, [
                    33,
                    65
                ]);
            }
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.publicKeyCombine(output, pubkeys)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.PUBKEY_PARSE);
                case 2:
                    throw new Error(errors.PUBKEY_COMBINE);
                case 3:
                    throw new Error(errors.PUBKEY_SERIALIZE);
            }
        },
        publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            isUint8Array('tweak', tweak, 32);
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.publicKeyTweakAdd(output, pubkey, tweak)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.PUBKEY_PARSE);
                case 2:
                    throw new Error(errors.TWEAK_ADD);
            }
        },
        publicKeyTweakMul (pubkey, tweak, compressed = true, output) {
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            isUint8Array('tweak', tweak, 32);
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.publicKeyTweakMul(output, pubkey, tweak)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.PUBKEY_PARSE);
                case 2:
                    throw new Error(errors.TWEAK_MUL);
            }
        },
        signatureNormalize (sig) {
            isUint8Array('signature', sig, 64);
            switch(secp256k1.signatureNormalize(sig)){
                case 0:
                    return sig;
                case 1:
                    throw new Error(errors.SIG_PARSE);
            }
        },
        signatureExport (sig, output) {
            isUint8Array('signature', sig, 64);
            output = getAssertedOutput(output, 72);
            const obj = {
                output,
                outputlen: 72
            };
            switch(secp256k1.signatureExport(obj, sig)){
                case 0:
                    return output.slice(0, obj.outputlen);
                case 1:
                    throw new Error(errors.SIG_PARSE);
                case 2:
                    throw new Error(errors.IMPOSSIBLE_CASE);
            }
        },
        signatureImport (sig, output) {
            isUint8Array('signature', sig);
            output = getAssertedOutput(output, 64);
            switch(secp256k1.signatureImport(output, sig)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.SIG_PARSE);
                case 2:
                    throw new Error(errors.IMPOSSIBLE_CASE);
            }
        },
        ecdsaSign (msg32, seckey, options = {}, output) {
            isUint8Array('message', msg32, 32);
            isUint8Array('private key', seckey, 32);
            assert(toTypeString(options) === 'Object', 'Expected options to be an Object');
            if (options.data !== undefined) isUint8Array('options.data', options.data);
            if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function');
            output = getAssertedOutput(output, 64);
            const obj = {
                signature: output,
                recid: null
            };
            switch(secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)){
                case 0:
                    return obj;
                case 1:
                    throw new Error(errors.SIGN);
                case 2:
                    throw new Error(errors.IMPOSSIBLE_CASE);
            }
        },
        ecdsaVerify (sig, msg32, pubkey) {
            isUint8Array('signature', sig, 64);
            isUint8Array('message', msg32, 32);
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            switch(secp256k1.ecdsaVerify(sig, msg32, pubkey)){
                case 0:
                    return true;
                case 3:
                    return false;
                case 1:
                    throw new Error(errors.SIG_PARSE);
                case 2:
                    throw new Error(errors.PUBKEY_PARSE);
            }
        },
        ecdsaRecover (sig, recid, msg32, compressed = true, output) {
            isUint8Array('signature', sig, 64);
            assert(toTypeString(recid) === 'Number' && recid >= 0 && recid <= 3, 'Expected recovery id to be a Number within interval [0, 3]');
            isUint8Array('message', msg32, 32);
            isCompressed(compressed);
            output = getAssertedOutput(output, compressed ? 33 : 65);
            switch(secp256k1.ecdsaRecover(output, sig, recid, msg32)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.SIG_PARSE);
                case 2:
                    throw new Error(errors.RECOVER);
                case 3:
                    throw new Error(errors.IMPOSSIBLE_CASE);
            }
        },
        ecdh (pubkey, seckey, options = {}, output) {
            isUint8Array('public key', pubkey, [
                33,
                65
            ]);
            isUint8Array('private key', seckey, 32);
            assert(toTypeString(options) === 'Object', 'Expected options to be an Object');
            if (options.data !== undefined) isUint8Array('options.data', options.data);
            if (options.hashfn !== undefined) {
                assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function');
                if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32);
                if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32);
                isUint8Array('output', output);
            } else {
                output = getAssertedOutput(output, 32);
            }
            switch(secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)){
                case 0:
                    return output;
                case 1:
                    throw new Error(errors.PUBKEY_PARSE);
                case 2:
                    throw new Error(errors.ECDH);
            }
        }
    };
};
}}),
"[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/bindings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const addon = __turbopack_require__("[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js [app-rsc] (ecmascript)")(__dirname);
module.exports = __turbopack_require__("[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/index.js [app-rsc] (ecmascript)")(new addon.Secp256k1());
}}),
"[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/elliptic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const EC = __turbopack_require__("[project]/node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic.js [app-rsc] (ecmascript)").ec;
const ec = new EC('secp256k1');
const ecparams = ec.curve;
// Hack, we can not use bn.js@5, while elliptic uses bn.js@4
// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758
const BN = ecparams.n.constructor;
function loadCompressedPublicKey(first, xbuf) {
    let x = new BN(xbuf);
    // overflow
    if (x.cmp(ecparams.p) >= 0) return null;
    x = x.toRed(ecparams.red);
    // compute corresponding Y
    let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();
    if (first === 0x03 !== y.isOdd()) y = y.redNeg();
    // x*x*x + b = y*y
    const x3 = x.redSqr().redIMul(x);
    if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;
    return ec.keyPair({
        pub: {
            x: x,
            y: y
        }
    });
}
function loadUncompressedPublicKey(first, xbuf, ybuf) {
    let x = new BN(xbuf);
    let y = new BN(ybuf);
    // overflow
    if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;
    x = x.toRed(ecparams.red);
    y = y.toRed(ecparams.red);
    // is odd flag
    if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null;
    // x*x*x + b = y*y
    const x3 = x.redSqr().redIMul(x);
    if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;
    return ec.keyPair({
        pub: {
            x: x,
            y: y
        }
    });
}
function loadPublicKey(pubkey) {
    // length should be validated in interface
    const first = pubkey[0];
    switch(first){
        case 0x02:
        case 0x03:
            if (pubkey.length !== 33) return null;
            return loadCompressedPublicKey(first, pubkey.subarray(1, 33));
        case 0x04:
        case 0x06:
        case 0x07:
            if (pubkey.length !== 65) return null;
            return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65));
        default:
            return null;
    }
}
function savePublicKey(output, point) {
    const pubkey = point.encode(null, output.length === 33);
    // Loop should be faster because we do not need create extra Uint8Array
    // output.set(new Uint8Array(pubkey))
    for(let i = 0; i < output.length; ++i)output[i] = pubkey[i];
}
module.exports = {
    contextRandomize () {
        return 0;
    },
    privateKeyVerify (seckey) {
        const bn = new BN(seckey);
        return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1;
    },
    privateKeyNegate (seckey) {
        const bn = new BN(seckey);
        const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32);
        seckey.set(negate);
        return 0;
    },
    privateKeyTweakAdd (seckey, tweak) {
        const bn = new BN(tweak);
        if (bn.cmp(ecparams.n) >= 0) return 1;
        bn.iadd(new BN(seckey));
        if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);
        if (bn.isZero()) return 1;
        const tweaked = bn.toArrayLike(Uint8Array, 'be', 32);
        seckey.set(tweaked);
        return 0;
    },
    privateKeyTweakMul (seckey, tweak) {
        let bn = new BN(tweak);
        if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;
        bn.imul(new BN(seckey));
        if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n);
        const tweaked = bn.toArrayLike(Uint8Array, 'be', 32);
        seckey.set(tweaked);
        return 0;
    },
    publicKeyVerify (pubkey) {
        const pair = loadPublicKey(pubkey);
        return pair === null ? 1 : 0;
    },
    publicKeyCreate (output, seckey) {
        const bn = new BN(seckey);
        if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;
        const point = ec.keyFromPrivate(seckey).getPublic();
        savePublicKey(output, point);
        return 0;
    },
    publicKeyConvert (output, pubkey) {
        const pair = loadPublicKey(pubkey);
        if (pair === null) return 1;
        const point = pair.getPublic();
        savePublicKey(output, point);
        return 0;
    },
    publicKeyNegate (output, pubkey) {
        const pair = loadPublicKey(pubkey);
        if (pair === null) return 1;
        const point = pair.getPublic();
        point.y = point.y.redNeg();
        savePublicKey(output, point);
        return 0;
    },
    publicKeyCombine (output, pubkeys) {
        const pairs = new Array(pubkeys.length);
        for(let i = 0; i < pubkeys.length; ++i){
            pairs[i] = loadPublicKey(pubkeys[i]);
            if (pairs[i] === null) return 1;
        }
        let point = pairs[0].getPublic();
        for(let i = 1; i < pairs.length; ++i)point = point.add(pairs[i].pub);
        if (point.isInfinity()) return 2;
        savePublicKey(output, point);
        return 0;
    },
    publicKeyTweakAdd (output, pubkey, tweak) {
        const pair = loadPublicKey(pubkey);
        if (pair === null) return 1;
        tweak = new BN(tweak);
        if (tweak.cmp(ecparams.n) >= 0) return 2;
        const point = pair.getPublic().add(ecparams.g.mul(tweak));
        if (point.isInfinity()) return 2;
        savePublicKey(output, point);
        return 0;
    },
    publicKeyTweakMul (output, pubkey, tweak) {
        const pair = loadPublicKey(pubkey);
        if (pair === null) return 1;
        tweak = new BN(tweak);
        if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2;
        const point = pair.getPublic().mul(tweak);
        savePublicKey(output, point);
        return 0;
    },
    signatureNormalize (sig) {
        const r = new BN(sig.subarray(0, 32));
        const s = new BN(sig.subarray(32, 64));
        if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1;
        if (s.cmp(ec.nh) === 1) {
            sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32);
        }
        return 0;
    },
    // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js
    // Adapted for Uint8Array instead Buffer
    signatureExport (obj, sig) {
        const sigR = sig.subarray(0, 32);
        const sigS = sig.subarray(32, 64);
        if (new BN(sigR).cmp(ecparams.n) >= 0) return 1;
        if (new BN(sigS).cmp(ecparams.n) >= 0) return 1;
        const { output } = obj;
        // Prepare R
        let r = output.subarray(4, 4 + 33);
        r[0] = 0x00;
        r.set(sigR, 1);
        let lenR = 33;
        let posR = 0;
        for(; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);
        r = r.subarray(posR);
        if (r[0] & 0x80) return 1;
        if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80)) return 1;
        // Prepare S
        let s = output.subarray(6 + 33, 6 + 33 + 33);
        s[0] = 0x00;
        s.set(sigS, 1);
        let lenS = 33;
        let posS = 0;
        for(; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);
        s = s.subarray(posS);
        if (s[0] & 0x80) return 1;
        if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80)) return 1;
        // Set output length for return
        obj.outputlen = 6 + lenR + lenS;
        // Output in specified format
        // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
        output[0] = 0x30;
        output[1] = obj.outputlen - 2;
        output[2] = 0x02;
        output[3] = r.length;
        output.set(r, 4);
        output[4 + lenR] = 0x02;
        output[5 + lenR] = s.length;
        output.set(s, 6 + lenR);
        return 0;
    },
    // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js
    // Adapted for Uint8Array instead Buffer
    signatureImport (output, sig) {
        if (sig.length < 8) return 1;
        if (sig.length > 72) return 1;
        if (sig[0] !== 0x30) return 1;
        if (sig[1] !== sig.length - 2) return 1;
        if (sig[2] !== 0x02) return 1;
        const lenR = sig[3];
        if (lenR === 0) return 1;
        if (5 + lenR >= sig.length) return 1;
        if (sig[4 + lenR] !== 0x02) return 1;
        const lenS = sig[5 + lenR];
        if (lenS === 0) return 1;
        if (6 + lenR + lenS !== sig.length) return 1;
        if (sig[4] & 0x80) return 1;
        if (lenR > 1 && sig[4] === 0x00 && !(sig[5] & 0x80)) return 1;
        if (sig[lenR + 6] & 0x80) return 1;
        if (lenS > 1 && sig[lenR + 6] === 0x00 && !(sig[lenR + 7] & 0x80)) return 1;
        let sigR = sig.subarray(4, 4 + lenR);
        if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1);
        if (sigR.length > 32) return 1;
        let sigS = sig.subarray(6 + lenR);
        if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1);
        if (sigS.length > 32) throw new Error('S length is too long');
        let r = new BN(sigR);
        if (r.cmp(ecparams.n) >= 0) r = new BN(0);
        let s = new BN(sig.subarray(6 + lenR));
        if (s.cmp(ecparams.n) >= 0) s = new BN(0);
        output.set(r.toArrayLike(Uint8Array, 'be', 32), 0);
        output.set(s.toArrayLike(Uint8Array, 'be', 32), 32);
        return 0;
    },
    ecdsaSign (obj, message, seckey, data, noncefn) {
        if (noncefn) {
            const _noncefn = noncefn;
            noncefn = (counter)=>{
                const nonce = _noncefn(message, seckey, null, data, counter);
                const isValid = nonce instanceof Uint8Array && nonce.length === 32;
                if (!isValid) throw new Error('This is the way');
                return new BN(nonce);
            };
        }
        const d = new BN(seckey);
        if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1;
        let sig;
        try {
            sig = ec.sign(message, seckey, {
                canonical: true,
                k: noncefn,
                pers: data
            });
        } catch (err) {
            return 1;
        }
        obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0);
        obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32);
        obj.recid = sig.recoveryParam;
        return 0;
    },
    ecdsaVerify (sig, msg32, pubkey) {
        const sigObj = {
            r: sig.subarray(0, 32),
            s: sig.subarray(32, 64)
        };
        const sigr = new BN(sigObj.r);
        const sigs = new BN(sigObj.s);
        if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;
        if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3;
        const pair = loadPublicKey(pubkey);
        if (pair === null) return 2;
        const point = pair.getPublic();
        const isValid = ec.verify(msg32, sigObj, point);
        return isValid ? 0 : 3;
    },
    ecdsaRecover (output, sig, recid, msg32) {
        const sigObj = {
            r: sig.slice(0, 32),
            s: sig.slice(32, 64)
        };
        const sigr = new BN(sigObj.r);
        const sigs = new BN(sigObj.s);
        if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;
        if (sigr.isZero() || sigs.isZero()) return 2;
        // Can throw `throw new Error('Unable to find sencond key candinate');`
        let point;
        try {
            point = ec.recoverPubKey(msg32, sigObj, recid);
        } catch (err) {
            return 2;
        }
        savePublicKey(output, point);
        return 0;
    },
    ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {
        const pair = loadPublicKey(pubkey);
        if (pair === null) return 1;
        const scalar = new BN(seckey);
        if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2;
        const point = pair.getPublic().mul(scalar);
        if (hashfn === undefined) {
            const data = point.encode(null, true);
            const sha256 = ec.hash().update(data).digest();
            for(let i = 0; i < 32; ++i)output[i] = sha256[i];
        } else {
            if (!xbuf) xbuf = new Uint8Array(32);
            const x = point.getX().toArray('be', 32);
            for(let i = 0; i < 32; ++i)xbuf[i] = x[i];
            if (!ybuf) ybuf = new Uint8Array(32);
            const y = point.getY().toArray('be', 32);
            for(let i = 0; i < 32; ++i)ybuf[i] = y[i];
            const hash = hashfn(xbuf, ybuf, data);
            const isValid = hash instanceof Uint8Array && hash.length === output.length;
            if (!isValid) return 2;
            output.set(hash);
        }
        return 0;
    }
};
}}),
"[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/elliptic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = __turbopack_require__("[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/index.js [app-rsc] (ecmascript)")(__turbopack_require__("[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/elliptic.js [app-rsc] (ecmascript)"));
}}),
"[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
try {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/bindings.js [app-rsc] (ecmascript)");
} catch (err) {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/secp256k1@4.0.4/node_modules/secp256k1/elliptic.js [app-rsc] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/minimalistic-crypto-utils@1.0.1/node_modules/minimalistic-crypto-utils/lib/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = exports;
function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg !== 'string') {
        for(var i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
        return res;
    }
    if (enc === 'hex') {
        msg = msg.replace(/[^a-z0-9]+/ig, '');
        if (msg.length % 2 !== 0) msg = '0' + msg;
        for(var i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
    } else {
        for(var i = 0; i < msg.length; i++){
            var c = msg.charCodeAt(i);
            var hi = c >> 8;
            var lo = c & 0xff;
            if (hi) res.push(hi, lo);
            else res.push(lo);
        }
    }
    return res;
}
utils.toArray = toArray;
function zero2(word) {
    if (word.length === 1) return '0' + word;
    else return word;
}
utils.zero2 = zero2;
function toHex(msg) {
    var res = '';
    for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));
    return res;
}
utils.toHex = toHex;
utils.encode = function encode(arr, enc) {
    if (enc === 'hex') return toHex(arr);
    else return arr;
};
}}),
"[project]/node_modules/.pnpm/brorand@1.1.0/node_modules/brorand/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var r;
module.exports = function rand(len) {
    if (!r) r = new Rand(null);
    return r.generate(len);
};
function Rand(rand) {
    this.rand = rand;
}
module.exports.Rand = Rand;
Rand.prototype.generate = function generate(len) {
    return this._rand(len);
};
// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
    if (this.rand.getBytes) return this.rand.getBytes(n);
    var res = new Uint8Array(n);
    for(var i = 0; i < res.length; i++)res[i] = this.rand.getByte();
    return res;
};
if (typeof self === 'object') {
    if (self.crypto && self.crypto.getRandomValues) {
        // Modern browsers
        Rand.prototype._rand = function _rand(n) {
            var arr = new Uint8Array(n);
            self.crypto.getRandomValues(arr);
            return arr;
        };
    } else if (self.msCrypto && self.msCrypto.getRandomValues) {
        // IE
        Rand.prototype._rand = function _rand(n) {
            var arr = new Uint8Array(n);
            self.msCrypto.getRandomValues(arr);
            return arr;
        };
    // Safari's WebWorkers do not have `crypto`
    } else if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
} else {
    // Node.js or Web worker with no crypto support
    try {
        var crypto = __turbopack_require__("[externals]/crypto [external] (crypto, cjs)");
        if (typeof crypto.randomBytes !== 'function') throw new Error('Not supported');
        Rand.prototype._rand = function _rand(n) {
            return crypto.randomBytes(n);
        };
    } catch (e) {}
}
}}),
"[project]/node_modules/.pnpm/hmac-drbg@1.0.1/node_modules/hmac-drbg/lib/hmac-drbg.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var hash = __turbopack_require__("[project]/node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js [app-rsc] (ecmascript)");
var utils = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-crypto-utils@1.0.1/node_modules/minimalistic-crypto-utils/lib/utils.js [app-rsc] (ecmascript)");
var assert = __turbopack_require__("[project]/node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js [app-rsc] (ecmascript)");
function HmacDRBG(options) {
    if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
    this.hash = options.hash;
    this.predResist = !!options.predResist;
    this.outLen = this.hash.outSize;
    this.minEntropy = options.minEntropy || this.hash.hmacStrength;
    this._reseed = null;
    this.reseedInterval = null;
    this.K = null;
    this.V = null;
    var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
    var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
    var pers = utils.toArray(options.pers, options.persEnc || 'hex');
    assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
    this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;
HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
    var seed = entropy.concat(nonce).concat(pers);
    this.K = new Array(this.outLen / 8);
    this.V = new Array(this.outLen / 8);
    for(var i = 0; i < this.V.length; i++){
        this.K[i] = 0x00;
        this.V[i] = 0x01;
    }
    this._update(seed);
    this._reseed = 1;
    this.reseedInterval = 0x1000000000000; // 2^48
};
HmacDRBG.prototype._hmac = function hmac() {
    return new hash.hmac(this.hash, this.K);
};
HmacDRBG.prototype._update = function update(seed) {
    var kmac = this._hmac().update(this.V).update([
        0x00
    ]);
    if (seed) kmac = kmac.update(seed);
    this.K = kmac.digest();
    this.V = this._hmac().update(this.V).digest();
    if (!seed) return;
    this.K = this._hmac().update(this.V).update([
        0x01
    ]).update(seed).digest();
    this.V = this._hmac().update(this.V).digest();
};
HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
    // Optional entropy enc
    if (typeof entropyEnc !== 'string') {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
    }
    entropy = utils.toArray(entropy, entropyEnc);
    add = utils.toArray(add, addEnc);
    assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
    this._update(entropy.concat(add || []));
    this._reseed = 1;
};
HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
    if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');
    // Optional encoding
    if (typeof enc !== 'string') {
        addEnc = add;
        add = enc;
        enc = null;
    }
    // Optional additional data
    if (add) {
        add = utils.toArray(add, addEnc || 'hex');
        this._update(add);
    }
    var temp = [];
    while(temp.length < len){
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
    }
    var res = temp.slice(0, len);
    this._update(add);
    this._reseed++;
    return utils.encode(res, enc);
};
}}),
"[project]/node_modules/.pnpm/@toruslabs+eccrypto@4.0.0/node_modules/@toruslabs/eccrypto/dist/eccrypto.esm.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decrypt": (()=>decrypt),
    "derive": (()=>derive),
    "derivePadded": (()=>derivePadded),
    "deriveUnpadded": (()=>deriveUnpadded),
    "encrypt": (()=>encrypt),
    "generatePrivate": (()=>generatePrivate),
    "getPublic": (()=>getPublic),
    "getPublicCompressed": (()=>getPublicCompressed),
    "sign": (()=>sign),
    "verify": (()=>verify)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/crypto [external] (crypto, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$elliptic$40$6$2e$6$2e$1$2f$node_modules$2f$elliptic$2f$lib$2f$elliptic$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic.js [app-rsc] (ecmascript)");
;
;
const ec = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$elliptic$40$6$2e$6$2e$1$2f$node_modules$2f$elliptic$2f$lib$2f$elliptic$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ec"]("secp256k1");
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const browserCrypto = global.crypto || global.msCrypto || {};
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;
const EC_GROUP_ORDER = Buffer.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", "hex");
const ZERO32 = Buffer.alloc(32, 0);
function assert(condition, message) {
    if (!condition) {
        throw new Error(message || "Assertion failed");
    }
}
function isScalar(x) {
    return Buffer.isBuffer(x) && x.length === 32;
}
function isValidPrivateKey(privateKey) {
    if (!isScalar(privateKey)) {
        return false;
    }
    return privateKey.compare(ZERO32) > 0 && // > 0
    privateKey.compare(EC_GROUP_ORDER) < 0; // < G
}
// Compare two buffers in constant time to prevent timing attacks.
function equalConstTime(b1, b2) {
    if (b1.length !== b2.length) {
        return false;
    }
    let res = 0;
    for(let i = 0; i < b1.length; i++){
        res |= b1[i] ^ b2[i]; // jshint ignore:line
    }
    return res === 0;
}
/* This must check if we're in the browser or
not, since the functions are different and does
not convert using browserify */ function randomBytes(size) {
    const arr = new Uint8Array(size);
    if (typeof browserCrypto.getRandomValues === "undefined") {
        return Buffer.from(__TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomBytes(size));
    }
    browserCrypto.getRandomValues(arr);
    return Buffer.from(arr);
}
async function sha512(msg) {
    if (subtle) {
        const hash = await subtle.digest("SHA-512", msg);
        const result = new Uint8Array(hash);
        return result;
    }
    const hash = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash("sha512");
    const result = hash.update(msg).digest();
    return new Uint8Array(result);
}
function getAes(op) {
    return async function(iv, key, data) {
        if (subtle) {
            const importAlgorithm = {
                name: "AES-CBC"
            };
            const cryptoKey = await subtle.importKey("raw", key, importAlgorithm, false, [
                op
            ]);
            const encAlgorithm = {
                name: "AES-CBC",
                iv
            };
            const result = await subtle[op](encAlgorithm, cryptoKey, data);
            return Buffer.from(new Uint8Array(result));
        } else if (op === "encrypt") {
            const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv("aes-256-cbc", key, iv);
            const firstChunk = cipher.update(data);
            const secondChunk = cipher.final();
            return Buffer.concat([
                firstChunk,
                secondChunk
            ]);
        } else if (op === "decrypt") {
            const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv("aes-256-cbc", key, iv);
            const firstChunk = decipher.update(data);
            const secondChunk = decipher.final();
            return Buffer.concat([
                firstChunk,
                secondChunk
            ]);
        }
        throw new Error(`Unsupported operation: ${op}`);
    };
}
const aesCbcEncrypt = getAes("encrypt");
const aesCbcDecrypt = getAes("decrypt");
async function hmacSha256Sign(key, msg) {
    if (subtle) {
        const importAlgorithm = {
            name: "HMAC",
            hash: {
                name: "SHA-256"
            }
        };
        const cryptoKey = await subtle.importKey("raw", new Uint8Array(key), importAlgorithm, false, [
            "sign",
            "verify"
        ]);
        const sig = await subtle.sign("HMAC", cryptoKey, msg);
        const result = Buffer.from(new Uint8Array(sig));
        return result;
    }
    const hmac = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHmac("sha256", Buffer.from(key));
    hmac.update(msg);
    const result = hmac.digest();
    return result;
}
async function hmacSha256Verify(key, msg, sig) {
    const expectedSig = await hmacSha256Sign(key, msg);
    return equalConstTime(expectedSig, sig);
}
/**
 * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source
 * depending on your browser.
 */ const generatePrivate = function() {
    let privateKey = randomBytes(32);
    while(!isValidPrivateKey(privateKey)){
        privateKey = randomBytes(32);
    }
    return privateKey;
};
const getPublic = function(privateKey) {
    // This function has sync API so we throw an error immediately.
    assert(privateKey.length === 32, "Bad private key");
    assert(isValidPrivateKey(privateKey), "Bad private key");
    // XXX(Kagami): `elliptic.utils.encode` returns array for every
    // encoding except `hex`.
    return Buffer.from(ec.keyFromPrivate(privateKey).getPublic("array"));
};
/**
 * Get compressed version of public key.
 */ const getPublicCompressed = function(privateKey) {
    // jshint ignore:line
    assert(privateKey.length === 32, "Bad private key");
    assert(isValidPrivateKey(privateKey), "Bad private key");
    // See https://github.com/wanderer/secp256k1-node/issues/46
    const compressed = true;
    return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, "array"));
};
// NOTE(Kagami): We don't use promise shim in Browser implementation
// because it's supported natively in new browsers (see
// <http://caniuse.com/#feat=promises>) and we can use only new browsers
// because of the WebCryptoAPI (see
// <http://caniuse.com/#feat=cryptography>).
const sign = async function(privateKey, msg) {
    assert(privateKey.length === 32, "Bad private key");
    assert(isValidPrivateKey(privateKey), "Bad private key");
    assert(msg.length > 0, "Message should not be empty");
    assert(msg.length <= 32, "Message is too long");
    return Buffer.from(ec.sign(msg, privateKey, {
        canonical: true
    }).toDER());
};
const verify = async function(publicKey, msg, sig) {
    assert(publicKey.length === 65 || publicKey.length === 33, "Bad public key");
    if (publicKey.length === 65) {
        assert(publicKey[0] === 4, "Bad public key");
    }
    if (publicKey.length === 33) {
        assert(publicKey[0] === 2 || publicKey[0] === 3, "Bad public key");
    }
    assert(msg.length > 0, "Message should not be empty");
    assert(msg.length <= 32, "Message is too long");
    if (ec.verify(msg, sig, publicKey)) {
        return null;
    }
    throw new Error("Bad signature");
};
const derive = async function(privateKeyA, publicKeyB) {
    assert(Buffer.isBuffer(privateKeyA), "Bad private key");
    assert(Buffer.isBuffer(publicKeyB), "Bad public key");
    assert(privateKeyA.length === 32, "Bad private key");
    assert(isValidPrivateKey(privateKeyA), "Bad private key");
    assert(publicKeyB.length === 65 || publicKeyB.length === 33, "Bad public key");
    if (publicKeyB.length === 65) {
        assert(publicKeyB[0] === 4, "Bad public key");
    }
    if (publicKeyB.length === 33) {
        assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, "Bad public key");
    }
    const keyA = ec.keyFromPrivate(privateKeyA);
    const keyB = ec.keyFromPublic(publicKeyB);
    const Px = keyA.derive(keyB.getPublic()); // BN instance
    return Buffer.from(Px.toArray());
};
const deriveUnpadded = derive;
const derivePadded = async function(privateKeyA, publicKeyB) {
    assert(Buffer.isBuffer(privateKeyA), "Bad private key");
    assert(Buffer.isBuffer(publicKeyB), "Bad public key");
    assert(privateKeyA.length === 32, "Bad private key");
    assert(isValidPrivateKey(privateKeyA), "Bad private key");
    assert(publicKeyB.length === 65 || publicKeyB.length === 33, "Bad public key");
    if (publicKeyB.length === 65) {
        assert(publicKeyB[0] === 4, "Bad public key");
    }
    if (publicKeyB.length === 33) {
        assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, "Bad public key");
    }
    const keyA = ec.keyFromPrivate(privateKeyA);
    const keyB = ec.keyFromPublic(publicKeyB);
    const Px = keyA.derive(keyB.getPublic()); // BN instance
    return Buffer.from(Px.toString(16, 64), "hex");
};
const encrypt = async function(publicKeyTo, msg, opts) {
    opts = opts || {};
    let ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);
    // There is a very unlikely possibility that it is not a valid key
    while(!isValidPrivateKey(ephemPrivateKey)){
        ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);
    }
    const ephemPublicKey = getPublic(ephemPrivateKey);
    const Px = await deriveUnpadded(ephemPrivateKey, publicKeyTo);
    const hash = await sha512(Px);
    const iv = opts.iv || randomBytes(16);
    const encryptionKey = hash.slice(0, 32);
    const macKey = hash.slice(32);
    const data = await aesCbcEncrypt(iv, Buffer.from(encryptionKey), msg);
    const ciphertext = data;
    const dataToMac = Buffer.concat([
        iv,
        ephemPublicKey,
        ciphertext
    ]);
    const mac = await hmacSha256Sign(Buffer.from(macKey), dataToMac);
    return {
        iv,
        ephemPublicKey,
        ciphertext,
        mac
    };
};
const decrypt = async function(privateKey, opts, _padding) {
    const padding = _padding !== null && _padding !== void 0 ? _padding : false;
    const deriveLocal = padding ? derivePadded : deriveUnpadded;
    const Px = await deriveLocal(privateKey, opts.ephemPublicKey);
    const hash = await sha512(Px);
    const encryptionKey = hash.slice(0, 32);
    const macKey = hash.slice(32);
    const dataToMac = Buffer.concat([
        opts.iv,
        opts.ephemPublicKey,
        opts.ciphertext
    ]);
    const macGood = await hmacSha256Verify(Buffer.from(macKey), dataToMac, opts.mac);
    if (!macGood && padding === false) {
        return decrypt(privateKey, opts, true);
    } else if (!macGood && padding === true) {
        throw new Error("bad MAC after trying padded");
    }
    const msg = await aesCbcDecrypt(opts.iv, Buffer.from(encryptionKey), opts.ciphertext);
    return Buffer.from(new Uint8Array(msg));
};
;
 //# sourceMappingURL=eccrypto.esm.js.map
}}),
"[project]/node_modules/.pnpm/big.js@3.2.0/node_modules/big.js/big.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
;
(function(global) {
    'use strict';
    /*
  big.js v3.1.3
  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.
  https://github.com/MikeMcl/big.js/
  Copyright (c) 2014 Michael Mclaughlin <M8ch88l@gmail.com>
  MIT Expat Licence
*/ /***************************** EDITABLE DEFAULTS ******************************/ // The default values below must be integers within the stated ranges.
    /*
     * The maximum number of decimal places of the results of operations
     * involving division: div and sqrt, and pow with negative exponents.
     */ var DP = 20, /*
         * The rounding mode used when rounding to the above decimal places.
         *
         * 0 Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)
         * 1 To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)
         * 2 To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)
         * 3 Away from zero.                                  (ROUND_UP)
         */ RM = 1, // The maximum value of DP and Big.DP.
    MAX_DP = 1E6, // The maximum magnitude of the exponent argument to the pow method.
    MAX_POWER = 1E6, /*
         * The exponent value at and beneath which toString returns exponential
         * notation.
         * JavaScript's Number type: -7
         * -1000000 is the minimum recommended exponent value of a Big.
         */ E_NEG = -7, /*
         * The exponent value at and above which toString returns exponential
         * notation.
         * JavaScript's Number type: 21
         * 1000000 is the maximum recommended exponent value of a Big.
         * (This limit is not enforced or checked.)
         */ E_POS = 21, /******************************************************************************/ // The shared prototype object.
    P = {}, isValid = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, Big;
    /*
     * Create and return a Big constructor.
     *
     */ function bigFactory() {
        /*
         * The Big constructor and exported function.
         * Create and return a new instance of a Big number object.
         *
         * n {number|string|Big} A numeric value.
         */ function Big(n) {
            var x = this;
            // Enable constructor usage without new.
            if (!(x instanceof Big)) {
                return n === void 0 ? bigFactory() : new Big(n);
            }
            // Duplicate.
            if (n instanceof Big) {
                x.s = n.s;
                x.e = n.e;
                x.c = n.c.slice();
            } else {
                parse(x, n);
            }
            /*
             * Retain a reference to this Big constructor, and shadow
             * Big.prototype.constructor which points to Object.
             */ x.constructor = Big;
        }
        Big.prototype = P;
        Big.DP = DP;
        Big.RM = RM;
        Big.E_NEG = E_NEG;
        Big.E_POS = E_POS;
        return Big;
    }
    // Private functions
    /*
     * Return a string representing the value of Big x in normal or exponential
     * notation to dp fixed decimal places or significant digits.
     *
     * x {Big} The Big to format.
     * dp {number} Integer, 0 to MAX_DP inclusive.
     * toE {number} 1 (toExponential), 2 (toPrecision) or undefined (toFixed).
     */ function format(x, dp, toE) {
        var Big = x.constructor, // The index (normal notation) of the digit that may be rounded up.
        i = dp - (x = new Big(x)).e, c = x.c;
        // Round?
        if (c.length > ++dp) {
            rnd(x, i, Big.RM);
        }
        if (!c[0]) {
            ++i;
        } else if (toE) {
            i = dp;
        // toFixed
        } else {
            c = x.c;
            // Recalculate i as x.e may have changed if value rounded up.
            i = x.e + i + 1;
        }
        // Append zeros?
        for(; c.length < i; c.push(0)){}
        i = x.e;
        /*
         * toPrecision returns exponential notation if the number of
         * significant digits specified is less than the number of digits
         * necessary to represent the integer part of the value in normal
         * notation.
         */ return toE === 1 || toE && (dp <= i || i <= Big.E_NEG) ? // Exponential notation.
        (x.s < 0 && c[0] ? '-' : '') + (c.length > 1 ? c[0] + '.' + c.join('').slice(1) : c[0]) + (i < 0 ? 'e' : 'e+') + i : x.toString();
    }
    /*
     * Parse the number or string value passed to a Big constructor.
     *
     * x {Big} A Big number instance.
     * n {number|string} A numeric value.
     */ function parse(x, n) {
        var e, i, nL;
        // Minus zero?
        if (n === 0 && 1 / n < 0) {
            n = '-0';
        // Ensure n is string and check validity.
        } else if (!isValid.test(n += '')) {
            throwErr(NaN);
        }
        // Determine sign.
        x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;
        // Decimal point?
        if ((e = n.indexOf('.')) > -1) {
            n = n.replace('.', '');
        }
        // Exponential form?
        if ((i = n.search(/e/i)) > 0) {
            // Determine exponent.
            if (e < 0) {
                e = i;
            }
            e += +n.slice(i + 1);
            n = n.substring(0, i);
        } else if (e < 0) {
            // Integer.
            e = n.length;
        }
        nL = n.length;
        // Determine leading zeros.
        for(i = 0; i < nL && n.charAt(i) == '0'; i++){}
        if (i == nL) {
            // Zero.
            x.c = [
                x.e = 0
            ];
        } else {
            // Determine trailing zeros.
            for(; nL > 0 && n.charAt(--nL) == '0';){}
            x.e = e - i - 1;
            x.c = [];
            // Convert string to array of digits without leading/trailing zeros.
            //for (e = 0; i <= nL; x.c[e++] = +n.charAt(i++)) {
            for(; i <= nL; x.c.push(+n.charAt(i++))){}
        }
        return x;
    }
    /*
     * Round Big x to a maximum of dp decimal places using rounding mode rm.
     * Called by div, sqrt and round.
     *
     * x {Big} The Big to round.
     * dp {number} Integer, 0 to MAX_DP inclusive.
     * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)
     * [more] {boolean} Whether the result of division was truncated.
     */ function rnd(x, dp, rm, more) {
        var u, xc = x.c, i = x.e + dp + 1;
        if (rm === 1) {
            // xc[i] is the digit after the digit that may be rounded up.
            more = xc[i] >= 5;
        } else if (rm === 2) {
            more = xc[i] > 5 || xc[i] == 5 && (more || i < 0 || xc[i + 1] !== u || xc[i - 1] & 1);
        } else if (rm === 3) {
            more = more || xc[i] !== u || i < 0;
        } else {
            more = false;
            if (rm !== 0) {
                throwErr('!Big.RM!');
            }
        }
        if (i < 1 || !xc[0]) {
            if (more) {
                // 1, 0.1, 0.01, 0.001, 0.0001 etc.
                x.e = -dp;
                x.c = [
                    1
                ];
            } else {
                // Zero.
                x.c = [
                    x.e = 0
                ];
            }
        } else {
            // Remove any digits after the required decimal places.
            xc.length = i--;
            // Round up?
            if (more) {
                // Rounding up may mean the previous digit has to be rounded up.
                for(; ++xc[i] > 9;){
                    xc[i] = 0;
                    if (!i--) {
                        ++x.e;
                        xc.unshift(1);
                    }
                }
            }
            // Remove trailing zeros.
            for(i = xc.length; !xc[--i]; xc.pop()){}
        }
        return x;
    }
    /*
     * Throw a BigError.
     *
     * message {string} The error message.
     */ function throwErr(message) {
        var err = new Error(message);
        err.name = 'BigError';
        throw err;
    }
    // Prototype/instance methods
    /*
     * Return a new Big whose value is the absolute value of this Big.
     */ P.abs = function() {
        var x = new this.constructor(this);
        x.s = 1;
        return x;
    };
    /*
     * Return
     * 1 if the value of this Big is greater than the value of Big y,
     * -1 if the value of this Big is less than the value of Big y, or
     * 0 if they have the same value.
    */ P.cmp = function(y) {
        var xNeg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;
        // Either zero?
        if (!xc[0] || !yc[0]) {
            return !xc[0] ? !yc[0] ? 0 : -j : i;
        }
        // Signs differ?
        if (i != j) {
            return i;
        }
        xNeg = i < 0;
        // Compare exponents.
        if (k != l) {
            return k > l ^ xNeg ? 1 : -1;
        }
        i = -1;
        j = (k = xc.length) < (l = yc.length) ? k : l;
        // Compare digit by digit.
        for(; ++i < j;){
            if (xc[i] != yc[i]) {
                return xc[i] > yc[i] ^ xNeg ? 1 : -1;
            }
        }
        // Compare lengths.
        return k == l ? 0 : k > l ^ xNeg ? 1 : -1;
    };
    /*
     * Return a new Big whose value is the value of this Big divided by the
     * value of Big y, rounded, if necessary, to a maximum of Big.DP decimal
     * places using rounding mode Big.RM.
     */ P.div = function(y) {
        var x = this, Big = x.constructor, // dividend
        dvd = x.c, //divisor
        dvs = (y = new Big(y)).c, s = x.s == y.s ? 1 : -1, dp = Big.DP;
        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
            throwErr('!Big.DP!');
        }
        // Either 0?
        if (!dvd[0] || !dvs[0]) {
            // If both are 0, throw NaN
            if (dvd[0] == dvs[0]) {
                throwErr(NaN);
            }
            // If dvs is 0, throw +-Infinity.
            if (!dvs[0]) {
                throwErr(s / 0);
            }
            // dvd is 0, return +-0.
            return new Big(s * 0);
        }
        var dvsL, dvsT, next, cmp, remI, u, dvsZ = dvs.slice(), dvdI = dvsL = dvs.length, dvdL = dvd.length, // remainder
        rem = dvd.slice(0, dvsL), remL = rem.length, // quotient
        q = y, qc = q.c = [], qi = 0, digits = dp + (q.e = x.e - y.e) + 1;
        q.s = s;
        s = digits < 0 ? 0 : digits;
        // Create version of divisor with leading zero.
        dvsZ.unshift(0);
        // Add zeros to make remainder as long as divisor.
        for(; remL++ < dvsL; rem.push(0)){}
        do {
            // 'next' is how many times the divisor goes into current remainder.
            for(next = 0; next < 10; next++){
                // Compare divisor and remainder.
                if (dvsL != (remL = rem.length)) {
                    cmp = dvsL > remL ? 1 : -1;
                } else {
                    for(remI = -1, cmp = 0; ++remI < dvsL;){
                        if (dvs[remI] != rem[remI]) {
                            cmp = dvs[remI] > rem[remI] ? 1 : -1;
                            break;
                        }
                    }
                }
                // If divisor < remainder, subtract divisor from remainder.
                if (cmp < 0) {
                    // Remainder can't be more than 1 digit longer than divisor.
                    // Equalise lengths using divisor with extra leading zero?
                    for(dvsT = remL == dvsL ? dvs : dvsZ; remL;){
                        if (rem[--remL] < dvsT[remL]) {
                            remI = remL;
                            for(; remI && !rem[--remI]; rem[remI] = 9){}
                            --rem[remI];
                            rem[remL] += 10;
                        }
                        rem[remL] -= dvsT[remL];
                    }
                    for(; !rem[0]; rem.shift()){}
                } else {
                    break;
                }
            }
            // Add the 'next' digit to the result array.
            qc[qi++] = cmp ? next : ++next;
            // Update the remainder.
            if (rem[0] && cmp) {
                rem[remL] = dvd[dvdI] || 0;
            } else {
                rem = [
                    dvd[dvdI]
                ];
            }
        }while ((dvdI++ < dvdL || rem[0] !== u) && s--)
        // Leading zero? Do not remove if result is simply zero (qi == 1).
        if (!qc[0] && qi != 1) {
            // There can't be more than one zero.
            qc.shift();
            q.e--;
        }
        // Round?
        if (qi > digits) {
            rnd(q, dp, Big.RM, rem[0] !== u);
        }
        return q;
    };
    /*
     * Return true if the value of this Big is equal to the value of Big y,
     * otherwise returns false.
     */ P.eq = function(y) {
        return !this.cmp(y);
    };
    /*
     * Return true if the value of this Big is greater than the value of Big y,
     * otherwise returns false.
     */ P.gt = function(y) {
        return this.cmp(y) > 0;
    };
    /*
     * Return true if the value of this Big is greater than or equal to the
     * value of Big y, otherwise returns false.
     */ P.gte = function(y) {
        return this.cmp(y) > -1;
    };
    /*
     * Return true if the value of this Big is less than the value of Big y,
     * otherwise returns false.
     */ P.lt = function(y) {
        return this.cmp(y) < 0;
    };
    /*
     * Return true if the value of this Big is less than or equal to the value
     * of Big y, otherwise returns false.
     */ P.lte = function(y) {
        return this.cmp(y) < 1;
    };
    /*
     * Return a new Big whose value is the value of this Big minus the value
     * of Big y.
     */ P.sub = P.minus = function(y) {
        var i, j, t, xLTy, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;
        // Signs differ?
        if (a != b) {
            y.s = -b;
            return x.plus(y);
        }
        var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;
        // Either zero?
        if (!xc[0] || !yc[0]) {
            // y is non-zero? x is non-zero? Or both are zero.
            return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);
        }
        // Determine which is the bigger number.
        // Prepend zeros to equalise exponents.
        if (a = xe - ye) {
            if (xLTy = a < 0) {
                a = -a;
                t = xc;
            } else {
                ye = xe;
                t = yc;
            }
            t.reverse();
            for(b = a; b--; t.push(0)){}
            t.reverse();
        } else {
            // Exponents equal. Check digit by digit.
            j = ((xLTy = xc.length < yc.length) ? xc : yc).length;
            for(a = b = 0; b < j; b++){
                if (xc[b] != yc[b]) {
                    xLTy = xc[b] < yc[b];
                    break;
                }
            }
        }
        // x < y? Point xc to the array of the bigger number.
        if (xLTy) {
            t = xc;
            xc = yc;
            yc = t;
            y.s = -y.s;
        }
        /*
         * Append zeros to xc if shorter. No need to add zeros to yc if shorter
         * as subtraction only needs to start at yc.length.
         */ if ((b = (j = yc.length) - (i = xc.length)) > 0) {
            for(; b--; xc[i++] = 0){}
        }
        // Subtract yc from xc.
        for(b = i; j > a;){
            if (xc[--j] < yc[j]) {
                for(i = j; i && !xc[--i]; xc[i] = 9){}
                --xc[i];
                xc[j] += 10;
            }
            xc[j] -= yc[j];
        }
        // Remove trailing zeros.
        for(; xc[--b] === 0; xc.pop()){}
        // Remove leading zeros and adjust exponent accordingly.
        for(; xc[0] === 0;){
            xc.shift();
            --ye;
        }
        if (!xc[0]) {
            // n - n = +0
            y.s = 1;
            // Result must be zero.
            xc = [
                ye = 0
            ];
        }
        y.c = xc;
        y.e = ye;
        return y;
    };
    /*
     * Return a new Big whose value is the value of this Big modulo the
     * value of Big y.
     */ P.mod = function(y) {
        var yGTx, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;
        if (!y.c[0]) {
            throwErr(NaN);
        }
        x.s = y.s = 1;
        yGTx = y.cmp(x) == 1;
        x.s = a;
        y.s = b;
        if (yGTx) {
            return new Big(x);
        }
        a = Big.DP;
        b = Big.RM;
        Big.DP = Big.RM = 0;
        x = x.div(y);
        Big.DP = a;
        Big.RM = b;
        return this.minus(x.times(y));
    };
    /*
     * Return a new Big whose value is the value of this Big plus the value
     * of Big y.
     */ P.add = P.plus = function(y) {
        var t, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;
        // Signs differ?
        if (a != b) {
            y.s = -b;
            return x.minus(y);
        }
        var xe = x.e, xc = x.c, ye = y.e, yc = y.c;
        // Either zero?
        if (!xc[0] || !yc[0]) {
            // y is non-zero? x is non-zero? Or both are zero.
            return yc[0] ? y : new Big(xc[0] ? x : a * 0);
        }
        xc = xc.slice();
        // Prepend zeros to equalise exponents.
        // Note: Faster to use reverse then do unshifts.
        if (a = xe - ye) {
            if (a > 0) {
                ye = xe;
                t = yc;
            } else {
                a = -a;
                t = xc;
            }
            t.reverse();
            for(; a--; t.push(0)){}
            t.reverse();
        }
        // Point xc to the longer array.
        if (xc.length - yc.length < 0) {
            t = yc;
            yc = xc;
            xc = t;
        }
        a = yc.length;
        /*
         * Only start adding at yc.length - 1 as the further digits of xc can be
         * left as they are.
         */ for(b = 0; a;){
            b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;
            xc[a] %= 10;
        }
        // No need to check for zero, as +x + +y != 0 && -x + -y != 0
        if (b) {
            xc.unshift(b);
            ++ye;
        }
        // Remove trailing zeros.
        for(a = xc.length; xc[--a] === 0; xc.pop()){}
        y.c = xc;
        y.e = ye;
        return y;
    };
    /*
     * Return a Big whose value is the value of this Big raised to the power n.
     * If n is negative, round, if necessary, to a maximum of Big.DP decimal
     * places using rounding mode Big.RM.
     *
     * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.
     */ P.pow = function(n) {
        var x = this, one = new x.constructor(1), y = one, isNeg = n < 0;
        if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {
            throwErr('!pow!');
        }
        n = isNeg ? -n : n;
        for(;;){
            if (n & 1) {
                y = y.times(x);
            }
            n >>= 1;
            if (!n) {
                break;
            }
            x = x.times(x);
        }
        return isNeg ? one.div(y) : y;
    };
    /*
     * Return a new Big whose value is the value of this Big rounded to a
     * maximum of dp decimal places using rounding mode rm.
     * If dp is not specified, round to 0 decimal places.
     * If rm is not specified, use Big.RM.
     *
     * [dp] {number} Integer, 0 to MAX_DP inclusive.
     * [rm] 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)
     */ P.round = function(dp, rm) {
        var x = this, Big = x.constructor;
        if (dp == null) {
            dp = 0;
        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
            throwErr('!round!');
        }
        rnd(x = new Big(x), dp, rm == null ? Big.RM : rm);
        return x;
    };
    /*
     * Return a new Big whose value is the square root of the value of this Big,
     * rounded, if necessary, to a maximum of Big.DP decimal places using
     * rounding mode Big.RM.
     */ P.sqrt = function() {
        var estimate, r, approx, x = this, Big = x.constructor, xc = x.c, i = x.s, e = x.e, half = new Big('0.5');
        // Zero?
        if (!xc[0]) {
            return new Big(x);
        }
        // If negative, throw NaN.
        if (i < 0) {
            throwErr(NaN);
        }
        // Estimate.
        i = Math.sqrt(x.toString());
        // Math.sqrt underflow/overflow?
        // Pass x to Math.sqrt as integer, then adjust the result exponent.
        if (i === 0 || i === 1 / 0) {
            estimate = xc.join('');
            if (!(estimate.length + e & 1)) {
                estimate += '0';
            }
            r = new Big(Math.sqrt(estimate).toString());
            r.e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);
        } else {
            r = new Big(i.toString());
        }
        i = r.e + (Big.DP += 4);
        // Newton-Raphson iteration.
        do {
            approx = r;
            r = half.times(approx.plus(x.div(approx)));
        }while (approx.c.slice(0, i).join('') !== r.c.slice(0, i).join(''))
        rnd(r, Big.DP -= 4, Big.RM);
        return r;
    };
    /*
     * Return a new Big whose value is the value of this Big times the value of
     * Big y.
     */ P.mul = P.times = function(y) {
        var c, x = this, Big = x.constructor, xc = x.c, yc = (y = new Big(y)).c, a = xc.length, b = yc.length, i = x.e, j = y.e;
        // Determine sign of result.
        y.s = x.s == y.s ? 1 : -1;
        // Return signed 0 if either 0.
        if (!xc[0] || !yc[0]) {
            return new Big(y.s * 0);
        }
        // Initialise exponent of result as x.e + y.e.
        y.e = i + j;
        // If array xc has fewer digits than yc, swap xc and yc, and lengths.
        if (a < b) {
            c = xc;
            xc = yc;
            yc = c;
            j = a;
            a = b;
            b = j;
        }
        // Initialise coefficient array of result with zeros.
        for(c = new Array(j = a + b); j--; c[j] = 0){}
        // Multiply.
        // i is initially xc.length.
        for(i = b; i--;){
            b = 0;
            // a is yc.length.
            for(j = a + i; j > i;){
                // Current sum of products at this digit position, plus carry.
                b = c[j] + yc[i] * xc[j - i - 1] + b;
                c[j--] = b % 10;
                // carry
                b = b / 10 | 0;
            }
            c[j] = (c[j] + b) % 10;
        }
        // Increment result exponent if there is a final carry.
        if (b) {
            ++y.e;
        }
        // Remove any leading zero.
        if (!c[0]) {
            c.shift();
        }
        // Remove trailing zeros.
        for(i = c.length; !c[--i]; c.pop()){}
        y.c = c;
        return y;
    };
    /*
     * Return a string representing the value of this Big.
     * Return exponential notation if this Big has a positive exponent equal to
     * or greater than Big.E_POS, or a negative exponent equal to or less than
     * Big.E_NEG.
     */ P.toString = P.valueOf = P.toJSON = function() {
        var x = this, Big = x.constructor, e = x.e, str = x.c.join(''), strL = str.length;
        // Exponential notation?
        if (e <= Big.E_NEG || e >= Big.E_POS) {
            str = str.charAt(0) + (strL > 1 ? '.' + str.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;
        // Negative exponent?
        } else if (e < 0) {
            // Prepend zeros.
            for(; ++e; str = '0' + str){}
            str = '0.' + str;
        // Positive exponent?
        } else if (e > 0) {
            if (++e > strL) {
                // Append zeros.
                for(e -= strL; e--; str += '0'){}
            } else if (e < strL) {
                str = str.slice(0, e) + '.' + str.slice(e);
            }
        // Exponent zero.
        } else if (strL > 1) {
            str = str.charAt(0) + '.' + str.slice(1);
        }
        // Avoid '-0'
        return x.s < 0 && x.c[0] ? '-' + str : str;
    };
    /*
     ***************************************************************************
     * If toExponential, toFixed, toPrecision and format are not required they
     * can safely be commented-out or deleted. No redundant code will be left.
     * format is used only by toExponential, toFixed and toPrecision.
     ***************************************************************************
     */ /*
     * Return a string representing the value of this Big in exponential
     * notation to dp fixed decimal places and rounded, if necessary, using
     * Big.RM.
     *
     * [dp] {number} Integer, 0 to MAX_DP inclusive.
     */ P.toExponential = function(dp) {
        if (dp == null) {
            dp = this.c.length - 1;
        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
            throwErr('!toExp!');
        }
        return format(this, dp, 1);
    };
    /*
     * Return a string representing the value of this Big in normal notation
     * to dp fixed decimal places and rounded, if necessary, using Big.RM.
     *
     * [dp] {number} Integer, 0 to MAX_DP inclusive.
     */ P.toFixed = function(dp) {
        var str, x = this, Big = x.constructor, neg = Big.E_NEG, pos = Big.E_POS;
        // Prevent the possibility of exponential notation.
        Big.E_NEG = -(Big.E_POS = 1 / 0);
        if (dp == null) {
            str = x.toString();
        } else if (dp === ~~dp && dp >= 0 && dp <= MAX_DP) {
            str = format(x, x.e + dp);
            // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.
            // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
            if (x.s < 0 && x.c[0] && str.indexOf('-') < 0) {
                //E.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.
                str = '-' + str;
            }
        }
        Big.E_NEG = neg;
        Big.E_POS = pos;
        if (!str) {
            throwErr('!toFix!');
        }
        return str;
    };
    /*
     * Return a string representing the value of this Big rounded to sd
     * significant digits using Big.RM. Use exponential notation if sd is less
     * than the number of digits necessary to represent the integer part of the
     * value in normal notation.
     *
     * sd {number} Integer, 1 to MAX_DP inclusive.
     */ P.toPrecision = function(sd) {
        if (sd == null) {
            return this.toString();
        } else if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
            throwErr('!toPre!');
        }
        return format(this, sd - 1, 2);
    };
    // Export
    Big = bigFactory();
    //AMD.
    if (typeof define === 'function' && define.amd) {
        ((r)=>r !== undefined && __turbopack_export_value__(r))(function() {
            return Big;
        }(__turbopack_require__, exports, module));
    // Node and other CommonJS-like environments that support module.exports.
    } else if (("TURBOPACK compile-time value", "object") !== 'undefined' && module.exports) {
        module.exports = Big;
        module.exports.Big = Big;
    //Browser.
    } else {
        global.Big = Big;
    }
})(this);
}}),
"[project]/node_modules/.pnpm/satoshi-bitcoin@1.0.4/node_modules/satoshi-bitcoin/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * @module satoshi-bitcoin
 */ var Big = __turbopack_require__("[project]/node_modules/.pnpm/big.js@3.2.0/node_modules/big.js/big.js [app-rsc] (ecmascript)");
// @private
var conversion = 100000000;
// es6 polyfill
if (!Number.isInteger) {
    Number.isInteger = function(num) {
        return typeof num === 'number' && num % 1 === 0;
    };
}
// @private
function toNumber(notNum) {
    return Number(notNum);
}
module.exports = {
    /**
   * Convert Satoshi to Bitcoin
   * @param {number|string} satoshi Amount of Satoshi to convert. Must be a whole number
   * @throws {TypeError} Thrown if input is not a number or string
   * @throws {TypeError} Thrown if input is not a whole number or string format whole number
   * @returns {number}
   */ toBitcoin: function(satoshi) {
        //validate arg
        var satoshiType = typeof satoshi;
        if (satoshiType === 'string') {
            satoshi = toNumber(satoshi);
            satoshiType = 'number';
        }
        if (satoshiType !== 'number') {
            throw new TypeError('toBitcoin must be called on a number or string, got ' + satoshiType);
        }
        if (!Number.isInteger(satoshi)) {
            throw new TypeError('toBitcoin must be called on a whole number or string format whole number');
        }
        var bigSatoshi = new Big(satoshi);
        return Number(bigSatoshi.div(conversion));
    },
    /**
   * Convert Bitcoin to Satoshi
   * @param {number|string} bitcoin Amount of Bitcoin to convert
   * @throws {TypeError} Thrown if input is not a number or string
   * @returns {number}
   */ toSatoshi: function(bitcoin) {
        //validate arg
        var bitcoinType = typeof bitcoin;
        if (bitcoinType === 'string') {
            bitcoin = toNumber(bitcoin);
            bitcoinType = 'number';
        }
        if (bitcoinType !== 'number') {
            throw new TypeError('toSatoshi must be called on a number or string, got ' + bitcoinType);
        }
        var bigBitcoin = new Big(bitcoin);
        return Number(bigBitcoin.times(conversion));
    }
};
}}),
"[project]/node_modules/.pnpm/@metamask+contract-metadata@1.31.0/node_modules/@metamask/contract-metadata/contract-map.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"0x32E6C34Cd57087aBBD59B5A4AECC4cB495924356\":{\"name\":\"BitBase\",\"logo\":\"BTBS.svg\",\"erc20\":true,\"symbol\":\"BTBS\",\"decimals\":18},\"0x3fa400483487A489EC9b1dB29C4129063EEC4654\":{\"name\":\"Cryptokek.com\",\"logo\":\"cryptokek.svg\",\"erc20\":true,\"symbol\":\"KEK\",\"decimals\":18},\"0xb753428af26E81097e7fD17f40c88aaA3E04902c\":{\"name\":\"Spice\",\"logo\":\"sfi.svg\",\"erc20\":true,\"symbol\":\"SFI\",\"decimals\":18},\"0xd084944d3c05CD115C09d072B9F44bA3E0E45921\":{\"name\":\"Manifold Finance\",\"logo\":\"Manifold.svg\",\"erc20\":true,\"symbol\":\"FOLD\",\"decimals\":18},\"0x9a0242b7a33DAcbe40eDb927834F96eB39f8fBCB\":{\"name\":\"BABB\",\"logo\":\"bax.svg\",\"erc20\":true,\"symbol\":\"BAX\",\"decimals\":18},\"0x4Cf89ca06ad997bC732Dc876ed2A7F26a9E7f361\":{\"name\":\"Mysterium\",\"logo\":\"MYST.svg\",\"erc20\":true,\"symbol\":\"MYST\",\"decimals\":18},\"0x697eF32B4a3F5a4C39dE1cB7563f24CA7BfC5947\":{\"name\":\"Insula Token\",\"logo\":\"Insula.svg\",\"erc20\":true,\"symbol\":\"ISLA\",\"decimals\":18},\"0x62Dc4817588d53a056cBbD18231d91ffCcd34b2A\":{\"name\":\"DeHive\",\"logo\":\"dehive.svg\",\"erc20\":true,\"erc721\":false,\"symbol\":\"DHV\",\"decimals\":18},\"0x8400D94A5cb0fa0D041a3788e395285d61c9ee5e\":{\"name\":\"Unibright\",\"logo\":\"ubt.svg\",\"erc20\":true,\"symbol\":\"UBT\",\"decimals\":8},\"0xfAd45E47083e4607302aa43c65fB3106F1cd7607\":{\"name\":\"Hoge Finance\",\"logo\":\"HogeFinanceLogo.svg\",\"erc20\":true,\"symbol\":\"HOGE\",\"decimals\":9},\"0xBB0E17EF65F82Ab018d8EDd776e8DD940327B28b\":{\"name\":\"Axie Infinity Shard\",\"logo\":\"AXS.svg\",\"erc20\":true,\"symbol\":\"AXS\",\"decimals\":18},\"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25\":{\"name\":\"Smooth Love Potion\",\"logo\":\"SLP.svg\",\"erc20\":true,\"symbol\":\"SLP\",\"decimals\":0},\"0x10633216E7E8281e33c86F02Bf8e565a635D9770\":{\"name\":\"Dvision Network\",\"logo\":\"dvision.svg\",\"erc20\":true,\"symbol\":\"DVI\",\"decimals\":18},\"0x898BAD2774EB97cF6b94605677F43b41871410B1\":{\"name\":\"vEth2\",\"logo\":\"vEth2.svg\",\"erc20\":true,\"symbol\":\"vEth2\",\"decimals\":18},\"0xE94B97b6b43639E238c851A7e693F50033EfD75C\":{\"name\":\"Rainbow Token\",\"logo\":\"halodao-rnbw.svg\",\"erc20\":true,\"symbol\":\"RNBW\",\"decimals\":18},\"0x47BE779De87de6580d0548cde80710a93c502405\":{\"name\":\"Rainbow Pool\",\"logo\":\"halodao-xrnbw.svg\",\"erc20\":true,\"symbol\":\"xRNBW\",\"decimals\":18},\"0xe7aE6D0C56CACaf007b7e4d312f9af686a9E9a04\":{\"name\":\"Vabble\",\"logo\":\"VAB.svg\",\"erc20\":true,\"symbol\":\"VAB\",\"decimals\":18},\"0x853d955aCEf822Db058eb8505911ED77F175b99e\":{\"name\":\"Frax\",\"logo\":\"frax.svg\",\"erc20\":true,\"symbol\":\"FRAX\",\"decimals\":18},\"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0\":{\"name\":\"Frax Share\",\"logo\":\"fxs.svg\",\"erc20\":true,\"symbol\":\"FXS\",\"decimals\":18},\"0x84810bcF08744d5862B8181f12d17bfd57d3b078\":{\"name\":\"SharedStake\",\"logo\":\"sharedstake.svg\",\"erc20\":true,\"symbol\":\"SGT\",\"decimals\":18},\"0x75387e1287Dd85482aB66102DA9f6577E027f609\":{\"name\":\"MindsyncAI\",\"logo\":\"MAI.svg\",\"erc20\":true,\"symbol\":\"MAI\",\"decimals\":18},\"0x196f4727526eA7FB1e17b2071B3d8eAA38486988\":{\"name\":\"Reserve\",\"logo\":\"rsv.svg\",\"erc20\":true,\"symbol\":\"RSV\",\"decimals\":18},\"0x8762db106B2c2A0bccB3A80d1Ed41273552616E8\":{\"name\":\"Reserve Rights\",\"logo\":\"rsr.svg\",\"erc20\":true,\"symbol\":\"RSR\",\"decimals\":18},\"0x1cF4592ebfFd730c7dc92c1bdFFDfc3B9EfCf29a\":{\"name\":\"WAVES\",\"logo\":\"waves.svg\",\"erc20\":true,\"symbol\":\"WAVES\",\"decimals\":18},\"0x252739487C1fa66eaeaE7CED41d6358aB2a6bCa9\":{\"name\":\"ArCoin\",\"logo\":\"ArCoin.svg\",\"erc20\":true,\"symbol\":\"RCOIN\",\"decimals\":8},\"0x18aAA7115705e8be94bfFEBDE57Af9BFc265B998\":{\"name\":\"Audius\",\"logo\":\"audius.svg\",\"erc20\":true,\"symbol\":\"AUDIO\",\"decimals\":18},\"0x8E3BCC334657560253B83f08331d85267316e08a\":{\"name\":\"Rubic\",\"logo\":\"brbc.svg\",\"erc20\":true,\"symbol\":\"BRBC\",\"decimals\":18},\"0xca1207647Ff814039530D7d35df0e1Dd2e91Fa84\":{\"name\":\"dHEDGE DAO Token\",\"logo\":\"DHT.svg\",\"erc20\":true,\"symbol\":\"DHT\",\"decimals\":18},\"0x6243d8CEA23066d098a15582d81a598b4e8391F4\":{\"name\":\"Reflexer Ungovernance Token\",\"logo\":\"flx.svg\",\"erc20\":true,\"symbol\":\"FLX\",\"decimals\":18},\"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919\":{\"name\":\"Rai Reflex Index\",\"logo\":\"rai.svg\",\"erc20\":true,\"symbol\":\"RAI\",\"decimals\":18},\"0xF25c91C87e0B1fd9B4064Af0F427157AaB0193A7\":{\"name\":\"BASIC Token\",\"logo\":\"basic.svg\",\"erc20\":true,\"symbol\":\"BASIC\",\"decimals\":18},\"0x53C8395465A84955c95159814461466053DedEDE\":{\"name\":\"DeGate Token\",\"logo\":\"DG.svg\",\"erc20\":true,\"symbol\":\"DG\",\"decimals\":18},\"0xBCf9dBf8B14eD096B2BA08b7269356197fDd1b5D\":{\"name\":\"Avaluse\",\"logo\":\"avaluse.svg\",\"erc20\":true,\"symbol\":\"AVAL\",\"decimals\":18},\"0x6E765D26388A17A6e86c49A8E41DF3F58aBcd337\":{\"name\":\"Kangal\",\"logo\":\"kangal.svg\",\"erc20\":true,\"symbol\":\"KANGAL\",\"decimals\":18},\"0x9AF4f26941677C706cfEcf6D3379FF01bB85D5Ab\":{\"name\":\"DomRaiderToken\",\"logo\":\"drt.svg\",\"erc20\":true,\"symbol\":\"DRT\",\"decimals\":8},\"0x06B179e292f080871825beD5D722162fD96B4c95\":{\"name\":\"10x.gg\",\"logo\":\"xgg.svg\",\"erc20\":true,\"symbol\":\"XGG\",\"decimals\":18},\"0xF29992D7b589A0A6bD2de7Be29a97A6EB73EaF85\":{\"name\":\"DMScript\",\"logo\":\"dmst.svg\",\"erc20\":true,\"symbol\":\"DMST\",\"decimals\":18},\"0xDd1Ad9A21Ce722C151A836373baBe42c868cE9a4\":{\"name\":\"Universal Basic Income\",\"logo\":\"ubi.svg\",\"erc20\":true,\"symbol\":\"UBI\",\"decimals\":18},\"0xf293d23BF2CDc05411Ca0edDD588eb1977e8dcd4\":{\"name\":\"Sylo\",\"logo\":\"SYLO.svg\",\"erc20\":true,\"symbol\":\"SYLO\",\"decimals\":18},\"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84\":{\"name\":\"Liquid staked Ether 2.0\",\"logo\":\"stETH.svg\",\"erc20\":true,\"symbol\":\"stETH\",\"decimals\":18},\"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0\":{\"name\":\"Wrapped liquid staked Ether 2.0\",\"logo\":\"wstETH.svg\",\"erc20\":true,\"symbol\":\"wstETH\",\"decimals\":18},\"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32\":{\"name\":\"Lido DAO Token\",\"logo\":\"LDO.svg\",\"erc20\":true,\"symbol\":\"LDO\",\"decimals\":18},\"0xd2877702675e6cEb975b4A1dFf9fb7BAF4C91ea9\":{\"name\":\"Wrapped LUNA Token\",\"logo\":\"Luna.svg\",\"erc20\":true,\"symbol\":\"LUNA\",\"decimals\":18},\"0xa47c8bf37f92aBed4A126BDA807A7b7498661acD\":{\"name\":\"Wrapped UST Token\",\"logo\":\"UST.svg\",\"erc20\":true,\"symbol\":\"UST\",\"decimals\":18},\"0xcAAfF72A8CbBfc5Cf343BA4e26f65a257065bFF1\":{\"name\":\"Wrapped KRT Token\",\"logo\":\"KRT.svg\",\"erc20\":true,\"symbol\":\"KRT\",\"decimals\":18},\"0x676Ad1b33ae6423c6618C1AEcf53BAa29cf39EE5\":{\"name\":\"Wrapped SDT Token\",\"logo\":\"SDT.svg\",\"erc20\":true,\"symbol\":\"SDT\",\"decimals\":18},\"0x156B36ec68FdBF84a925230BA96cb1Ca4c4bdE45\":{\"name\":\"Wrapped MNT Token\",\"logo\":\"MNT.svg\",\"erc20\":true,\"symbol\":\"MNT\",\"decimals\":18},\"0x09a3EcAFa817268f77BE1283176B946C4ff2E608\":{\"name\":\"Wrapped MIR Token\",\"logo\":\"MIR.svg\",\"erc20\":true,\"symbol\":\"MIR\",\"decimals\":18},\"0xd36932143F6eBDEDD872D5Fb0651f4B72Fd15a84\":{\"name\":\"Wrapped Mirror AAPL Token\",\"logo\":\"mAAPL.svg\",\"erc20\":true,\"symbol\":\"mAAPL\",\"decimals\":18},\"0x59A921Db27Dd6d4d974745B7FfC5c33932653442\":{\"name\":\"Wrapped Mirror GOOGL Token\",\"logo\":\"mGOOGL.svg\",\"erc20\":true,\"symbol\":\"mGOOGL\",\"decimals\":18},\"0x21cA39943E91d704678F5D00b6616650F066fD63\":{\"name\":\"Wrapped Mirror TSLA Token\",\"logo\":\"mTSLA.svg\",\"erc20\":true,\"symbol\":\"mTSLA\",\"decimals\":18},\"0xC8d674114bac90148d11D3C1d33C61835a0F9DCD\":{\"name\":\"Wrapped Mirror NFLX Token\",\"logo\":\"mNFLX.svg\",\"erc20\":true,\"symbol\":\"mNFLX\",\"decimals\":18},\"0x13B02c8dE71680e71F0820c996E4bE43c2F57d15\":{\"name\":\"Wrapped Mirror QQQ Token\",\"logo\":\"mQQQ.svg\",\"erc20\":true,\"symbol\":\"mQQQ\",\"decimals\":18},\"0xEdb0414627E6f1e3F082DE65cD4F9C693D78CCA9\":{\"name\":\"Wrapped Mirror TWTR Token\",\"logo\":\"mTWTR.svg\",\"erc20\":true,\"symbol\":\"mTWTR\",\"decimals\":18},\"0x41BbEDd7286dAab5910a1f15d12CBda839852BD7\":{\"name\":\"Wrapped Mirror MSFT Token\",\"logo\":\"mMSFT.svg\",\"erc20\":true,\"symbol\":\"mMSFT\",\"decimals\":18},\"0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7\":{\"name\":\"Wrapped Mirror AMZN Token\",\"logo\":\"mAMZN.svg\",\"erc20\":true,\"symbol\":\"mAMZN\",\"decimals\":18},\"0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72\":{\"name\":\"Wrapped Mirror BABA Token\",\"logo\":\"mBABA.svg\",\"erc20\":true,\"symbol\":\"mBABA\",\"decimals\":18},\"0x1d350417d9787E000cc1b95d70E9536DcD91F373\":{\"name\":\"Wrapped Mirror IAU Token\",\"logo\":\"mIAU.svg\",\"erc20\":true,\"symbol\":\"mIAU\",\"decimals\":18},\"0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676\":{\"name\":\"Wrapped Mirror SLV Token\",\"logo\":\"mSLV.svg\",\"erc20\":true,\"symbol\":\"mSLV\",\"decimals\":18},\"0x31c63146a635EB7465e5853020b39713AC356991\":{\"name\":\"Wrapped Mirror USO Token\",\"logo\":\"mUSO.svg\",\"erc20\":true,\"symbol\":\"mUSO\",\"decimals\":18},\"0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86\":{\"name\":\"Wrapped Mirror VIXY Token\",\"logo\":\"mVIXY.svg\",\"erc20\":true,\"symbol\":\"mVIXY\",\"decimals\":18},\"0x21BfBDa47A0B4B5b1248c767Ee49F7caA9B23697\":{\"name\":\"OVR\",\"logo\":\"OVR.svg\",\"erc20\":true,\"symbol\":\"OVR\",\"decimals\":18},\"0x4691937a7508860F876c9c0a2a617E7d9E945D4B\":{\"name\":\"Wootrade Network\",\"logo\":\"wootrade.svg\",\"erc20\":true,\"symbol\":\"WOO\",\"decimals\":18},\"0x40FD72257597aA14C7231A7B1aaa29Fce868F677\":{\"name\":\"Sora Token\",\"logo\":\"xor.svg\",\"erc20\":true,\"symbol\":\"XOR\",\"decimals\":18},\"0xe88f8313e61A97cEc1871EE37fBbe2a8bf3ed1E4\":{\"name\":\"Sora Validator Token\",\"logo\":\"val.svg\",\"erc20\":true,\"symbol\":\"VAL\",\"decimals\":18},\"0xaf9f549774ecEDbD0966C52f250aCc548D3F36E5\":{\"name\":\"RFUEL\",\"logo\":\"RFUEL.svg\",\"erc20\":true,\"symbol\":\"RFUEL\",\"decimals\":18},\"0x7420B4b9a0110cdC71fB720908340C03F9Bc03EC\":{\"name\":\"JasmyCoin\",\"logo\":\"JASMY.svg\",\"erc20\":true,\"symbol\":\"JASMY\",\"decimals\":18},\"0x947AEb02304391f8fbE5B25D7D98D649b57b1788\":{\"name\":\"Mandala Exchange Token\",\"logo\":\"mandala.svg\",\"erc20\":true,\"symbol\":\"MDX\",\"decimals\":18},\"0xCdeee767beD58c5325f68500115d4B722b3724EE\":{\"name\":\"Carbon\",\"logo\":\"CRBN.svg\",\"erc20\":true,\"symbol\":\"CRBN\",\"decimals\":18},\"0xA4EED63db85311E22dF4473f87CcfC3DaDCFA3E3\":{\"name\":\"Rubic\",\"logo\":\"Rubic.svg\",\"erc20\":true,\"symbol\":\"RBC\",\"decimals\":18},\"0x3A880652F47bFaa771908C07Dd8673A787dAEd3A\":{\"name\":\"DerivaDAO\",\"logo\":\"DDX.svg\",\"erc20\":true,\"symbol\":\"DDX\",\"decimals\":18},\"0xbC396689893D065F41bc2C6EcbeE5e0085233447\":{\"name\":\"Perpetual\",\"logo\":\"PERP.svg\",\"erc20\":true,\"symbol\":\"PERP\",\"decimals\":18},\"0xeca82185adCE47f39c684352B0439f030f860318\":{\"name\":\"Perlin\",\"logo\":\"PERL.svg\",\"erc20\":true,\"symbol\":\"PERL\",\"decimals\":18},\"0xA1AFFfE3F4D611d252010E3EAf6f4D77088b0cd7\":{\"name\":\"Reflect Finance\",\"logo\":\"RFI.svg\",\"erc20\":true,\"symbol\":\"RFI\",\"decimals\":9},\"0xC0bA369c8Db6eB3924965e5c4FD0b4C1B91e305F\":{\"name\":\"DLP Duck Token\",\"logo\":\"dlpducktoken.svg\",\"erc20\":true,\"symbol\":\"DUCK\",\"decimals\":18},\"0xFbEEa1C75E4c4465CB2FCCc9c6d6afe984558E20\":{\"name\":\"DuckDaoDime\",\"logo\":\"ddim.svg\",\"erc20\":true,\"symbol\":\"DDIM\",\"decimals\":18},\"0xB4d930279552397bbA2ee473229f89Ec245bc365\":{\"name\":\"MahaDAO\",\"logo\":\"MAHA.svg\",\"erc20\":true,\"symbol\":\"MAHA\",\"decimals\":18},\"0x3231Cb76718CDeF2155FC47b5286d82e6eDA273f\":{\"name\":\"Monerium EUR\",\"logo\":\"EURe.svg\",\"erc20\":true,\"symbol\":\"EURe\",\"decimals\":18},\"0x7ba92741Bf2A568abC6f1D3413c58c6e0244F8fD\":{\"name\":\"Monerium GBP\",\"logo\":\"GBPe.svg\",\"erc20\":true,\"symbol\":\"GBPe\",\"decimals\":18},\"0xBc5142e0CC5eB16b47c63B0f033d4c2480853a52\":{\"name\":\"Monerium USD\",\"logo\":\"USDe.svg\",\"erc20\":true,\"symbol\":\"USDe\",\"decimals\":18},\"0xC642549743A93674cf38D6431f75d6443F88E3E2\":{\"name\":\"Monerium ISK\",\"logo\":\"ISKe.svg\",\"erc20\":true,\"symbol\":\"ISKe\",\"decimals\":18},\"0x66a0f676479Cee1d7373f3DC2e2952778BfF5bd6\":{\"name\":\"WISE Token\",\"logo\":\"wise.svg\",\"erc20\":true,\"symbol\":\"WISE\",\"decimals\":18},\"0x72F020f8f3E8fd9382705723Cd26380f8D0c66Bb\":{\"name\":\"PlotX\",\"logo\":\"plotx.svg\",\"erc20\":true,\"symbol\":\"PLOT\",\"decimals\":18},\"0x44197A4c44D6A059297cAf6be4F7e172BD56Caaf\":{\"name\":\"ELTCOIN\",\"logo\":\"ELTCOIN.svg\",\"erc20\":true,\"symbol\":\"ELT\",\"decimals\":8},\"0x6781a0F84c7E9e846DCb84A9a5bd49333067b104\":{\"name\":\"ZAP TOKEN\",\"logo\":\"zapicon.svg\",\"erc20\":true,\"symbol\":\"ZAP\",\"decimals\":18},\"0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7\":{\"name\":\"SKALE\",\"logo\":\"skl.svg\",\"erc20\":true,\"symbol\":\"SKL\",\"decimals\":18},\"0x674C6Ad92Fd080e4004b2312b45f796a192D27a0\":{\"name\":\"Neutrino USD\",\"logo\":\"usdn.svg\",\"erc20\":true,\"symbol\":\"USDN\",\"decimals\":18},\"0xE5CAeF4Af8780E59Df925470b050Fb23C43CA68C\":{\"name\":\"Ferrum Network Token\",\"logo\":\"frm.svg\",\"erc20\":true,\"symbol\":\"FRM\",\"decimals\":6},\"0x998FFE1E43fAcffb941dc337dD0468d52bA5b48A\":{\"name\":\"Rupiah Token\",\"logo\":\"idrt.svg\",\"erc20\":true,\"symbol\":\"IDRT\",\"decimals\":2},\"0x4E15361FD6b4BB609Fa63C81A2be19d873717870\":{\"name\":\"Fantom\",\"logo\":\"ftm.svg\",\"erc20\":true,\"symbol\":\"FTM\",\"decimals\":18},\"0x557B933a7C2c45672B610F8954A3deB39a51A8Ca\":{\"name\":\"REVV\",\"logo\":\"revv.svg\",\"erc20\":true,\"symbol\":\"REVV\",\"decimals\":18},\"0xFFC97d72E13E01096502Cb8Eb52dEe56f74DAD7B\":{\"name\":\"Aave AAVE\",\"logo\":\"aAAVE.svg\",\"erc20\":true,\"symbol\":\"aAAVE\",\"decimals\":18},\"0x05Ec93c0365baAeAbF7AefFb0972ea7ECdD39CF1\":{\"name\":\"Aave BAT\",\"logo\":\"aBAT.svg\",\"erc20\":true,\"symbol\":\"aBAT\",\"decimals\":18},\"0xA361718326c15715591c299427c62086F69923D9\":{\"name\":\"Aave BUSD\",\"logo\":\"aBUSD.svg\",\"erc20\":true,\"symbol\":\"aBUSD\",\"decimals\":18},\"0x028171bCA77440897B824Ca71D1c56caC55b68A3\":{\"name\":\"Aave DAI\",\"logo\":\"aDAI.svg\",\"erc20\":true,\"symbol\":\"aDAI\",\"decimals\":18},\"0xaC6Df26a590F08dcC95D5a4705ae8abbc88509Ef\":{\"name\":\"Aave ENJ\",\"logo\":\"aENJ.svg\",\"erc20\":true,\"symbol\":\"aENJ\",\"decimals\":18},\"0xD37EE7e4f452C6638c96536e68090De8cBcdb583\":{\"name\":\"Aave GUSD\",\"logo\":\"aGUSD.svg\",\"erc20\":true,\"symbol\":\"aGUSD\",\"decimals\":2},\"0x39C6b3e42d6A679d7D776778Fe880BC9487C2EDA\":{\"name\":\"Aave KNC\",\"logo\":\"aKNC.svg\",\"erc20\":true,\"symbol\":\"aKNC\",\"decimals\":18},\"0xa06bC25B5805d5F8d82847D191Cb4Af5A3e873E0\":{\"name\":\"Aave LINK\",\"logo\":\"aLINK.svg\",\"erc20\":true,\"symbol\":\"aLINK\",\"decimals\":18},\"0xa685a61171bb30d4072B338c80Cb7b2c865c873E\":{\"name\":\"Aave MANA\",\"logo\":\"aMANA.svg\",\"erc20\":true,\"symbol\":\"aMANA\",\"decimals\":18},\"0xc713e5E149D5D0715DcD1c156a020976e7E56B88\":{\"name\":\"Aave MKR\",\"logo\":\"aMKR.svg\",\"erc20\":true,\"symbol\":\"aMKR\",\"decimals\":18},\"0xCC12AbE4ff81c9378D670De1b57F8e0Dd228D77a\":{\"name\":\"Aave REN\",\"logo\":\"aREN.svg\",\"erc20\":true,\"symbol\":\"aREN\",\"decimals\":18},\"0x35f6B052C598d933D69A4EEC4D04c73A191fE6c2\":{\"name\":\"Aave SNX\",\"logo\":\"aSNX.svg\",\"erc20\":true,\"symbol\":\"aSNX\",\"decimals\":18},\"0x6C5024Cd4F8A59110119C56f8933403A539555EB\":{\"name\":\"Aave SUSD\",\"logo\":\"aSUSD.svg\",\"erc20\":true,\"symbol\":\"aSUSD\",\"decimals\":18},\"0x101cc05f4A51C0319f570d5E146a8C625198e636\":{\"name\":\"Aave TUSD\",\"logo\":\"aTUSD.svg\",\"erc20\":true,\"symbol\":\"aTUSD\",\"decimals\":18},\"0xB9D7CB55f463405CDfBe4E90a6D2Df01C2B92BF1\":{\"name\":\"Aave UNI\",\"logo\":\"aUNI.svg\",\"erc20\":true,\"symbol\":\"aUNI\",\"decimals\":18},\"0xBcca60bB61934080951369a648Fb03DF4F96263C\":{\"name\":\"Aave USDC\",\"logo\":\"aUSDC.svg\",\"erc20\":true,\"symbol\":\"aUSDC\",\"decimals\":6},\"0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811\":{\"name\":\"Aave USDT\",\"logo\":\"aUSDT.svg\",\"erc20\":true,\"symbol\":\"aUSDT\",\"decimals\":6},\"0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656\":{\"name\":\"Aave WBTC\",\"logo\":\"aWBTC.svg\",\"erc20\":true,\"symbol\":\"aWBTC\",\"decimals\":8},\"0x030bA81f1c18d280636F32af80b9AAd02Cf0854e\":{\"name\":\"Aave WETH\",\"logo\":\"aWETH.svg\",\"erc20\":true,\"symbol\":\"aWETH\",\"decimals\":18},\"0x5165d24277cD063F5ac44Efd447B27025e888f37\":{\"name\":\"Aave YFI\",\"logo\":\"aYFI.svg\",\"erc20\":true,\"symbol\":\"aYFI\",\"decimals\":18},\"0xdef1fac7Bf08f173D286BbBDcBeeADe695129840\":{\"name\":\"Defi Factory Token\",\"logo\":\"DEFT.svg\",\"erc20\":true,\"symbol\":\"DEFT\",\"decimals\":18},\"0xDf7FF54aAcAcbFf42dfe29DD6144A69b629f8C9e\":{\"name\":\"Aave ZRX\",\"logo\":\"aZRX.svg\",\"erc20\":true,\"symbol\":\"aZRX\",\"decimals\":18},\"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\":{\"name\":\"Aave\",\"logo\":\"AAVE.svg\",\"erc20\":true,\"symbol\":\"AAVE\",\"decimals\":18},\"0x44e2deC86B9F0e0266E9AA66e10323A2bd69CF9A\":{\"name\":\"Attrace\",\"logo\":\"attr.svg\",\"erc20\":true,\"symbol\":\"ATTR\",\"decimals\":18},\"0x1Da87b114f35E1DC91F72bF57fc07A768Ad40Bb0\":{\"name\":\"Equalizer\",\"logo\":\"EQZ.svg\",\"erc20\":true,\"symbol\":\"EQZ\",\"decimals\":18},\"0x4da27a545c0c5B758a6BA100e3a049001de870f5\":{\"name\":\"Staked Aave\",\"logo\":\"stkAAVE.svg\",\"erc20\":true,\"symbol\":\"stAAVE\",\"decimals\":18},\"0xba9d4199faB4f26eFE3551D490E3821486f135Ba\":{\"name\":\"SwissBorg\",\"logo\":\"chsb.svg\",\"erc20\":true,\"symbol\":\"CHSB\",\"decimals\":8},\"0x7DD9c5Cba05E151C895FDe1CF355C9A1D5DA6429\":{\"name\":\"Golem Network Token\",\"logo\":\"glm.svg\",\"erc20\":true,\"symbol\":\"GLM\",\"decimals\":18},\"0x7240aC91f01233BaAf8b064248E80feaA5912BA3\":{\"name\":\"OctoFi\",\"logo\":\"octo.svg\",\"erc20\":true,\"symbol\":\"OCTO\",\"decimals\":18},\"0xff56Cc6b1E6dEd347aA0B7676C85AB0B3D08B0FA\":{\"name\":\"Orbs\",\"logo\":\"orbs.svg\",\"erc20\":true,\"symbol\":\"ORBS\",\"decimals\":18},\"0x63f88A2298a5c4AEE3c216Aa6D926B184a4b2437\":{\"name\":\"GAME Credits\",\"logo\":\"GAMECreditsLogo.svg\",\"erc20\":true,\"symbol\":\"GAME\",\"decimals\":18},\"0x5150956E082C748Ca837a5dFa0a7C10CA4697f9c\":{\"name\":\"Zeedex\",\"logo\":\"zdex.svg\",\"erc20\":true,\"symbol\":\"ZDEX\",\"decimals\":18},\"0x84cA8bc7997272c7CfB4D0Cd3D55cd942B3c9419\":{\"name\":\"DIAdata\",\"logo\":\"dia.svg\",\"erc20\":true,\"symbol\":\"DIA\",\"decimals\":18},\"0xb78B3320493a4EFaa1028130C5Ba26f0B6085Ef8\":{\"name\":\"Dracula\",\"logo\":\"dracula.svg\",\"erc20\":true,\"symbol\":\"DRC\",\"decimals\":18},\"0xF433089366899D83a9f26A773D59ec7eCF30355e\":{\"name\":\"Metal\",\"logo\":\"mtl.svg\",\"erc20\":true,\"symbol\":\"MTL\",\"decimals\":8},\"0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC\":{\"name\":\"KEEP\",\"logo\":\"keep.svg\",\"erc20\":true,\"symbol\":\"KEEP\",\"decimals\":18},\"0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa\":{\"name\":\"tBTC\",\"logo\":\"tbtc.svg\",\"erc20\":true,\"symbol\":\"TBTC\",\"decimals\":18},\"0xD7EFB00d12C2c13131FD319336Fdf952525dA2af\":{\"name\":\"Proton\",\"logo\":\"proton.svg\",\"erc20\":true,\"symbol\":\"XPR\",\"decimals\":4},\"0x178c820f862B14f316509ec36b13123DA19A6054\":{\"name\":\"Energy Web Token Bridged\",\"logo\":\"ewtb.svg\",\"erc20\":true,\"symbol\":\"EWTB\",\"decimals\":18},\"0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39\":{\"name\":\"HEX\",\"logo\":\"hex.svg\",\"erc20\":true,\"symbol\":\"HEX\",\"decimals\":8},\"0xFca59Cd816aB1eaD66534D82bc21E7515cE441CF\":{\"name\":\"Rarible\",\"logo\":\"rari.svg\",\"erc20\":true,\"symbol\":\"RARI\",\"decimals\":18},\"0x7865af71cf0b288b4E7F654f4F7851EB46a2B7F8\":{\"name\":\"Sentivate\",\"logo\":\"sentivate.svg\",\"erc20\":true,\"symbol\":\"SNTVT\",\"decimals\":18},\"0xa3d58c4E56fedCae3a7c43A725aeE9A71F0ece4e\":{\"name\":\"Metronome\",\"logo\":\"metronome.svg\",\"erc20\":true,\"symbol\":\"MET\",\"decimals\":18},\"0x49d716DFe60b37379010A75329ae09428f17118d\":{\"name\":\"PoolTogether Dai\",\"logo\":\"pldai.svg\",\"erc20\":true,\"symbol\":\"PLDAI\",\"decimals\":18},\"0xfE6892654CBB05eB73d28DCc1Ff938f59666Fe9f\":{\"name\":\"PoolTogether Sai\",\"logo\":\"plsai.svg\",\"erc20\":true,\"symbol\":\"PLSAI\",\"decimals\":18},\"0x5732046A883704404F284Ce41FfADd5b007FD668\":{\"name\":\"Bluzelle Token\",\"logo\":\"Bluzelle.svg\",\"erc20\":true,\"symbol\":\"BLZ\",\"decimals\":18},\"0xBD87447F48ad729C5c4b8bcb503e1395F62e8B98\":{\"name\":\"PoolTogether USDC\",\"logo\":\"plusdc.svg\",\"erc20\":true,\"symbol\":\"PLUSDC\",\"decimals\":6},\"0x69A95185ee2a045CDC4bCd1b1Df10710395e4e23\":{\"name\":\"$Poolz Finance\",\"logo\":\"Poolz.svg\",\"erc20\":true,\"symbol\":\"POOLZ\",\"decimals\":18},\"0x0adA190c81b814548ddC2F6AdC4a689ce7C1FE73\":{\"name\":\"yAxis\",\"logo\":\"yaxis.svg\",\"erc20\":true,\"symbol\":\"YAXIS\",\"decimals\":18},\"0xb1dC9124c395c1e97773ab855d66E879f053A289\":{\"name\":\"yAxis\",\"logo\":\"yaxis.svg\",\"erc20\":true,\"symbol\":\"YAX\",\"decimals\":18},\"0xeF31Cb88048416E301Fee1eA13e7664b887BA7e8\":{\"name\":\"Staked yAxis\",\"logo\":\"yaxis.svg\",\"erc20\":true,\"symbol\":\"sYAX\",\"decimals\":18},\"0x28cb7e841ee97947a86B06fA4090C8451f64c0be\":{\"name\":\"YF Link\",\"logo\":\"YFL.svg\",\"erc20\":true,\"symbol\":\"YFL\",\"decimals\":18},\"0x75D1aA733920b14fC74c9F6e6faB7ac1EcE8482E\":{\"name\":\"YFLink Staking Share\",\"logo\":\"YFL.svg\",\"erc20\":true,\"symbol\":\"yYFL\",\"decimals\":18},\"0x7b760D06E401f85545F3B50c44bf5B05308b7b62\":{\"name\":\"YFLink USD\",\"logo\":\"YFLUSD.svg\",\"erc20\":true,\"symbol\":\"YFLUSD\",\"decimals\":18},\"0x8282df223AC402d04B2097d16f758Af4F70e7Db0\":{\"name\":\"YFLink Synthetic\",\"logo\":\"sYFL.svg\",\"erc20\":true,\"symbol\":\"sYFL\",\"decimals\":18},\"0x008377EB0C62cE8e0BA3D7Bb4A5638591f21588E\":{\"name\":\"YFLink Bond\",\"logo\":\"bYFL.svg\",\"erc20\":true,\"symbol\":\"bYFL\",\"decimals\":18},\"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e\":{\"name\":\"yearn.finance\",\"logo\":\"yfi.svg\",\"erc20\":true,\"symbol\":\"YFI\",\"decimals\":18},\"0x261b45D85cCFeAbb11F022eBa346ee8D1cd488c0\":{\"name\":\"rDAI\",\"logo\":\"rdai.svg\",\"erc20\":true,\"symbol\":\"rDAI\",\"decimals\":18},\"0xea8b224eDD3e342DEb514C4176c2E72Bcce6fFF9\":{\"name\":\"rSAI\",\"logo\":\"rsai.svg\",\"erc20\":true,\"symbol\":\"rSAI\",\"decimals\":18},\"0x12B19D3e2ccc14Da04FAe33e63652ce469b3F2FD\":{\"name\":\"GridPlus\",\"logo\":\"GridPlus.svg\",\"erc20\":true,\"symbol\":\"GRID\",\"decimals\":12},\"0xDb05EA0877A2622883941b939f0bb11d1ac7c400\":{\"name\":\"Opacity\",\"logo\":\"opct.svg\",\"erc20\":true,\"symbol\":\"OPCT\",\"decimals\":18},\"0x4575f41308EC1483f3d399aa9a2826d74Da13Deb\":{\"name\":\"Orchid\",\"logo\":\"OXT.svg\",\"erc20\":true,\"symbol\":\"OXT\",\"decimals\":18},\"0x4CC19356f2D37338b9802aa8E8fc58B0373296E7\":{\"name\":\"Selfkey\",\"logo\":\"KEY.svg\",\"erc20\":true,\"symbol\":\"KEY\",\"decimals\":18},\"0x92A5B04D0ED5D94D7a193d1d334D3D16996f4E13\":{\"name\":\"Eristica\",\"logo\":\"Eristica.svg\",\"erc20\":true,\"symbol\":\"ERT\",\"decimals\":18},\"0xdAC17F958D2ee523a2206206994597C13D831ec7\":{\"name\":\"Tether USD\",\"logo\":\"usdt.svg\",\"erc20\":true,\"symbol\":\"USDT\",\"decimals\":6},\"0x06AF07097C9Eeb7fD685c692751D5C66dB49c215\":{\"name\":\"Chai\",\"logo\":\"CHAI.svg\",\"erc20\":true,\"symbol\":\"CHAI\",\"decimals\":18},\"0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828\":{\"name\":\"UMA\",\"logo\":\"UMA.png\",\"erc20\":true,\"symbol\":\"UMA\",\"decimals\":18},\"0x5f778ec4B31a506c1Dfd8b06F131E9B451a61D39\":{\"name\":\"UPX Token\",\"logo\":\"UPX.svg\",\"erc20\":true,\"symbol\":\"UPX\",\"decimals\":18},\"0xb1CD6e4153B2a390Cf00A6556b0fC1458C4A5533\":{\"name\":\"ETHBNT Liquidity Pool\",\"logo\":\"ETHBNT.svg\",\"erc20\":true,\"symbol\":\"ETHBNT\",\"decimals\":18},\"0xf0Ee6b27b759C9893Ce4f094b49ad28fd15A23e4\":{\"name\":\"Enigma\",\"logo\":\"enigma.svg\",\"erc20\":true,\"symbol\":\"ENG\",\"decimals\":18},\"0xaaAEBE6Fe48E54f431b0C390CfaF0b017d09D42d\":{\"name\":\"Celsius\",\"logo\":\"celsius.svg\",\"erc20\":true,\"symbol\":\"CEL\",\"decimals\":4},\"0xb683D83a532e2Cb7DFa5275eED3698436371cc9f\":{\"name\":\"BTU\",\"logo\":\"BTU.svg\",\"erc20\":true,\"symbol\":\"BTU\",\"decimals\":18},\"0x746DdA2ea243400D5a63e0700F190aB79f06489e\":{\"name\":\"BOSAGORA\",\"logo\":\"BOA.svg\",\"erc20\":true,\"symbol\":\"BOA\",\"decimals\":7},\"0x5D858bcd53E085920620549214a8b27CE2f04670\":{\"name\":\"POP Network Token\",\"logo\":\"POP.svg\",\"erc20\":true,\"symbol\":\"POP\",\"decimals\":18},\"0x048Fe49BE32adfC9ED68C37D32B5ec9Df17b3603\":{\"name\":\"Skrumble Network V2\",\"logo\":\"skm.svg\",\"erc20\":true,\"symbol\":\"SKM\",\"decimals\":18},\"0x16EA01aCB4b0Bca2000ee5473348B6937ee6f72F\":{\"name\":\"Enecuum\",\"logo\":\"ENQ-logo.svg\",\"erc20\":true,\"symbol\":\"ENQ\",\"decimals\":10},\"0xE5B826Ca2Ca02F09c1725e9bd98d9a8874C30532\":{\"name\":\"ZEON Network\",\"logo\":\"ZEON_logo.png\",\"erc20\":true,\"symbol\":\"ZEON\",\"decimals\":18},\"0x13cb85823f78Cff38f0B0E90D3e975b8CB3AAd64\":{\"name\":\"REMIIT REMI Token\",\"logo\":\"remi.svg\",\"erc20\":true,\"symbol\":\"REMI\",\"decimals\":18},\"0x93a7174dafd31d13400cD9fa01f4e5B5BAa00D39\":{\"name\":\"Shaka\",\"logo\":\"hak.svg\",\"erc20\":true,\"symbol\":\"HAK\",\"decimals\":18},\"0x6fB3e0A217407EFFf7Ca062D46c26E5d60a14d69\":{\"name\":\"IoTeX\",\"logo\":\"iotex.svg\",\"erc20\":true,\"symbol\":\"IOTX\",\"decimals\":18},\"0xE5a3229CCb22b6484594973A03a3851dCd948756\":{\"name\":\"RAE Token\",\"logo\":\"rae.svg\",\"erc20\":true,\"symbol\":\"RAE\",\"decimals\":18},\"0x4470BB87d77b963A013DB939BE332f927f2b992e\":{\"name\":\"AdEx Legacy Token\",\"logo\":\"adex.svg\",\"erc20\":true,\"symbol\":\"ADXL\",\"decimals\":4},\"0xADE00C28244d5CE17D72E40330B1c318cD12B7c3\":{\"name\":\"AdEx Token\",\"logo\":\"adex.svg\",\"erc20\":true,\"symbol\":\"ADX\",\"decimals\":18},\"0xDc5864eDe28BD4405aa04d93E05A0531797D9D59\":{\"name\":\"Falcon\",\"logo\":\"fnt.svg\",\"erc20\":true,\"symbol\":\"FNT\",\"decimals\":6},\"0x1966d718A565566e8E202792658D7b5Ff4ECe469\":{\"name\":\"nDEX\",\"logo\":\"nDEX.png\",\"erc20\":true,\"symbol\":\"NDX\",\"decimals\":18},\"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\":{\"name\":\"Wrapped BTC\",\"logo\":\"wbtc.svg\",\"erc20\":true,\"symbol\":\"WBTC\",\"decimals\":8},\"0x150b0b96933B75Ce27af8b92441F8fB683bF9739\":{\"name\":\"Dragonereum Gold\",\"logo\":\"gold.svg\",\"erc20\":true,\"symbol\":\"GOLD\",\"decimals\":18},\"0x82f4dED9Cec9B5750FBFf5C2185AEe35AfC16587\":{\"name\":\"DreamTeam Token\",\"logo\":\"dream.svg\",\"erc20\":true,\"symbol\":\"DREAM\",\"decimals\":6},\"0x5d60d8d7eF6d37E16EBABc324de3bE57f135e0BC\":{\"name\":\"MyBit\",\"logo\":\"MYB.svg\",\"erc20\":true,\"symbol\":\"MYB\",\"decimals\":18},\"0x01FA555c97D7958Fa6f771f3BbD5CCD508f81e22\":{\"name\":\"Civil Token\",\"logo\":\"CVL_token.svg\",\"erc20\":true,\"symbol\":\"CVL\",\"decimals\":18},\"0x5adc961D6AC3f7062D2eA45FEFB8D8167d44b190\":{\"name\":\"Dether\",\"logo\":\"dether.svg\",\"erc20\":true,\"symbol\":\"DTH\",\"decimals\":18},\"0x3F17Dd476faF0a4855572F0B6ed5115D9bBA22AD\":{\"name\":\"Wibson\",\"logo\":\"wibson-logo.png\",\"erc20\":true,\"symbol\":\"WIB\",\"decimals\":9},\"0xDF347911910b6c9A4286bA8E2EE5ea4a39eB2134\":{\"name\":\"Bob's Repair\",\"logo\":\"bobsrepair.png\",\"erc20\":true,\"symbol\":\"BOB\",\"decimals\":18},\"0x3505F494c3f0fed0B594E01Fa41Dd3967645ca39\":{\"name\":\"SWARM\",\"logo\":\"swarm.svg\",\"erc20\":true,\"symbol\":\"SWM\",\"decimals\":18},\"0x6863bE0e7CF7ce860A574760e9020D519a8bDC47\":{\"name\":\"On.Live\",\"logo\":\"onlive.svg\",\"erc20\":true,\"symbol\":\"ONL\",\"decimals\":18},\"0xea5f88E54d982Cbb0c441cde4E79bC305e5b43Bc\":{\"name\":\"Pareto\",\"logo\":\"ParetoLogo.png\",\"erc20\":true,\"symbol\":\"PARETO\",\"decimals\":18},\"0x2e91E3e54C5788e9FdD6A181497FDcEa1De1bcc1\":{\"name\":\"Hercules\",\"logo\":\"herc.png\",\"erc20\":true,\"symbol\":\"HERC\",\"decimals\":18},\"0x4946Fcea7C692606e8908002e55A582af44AC121\":{\"name\":\"FOAM\",\"logo\":\"FOAM.svg\",\"erc20\":true,\"symbol\":\"FOAM\",\"decimals\":18},\"0x4D807509aECe24C0fa5A102b6a3B059Ec6E14392\":{\"name\":\"Menlo One\",\"logo\":\"Menlo_One.png\",\"erc20\":true,\"symbol\":\"ONE\",\"decimals\":18},\"0xDDD460bBD9F79847ea08681563e8A9696867210C\":{\"name\":\"Spendcoin\",\"logo\":\"spnd.png\",\"erc20\":true,\"symbol\":\"SPND\",\"decimals\":18},\"0x27054b13b1B798B345b591a4d22e6562d47eA75a\":{\"name\":\"AirSwap Token\",\"logo\":\"AST.png\",\"erc20\":true,\"symbol\":\"AST\",\"decimals\":4},\"0x8D5682941cE456900b12d47ac06a88b47C764CE1\":{\"name\":\"RightMesh Token\",\"logo\":\"Rmesh.png\",\"erc20\":true,\"symbol\":\"RMESH\",\"decimals\":18},\"0xDDe12a12A6f67156e0DA672be05c374e1B0a3e57\":{\"name\":\"JOYSO\",\"logo\":\"JOY.png\",\"erc20\":true,\"symbol\":\"JOY\",\"decimals\":6},\"0x0D262e5dC4A06a0F1c90cE79C7a60C09DfC884E4\":{\"name\":\"JET8 Token\",\"logo\":\"J8T.svg\",\"erc20\":true,\"symbol\":\"J8T\",\"decimals\":8},\"0x4a220E6096B25EADb88358cb44068A3248254675\":{\"name\":\"Quant Network\",\"logo\":\"quant-network.svg\",\"erc20\":true,\"symbol\":\"QNT\",\"decimals\":18},\"0xBC86727E770de68B1060C91f6BB6945c73e10388\":{\"name\":\"Ink Protocol\",\"logo\":\"ink_protocol.svg\",\"erc20\":true,\"symbol\":\"XNK\",\"decimals\":18},\"0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466\":{\"name\":\"Aion Network\",\"logo\":\"Aion.png\",\"erc20\":true,\"symbol\":\"AION\",\"decimals\":8},\"0xa95592DCFfA3C080B4B40E459c5f5692F67DB7F8\":{\"name\":\"ELY Token\",\"logo\":\"ely.png\",\"erc20\":true,\"symbol\":\"ELY\",\"decimals\":18},\"0x9E46A38F5DaaBe8683E10793b06749EEF7D733d1\":{\"name\":\"PolySwarm Nectar\",\"logo\":\"polyswarm_nectar.svg\",\"erc20\":true,\"symbol\":\"NCT\",\"decimals\":18},\"0xe1A178B681BD05964d3e3Ed33AE731577d9d96dD\":{\"name\":\"BOX Token\",\"logo\":\"box_token.png\",\"erc20\":true,\"symbol\":\"BOX\",\"decimals\":18},\"0x82BD526bDB718C6d4DD2291Ed013A5186cAE2DCa\":{\"name\":\"dutyof.care Token\",\"logo\":\"dutyof.care-square.png\",\"erc20\":true,\"symbol\":\"VDOC\",\"decimals\":18},\"0x168296bb09e24A88805CB9c33356536B980D3fC5\":{\"name\":\"Rhoc\",\"logo\":\"rchain.png\",\"erc20\":true,\"symbol\":\"RHOC\",\"decimals\":8},\"0x543Ff227F64Aa17eA132Bf9886cAb5DB55DCAddf\":{\"name\":\"DAOstack\",\"logo\":\"DAOstack.png\",\"erc20\":true,\"symbol\":\"GEN\",\"decimals\":18},\"0x6aEDbF8dFF31437220dF351950Ba2a3362168d1b\":{\"name\":\"Dragonglass\",\"logo\":\"dragonglass.svg\",\"erc20\":true,\"symbol\":\"DGS\",\"decimals\":8},\"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07\":{\"name\":\"OmiseGO\",\"logo\":\"omg.jpg\",\"erc20\":true,\"symbol\":\"OMG\",\"decimals\":18},\"0x99ea4dB9EE77ACD40B119BD1dC4E33e1C070b80d\":{\"name\":\"Quantstamp\",\"logo\":\"qsp.svg\",\"erc20\":true,\"symbol\":\"QSP\",\"decimals\":18},\"0x4162178B78D6985480A308B2190EE5517460406D\":{\"name\":\"Colu Local Network\",\"logo\":\"cln.png\",\"erc20\":true,\"symbol\":\"CLN\",\"decimals\":18},\"0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC\":{\"name\":\"Storj\",\"logo\":\"storj.jpg\",\"erc20\":true,\"symbol\":\"STORJ\",\"decimals\":8},\"0xD8E3FB3b08eBA982F2754988d70D57eDc0055ae6\":{\"name\":\"Zoracles\",\"logo\":\"ZORA.svg\",\"erc20\":true,\"symbol\":\"ZORA\",\"decimals\":9},\"0xF938424F7210f31dF2Aee3011291b658f872e91e\":{\"name\":\"VISOR\",\"logo\":\"VISR.svg\",\"erc20\":true,\"symbol\":\"VISR\",\"decimals\":18},\"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942\":{\"name\":\"Decentraland\",\"logo\":\"mana.svg\",\"erc20\":true,\"symbol\":\"MANA\",\"decimals\":18},\"0x0F513fFb4926ff82D7F60A05069047AcA295C413\":{\"name\":\"CrowdstartCoin\",\"logo\":\"XSC_Logo.svg\",\"erc20\":true,\"symbol\":\"XSC\",\"decimals\":18},\"0x5BC7e5f0Ab8b2E10D2D0a3F21739FCe62459aeF3\":{\"name\":\"Hut34 Entropy Token\",\"logo\":\"ENTRP.png\",\"symbol\":\"ENTRP\",\"erc20\":true,\"decimals\":18},\"0xEBBdf302c940c6bfd49C6b165f457fdb324649bc\":{\"name\":\"Hydro\",\"logo\":\"hydro.png\",\"erc20\":true,\"symbol\":\"HYDRO\",\"decimals\":18},\"0x2604FA406Be957E542BEb89E6754fCdE6815e83f\":{\"name\":\"Playkey Token\",\"logo\":\"playkey.svg\",\"erc20\":true,\"symbol\":\"PKT\",\"decimals\":18},\"0xE41d2489571d322189246DaFA5ebDe1F4699F498\":{\"name\":\"0x\",\"logo\":\"zrx.svg\",\"erc20\":true,\"symbol\":\"ZRX\",\"decimals\":18},\"0xB563300A3BAc79FC09B93b6F84CE0d4465A2AC27\":{\"name\":\"RedCab\",\"logo\":\"redcab.png\",\"erc20\":true,\"symbol\":\"REDC\",\"decimals\":18},\"0x957c30aB0426e0C93CD8241E2c60392d08c6aC8e\":{\"name\":\"Modum Token\",\"logo\":\"modum.svg\",\"erc20\":true,\"symbol\":\"MOD\",\"decimals\":0},\"0x1a7a8BD9106F2B8D977E08582DC7d24c723ab0DB\":{\"name\":\"AppCoins\",\"logo\":\"appcoins.png\",\"erc20\":true,\"decimals\":18,\"symbol\":\"APPC\"},\"0xdB25f211AB05b1c97D595516F45794528a807ad8\":{\"name\":\"STASIS EURS Token\",\"logo\":\"stasis-eurs.svg\",\"erc20\":true,\"decimals\":2,\"symbol\":\"EURS\"},\"0xCA0e7269600d353F70b14Ad118A49575455C0f2f\":{\"name\":\"AMLT\",\"logo\":\"amlt.png\",\"erc20\":true,\"decimals\":18,\"symbol\":\"AMLT\"},\"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F\":{\"name\":\"Synthetix Network Token\",\"logo\":\"synthetix.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"SNX\"},\"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51\":{\"name\":\"Synth sUSD\",\"logo\":\"synthetix_susd.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"SUSD\"},\"0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb\":{\"name\":\"Synth sETH\",\"logo\":\"synthetix_seth.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"SETH\"},\"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6\":{\"name\":\"Synth sBTC\",\"logo\":\"synthetix_sbtc.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"SBTC\"},\"0x0DB8D8b76BC361bAcbB72E2C491E06085A97Ab31\":{\"name\":\"IQeon\",\"logo\":\"iqeon.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"IQN\"},\"0x000C100050E98C91f9114fa5Dd75CE6869Bf4F53\":{\"name\":\"CRYPTO10 Hedged\",\"logo\":\"c10.svg\",\"erc20\":true,\"symbol\":\"C10\",\"decimals\":18},\"0x26E75307Fc0C021472fEb8F727839531F112f317\":{\"name\":\"Crypto20\",\"logo\":\"c20.svg\",\"erc20\":true,\"symbol\":\"C20\",\"decimals\":18},\"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\":{\"name\":\"Crypto Kitties\",\"logo\":\"CryptoKitties-Kitty-13733.svg\",\"erc20\":false,\"erc721\":true,\"symbol\":\"CK\",\"decimals\":0},\"0xE477292f1B3268687A29376116B0ED27A9c76170\":{\"name\":\"Herocoin\",\"logo\":\"herocoin_logo.png\",\"erc20\":true,\"symbol\":\"PLAY\",\"decimals\":18},\"0x4F4f0Db4de903B88f2B1a2847971E231D54F8fd3\":{\"name\":\"Geens Platform Token\",\"logo\":\"gee-icon.svg\",\"erc20\":true,\"symbol\":\"GEE\",\"decimals\":8},\"0xec67005c4E498Ec7f55E092bd1d35cbC47C91892\":{\"name\":\"Melon\",\"logo\":\"mln.jpg\",\"erc20\":true,\"symbol\":\"MLN\",\"decimals\":18},\"0xba2184520A1cC49a6159c57e61E1844E085615B6\":{\"name\":\"HelloGold Token\",\"logo\":\"hgt.png\",\"erc20\":true,\"symbol\":\"HGT\",\"decimals\":8},\"0xeAb43193CF0623073Ca89DB9B712796356FA7414\":{\"name\":\"GOLDX\",\"logo\":\"goldx.png\",\"erc20\":true,\"symbol\":\"GOLDX\",\"decimals\":18},\"0x8727c112C712c4a03371AC87a74dD6aB104Af768\":{\"name\":\"Jetcoin Institute Token\",\"logo\":\"JETCOIN28.png\",\"erc20\":true,\"symbol\":\"JET\",\"decimals\":18},\"0xf8e386EDa857484f5a12e4B5DAa9984E06E73705\":{\"name\":\"Indorse Token\",\"logo\":\"indorseLogo.jpg\",\"erc20\":true,\"symbol\":\"IND\",\"decimals\":18},\"0xA54ddC7B3CcE7FC8b1E3Fa0256D0DB80D2c10970\":{\"name\":\"NEVERDIE Coin\",\"logo\":\"ndc.png\",\"erc20\":true,\"symbol\":\"NDC\",\"decimals\":18},\"0x1c4481750daa5Ff521A2a7490d9981eD46465Dbd\":{\"name\":\"BlockMason Credit Protocol Token\",\"logo\":\"bcpt.svg\",\"erc20\":true,\"symbol\":\"BCPT\",\"decimals\":18},\"0x20F7A3DdF244dc9299975b4Da1C39F8D5D75f05A\":{\"name\":\"Sapien Network Token\",\"logo\":\"spn.svg\",\"erc20\":true,\"symbol\":\"SPN\",\"decimals\":6},\"0xA4e8C3Ec456107eA67d3075bF9e3DF3A75823DB0\":{\"name\":\"Loom Network Token\",\"logo\":\"loom.svg\",\"erc20\":true,\"symbol\":\"LOOM\",\"decimals\":18},\"0x4F9254C83EB525f9FCf346490bbb3ed28a81C667\":{\"name\":\"Celer Network Token\",\"logo\":\"CELR.svg\",\"erc20\":true,\"symbol\":\"CELR\",\"decimals\":18},\"0x71D01dB8d6a2fBEa7f8d434599C237980C234e4C\":{\"name\":\"Gladius\",\"logo\":\"gladius.svg\",\"erc20\":true,\"symbol\":\"GLA\",\"decimals\":8},\"0xdd974D5C2e2928deA5F71b9825b8b646686BD200\":{\"name\":\"Kyber Network Crystal\",\"logo\":\"kyber.svg\",\"erc20\":true,\"symbol\":\"KNC\",\"decimals\":18},\"0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C\":{\"name\":\"Bancor Network Token\",\"logo\":\"bancor.png\",\"erc20\":true,\"symbol\":\"BNT\",\"decimals\":18},\"0xfa05A73FfE78ef8f1a739473e462c54bae6567D9\":{\"name\":\"Lunyr Token\",\"logo\":\"lun.png\",\"erc20\":true,\"symbol\":\"LUN\",\"decimals\":18},\"0xC741f06082AA47F93729070aD0dD95E223Bda091\":{\"name\":\"LEDU Token\",\"logo\":\"edu.svg\",\"erc20\":true,\"symbol\":\"LEDU\",\"decimals\":8},\"0x5c543e7AE0A1104f78406C340E9C64FD9fCE5170\":{\"name\":\"vSlice\",\"logo\":\"vslice.png\",\"erc20\":true,\"symbol\":\"VSL\",\"decimals\":18},\"0x1f41E42D0a9e3c0Dd3BA15B527342783B43200A9\":{\"name\":\"Blockchain Capital\",\"logo\":\"bcap.svg\",\"erc20\":true,\"symbol\":\"BCAP\",\"decimals\":0},\"0x6531f133e6DeeBe7F2dcE5A0441aA7ef330B4e53\":{\"name\":\"Chronobank TIME\",\"logo\":\"chronobank.png\",\"erc20\":true,\"symbol\":\"TIME\",\"decimals\":8},\"0xE7775A6e9Bcf904eb39DA2b68c5efb4F9360e08C\":{\"name\":\"Token-as-a-Service\",\"logo\":\"taas-ico.png\",\"erc20\":true,\"symbol\":\"TAAS\",\"decimals\":6},\"0xaAAf91D9b90dF800Df4F55c205fd6989c977E73a\":{\"name\":\"Monolith TKN\",\"logo\":\"tkn.svg\",\"erc20\":true,\"symbol\":\"TKN\",\"decimals\":8},\"0x08711D3B02C8758F2FB3ab4e80228418a7F8e39c\":{\"name\":\"Edgeless\",\"logo\":\"edgeless.jpg\",\"erc20\":true,\"symbol\":\"EDG\",\"decimals\":0},\"0xf7B098298f7C69Fc14610bf71d5e02c60792894C\":{\"name\":\"Guppy\",\"logo\":\"guppy.png\",\"erc20\":true,\"symbol\":\"GUP\",\"decimals\":3},\"0x4DF812F6064def1e5e029f1ca858777CC98D2D81\":{\"name\":\"Xaurum\",\"logo\":\"xaurum_logo.svg\",\"erc20\":true,\"symbol\":\"XAUR\",\"decimals\":8},\"0xB9e7F8568e08d5659f5D29C4997173d84CdF2607\":{\"name\":\"Swarm City Token\",\"logo\":\"swt.jpg\",\"erc20\":true,\"symbol\":\"SWT\",\"decimals\":18},\"0xCb94be6f13A1182E4A4B6140cb7bf2025d28e41B\":{\"name\":\"Trustcoin\",\"logo\":\"trustcoin.jpg\",\"erc20\":true,\"symbol\":\"TRST\",\"decimals\":6},\"0x960b236A07cf122663c4303350609A66A7B288C0\":{\"name\":\"Aragon Network Token v1\",\"logo\":\"antv1.svg\",\"erc20\":true,\"symbol\":\"ANTv1\",\"decimals\":18},\"0x667088b212ce3d06a1b553a7221E1fD19000d9aF\":{\"name\":\"WINGS\",\"logo\":\"wings_logo.svg\",\"erc20\":true,\"symbol\":\"WINGS\",\"decimals\":18},\"0x16484d73Ac08d2355F466d448D2b79D2039F6EBB\":{\"name\":\"KnoxsterCoin\",\"logo\":\"FortKnoxster.svg\",\"erc20\":true,\"symbol\":\"FKX\",\"decimals\":18},\"0xAf30D2a7E90d7DC361c8C4585e9BB7D2F6f15bc7\":{\"name\":\"FirstBlood Token\",\"logo\":\"1st.svg\",\"erc20\":true,\"symbol\":\"1ST\",\"decimals\":18},\"0x607F4C5BB672230e8672085532f7e901544a7375\":{\"name\":\"iExec RLC Token\",\"logo\":\"rlc.svg\",\"erc20\":true,\"symbol\":\"RLC\",\"decimals\":9},\"0xaeC2E87E0A235266D9C5ADc9DEb4b2E29b54D009\":{\"name\":\"SingularDTV\",\"logo\":\"singulardtv.svg\",\"erc20\":true,\"symbol\":\"SNGLS\",\"decimals\":0},\"0x888666CA69E0f178DED6D75b5726Cee99A87D698\":{\"name\":\"ICONOMI\",\"logo\":\"iconomi.png\",\"erc20\":true,\"symbol\":\"ICN\",\"decimals\":18},\"0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A\":{\"name\":\"Digix\",\"logo\":\"DGD.png\",\"erc20\":true,\"symbol\":\"DGD\",\"decimals\":9},\"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\":{\"name\":\"Maker\",\"logo\":\"mkr.svg\",\"erc20\":true,\"symbol\":\"MKR\",\"decimals\":18},\"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359\":{\"name\":\"Sai Stablecoin v1.0\",\"logo\":\"sai.svg\",\"erc20\":true,\"symbol\":\"SAI\",\"decimals\":18},\"0x6B175474E89094C44Da98b954EedeAC495271d0F\":{\"name\":\"Dai Stablecoin\",\"logo\":\"dai.svg\",\"erc20\":true,\"symbol\":\"DAI\",\"decimals\":18},\"0xC477D038d5420C6A9e0b031712f61c5120090de9\":{\"name\":\"Boson Token\",\"logo\":\"boson.svg\",\"erc20\":true,\"symbol\":\"BOSON\",\"decimals\":18},\"0xD46bA6D942050d489DBd938a2C909A5d5039A161\":{\"name\":\"Ampleforth\",\"logo\":\"ampl.svg\",\"erc20\":true,\"symbol\":\"AMPL\",\"decimals\":9},\"0xDF2C7238198Ad8B389666574f2d8bc411A4b7428\":{\"name\":\"Mainframe Token\",\"logo\":\"Mainframe.png\",\"erc20\":true,\"symbol\":\"MFT\",\"decimals\":18},\"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\":{\"name\":\"Basic Attention Token\",\"logo\":\"bat.svg\",\"erc20\":true,\"symbol\":\"BAT\",\"decimals\":18},\"0x4D8fc1453a0F359e99c9675954e656D80d996FbF\":{\"name\":\"BEE Token\",\"logo\":\"bee_token.svg\",\"erc20\":true,\"symbol\":\"BEE\",\"decimals\":18},\"0x6810e776880C02933D47DB1b9fc05908e5386b96\":{\"name\":\"Gnosis Token\",\"logo\":\"gnosis.svg\",\"erc20\":true,\"symbol\":\"GNO\",\"decimals\":18},\"0x514910771AF9Ca656af840dff83E8264EcF986CA\":{\"name\":\"Chainlink Token\",\"logo\":\"chainlink.svg\",\"erc20\":true,\"symbol\":\"LINK\",\"decimals\":18},\"0xD8912C10681D8B21Fd3742244f44658dBA12264E\":{\"name\":\"Pluton\",\"logo\":\"plutus-god.svg\",\"erc20\":true,\"symbol\":\"PLU\",\"decimals\":18},\"0x1985365e9f78359a9B6AD760e32412f4a445E862\":{\"name\":\"Reputation Old\",\"logo\":\"rep.svg\",\"erc20\":true,\"symbol\":\"REP\",\"decimals\":18},\"0x221657776846890989a759BA2973e427DfF5C9bB\":{\"name\":\"Reputation\",\"logo\":\"repv2.svg\",\"erc20\":true,\"symbol\":\"REPv2\",\"decimals\":18},\"0xd0929d411954c47438dc1d871dd6081F5C5e149c\":{\"name\":\"Refereum\",\"logo\":\"rfr.svg\",\"erc20\":true,\"symbol\":\"RFR\",\"decimals\":4},\"0xb0866289e870D2efc282406cF4123Df6E5BcB652\":{\"name\":\"NoFakeCoin\",\"logo\":\"nfticon.png\",\"erc20\":true,\"symbol\":\"NFC\",\"decimals\":18},\"0x2C4e8f2D746113d0696cE89B35F0d8bF88E0AEcA\":{\"name\":\"Open Simple Token\",\"logo\":\"OST.svg\",\"erc20\":true,\"symbol\":\"OST\",\"decimals\":18},\"0x408e41876cCCDC0F92210600ef50372656052a38\":{\"name\":\"Republic Token\",\"logo\":\"ren.svg\",\"erc20\":true,\"symbol\":\"REN\",\"decimals\":18},\"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D\":{\"name\":\"renBTC\",\"logo\":\"renBTC.svg\",\"erc20\":true,\"symbol\":\"renBTC\",\"decimals\":8},\"0x1C5db575E2Ff833E46a2E9864C22F4B22E0B37C2\":{\"name\":\"renZEC\",\"logo\":\"renZEC.svg\",\"erc20\":true,\"symbol\":\"renZEC\",\"decimals\":8},\"0x459086F2376525BdCebA5bDDA135e4E9d3FeF5bf\":{\"name\":\"renBCH\",\"logo\":\"renBCH.svg\",\"erc20\":true,\"symbol\":\"renBCH\",\"decimals\":8},\"0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5\":{\"name\":\"renFIL\",\"logo\":\"renFIL.svg\",\"erc20\":true,\"symbol\":\"renFIL\",\"decimals\":18},\"0xa74476443119A942dE498590Fe1f2454d7D4aC0d\":{\"name\":\"Golem Network Token\",\"logo\":\"golem.svg\",\"erc20\":true,\"symbol\":\"GNT\",\"decimals\":18},\"0x6888a16eA9792c15A4DCF2f6C623D055c8eDe792\":{\"name\":\"Spectiv Signal Token\",\"logo\":\"spectiv.svg\",\"erc20\":true,\"symbol\":\"SIG\",\"decimals\":18},\"0x9a642d6b3368ddc662CA244bAdf32cDA716005BC\":{\"name\":\"Qtum\",\"logo\":\"qtum_28.png\",\"erc20\":true,\"decimals\":18,\"symbol\":\"QTUM\"},\"0x1234567461d3f8Db7496581774Bd869C83D51c93\":{\"name\":\"BitClave\",\"logo\":\"bitclave.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"CAT\"},\"0x7d4b8Cce0591C9044a22ee543533b72E976E36C3\":{\"name\":\"Change\",\"logo\":\"change.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"CAG\"},\"0x1d462414fe14cf489c7A21CaC78509f4bF8CD7c0\":{\"name\":\"CanYaCoin\",\"logo\":\"CanYa.svg\",\"erc20\":true,\"decimals\":6,\"symbol\":\"CAN\"},\"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72\":{\"name\":\"Ethereum Name Service\",\"logo\":\"ens.svg\",\"erc20\":true,\"decimals\":18,\"symbol\":\"ENS\"},\"0x3d1BA9be9f66B8ee101911bC36D3fB562eaC2244\":{\"name\":\"Rivetz\",\"logo\":\"rivetz.png\",\"erc20\":true,\"decimals\":18,\"symbol\":\"RVT\"},\"0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff\":{\"name\":\"Project Wyvern Token\",\"logo\":\"wyvern-logo.svg\",\"erc20\":true,\"symbol\":\"WYV\",\"decimals\":18},\"0xfec0cF7fE078a500abf15F1284958F22049c2C7e\":{\"name\":\"Maecenas ART Token\",\"logo\":\"Maecenas.jpg\",\"erc20\":true,\"symbol\":\"ART\",\"decimals\":18},\"0x05f4a42e251f2d52b8ed15E9FEdAacFcEF1FAD27\":{\"name\":\"Zilliqa\",\"logo\":\"zilliqa.svg\",\"erc20\":true,\"symbol\":\"ZIL\",\"decimals\":12},\"0x986EE2B944c42D017F52Af21c4c69B84DBeA35d8\":{\"name\":\"BitMartToken\",\"logo\":\"bitmart.png\",\"erc20\":true,\"symbol\":\"BMX\",\"decimals\":18},\"0x2af47a65da8CD66729b4209C22017d6A5C2d2400\":{\"name\":\"StandardBounties\",\"logo\":\"StandardBounties.png\"},\"0xF03f8D65BaFA598611C3495124093c56e8F638f0\":{\"name\":\"Viewly\",\"logo\":\"viewly.svg\",\"erc20\":true,\"symbol\":\"VIEW\",\"decimals\":18},\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\":{\"name\":\"Wrapped Ether\",\"logo\":\"weth.png\",\"erc20\":true,\"symbol\":\"WETH\",\"decimals\":18},\"0x6C8c6b02E7b2BE14d4fA6022Dfd6d75921D90E4E\":{\"name\":\"Compound Basic Attention Token\",\"logo\":\"ctoken-bat.svg\",\"erc20\":true,\"symbol\":\"cBAT\",\"decimals\":8},\"0x70e36f6BF80a52b3B46b3aF8e106CC0ed743E8e4\":{\"name\":\"Compound Collateral\",\"logo\":\"ctoken-comp.svg\",\"erc20\":true,\"symbol\":\"cCOMP\",\"decimals\":8},\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\":{\"name\":\"Compound Dai\",\"logo\":\"ctoken-dai.svg\",\"erc20\":true,\"symbol\":\"cDAI\",\"decimals\":8},\"0xF5DCe57282A584D2746FaF1593d3121Fcac444dC\":{\"name\":\"Compound Sai (Legacy Dai)\",\"logo\":\"ctoken-sai.svg\",\"erc20\":true,\"symbol\":\"cSAI\",\"decimals\":8},\"0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5\":{\"name\":\"Compound Ether\",\"logo\":\"ctoken-eth.svg\",\"erc20\":true,\"symbol\":\"cETH\",\"decimals\":8},\"0x158079Ee67Fce2f58472A96584A73C7Ab9AC95c1\":{\"name\":\"Compound Augur\",\"logo\":\"ctoken-rep.svg\",\"erc20\":true,\"symbol\":\"cREP\",\"decimals\":8},\"0x39AA39c021dfbaE8faC545936693aC917d5E7563\":{\"name\":\"Compound USD Coin\",\"logo\":\"ctoken-usdc.svg\",\"erc20\":true,\"symbol\":\"cUSDC\",\"decimals\":8},\"0xf650C3d88D12dB855b8bf7D11Be6C55A4e07dCC9\":{\"name\":\"Compound Tether\",\"logo\":\"ctoken-usdt.svg\",\"erc20\":true,\"symbol\":\"cUSDT\",\"decimals\":8},\"0xC11b1268C1A384e55C48c2391d8d480264A3A7F4\":{\"name\":\"Compound Wrapped BTC\",\"logo\":\"ctoken-wbtc.svg\",\"erc20\":true,\"symbol\":\"cWBTC\",\"decimals\":8},\"0xB3319f5D18Bc0D84dD1b4825Dcde5d5f7266d407\":{\"name\":\"Compound 0x\",\"logo\":\"ctoken-zrx.svg\",\"erc20\":true,\"symbol\":\"cZRX\",\"decimals\":8},\"0xc00e94Cb662C3520282E6f5717214004A7f26888\":{\"name\":\"Compound\",\"logo\":\"comp.svg\",\"erc20\":true,\"symbol\":\"COMP\",\"decimals\":18},\"0xFFE02ee4C69eDf1b340fCaD64fbd6b37a7b9e265\":{\"name\":\"NANJCOIN\",\"logo\":\"nanjcoin.svg\",\"erc20\":true,\"symbol\":\"NANJ\",\"decimals\":8},\"0xB6eD7644C69416d67B522e20bC294A9a9B405B31\":{\"name\":\"0xBitcoin Token\",\"logo\":\"0xbitcoin.svg\",\"erc20\":true,\"symbol\":\"0xBTC\",\"decimals\":8},\"0x744d70FDBE2Ba4CF95131626614a1763DF805B9E\":{\"name\":\"Status Network Token\",\"logo\":\"snt.svg\",\"erc20\":true,\"symbol\":\"SNT\",\"decimals\":18},\"0x42d6622deCe394b54999Fbd73D108123806f6a18\":{\"name\":\"SPANK\",\"logo\":\"SPANK.png\",\"erc20\":true,\"symbol\":\"SPANK\",\"decimals\":18},\"0x6B01c3170ae1EFEBEe1a3159172CB3F7A5ECf9E5\":{\"name\":\"BOOTY\",\"logo\":\"booty.png\",\"erc20\":true,\"symbol\":\"BOOTY\",\"decimals\":18},\"0x4a6058666cf1057eaC3CD3A5a614620547559fc9\":{\"name\":\"Brickblock\",\"logo\":\"Brickblock.svg\",\"erc20\":true,\"symbol\":\"BBK\",\"decimals\":18},\"0x80fB784B7eD66730e8b1DBd9820aFD29931aab03\":{\"name\":\"ETHLend Token\",\"logo\":\"lend.svg\",\"erc20\":true,\"symbol\":\"LEND\",\"decimals\":18},\"0x48FF53777F747cFB694101222a944dE070c15D36\":{\"name\":\"Ether Kingdoms Token\",\"logo\":\"IMP.svg\",\"erc20\":true,\"symbol\":\"IMP\",\"decimals\":7},\"0x02F61Fd266DA6E8B102D4121f5CE7b992640CF98\":{\"name\":\"LikeCoin\",\"logo\":\"like.svg\",\"erc20\":true,\"symbol\":\"LIKE\",\"decimals\":18},\"0xB8c77482e45F1F44dE1745F52C74426C631bDD52\":{\"name\":\"Binance Coin\",\"logo\":\"bnb.png\",\"erc20\":true,\"symbol\":\"BNB\",\"decimals\":18},\"0xD850942eF8811f2A866692A623011bDE52a462C1\":{\"name\":\"VeChain\",\"logo\":\"ven.svg\",\"erc20\":true,\"symbol\":\"VEN\",\"decimals\":18},\"0xb5A5F22694352C15B00323844aD545ABb2B11028\":{\"name\":\"ICON\",\"logo\":\"icon-icx-logo.png\",\"erc20\":true,\"symbol\":\"ICX\",\"decimals\":18},\"0x91Af0fBB28ABA7E31403Cb457106Ce79397FD4E6\":{\"name\":\"Aergo\",\"logo\":\"Aergo.svg\",\"erc20\":true,\"symbol\":\"AERGO\",\"decimals\":18},\"0x5CA9a71B1d01849C0a95490Cc00559717fCF0D1d\":{\"name\":\"Aeternity\",\"logo\":\"aeternity.svg\",\"erc20\":true,\"symbol\":\"AE\",\"decimals\":18},\"0xd4fa1460F537bb9085d22C7bcCB5DD450Ef28e3a\":{\"name\":\"Populous\",\"logo\":\"FEATURED.POP_.png\",\"erc20\":true,\"symbol\":\"PPT\",\"decimals\":8},\"0xFA1a856Cfa3409CFa145Fa4e20Eb270dF3EB21ab\":{\"name\":\"IOST\",\"logo\":\"iost.png\",\"erc20\":true,\"symbol\":\"IOST\",\"decimals\":18},\"0x039B5649A59967e3e936D7471f9c3700100Ee1ab\":{\"name\":\"Kucoin Shares\",\"logo\":\"kucoin.svg\",\"erc20\":true,\"symbol\":\"KCS\",\"decimals\":6},\"0x3893b9422Cd5D70a81eDeFfe3d5A1c6A978310BB\":{\"name\":\"Mithril\",\"logo\":\"mithril-featured.png\",\"erc20\":true,\"symbol\":\"MITH\",\"decimals\":18},\"0xb7cB1C96dB6B22b0D3d9536E0108d062BD488F74\":{\"name\":\"Walton\",\"logo\":\"waltonchain.png\",\"erc20\":true,\"symbol\":\"WTC\",\"decimals\":18},\"0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671\":{\"name\":\"Numeraire\",\"logo\":\"nmr.png\",\"erc20\":true,\"symbol\":\"NMR\",\"decimals\":18},\"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd\":{\"name\":\"Gemini Dollar\",\"logo\":\"gusd.svg\",\"erc20\":true,\"symbol\":\"GUSD\",\"decimals\":2},\"0xA4Bdb11dc0a2bEC88d24A3aa1E6Bb17201112eBe\":{\"name\":\"StableUSD\",\"logo\":\"usds.svg\",\"erc20\":true,\"symbol\":\"USDS\",\"decimals\":6},\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\":{\"name\":\"USD Coin\",\"logo\":\"usdc.svg\",\"erc20\":true,\"symbol\":\"USDC\",\"decimals\":6},\"0x93ED3FBe21207Ec2E8f2d3c3de6e058Cb73Bc04d\":{\"name\":\"Pinakion Token\",\"logo\":\"pinakion.svg\",\"erc20\":true,\"symbol\":\"PNK\",\"decimals\":18},\"0x419D0d8BdD9aF5e606Ae2232ed285Aff190E711b\":{\"name\":\"FunFair\",\"logo\":\"fun.svg\",\"erc20\":true,\"symbol\":\"FUN\",\"decimals\":8},\"0xcA2796F9F61dc7b238Aab043971e49c6164DF375\":{\"name\":\"YGGDRASH YEED Token\",\"logo\":\"yggdrash.svg\",\"erc20\":true,\"symbol\":\"YEED\",\"decimals\":18},\"0x03e3f0c25965f13DbbC58246738C183E27b26a56\":{\"name\":\"Disciplina Token\",\"logo\":\"disciplina.svg\",\"erc20\":true,\"symbol\":\"DSCP\",\"decimals\":18},\"0xE814aeE960a85208C3dB542C53E7D4a6C8D5f60F\":{\"name\":\"Chronologic DAY Token\",\"logo\":\"DAY.png\",\"erc20\":true,\"symbol\":\"DAY\",\"decimals\":18},\"0x7E43581b19ab509BCF9397a2eFd1ab10233f27dE\":{\"name\":\"PLATINUM\",\"logo\":\"plat.png\",\"erc20\":true,\"symbol\":\"PLAT\",\"decimals\":18},\"0x8E870D67F660D95d5be530380D0eC0bd388289E1\":{\"name\":\"Pax Dollar\",\"logo\":\"usdp.svg\",\"erc20\":true,\"symbol\":\"USDP\",\"decimals\":18},\"0x45804880De22913dAFE09f4980848ECE6EcbAf78\":{\"name\":\"PAX Gold\",\"logo\":\"paxg.svg\",\"erc20\":true,\"symbol\":\"PAXG\",\"decimals\":18},\"0x0000000000085d4780B73119b644AE5ecd22b376\":{\"name\":\"TrueUSD\",\"logo\":\"TUSD.svg\",\"erc20\":true,\"symbol\":\"TUSD\",\"decimals\":18},\"0x4Fabb145d64652a948d72533023f6E7A623C7C53\":{\"name\":\"Binance USD\",\"logo\":\"busd.svg\",\"erc20\":true,\"symbol\":\"BUSD\",\"decimals\":18},\"0x23Ccc43365D9dD3882eab88F43d515208f832430\":{\"name\":\"MidasProtocol\",\"logo\":\"MAS.png\",\"erc20\":true,\"symbol\":\"MAS\",\"decimals\":18},\"0xC16b542ff490e01fcc0DC58a60e1EFdc3e357cA6\":{\"name\":\"ICE ROCK MINING\",\"logo\":\"rock2.png\",\"erc20\":true,\"symbol\":\"ROCK2\",\"decimals\":0},\"0x6758B7d441a9739b98552B373703d8d3d14f9e62\":{\"name\":\"POA20 Token\",\"logo\":\"POA20.png\",\"erc20\":true,\"symbol\":\"POA20\",\"decimals\":18},\"0x3DB6Ba6ab6F95efed1a6E794caD492fAAabF294D\":{\"name\":\"LTO Network Token (old)\",\"logo\":\"LTO.svg\",\"erc20\":true,\"symbol\":\"LTOOLD\",\"decimals\":8},\"0xd01409314aCb3b245CEa9500eCE3F6Fd4d70ea30\":{\"name\":\"LTO Network Token\",\"logo\":\"LTO.svg\",\"erc20\":true,\"symbol\":\"LTO\",\"decimals\":8},\"0xfeF4185594457050cC9c23980d301908FE057Bb1\":{\"name\":\"VIDT Datalink\",\"logo\":\"VIDT.svg\",\"erc20\":true,\"symbol\":\"VIDT\",\"decimals\":18},\"0x7064aAb39A0Fcf7221c3396719D0917a65E35515\":{\"name\":\"Cpollo\",\"logo\":\"Cpollo.svg\",\"erc20\":true,\"symbol\":\"CPLO\",\"decimals\":18},\"0xd8446236FA95b9b5f9fd0f8E7Df1a944823c683d\":{\"name\":\"NEEO\",\"logo\":\"neeo.png\",\"erc20\":true,\"symbol\":\"NEEO\",\"decimals\":18},\"0xA823E6722006afe99E91c30FF5295052fe6b8E32\":{\"name\":\"Neumark\",\"logo\":\"neu.svg\",\"erc20\":true,\"symbol\":\"NEU\",\"decimals\":18},\"0x8f693ca8D21b157107184d29D398A8D082b38b76\":{\"name\":\"Streamr\",\"logo\":\"streamr.svg\",\"erc20\":true,\"symbol\":\"DATA\",\"decimals\":18},\"0x0Cf0Ee63788A0849fE5297F3407f701E122cC023\":{\"name\":\"Streamr (old)\",\"logo\":\"streamr_old.svg\",\"erc20\":true,\"symbol\":\"XDATA\",\"decimals\":18},\"0xA0b73E1Ff0B80914AB6fe0444E65848C4C34450b\":{\"name\":\"Crypto.com Chain\",\"logo\":\"CRO.png\",\"erc20\":true,\"symbol\":\"CRO\",\"decimals\":8},\"0xF70a642bD387F94380fFb90451C2c81d4Eb82CBc\":{\"name\":\"STAR\",\"logo\":\"starbase.png\",\"erc20\":true,\"symbol\":\"STAR\",\"decimals\":18},\"0x7C5A0CE9267ED19B22F8cae653F198e3E8daf098\":{\"name\":\"Santiment\",\"logo\":\"santiment.svg\",\"erc20\":true,\"symbol\":\"SAN\",\"decimals\":18},\"0x58b6A8A3302369DAEc383334672404Ee733aB239\":{\"name\":\"Livepeer\",\"logo\":\"livepeer.png\",\"erc20\":true,\"symbol\":\"LPT\",\"decimals\":18},\"0x6fe56C0bcdD471359019FcBC48863d6c3e9d4F41\":{\"name\":\"Props\",\"logo\":\"props.png\",\"erc20\":true,\"symbol\":\"PROPS\",\"decimals\":18},\"0x6c6EE5e31d828De241282B9606C8e98Ea48526E2\":{\"name\":\"HoloToken\",\"logo\":\"holotoken.png\",\"erc20\":true,\"symbol\":\"HOT\",\"decimals\":18},\"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c\":{\"name\":\"Enjin Coin\",\"logo\":\"enj.svg\",\"erc20\":true,\"symbol\":\"ENJ\",\"decimals\":18},\"0xbf2179859fc6D5BEE9Bf9158632Dc51678a4100e\":{\"name\":\"AELF\",\"logo\":\"aelf.png\",\"erc20\":true,\"symbol\":\"ELF\",\"decimals\":18},\"0x39Bb259F66E1C59d5ABEF88375979b4D20D98022\":{\"name\":\"Wax\",\"logo\":\"wax.png\",\"erc20\":true,\"symbol\":\"WAX\",\"decimals\":8},\"0x595832F8FC6BF59c85C527fEC3740A1b7a361269\":{\"name\":\"PowerLedger\",\"logo\":\"power.png\",\"erc20\":true,\"symbol\":\"POWR\",\"decimals\":6},\"0x28dee01D53FED0Edf5f6E310BF8Ef9311513Ae40\":{\"name\":\"BlitzPredict\",\"logo\":\"blitzpredict.svg\",\"erc20\":true,\"symbol\":\"XBP\",\"decimals\":18},\"0x33349B282065b0284d756F0577FB39c158F935e6\":{\"name\":\"Maple Finance\",\"logo\":\"maple-finance.svg\",\"erc20\":true,\"erc721\":false,\"symbol\":\"MPL\",\"decimals\":18},\"0xFBeef911Dc5821886e1dda71586d90eD28174B7d\":{\"name\":\"KnownOrigin\",\"logo\":\"knownorigin.svg\",\"erc20\":true,\"symbol\":\"KODA\",\"decimals\":0},\"0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26\":{\"name\":\"Origin Protocol\",\"logo\":\"originprotocol.png\",\"erc20\":true,\"symbol\":\"OGN\",\"decimals\":18},\"0x2A8e1E676Ec238d8A992307B495b45B3fEAa5e86\":{\"name\":\"Origin Dollar\",\"logo\":\"ousd.svg\",\"erc20\":true,\"symbol\":\"OUSD\",\"decimals\":18},\"0x8f8221aFbB33998d8584A2B05749bA73c37a938a\":{\"name\":\"Request\",\"logo\":\"request.svg\",\"erc20\":true,\"symbol\":\"REQ\",\"decimals\":18},\"0x2aEa4Add166EBf38b63d09a75dE1a7b94Aa24163\":{\"name\":\"Kudos\",\"logo\":\"kudos.svg\",\"erc20\":false,\"erc721\":true,\"symbol\":\"KDO\",\"decimals\":0},\"0x14C926F2290044B647e1Bf2072e67B495eff1905\":{\"name\":\"Bethereum\",\"logo\":\"bether.jpg\",\"erc20\":true,\"symbol\":\"BETHER\",\"decimals\":18},\"0x9AAb071B4129B083B01cB5A0Cb513Ce7ecA26fa5\":{\"name\":\"Hunt Token\",\"logo\":\"hunt.png\",\"erc20\":true,\"symbol\":\"HUNT\",\"decimals\":18},\"0xFEF3884b603C33EF8eD4183346E093A173C94da6\":{\"name\":\"Metamorph\",\"logo\":\"metamorph.svg\",\"erc20\":true,\"symbol\":\"METM\",\"decimals\":18},\"0x0AbdAce70D3790235af448C88547603b945604ea\":{\"name\":\"district0x\",\"logo\":\"district0x.svg\",\"erc20\":true,\"symbol\":\"DNT\",\"decimals\":18},\"0x0C6144c16af288948C8fdB37fD8fEc94bfF3d1d9\":{\"name\":\"Neutral Dollar\",\"logo\":\"neutraldollar.png\",\"erc20\":true,\"symbol\":\"NUSD\",\"decimals\":6},\"0xB26631c6dda06aD89B93C71400D25692de89c068\":{\"name\":\"Minds\",\"logo\":\"minds.svg\",\"erc20\":true,\"symbol\":\"MINDS\",\"decimals\":18},\"0xBb1f24C0c1554b9990222f036b0AaD6Ee4CAec29\":{\"name\":\"CryptoSoul\",\"logo\":\"SOUL.svg\",\"erc20\":true,\"symbol\":\"SOUL\",\"decimals\":18},\"0xFF0E5e014cf97e0615cb50F6f39Da6388E2FaE6E\":{\"name\":\"Origo\",\"logo\":\"origo.svg\",\"erc20\":true,\"symbol\":\"OGO\",\"decimals\":18},\"0x0cB8D0B37C7487b11d57F1f33dEfA2B1d3cFccfE\":{\"name\":\"DANKToken\",\"logo\":\"dank-logo.svg\",\"erc20\":true,\"symbol\":\"DANK\",\"decimals\":18},\"0x3a4f40631a4f906c2BaD353Ed06De7A5D3fCb430\":{\"name\":\"PlayDapp Token\",\"logo\":\"playdapp.svg\",\"erc20\":true,\"symbol\":\"PLA\",\"decimals\":18},\"0xE9e3F9cfc1A64DFca53614a0182CFAD56c10624F\":{\"name\":\"Su Squares\",\"logo\":\"Su-Squares.svg\",\"erc20\":false,\"erc721\":true,\"symbol\":\"SU\",\"decimals\":0},\"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\":{\"name\":\"ROOK\",\"logo\":\"Rook.svg\",\"erc20\":true,\"symbol\":\"ROOK\",\"decimals\":18},\"0xbE9375C6a420D2eEB258962efB95551A5b722803\":{\"name\":\"StormX Token\",\"logo\":\"stormx.svg\",\"erc20\":true,\"symbol\":\"STMX\",\"decimals\":18},\"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0\":{\"name\":\"Matic Network Token\",\"logo\":\"matic-network-logo.svg\",\"erc20\":true,\"symbol\":\"MATIC\",\"decimals\":18},\"0x9992eC3cF6A55b00978cdDF2b27BC6882d88D1eC\":{\"name\":\"Polymath\",\"logo\":\"polymath_logo.svg\",\"erc20\":true,\"symbol\":\"POLY\",\"decimals\":18},\"0x0a50C93c762fDD6E56D86215C24AaAD43aB629aa\":{\"name\":\"LGO Token\",\"logo\":\"lgo.png\",\"erc20\":true,\"symbol\":\"LGO\",\"decimals\":8},\"0xc8Cac7672f4669685817cF332a33Eb249F085475\":{\"name\":\"LivenCoin\",\"logo\":\"LVN.svg\",\"erc20\":true,\"symbol\":\"LVN\",\"decimals\":18},\"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD\":{\"name\":\"Loopring\",\"logo\":\"LRC.svg\",\"erc20\":true,\"symbol\":\"LRC\",\"decimals\":18},\"0x255Aa6DF07540Cb5d3d297f0D0D4D84cb52bc8e6\":{\"name\":\"Raiden Network Token\",\"logo\":\"raiden.svg\",\"erc20\":true,\"symbol\":\"RDN\",\"decimals\":18},\"0x66fD97a78d8854fEc445cd1C80a07896B0b4851f\":{\"name\":\"Lunch Money\",\"logo\":\"LMY.svg\",\"erc20\":true,\"symbol\":\"LMY\",\"decimals\":18},\"0x679131F591B4f369acB8cd8c51E68596806c3916\":{\"name\":\"Trustlines Network Token\",\"logo\":\"TLN128.png\",\"erc20\":true,\"symbol\":\"TLN\",\"decimals\":18},\"0xdcD85914b8aE28c1E62f1C488E1D968D5aaFfE2b\":{\"name\":\"TOP Network Token\",\"logo\":\"TOP.svg\",\"erc20\":true,\"symbol\":\"TOP\",\"decimals\":18},\"0xaea46A60368A7bD060eec7DF8CBa43b7EF41Ad85\":{\"name\":\"Fetch\",\"logo\":\"fetch.svg\",\"erc20\":true,\"symbol\":\"FET\",\"decimals\":18},\"0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14\":{\"name\":\"Mettalex\",\"logo\":\"mettalex.svg\",\"erc20\":true,\"symbol\":\"MTLX\",\"decimals\":18},\"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984\":{\"name\":\"Uniswap\",\"logo\":\"uni.svg\",\"erc20\":true,\"symbol\":\"UNI\",\"decimals\":18},\"0x2e6539edc3b76f1E21B71d214527FAbA875F70F3\":{\"name\":\"Yearn Finance Dot\",\"logo\":\"YFDOT.svg\",\"erc20\":true,\"symbol\":\"YFDOT\",\"decimals\":18},\"0x9F284E1337A815fe77D2Ff4aE46544645B20c5ff\":{\"name\":\"Darwinia Commitment Token\",\"logo\":\"kton.svg\",\"erc20\":true,\"symbol\":\"KTON\",\"decimals\":18},\"0xE48972fCd82a274411c01834e2f031D4377Fa2c0\":{\"name\":\"TwoKeyEconomy\",\"logo\":\"2key.svg\",\"erc20\":true,\"symbol\":\"2KEY\",\"decimals\":18},\"0x970B9bB2C0444F5E81e9d0eFb84C8ccdcdcAf84d\":{\"name\":\"Fuse Token\",\"logo\":\"fuse.svg\",\"erc20\":true,\"symbol\":\"FUSE\",\"decimals\":18},\"0x0Ae055097C6d159879521C384F1D2123D1f195e6\":{\"name\":\"STAKE Token\",\"logo\":\"stake.png\",\"erc20\":true,\"symbol\":\"STAKE\",\"decimals\":18},\"0x5dc60C4D5e75D22588FA17fFEB90A63E535efCE0\":{\"name\":\"dKargo\",\"logo\":\"DKA.svg\",\"erc20\":true,\"symbol\":\"DKA\",\"decimals\":18},\"0x9469D013805bFfB7D3DEBe5E7839237e535ec483\":{\"name\":\"Darwinia Network Native Token\",\"logo\":\"ring.svg\",\"erc20\":true,\"symbol\":\"RING\",\"decimals\":18},\"0xA31B1767e09f842ECFd4bc471Fe44F830E3891AA\":{\"name\":\"ROOBEE\",\"logo\":\"ROOBEE.svg\",\"erc20\":true,\"symbol\":\"ROOBEE\",\"decimals\":18},\"0xC7e43A1c8E118aA2965F5EAbe0e718D83DB7A63C\":{\"name\":\"ZCore Token\",\"logo\":\"zcrt.svg\",\"erc20\":true,\"symbol\":\"ZCRT\",\"decimals\":18},\"0x08d32b0da63e2C3bcF8019c9c5d849d7a9d791e6\":{\"name\":\"Dentacoin Token\",\"logo\":\"dcn.svg\",\"erc20\":true,\"symbol\":\"DCN\",\"decimals\":0},\"0xe2f2a5C287993345a840Db3B0845fbC70f5935a5\":{\"name\":\"mStable USD\",\"logo\":\"mUSD.svg\",\"erc20\":true,\"symbol\":\"mUSD\",\"decimals\":18},\"0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2\":{\"name\":\"Meta\",\"logo\":\"MTA.svg\",\"erc20\":true,\"symbol\":\"MTA\",\"decimals\":18},\"0xe3818504c1B32bF1557b16C238B2E01Fd3149C17\":{\"name\":\"Pillar\",\"logo\":\"plr.svg\",\"erc20\":true,\"symbol\":\"PLR\",\"decimals\":18},\"0xba100000625a3754423978a60c9317c58a424e3D\":{\"name\":\"Balancer (BAL)\",\"logo\":\"balancer.svg\",\"erc20\":true,\"symbol\":\"BAL\",\"decimals\":18},\"0x8a854288a5976036A725879164Ca3e91d30c6A1B\":{\"name\":\"Guaranteed Entrance Token\",\"logo\":\"get-logo.svg\",\"erc20\":true,\"symbol\":\"GET\",\"decimals\":18},\"0x2781246fe707bB15CeE3e5ea354e2154a2877B16\":{\"name\":\"Elysia\",\"logo\":\"el.svg\",\"erc20\":true,\"symbol\":\"EL\",\"decimals\":18},\"0xc12d099be31567add4e4e4d0D45691C3F58f5663\":{\"name\":\"Auctus\",\"logo\":\"auc.svg\",\"erc20\":true,\"symbol\":\"AUC\",\"decimals\":18},\"0xdF574c24545E5FfEcb9a659c229253D4111d87e1\":{\"name\":\"HUSD\",\"logo\":\"HUSD.svg\",\"erc20\":true,\"symbol\":\"HUSD\",\"decimals\":8},\"0x2ecB13A8c458c379c4d9a7259e202De03c8F3D19\":{\"name\":\"Block-Chain.com Token\",\"logo\":\"block-chain.svg\",\"erc20\":true,\"symbol\":\"BC\",\"decimals\":18},\"0x38e4adB44ef08F22F5B5b76A8f0c2d0dCbE7DcA1\":{\"name\":\"Concentrated Voting Power\",\"logo\":\"PowerPool.svg\",\"erc20\":true,\"symbol\":\"CVP\",\"decimals\":18},\"0xa117000000f279D81A1D3cc75430fAA017FA5A2e\":{\"name\":\"Aragon Network Token\",\"logo\":\"antv2.svg\",\"erc20\":true,\"symbol\":\"ANT\",\"decimals\":18},\"0xDecade1c6Bf2cD9fb89aFad73e4a519C867adcF5\":{\"name\":\"Experty Wisdom Token\",\"logo\":\"wisdom-token.svg\",\"erc20\":true,\"symbol\":\"WIS\",\"decimals\":18},\"0x7D85e23014F84E6E21d5663aCD8751bEF3562352\":{\"name\":\"Axion Old\",\"logo\":\"obsolete.svg\",\"erc20\":true,\"symbol\":\"AXNv1\",\"decimals\":18},\"0x358AA737e033F34df7c54306960a38d09AaBd523\":{\"name\":\"Ares Token\",\"logo\":\"ares.svg\",\"erc20\":true,\"symbol\":\"ARES\",\"decimals\":18},\"0xB62132e35a6c13ee1EE0f84dC5d40bad8d815206\":{\"name\":\"NEXO\",\"logo\":\"NEXO.svg\",\"erc20\":true,\"symbol\":\"NEXO\",\"decimals\":18},\"0x4612021C75809160Be60DB21fBc9D6adD0B32deF\":{\"name\":\"BCP Coin\",\"logo\":\"BCP.svg\",\"erc20\":true,\"symbol\":\"BCP\",\"decimals\":18},\"0xE9E73E1aE76D17A16cC53E3e87a9a7dA78834d37\":{\"name\":\"Camp\",\"logo\":\"Camp.svg\",\"erc20\":true,\"symbol\":\"CAMP\",\"decimals\":18},\"0xdacD69347dE42baBfAEcD09dC88958378780FB62\":{\"name\":\"Atari Token\",\"logo\":\"atrilast.svg\",\"erc20\":true,\"symbol\":\"ATRI\",\"decimals\":0},\"0x71F85B2E46976bD21302B64329868fd15eb0D127\":{\"name\":\"Axion\",\"logo\":\"axion.svg\",\"erc20\":true,\"symbol\":\"AXN\",\"decimals\":18},\"0xc944E90C64B2c07662A292be6244BDf05Cda44a7\":{\"name\":\"Graph Token\",\"logo\":\"graphToken.svg\",\"erc20\":true,\"symbol\":\"GRT\",\"decimals\":18},\"0xFE3E6a25e6b192A42a44ecDDCd13796471735ACf\":{\"name\":\"Reef Finance\",\"logo\":\"reef.svg\",\"erc20\":true,\"symbol\":\"REEF\",\"decimals\":18},\"0x43Dfc4159D86F3A37A5A4B3D4580b888ad7d4DDd\":{\"name\":\"DODO bird\",\"logo\":\"DODO.svg\",\"erc20\":true,\"symbol\":\"DODO\",\"decimals\":18},\"0x4a615bB7166210CCe20E6642a6f8Fb5d4D044496\":{\"name\":\"NAOS Finance\",\"logo\":\"naos.svg\",\"erc20\":true,\"symbol\":\"NAOS\",\"decimals\":18},\"0x111111111117dC0aa78b770fA6A738034120C302\":{\"name\":\"1INCH Token\",\"logo\":\"1inch.svg\",\"erc20\":true,\"symbol\":\"1INCH\",\"decimals\":18},\"0x27702a26126e0B3702af63Ee09aC4d1A084EF628\":{\"name\":\"Aleph.im Token\",\"logo\":\"aleph.svg\",\"erc20\":true,\"symbol\":\"ALEPH\",\"decimals\":18},\"0x32a7C02e79c4ea1008dD6564b35F131428673c41\":{\"name\":\"CRUST\",\"logo\":\"crust.svg\",\"erc20\":true,\"symbol\":\"CRU\",\"decimals\":18},\"0x3472A5A71965499acd81997a54BBA8D852C6E53d\":{\"name\":\"BADGER\",\"logo\":\"badger.svg\",\"erc20\":true,\"symbol\":\"BADGER\",\"decimals\":18},\"0xDcB01cc464238396E213a6fDd933E36796eAfF9f\":{\"name\":\"Yield\",\"logo\":\"yield-logo.svg\",\"erc20\":true,\"symbol\":\"YLD\",\"decimals\":18},\"0x968F6f898a6Df937fC1859b323aC2F14643e3fED\":{\"name\":\"Newscrypto\",\"logo\":\"NWC.svg\",\"erc20\":true,\"symbol\":\"NWC\",\"decimals\":18},\"0xeb269732ab75A6fD61Ea60b06fE994cD32a83549\":{\"name\":\"dForce USDx\",\"logo\":\"USDx.svg\",\"erc20\":true,\"symbol\":\"USDx\",\"decimals\":18},\"0x6e0daDE58D2d89eBBe7aFc384e3E4f15b70b14D8\":{\"name\":\"QuiverX\",\"logo\":\"quiverx.svg\",\"erc20\":true,\"symbol\":\"QRX\",\"decimals\":18},\"0x0beAD9a1bcc1b84D06E3f2df67E3549Fd55aB054\":{\"name\":\"EURxb\",\"logo\":\"eurxb.svg\",\"erc20\":true,\"symbol\":\"EURxb\",\"decimals\":18},\"0x9F9c8ec3534c3cE16F928381372BfbFBFb9F4D24\":{\"name\":\"GraphLinq\",\"logo\":\"glq.svg\",\"erc20\":true,\"symbol\":\"GLQ\",\"decimals\":18},\"0xEB58343b36C7528F23CAAe63a150240241310049\":{\"name\":\"NBU\",\"logo\":\"NBU.svg\",\"erc20\":true,\"symbol\":\"NBU\",\"decimals\":18},\"0x16ECCfDbb4eE1A85A33f3A9B21175Cd7Ae753dB4\":{\"name\":\"Route\",\"logo\":\"route.svg\",\"erc20\":true,\"symbol\":\"ROUTE\",\"decimals\":18},\"0x75739d5944534115d7C54ee8C73F186D793BAE02\":{\"name\":\"Collective\",\"logo\":\"CO2.svg\",\"erc20\":true,\"symbol\":\"CO2\",\"decimals\":18},\"0x35bD01FC9d6D5D81CA9E055Db88Dc49aa2c699A8\":{\"name\":\"FWB Pro\",\"logo\":\"FWB.svg\",\"erc20\":true,\"symbol\":\"FWB\",\"decimals\":18},\"0x1C9491865a1DE77C5b6e19d2E6a5F1D7a6F2b25F\":{\"name\":\"Antimatter\",\"logo\":\"antimatter.svg\",\"erc20\":true,\"symbol\":\"MATTER\",\"decimals\":18},\"0x6De037ef9aD2725EB40118Bb1702EBb27e4Aeb24\":{\"name\":\"Render Token\",\"logo\":\"RNDR.svg\",\"erc20\":true,\"symbol\":\"RNDR\",\"decimals\":18},\"0xDf49C9f599A0A9049D97CFF34D0C30E468987389\":{\"name\":\"SaTT\",\"logo\":\"SaTT.svg\",\"erc20\":true,\"symbol\":\"SATT\",\"decimals\":18},\"0x431ad2ff6a9C365805eBaD47Ee021148d6f7DBe0\":{\"name\":\"dForce\",\"logo\":\"DF.svg\",\"erc20\":true,\"symbol\":\"DF\",\"decimals\":18},\"0x6e1A19F235bE7ED8E3369eF73b196C07257494DE\":{\"name\":\"Wrapped Filecoin\",\"logo\":\"WFIL.svg\",\"erc20\":true,\"symbol\":\"WFIL\",\"decimals\":18},\"0xE452E6Ea2dDeB012e20dB73bf5d3863A3Ac8d77a\":{\"name\":\"Wrapped Celo\",\"logo\":\"WCELO.svg\",\"erc20\":true,\"symbol\":\"wCELO\",\"decimals\":18},\"0x4A64515E5E1d1073e83f30cB97BEd20400b66E10\":{\"name\":\"Wrapped ZEC\",\"logo\":\"WZEC.svg\",\"erc20\":true,\"symbol\":\"WZEC\",\"decimals\":18},\"0xA3865E64121537b5b59B5e239Db4aCBe6F36aa74\":{\"name\":\"Wrapped Tezos\",\"logo\":\"WXTZ.svg\",\"erc20\":true,\"symbol\":\"WXTZ\",\"decimals\":18},\"0x53c4871322Bb47e7A24136fce291a6dcC832a294\":{\"name\":\"Wrapped Litecoin\",\"logo\":\"WLTC.svg\",\"erc20\":true,\"symbol\":\"WLTC\",\"decimals\":18},\"0xad3E3Fc59dff318BecEaAb7D00EB4F68b1EcF195\":{\"name\":\"Wrapped Celo USD\",\"logo\":\"WCUSD.svg\",\"erc20\":true,\"symbol\":\"wCUSD\",\"decimals\":18},\"0xBBC7f7A6AADAc103769C66CBC69AB720f7F9Eae3\":{\"name\":\"INX Token\",\"logo\":\"INX.svg\",\"erc20\":true,\"symbol\":\"INX\",\"decimals\":18},\"0x1b40183EFB4Dd766f11bDa7A7c3AD8982e998421\":{\"name\":\"Vesper\",\"logo\":\"Vesper-VSP-Token.svg\",\"erc20\":true,\"symbol\":\"VSP\",\"decimals\":18},\"0x544c42fBB96B39B21DF61cf322b5EDC285EE7429\":{\"name\":\"InsurAce\",\"logo\":\"INSUR.svg\",\"erc20\":true,\"symbol\":\"INSUR\",\"decimals\":18},\"0xcC665390b03c5D324D8fAF81C15eCee29A73bCB4\":{\"name\":\"ChainSwap.com Governance Token\",\"logo\":\"chainswap.svg\",\"erc20\":true,\"symbol\":\"ASAP\",\"decimals\":18},\"0x182F4c4C97cd1c24E1Df8FC4c053E5C47bf53Bef\":{\"name\":\"keyTango Token\",\"logo\":\"keyTango.svg\",\"erc20\":true,\"symbol\":\"TANGO\",\"decimals\":18},\"0x0275E1001e293C46CFe158B3702AADe0B99f88a5\":{\"name\":\"Oiler\",\"logo\":\"oiler.svg\",\"erc20\":true,\"symbol\":\"OIL\",\"decimals\":18},\"0xDe30da39c46104798bB5aA3fe8B9e0e1F348163F\":{\"name\":\"Gitcoin\",\"logo\":\"gtc.svg\",\"erc20\":true,\"symbol\":\"GTC\",\"decimals\":18},\"0x1796ae0b0fa4862485106a0de9b654eFE301D0b2\":{\"name\":\"Polychain Monsters\",\"logo\":\"PMON.svg\",\"erc20\":true,\"symbol\":\"PMON\",\"decimals\":18},\"0x8eEF5a82E6Aa222a60F009ac18c24EE12dBf4b41\":{\"name\":\"Tixl\",\"logo\":\"TXL.svg\",\"erc20\":true,\"symbol\":\"TXL\",\"decimals\":18},\"0x5218E472cFCFE0b64A064F055B43b4cdC9EfD3A6\":{\"name\":\"unFederalReserve Token\",\"logo\":\"eRSDL.svg\",\"erc20\":true,\"symbol\":\"eRSDL\",\"decimals\":18},\"0xE4cC5A22B39fFB0A56d67F94f9300db20D786a5F\":{\"name\":\"unFederal eRSDL\",\"logo\":\"uneRSDL.svg\",\"erc20\":true,\"symbol\":\"uneRSDL\",\"decimals\":8},\"0x2dbA05B51eF5A7DE3E7c3327201CA2F8a25C2414\":{\"name\":\"unFederal DAI\",\"logo\":\"unDAI.svg\",\"erc20\":true,\"symbol\":\"unDAI\",\"decimals\":8},\"0xFaCecE87e14B50eafc85C44C01702F5f485CA460\":{\"name\":\"unFederal ETH\",\"logo\":\"unETH.svg\",\"erc20\":true,\"symbol\":\"unETH\",\"decimals\":8},\"0x6b576972de33BebDe3A703BfF52a091e79f8c87A\":{\"name\":\"unFederal USDC\",\"logo\":\"unUSDC.svg\",\"erc20\":true,\"symbol\":\"unUSDC\",\"decimals\":8},\"0x6e2aA5bB90ac37D9006685AFc651ef067E1c7b44\":{\"name\":\"unFederal USDT\",\"logo\":\"unUSDT.svg\",\"erc20\":true,\"symbol\":\"unUSDT\",\"decimals\":8},\"0x5D446FC8DBd10EBAcfE9A427aB5402586af98cD4\":{\"name\":\"unFederal WBTC\",\"logo\":\"unWBTC.svg\",\"erc20\":true,\"symbol\":\"unWBTC\",\"decimals\":8},\"0xD837eCa6C91c67D98461A411BA2f00bdA9960a9D\":{\"name\":\"unFederal AAVE\",\"logo\":\"unAAVE.svg\",\"erc20\":true,\"symbol\":\"unAAVE\",\"decimals\":8},\"0x9e29Ce9cD25F4141dF6BB85b27Ef6933a16A5824\":{\"name\":\"unFederal YFI\",\"logo\":\"unYFI.svg\",\"erc20\":true,\"symbol\":\"unYFI\",\"decimals\":8},\"0x031002d15B0D0Cd7c9129d6F644446368deaE391\":{\"name\":\"unFederal LINK\",\"logo\":\"unLINK.svg\",\"erc20\":true,\"symbol\":\"unLINK\",\"decimals\":8},\"0xB8E2e2101eD11e9138803cd3e06e16dd19910647\":{\"name\":\"ArdCoin\",\"logo\":\"ardcoin.svg\",\"erc20\":true,\"symbol\":\"ARDX\",\"decimals\":2},\"0x6D0F5149c502faf215C89ab306ec3E50b15e2892\":{\"name\":\"Portion Token\",\"logo\":\"PRT.svg\",\"erc20\":true,\"symbol\":\"PRT\",\"decimals\":18},\"0x3845badAde8e6dFF049820680d1F14bD3903a5d0\":{\"name\":\"SAND\",\"logo\":\"SAND.svg\",\"erc20\":true,\"symbol\":\"SAND\",\"decimals\":18},\"0xcc7ab8d78dBA187dC95bF3bB86e65E0C26d0041f\":{\"name\":\"Spacelens\",\"logo\":\"SPACE.svg\",\"erc20\":true,\"symbol\":\"SPACE\",\"decimals\":18},\"0x50f5474724e0Ee42D9a4e711ccFB275809Fd6d4a\":{\"name\":\"Sandbox's LANDs\",\"logo\":\"SAND.svg\",\"erc20\":false,\"erc721\":true,\"symbol\":\"LAND\",\"decimals\":0},\"0x362bc847A3a9637d3af6624EeC853618a43ed7D2\":{\"name\":\"PARSIQ\",\"logo\":\"parsiq.svg\",\"erc20\":true,\"symbol\":\"PRQ\",\"decimals\":18},\"0x21381e026Ad6d8266244f2A583b35F9E4413FA2a\":{\"name\":\"Formation Finance\",\"logo\":\"form.svg\",\"erc20\":true,\"symbol\":\"FORM\",\"decimals\":18},\"0x2ba592F78dB6436527729929AAf6c908497cB200\":{\"name\":\"Cream\",\"logo\":\"cream.svg\",\"erc20\":true,\"symbol\":\"CREAM\",\"decimals\":18},\"0x46576e20EC5F25586A6Fa2E0d6B6058354B72E72\":{\"name\":\"Cryptomind\",\"logo\":\"CR.svg\",\"erc20\":true,\"erc721\":false,\"symbol\":\"CR\",\"decimals\":8},\"0x5ab21Ec0bfa0B29545230395e3Adaca7d552C948\":{\"name\":\"PUNKS Comic\",\"logo\":\"punks-comic.svg\",\"erc20\":false,\"erc721\":true,\"symbol\":\"COMIC\",\"decimals\":0},\"0x9C2dc0c3CC2BADdE84B0025Cf4df1c5aF288D835\":{\"name\":\"Coreto\",\"logo\":\"coreto.svg\",\"erc20\":true,\"symbol\":\"COR\",\"decimals\":18},\"0x6B4c7A5e3f0B99FCD83e9c089BDDD6c7FCe5c611\":{\"name\":\"Million\",\"logo\":\"million.svg\",\"erc20\":true,\"symbol\":\"MM\",\"decimals\":18},\"0x56d811088235F11C8920698a204A5010a788f4b3\":{\"name\":\"bZx Protocol Token (BZRX)\",\"logo\":\"ic_token_bzrx.svg\",\"erc20\":true,\"symbol\":\"BZRX\",\"decimals\":18},\"0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F\":{\"name\":\"bZx Vesting Token (vBZRX)\",\"logo\":\"ic_token_vbzrx.svg\",\"erc20\":true,\"symbol\":\"vBZRX\",\"decimals\":18},\"0xB983E01458529665007fF7E0CDdeCDB74B967Eb6\":{\"name\":\"Fulcrum ETH iToken (iETH)\",\"logo\":\"ic_token_ieth.svg\",\"erc20\":true,\"symbol\":\"iETH\",\"decimals\":18},\"0x32E4c68B3A4a813b710595AebA7f6B7604Ab9c15\":{\"name\":\"Fulcrum USDC iToken (iUSDC)\",\"logo\":\"ic_token_iusdc.svg\",\"erc20\":true,\"symbol\":\"iUSDC\",\"decimals\":6},\"0x2ffa85f655752fB2aCB210287c60b9ef335f5b6E\":{\"name\":\"Fulcrum WBTC iToken (iWBTC)\",\"logo\":\"ic_token_ibtc.svg\",\"erc20\":true,\"symbol\":\"iWBTC\",\"decimals\":8},\"0x687642347a9282Be8FD809d8309910A3f984Ac5a\":{\"name\":\"Fulcrum KNC iToken (iKNC)\",\"logo\":\"ic_token_iknc.svg\",\"erc20\":true,\"symbol\":\"iKNC\",\"decimals\":18},\"0x463538705E7d22aA7f03Ebf8ab09B067e1001B54\":{\"name\":\"Fulcrum LINK iToken (iLINK)\",\"logo\":\"ic_token_ilink.svg\",\"erc20\":true,\"symbol\":\"iLINK\",\"decimals\":18},\"0x6b093998D36f2C7F0cc359441FBB24CC629D5FF0\":{\"name\":\"Fulcrum DAI iToken (iDAI)\",\"logo\":\"ic_token_idai.svg\",\"erc20\":true,\"symbol\":\"iDAI\",\"decimals\":18},\"0x7e9997a38A439b2be7ed9c9C4628391d3e055D48\":{\"name\":\"Fulcrum USDT iToken (iUSDT)\",\"logo\":\"ic_token_iusdt.svg\",\"erc20\":true,\"symbol\":\"iUSDT\",\"decimals\":6},\"0x9189c499727f88F8eCC7dC4EEA22c828E6AaC015\":{\"name\":\"Fulcrum MKR iToken (iMKR)\",\"logo\":\"ic_token_imkr.svg\",\"erc20\":true,\"symbol\":\"iMKR\",\"decimals\":18},\"0x18240BD9C07fA6156Ce3F3f61921cC82b2619157\":{\"name\":\"Fulcrum BZRX iToken (iBZRX)\",\"logo\":\"ic_token_ibzrx.svg\",\"erc20\":true,\"symbol\":\"iBZRX\",\"decimals\":18},\"0x7F3Fe9D492A9a60aEBb06d82cBa23c6F32CAd10b\":{\"name\":\"Fulcrum YFI iToken (iYFI)\",\"logo\":\"ic_token_iyfi.svg\",\"erc20\":true,\"symbol\":\"iYFI\",\"decimals\":18},\"0x0a625FceC657053Fe2D9FFFdeb1DBb4e412Cf8A8\":{\"name\":\"Fulcrum UNI iToken (iUNI)\",\"logo\":\"ic_token_iuni.svg\",\"erc20\":true,\"symbol\":\"iUNI\",\"decimals\":18},\"0x0cae8d91E0b1b7Bd00D906E990C3625b2c220db1\":{\"name\":\"Fulcrum AAVE iToken (iAAVE)\",\"logo\":\"ic_token_iaave.svg\",\"erc20\":true,\"symbol\":\"iAAVE\",\"decimals\":18},\"0x3dA0e01472Dee3746b4D324a65D7EdFaECa9Aa4f\":{\"name\":\"Fulcrum LRC iToken (iLRC)\",\"logo\":\"ic_token_ilrc.svg\",\"erc20\":true,\"symbol\":\"iLRC\",\"decimals\":18},\"0x6d29903BC2c4318b59B35d97Ab98ab9eC08Ed70D\":{\"name\":\"Fulcrum COMP iToken (iCOMP)\",\"logo\":\"ic_token_icomp.svg\",\"erc20\":true,\"symbol\":\"iCOMP\",\"decimals\":18},\"0x08c32b0726C5684024ea6e141C50aDe9690bBdcc\":{\"name\":\"Stratos Token\",\"logo\":\"stos.svg\",\"erc20\":true,\"symbol\":\"STOS\",\"decimals\":18},\"0xe28b3B32B6c345A34Ff64674606124Dd5Aceca30\":{\"name\":\"Injective\",\"logo\":\"inj.svg\",\"erc20\":true,\"symbol\":\"INJ\",\"decimals\":18},\"0xe516D78d784C77D479977BE58905B3f2b1111126\":{\"name\":\"Bitspawn\",\"logo\":\"spwn.svg\",\"erc20\":true,\"symbol\":\"SPWN\",\"decimals\":18},\"0xB16e967ff83DE3F1e9FCeAfbc2C28c1c5c56eF91\":{\"name\":\"Polkadog\",\"logo\":\"polkadog.svg\",\"erc20\":true,\"symbol\":\"PDOG\",\"decimals\":18}}"));}}),
"[project]/node_modules/.pnpm/@metamask+contract-metadata@1.31.0/node_modules/@metamask/contract-metadata/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = __turbopack_require__("[project]/node_modules/.pnpm/@metamask+contract-metadata@1.31.0/node_modules/@metamask/contract-metadata/contract-map.json (json)");
}}),
"[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/PriorityQueue.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * This very basic implementation of a priority queue is used to select the
 * next node of the graph to walk to.
 *
 * The queue is always sorted to have the least expensive node on top.
 * Some helper methods are also implemented.
 *
 * You should **never** modify the queue directly, but only using the methods
 * provided by the class.
 */ class PriorityQueue {
    /**
   * Creates a new empty priority queue
   */ constructor(){
        // The `keys` set is used to greatly improve the speed at which we can
        // check the presence of a value in the queue
        this.keys = new Set();
        this.queue = [];
    }
    /**
   * Sort the queue to have the least expensive node to visit on top
   *
   * @private
   */ sort() {
        this.queue.sort((a, b)=>a.priority - b.priority);
    }
    /**
   * Sets a priority for a key in the queue.
   * Inserts it in the queue if it does not already exists.
   *
   * @param {any}     key       Key to update or insert
   * @param {number}  value     Priority of the key
   * @return {number} Size of the queue
   */ set(key, value) {
        const priority = Number(value);
        if (isNaN(priority)) throw new TypeError('"priority" must be a number');
        if (!this.keys.has(key)) {
            // Insert a new entry if the key is not already in the queue
            this.keys.add(key);
            this.queue.push({
                key,
                priority
            });
        } else {
            // Update the priority of an existing key
            this.queue.map((element)=>{
                if (element.key === key) {
                    Object.assign(element, {
                        priority
                    });
                }
                return element;
            });
        }
        this.sort();
        return this.queue.length;
    }
    /**
   * The next method is used to dequeue a key:
   * It removes the first element from the queue and returns it
   *
   * @return {object} First priority queue entry
   */ next() {
        const element = this.queue.shift();
        // Remove the key from the `_keys` set
        this.keys.delete(element.key);
        return element;
    }
    /**
   * @return {boolean} `true` when the queue is empty
   */ isEmpty() {
        return Boolean(this.queue.length === 0);
    }
    /**
   * Check if the queue has a key in it
   *
   * @param {any} key   Key to lookup
   * @return {boolean}
   */ has(key) {
        return this.keys.has(key);
    }
    /**
   * Get the element in the queue with the specified key
   *
   * @param {any} key   Key to lookup
   * @return {object}
   */ get(key) {
        return this.queue.find((element)=>element.key === key);
    }
}
module.exports = PriorityQueue;
}}),
"[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/removeDeepFromMap.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * Removes a key and all of its references from a map.
 * This function has no side-effects as it returns
 * a brand new map.
 *
 * @param {Map}     map - Map to remove the key from
 * @param {string}  key - Key to remove from the map
 * @return {Map}    New map without the passed key
 */ function removeDeepFromMap(map, key) {
    const newMap = new Map();
    for (const [aKey, val] of map){
        if (aKey !== key && val instanceof Map) {
            newMap.set(aKey, removeDeepFromMap(val, key));
        } else if (aKey !== key) {
            newMap.set(aKey, val);
        }
    }
    return newMap;
}
module.exports = removeDeepFromMap;
}}),
"[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/toDeepMap.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * Validates a cost for a node
 *
 * @private
 * @param {number} val - Cost to validate
 * @return {bool}
 */ function isValidNode(val) {
    const cost = Number(val);
    if (isNaN(cost) || cost <= 0) {
        return false;
    }
    return true;
}
/**
 * Creates a deep `Map` from the passed object.
 *
 * @param  {Object} source - Object to populate the map with
 * @return {Map} New map with the passed object data
 */ function toDeepMap(source) {
    const map = new Map();
    const keys = Object.keys(source);
    keys.forEach((key)=>{
        const val = source[key];
        if (val !== null && typeof val === 'object' && !Array.isArray(val)) {
            return map.set(key, toDeepMap(val));
        }
        if (!isValidNode(val)) {
            throw new Error(`Could not add node at key "${key}", make sure it's a valid node`, val);
        }
        return map.set(key, Number(val));
    });
    return map;
}
module.exports = toDeepMap;
}}),
"[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/validateDeep.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * Validate a map to ensure all it's values are either a number or a map
 *
 * @param {Map} map - Map to valiadte
 */ function validateDeep(map) {
    if (!(map instanceof Map)) {
        throw new Error(`Invalid graph: Expected Map instead found ${typeof map}`);
    }
    map.forEach((value, key)=>{
        if (typeof value === 'object' && value instanceof Map) {
            validateDeep(value);
            return;
        }
        if (typeof value !== 'number' || value <= 0) {
            throw new Error(`Values must be numbers greater than 0. Found value ${value} at ${key}`);
        }
    });
}
module.exports = validateDeep;
}}),
"[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/Graph.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const Queue = __turbopack_require__("[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/PriorityQueue.js [app-rsc] (ecmascript)");
const removeDeepFromMap = __turbopack_require__("[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/removeDeepFromMap.js [app-rsc] (ecmascript)");
const toDeepMap = __turbopack_require__("[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/toDeepMap.js [app-rsc] (ecmascript)");
const validateDeep = __turbopack_require__("[project]/node_modules/.pnpm/node-dijkstra@2.5.0/node_modules/node-dijkstra/libs/validateDeep.js [app-rsc] (ecmascript)");
/** Creates and manages a graph */ class Graph {
    /**
   * Creates a new Graph, optionally initializing it a nodes graph representation.
   *
   * A graph representation is an object that has as keys the name of the point and as values
   * the points reacheable from that node, with the cost to get there:
   *
   *     {
   *       node (Number|String): {
   *         neighbor (Number|String): cost (Number),
   *         ...,
   *       },
   *     }
   *
   * In alternative to an object, you can pass a `Map` of `Map`. This will
   * allow you to specify numbers as keys.
   *
   * @param {Objec|Map} [graph] - Initial graph definition
   * @example
   *
   * const route = new Graph();
   *
   * // Pre-populated graph
   * const route = new Graph({
   *   A: { B: 1 },
   *   B: { A: 1, C: 2, D: 4 },
   * });
   *
   * // Passing a Map
   * const g = new Map()
   *
   * const a = new Map()
   * a.set('B', 1)
   *
   * const b = new Map()
   * b.set('A', 1)
   * b.set('C', 2)
   * b.set('D', 4)
   *
   * g.set('A', a)
   * g.set('B', b)
   *
   * const route = new Graph(g)
   */ constructor(graph){
        if (graph instanceof Map) {
            validateDeep(graph);
            this.graph = graph;
        } else if (graph) {
            this.graph = toDeepMap(graph);
        } else {
            this.graph = new Map();
        }
    }
    /**
   * Adds a node to the graph
   *
   * @param {string} name      - Name of the node
   * @param {Object|Map} neighbors - Neighbouring nodes and cost to reach them
   * @return {this}
   * @example
   *
   * const route = new Graph();
   *
   * route.addNode('A', { B: 1 });
   *
   * // It's possible to chain the calls
   * route
   *   .addNode('B', { A: 1 })
   *   .addNode('C', { A: 3 });
   *
   * // The neighbors can be expressed in a Map
   * const d = new Map()
   * d.set('A', 2)
   * d.set('B', 8)
   *
   * route.addNode('D', d)
   */ addNode(name, neighbors) {
        let nodes;
        if (neighbors instanceof Map) {
            validateDeep(neighbors);
            nodes = neighbors;
        } else {
            nodes = toDeepMap(neighbors);
        }
        this.graph.set(name, nodes);
        return this;
    }
    /**
   * @deprecated since version 2.0, use `Graph#addNode` instead
   */ addVertex(name, neighbors) {
        return this.addNode(name, neighbors);
    }
    /**
   * Removes a node and all of its references from the graph
   *
   * @param {string|number} key - Key of the node to remove from the graph
   * @return {this}
   * @example
   *
   * const route = new Graph({
   *   A: { B: 1, C: 5 },
   *   B: { A: 3 },
   *   C: { B: 2, A: 2 },
   * });
   *
   * route.removeNode('C');
   * // The graph now is:
   * // { A: { B: 1 }, B: { A: 3 } }
   */ removeNode(key) {
        this.graph = removeDeepFromMap(this.graph, key);
        return this;
    }
    /**
   * Compute the shortest path between the specified nodes
   *
   * @param {string}  start     - Starting node
   * @param {string}  goal      - Node we want to reach
   * @param {object}  [options] - Options
   *
   * @param {boolean} [options.trim]    - Exclude the origin and destination nodes from the result
   * @param {boolean} [options.reverse] - Return the path in reversed order
   * @param {boolean} [options.cost]    - Also return the cost of the path when set to true
   *
   * @return {array|object} Computed path between the nodes.
   *
   *  When `option.cost` is set to true, the returned value will be an object with shape:
   *    - `path` *(Array)*: Computed path between the nodes
   *    - `cost` *(Number)*: Cost of the path
   *
   * @example
   *
   * const route = new Graph()
   *
   * route.addNode('A', { B: 1 })
   * route.addNode('B', { A: 1, C: 2, D: 4 })
   * route.addNode('C', { B: 2, D: 1 })
   * route.addNode('D', { C: 1, B: 4 })
   *
   * route.path('A', 'D') // => ['A', 'B', 'C', 'D']
   *
   * // trimmed
   * route.path('A', 'D', { trim: true }) // => [B', 'C']
   *
   * // reversed
   * route.path('A', 'D', { reverse: true }) // => ['D', 'C', 'B', 'A']
   *
   * // include the cost
   * route.path('A', 'D', { cost: true })
   * // => {
   * //       path: [ 'A', 'B', 'C', 'D' ],
   * //       cost: 4
   * //    }
   */ path(start, goal, options = {}) {
        // Don't run when we don't have nodes set
        if (!this.graph.size) {
            if (options.cost) return {
                path: null,
                cost: 0
            };
            return null;
        }
        const explored = new Set();
        const frontier = new Queue();
        const previous = new Map();
        let path = [];
        let totalCost = 0;
        let avoid = [];
        if (options.avoid) avoid = [].concat(options.avoid);
        if (avoid.includes(start)) {
            throw new Error(`Starting node (${start}) cannot be avoided`);
        } else if (avoid.includes(goal)) {
            throw new Error(`Ending node (${goal}) cannot be avoided`);
        }
        // Add the starting point to the frontier, it will be the first node visited
        frontier.set(start, 0);
        // Run until we have visited every node in the frontier
        while(!frontier.isEmpty()){
            // Get the node in the frontier with the lowest cost (`priority`)
            const node = frontier.next();
            // When the node with the lowest cost in the frontier in our goal node,
            // we can compute the path and exit the loop
            if (node.key === goal) {
                // Set the total cost to the current value
                totalCost = node.priority;
                let nodeKey = node.key;
                while(previous.has(nodeKey)){
                    path.push(nodeKey);
                    nodeKey = previous.get(nodeKey);
                }
                break;
            }
            // Add the current node to the explored set
            explored.add(node.key);
            // Loop all the neighboring nodes
            const neighbors = this.graph.get(node.key) || new Map();
            neighbors.forEach((nCost, nNode)=>{
                // If we already explored the node, or the node is to be avoided, skip it
                if (explored.has(nNode) || avoid.includes(nNode)) return null;
                // If the neighboring node is not yet in the frontier, we add it with
                // the correct cost
                if (!frontier.has(nNode)) {
                    previous.set(nNode, node.key);
                    return frontier.set(nNode, node.priority + nCost);
                }
                const frontierPriority = frontier.get(nNode).priority;
                const nodeCost = node.priority + nCost;
                // Otherwise we only update the cost of this node in the frontier when
                // it's below what's currently set
                if (nodeCost < frontierPriority) {
                    previous.set(nNode, node.key);
                    return frontier.set(nNode, nodeCost);
                }
                return null;
            });
        }
        // Return null when no path can be found
        if (!path.length) {
            if (options.cost) return {
                path: null,
                cost: 0
            };
            return null;
        }
        // From now on, keep in mind that `path` is populated in reverse order,
        // from destination to origin
        // Remove the first value (the goal node) if we want a trimmed result
        if (options.trim) {
            path.shift();
        } else {
            // Add the origin waypoint at the end of the array
            path = path.concat([
                start
            ]);
        }
        // Reverse the path if we don't want it reversed, so the result will be
        // from `start` to `goal`
        if (!options.reverse) {
            path = path.reverse();
        }
        // Return an object if we also want the cost
        if (options.cost) {
            return {
                path,
                cost: totalCost
            };
        }
        return path;
    }
    /**
   * @deprecated since version 2.0, use `Graph#path` instead
   */ shortestPath(...args) {
        return this.path(...args);
    }
}
module.exports = Graph;
}}),
"[project]/node_modules/.pnpm/jssha@2.4.2/node_modules/jssha/src/sha.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/*
 A JavaScript implementation of the SHA family of hashes, as
 defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding
 HMAC implementation as defined in FIPS PUB 198a

 Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors
 Distributed under the BSD License
 See http://caligatio.github.com/jsSHA/ for more information
*/ 'use strict';
(function(aa) {
    function C(d, b, a) {
        var h = 0, k = [], m = 0, g, l, c, f, n, q, u, r, I = !1, v = [], x = [], t, y = !1, z = !1, w = -1;
        a = a || {};
        g = a.encoding || "UTF8";
        t = a.numRounds || 1;
        if (t !== parseInt(t, 10) || 1 > t) throw Error("numRounds must a integer >= 1");
        if ("SHA-1" === d) n = 512, q = K, u = ba, f = 160, r = function(b) {
            return b.slice();
        };
        else if (0 === d.lastIndexOf("SHA-", 0)) if (q = function(b, h) {
            return L(b, h, d);
        }, u = function(b, h, k, a) {
            var e, f;
            if ("SHA-224" === d || "SHA-256" === d) e = (h + 65 >>> 9 << 4) + 15, f = 16;
            else if ("SHA-384" === d || "SHA-512" === d) e = (h + 129 >>> 10 << 5) + 31, f = 32;
            else throw Error("Unexpected error in SHA-2 implementation");
            for(; b.length <= e;)b.push(0);
            b[h >>> 5] |= 128 << 24 - h % 32;
            h = h + k;
            b[e] = h & 4294967295;
            b[e - 1] = h / 4294967296 | 0;
            k = b.length;
            for(h = 0; h < k; h += f)a = L(b.slice(h, h + f), a, d);
            if ("SHA-224" === d) b = [
                a[0],
                a[1],
                a[2],
                a[3],
                a[4],
                a[5],
                a[6]
            ];
            else if ("SHA-256" === d) b = a;
            else if ("SHA-384" === d) b = [
                a[0].a,
                a[0].b,
                a[1].a,
                a[1].b,
                a[2].a,
                a[2].b,
                a[3].a,
                a[3].b,
                a[4].a,
                a[4].b,
                a[5].a,
                a[5].b
            ];
            else if ("SHA-512" === d) b = [
                a[0].a,
                a[0].b,
                a[1].a,
                a[1].b,
                a[2].a,
                a[2].b,
                a[3].a,
                a[3].b,
                a[4].a,
                a[4].b,
                a[5].a,
                a[5].b,
                a[6].a,
                a[6].b,
                a[7].a,
                a[7].b
            ];
            else throw Error("Unexpected error in SHA-2 implementation");
            return b;
        }, r = function(b) {
            return b.slice();
        }, "SHA-224" === d) n = 512, f = 224;
        else if ("SHA-256" === d) n = 512, f = 256;
        else if ("SHA-384" === d) n = 1024, f = 384;
        else if ("SHA-512" === d) n = 1024, f = 512;
        else throw Error("Chosen SHA variant is not supported");
        else if (0 === d.lastIndexOf("SHA3-", 0) || 0 === d.lastIndexOf("SHAKE", 0)) {
            var F = 6;
            q = D;
            r = function(b) {
                var d = [], a;
                for(a = 0; 5 > a; a += 1)d[a] = b[a].slice();
                return d;
            };
            w = 1;
            if ("SHA3-224" === d) n = 1152, f = 224;
            else if ("SHA3-256" === d) n = 1088, f = 256;
            else if ("SHA3-384" === d) n = 832, f = 384;
            else if ("SHA3-512" === d) n = 576, f = 512;
            else if ("SHAKE128" === d) n = 1344, f = -1, F = 31, z = !0;
            else if ("SHAKE256" === d) n = 1088, f = -1, F = 31, z = !0;
            else throw Error("Chosen SHA variant is not supported");
            u = function(b, d, a, h, k) {
                a = n;
                var e = F, f, g = [], m = a >>> 5, l = 0, c = d >>> 5;
                for(f = 0; f < c && d >= a; f += m)h = D(b.slice(f, f + m), h), d -= a;
                b = b.slice(f);
                for(d %= a; b.length < m;)b.push(0);
                f = d >>> 3;
                b[f >> 2] ^= e << f % 4 * 8;
                b[m - 1] ^= 2147483648;
                for(h = D(b, h); 32 * g.length < k;){
                    b = h[l % 5][l / 5 | 0];
                    g.push(b.b);
                    if (32 * g.length >= k) break;
                    g.push(b.a);
                    l += 1;
                    0 === 64 * l % a && (D(null, h), l = 0);
                }
                return g;
            };
        } else throw Error("Chosen SHA variant is not supported");
        c = M(b, g, w);
        l = A(d);
        this.setHMACKey = function(b, a, k) {
            var e;
            if (!0 === I) throw Error("HMAC key already set");
            if (!0 === y) throw Error("Cannot set HMAC key after calling update");
            if (!0 === z) throw Error("SHAKE is not supported for HMAC");
            g = (k || {}).encoding || "UTF8";
            a = M(a, g, w)(b);
            b = a.binLen;
            a = a.value;
            e = n >>> 3;
            k = e / 4 - 1;
            for(e < b / 8 && (a = u(a, b, 0, A(d), f)); a.length <= k;)a.push(0);
            for(b = 0; b <= k; b += 1)v[b] = a[b] ^ 909522486, x[b] = a[b] ^ 1549556828;
            l = q(v, l);
            h = n;
            I = !0;
        };
        this.update = function(b) {
            var d, a, e, f = 0, g = n >>> 5;
            d = c(b, k, m);
            b = d.binLen;
            a = d.value;
            d = b >>> 5;
            for(e = 0; e < d; e += g)f + n <= b && (l = q(a.slice(e, e + g), l), f += n);
            h += f;
            k = a.slice(f >>> 5);
            m = b % n;
            y = !0;
        };
        this.getHash = function(b, a) {
            var e, g, c, n;
            if (!0 === I) throw Error("Cannot call getHash after setting HMAC key");
            c = N(a);
            if (!0 === z) {
                if (-1 === c.shakeLen) throw Error("shakeLen must be specified in options");
                f = c.shakeLen;
            }
            switch(b){
                case "HEX":
                    e = function(b) {
                        return O(b, f, w, c);
                    };
                    break;
                case "B64":
                    e = function(b) {
                        return P(b, f, w, c);
                    };
                    break;
                case "BYTES":
                    e = function(b) {
                        return Q(b, f, w);
                    };
                    break;
                case "ARRAYBUFFER":
                    try {
                        g = new ArrayBuffer(0);
                    } catch (p) {
                        throw Error("ARRAYBUFFER not supported by this environment");
                    }
                    e = function(b) {
                        return R(b, f, w);
                    };
                    break;
                case "UINT8ARRAY":
                    try {
                        g = new Uint8Array(0);
                    } catch (p) {
                        throw Error("UINT8ARRAY not supported by this environment");
                    }
                    e = function(b) {
                        return S(b, f, w);
                    };
                    break;
                default:
                    throw Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
            }
            n = u(k.slice(), m, h, r(l), f);
            for(g = 1; g < t; g += 1)!0 === z && 0 !== f % 32 && (n[n.length - 1] &= 16777215 >>> 24 - f % 32), n = u(n, f, 0, A(d), f);
            return e(n);
        };
        this.getHMAC = function(b, a) {
            var e, g, c, p;
            if (!1 === I) throw Error("Cannot call getHMAC without first setting HMAC key");
            c = N(a);
            switch(b){
                case "HEX":
                    e = function(b) {
                        return O(b, f, w, c);
                    };
                    break;
                case "B64":
                    e = function(b) {
                        return P(b, f, w, c);
                    };
                    break;
                case "BYTES":
                    e = function(b) {
                        return Q(b, f, w);
                    };
                    break;
                case "ARRAYBUFFER":
                    try {
                        e = new ArrayBuffer(0);
                    } catch (v) {
                        throw Error("ARRAYBUFFER not supported by this environment");
                    }
                    e = function(b) {
                        return R(b, f, w);
                    };
                    break;
                case "UINT8ARRAY":
                    try {
                        e = new Uint8Array(0);
                    } catch (v) {
                        throw Error("UINT8ARRAY not supported by this environment");
                    }
                    e = function(b) {
                        return S(b, f, w);
                    };
                    break;
                default:
                    throw Error("outputFormat must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
            }
            g = u(k.slice(), m, h, r(l), f);
            p = q(x, A(d));
            p = u(g, f, n, p, f);
            return e(p);
        };
    }
    function a(d, b) {
        this.a = d;
        this.b = b;
    }
    function T(d, b, a, h) {
        var k, m, g, l, c;
        b = b || [
            0
        ];
        a = a || 0;
        m = a >>> 3;
        c = -1 === h ? 3 : 0;
        for(k = 0; k < d.length; k += 1)l = k + m, g = l >>> 2, b.length <= g && b.push(0), b[g] |= d[k] << 8 * (c + l % 4 * h);
        return {
            value: b,
            binLen: 8 * d.length + a
        };
    }
    function O(a, b, e, h) {
        var k = "";
        b /= 8;
        var m, g, c;
        c = -1 === e ? 3 : 0;
        for(m = 0; m < b; m += 1)g = a[m >>> 2] >>> 8 * (c + m % 4 * e), k += "0123456789abcdef".charAt(g >>> 4 & 15) + "0123456789abcdef".charAt(g & 15);
        return h.outputUpper ? k.toUpperCase() : k;
    }
    function P(a, b, e, h) {
        var k = "", m = b / 8, g, c, p, f;
        f = -1 === e ? 3 : 0;
        for(g = 0; g < m; g += 3)for(c = g + 1 < m ? a[g + 1 >>> 2] : 0, p = g + 2 < m ? a[g + 2 >>> 2] : 0, p = (a[g >>> 2] >>> 8 * (f + g % 4 * e) & 255) << 16 | (c >>> 8 * (f + (g + 1) % 4 * e) & 255) << 8 | p >>> 8 * (f + (g + 2) % 4 * e) & 255, c = 0; 4 > c; c += 1)8 * g + 6 * c <= b ? k += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(p >>> 6 * (3 - c) & 63) : k += h.b64Pad;
        return k;
    }
    function Q(a, b, e) {
        var h = "";
        b /= 8;
        var k, c, g;
        g = -1 === e ? 3 : 0;
        for(k = 0; k < b; k += 1)c = a[k >>> 2] >>> 8 * (g + k % 4 * e) & 255, h += String.fromCharCode(c);
        return h;
    }
    function R(a, b, e) {
        b /= 8;
        var h, k = new ArrayBuffer(b), c, g;
        g = new Uint8Array(k);
        c = -1 === e ? 3 : 0;
        for(h = 0; h < b; h += 1)g[h] = a[h >>> 2] >>> 8 * (c + h % 4 * e) & 255;
        return k;
    }
    function S(a, b, e) {
        b /= 8;
        var h, k = new Uint8Array(b), c;
        c = -1 === e ? 3 : 0;
        for(h = 0; h < b; h += 1)k[h] = a[h >>> 2] >>> 8 * (c + h % 4 * e) & 255;
        return k;
    }
    function N(a) {
        var b = {
            outputUpper: !1,
            b64Pad: "=",
            shakeLen: -1
        };
        a = a || {};
        b.outputUpper = a.outputUpper || !1;
        !0 === a.hasOwnProperty("b64Pad") && (b.b64Pad = a.b64Pad);
        if (!0 === a.hasOwnProperty("shakeLen")) {
            if (0 !== a.shakeLen % 8) throw Error("shakeLen must be a multiple of 8");
            b.shakeLen = a.shakeLen;
        }
        if ("boolean" !== typeof b.outputUpper) throw Error("Invalid outputUpper formatting option");
        if ("string" !== typeof b.b64Pad) throw Error("Invalid b64Pad formatting option");
        return b;
    }
    function M(a, b, e) {
        switch(b){
            case "UTF8":
            case "UTF16BE":
            case "UTF16LE":
                break;
            default:
                throw Error("encoding must be UTF8, UTF16BE, or UTF16LE");
        }
        switch(a){
            case "HEX":
                a = function(b, a, d) {
                    var g = b.length, c, p, f, n, q, u;
                    if (0 !== g % 2) throw Error("String of HEX type must be in byte increments");
                    a = a || [
                        0
                    ];
                    d = d || 0;
                    q = d >>> 3;
                    u = -1 === e ? 3 : 0;
                    for(c = 0; c < g; c += 2){
                        p = parseInt(b.substr(c, 2), 16);
                        if (isNaN(p)) throw Error("String of HEX type contains invalid characters");
                        n = (c >>> 1) + q;
                        for(f = n >>> 2; a.length <= f;)a.push(0);
                        a[f] |= p << 8 * (u + n % 4 * e);
                    }
                    return {
                        value: a,
                        binLen: 4 * g + d
                    };
                };
                break;
            case "TEXT":
                a = function(a, d, c) {
                    var g, l, p = 0, f, n, q, u, r, t;
                    d = d || [
                        0
                    ];
                    c = c || 0;
                    q = c >>> 3;
                    if ("UTF8" === b) for(t = -1 === e ? 3 : 0, f = 0; f < a.length; f += 1)for(g = a.charCodeAt(f), l = [], 128 > g ? l.push(g) : 2048 > g ? (l.push(192 | g >>> 6), l.push(128 | g & 63)) : 55296 > g || 57344 <= g ? l.push(224 | g >>> 12, 128 | g >>> 6 & 63, 128 | g & 63) : (f += 1, g = 65536 + ((g & 1023) << 10 | a.charCodeAt(f) & 1023), l.push(240 | g >>> 18, 128 | g >>> 12 & 63, 128 | g >>> 6 & 63, 128 | g & 63)), n = 0; n < l.length; n += 1){
                        r = p + q;
                        for(u = r >>> 2; d.length <= u;)d.push(0);
                        d[u] |= l[n] << 8 * (t + r % 4 * e);
                        p += 1;
                    }
                    else if ("UTF16BE" === b || "UTF16LE" === b) for(t = -1 === e ? 2 : 0, l = "UTF16LE" === b && 1 !== e || "UTF16LE" !== b && 1 === e, f = 0; f < a.length; f += 1){
                        g = a.charCodeAt(f);
                        !0 === l && (n = g & 255, g = n << 8 | g >>> 8);
                        r = p + q;
                        for(u = r >>> 2; d.length <= u;)d.push(0);
                        d[u] |= g << 8 * (t + r % 4 * e);
                        p += 2;
                    }
                    return {
                        value: d,
                        binLen: 8 * p + c
                    };
                };
                break;
            case "B64":
                a = function(b, a, d) {
                    var c = 0, l, p, f, n, q, u, r, t;
                    if (-1 === b.search(/^[a-zA-Z0-9=+\/]+$/)) throw Error("Invalid character in base-64 string");
                    p = b.indexOf("=");
                    b = b.replace(/\=/g, "");
                    if (-1 !== p && p < b.length) throw Error("Invalid '=' found in base-64 string");
                    a = a || [
                        0
                    ];
                    d = d || 0;
                    u = d >>> 3;
                    t = -1 === e ? 3 : 0;
                    for(p = 0; p < b.length; p += 4){
                        q = b.substr(p, 4);
                        for(f = n = 0; f < q.length; f += 1)l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(q.charAt(f)), n |= l << 18 - 6 * f;
                        for(f = 0; f < q.length - 1; f += 1){
                            r = c + u;
                            for(l = r >>> 2; a.length <= l;)a.push(0);
                            a[l] |= (n >>> 16 - 8 * f & 255) << 8 * (t + r % 4 * e);
                            c += 1;
                        }
                    }
                    return {
                        value: a,
                        binLen: 8 * c + d
                    };
                };
                break;
            case "BYTES":
                a = function(b, a, d) {
                    var c, l, p, f, n, q;
                    a = a || [
                        0
                    ];
                    d = d || 0;
                    p = d >>> 3;
                    q = -1 === e ? 3 : 0;
                    for(l = 0; l < b.length; l += 1)c = b.charCodeAt(l), n = l + p, f = n >>> 2, a.length <= f && a.push(0), a[f] |= c << 8 * (q + n % 4 * e);
                    return {
                        value: a,
                        binLen: 8 * b.length + d
                    };
                };
                break;
            case "ARRAYBUFFER":
                try {
                    a = new ArrayBuffer(0);
                } catch (h) {
                    throw Error("ARRAYBUFFER not supported by this environment");
                }
                a = function(b, a, d) {
                    return T(new Uint8Array(b), a, d, e);
                };
                break;
            case "UINT8ARRAY":
                try {
                    a = new Uint8Array(0);
                } catch (h) {
                    throw Error("UINT8ARRAY not supported by this environment");
                }
                a = function(b, a, d) {
                    return T(b, a, d, e);
                };
                break;
            default:
                throw Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
        }
        return a;
    }
    function y(a, b) {
        return a << b | a >>> 32 - b;
    }
    function U(d, b) {
        return 32 < b ? (b -= 32, new a(d.b << b | d.a >>> 32 - b, d.a << b | d.b >>> 32 - b)) : 0 !== b ? new a(d.a << b | d.b >>> 32 - b, d.b << b | d.a >>> 32 - b) : d;
    }
    function x(a, b) {
        return a >>> b | a << 32 - b;
    }
    function t(d, b) {
        var e = null, e = new a(d.a, d.b);
        return e = 32 >= b ? new a(e.a >>> b | e.b << 32 - b & 4294967295, e.b >>> b | e.a << 32 - b & 4294967295) : new a(e.b >>> b - 32 | e.a << 64 - b & 4294967295, e.a >>> b - 32 | e.b << 64 - b & 4294967295);
    }
    function V(d, b) {
        var e = null;
        return e = 32 >= b ? new a(d.a >>> b, d.b >>> b | d.a << 32 - b & 4294967295) : new a(0, d.a >>> b - 32);
    }
    function ca(a, b, e) {
        return a & b ^ ~a & e;
    }
    function da(d, b, e) {
        return new a(d.a & b.a ^ ~d.a & e.a, d.b & b.b ^ ~d.b & e.b);
    }
    function W(a, b, e) {
        return a & b ^ a & e ^ b & e;
    }
    function ea(d, b, e) {
        return new a(d.a & b.a ^ d.a & e.a ^ b.a & e.a, d.b & b.b ^ d.b & e.b ^ b.b & e.b);
    }
    function fa(a) {
        return x(a, 2) ^ x(a, 13) ^ x(a, 22);
    }
    function ga(d) {
        var b = t(d, 28), e = t(d, 34);
        d = t(d, 39);
        return new a(b.a ^ e.a ^ d.a, b.b ^ e.b ^ d.b);
    }
    function ha(a) {
        return x(a, 6) ^ x(a, 11) ^ x(a, 25);
    }
    function ia(d) {
        var b = t(d, 14), e = t(d, 18);
        d = t(d, 41);
        return new a(b.a ^ e.a ^ d.a, b.b ^ e.b ^ d.b);
    }
    function ja(a) {
        return x(a, 7) ^ x(a, 18) ^ a >>> 3;
    }
    function ka(d) {
        var b = t(d, 1), e = t(d, 8);
        d = V(d, 7);
        return new a(b.a ^ e.a ^ d.a, b.b ^ e.b ^ d.b);
    }
    function la(a) {
        return x(a, 17) ^ x(a, 19) ^ a >>> 10;
    }
    function ma(d) {
        var b = t(d, 19), e = t(d, 61);
        d = V(d, 6);
        return new a(b.a ^ e.a ^ d.a, b.b ^ e.b ^ d.b);
    }
    function G(a, b) {
        var e = (a & 65535) + (b & 65535);
        return ((a >>> 16) + (b >>> 16) + (e >>> 16) & 65535) << 16 | e & 65535;
    }
    function na(a, b, e, h) {
        var c = (a & 65535) + (b & 65535) + (e & 65535) + (h & 65535);
        return ((a >>> 16) + (b >>> 16) + (e >>> 16) + (h >>> 16) + (c >>> 16) & 65535) << 16 | c & 65535;
    }
    function H(a, b, e, h, c) {
        var m = (a & 65535) + (b & 65535) + (e & 65535) + (h & 65535) + (c & 65535);
        return ((a >>> 16) + (b >>> 16) + (e >>> 16) + (h >>> 16) + (c >>> 16) + (m >>> 16) & 65535) << 16 | m & 65535;
    }
    function oa(d, b) {
        var e, h, c;
        e = (d.b & 65535) + (b.b & 65535);
        h = (d.b >>> 16) + (b.b >>> 16) + (e >>> 16);
        c = (h & 65535) << 16 | e & 65535;
        e = (d.a & 65535) + (b.a & 65535) + (h >>> 16);
        h = (d.a >>> 16) + (b.a >>> 16) + (e >>> 16);
        return new a((h & 65535) << 16 | e & 65535, c);
    }
    function pa(d, b, e, h) {
        var c, m, g;
        c = (d.b & 65535) + (b.b & 65535) + (e.b & 65535) + (h.b & 65535);
        m = (d.b >>> 16) + (b.b >>> 16) + (e.b >>> 16) + (h.b >>> 16) + (c >>> 16);
        g = (m & 65535) << 16 | c & 65535;
        c = (d.a & 65535) + (b.a & 65535) + (e.a & 65535) + (h.a & 65535) + (m >>> 16);
        m = (d.a >>> 16) + (b.a >>> 16) + (e.a >>> 16) + (h.a >>> 16) + (c >>> 16);
        return new a((m & 65535) << 16 | c & 65535, g);
    }
    function qa(d, b, e, h, c) {
        var m, g, l;
        m = (d.b & 65535) + (b.b & 65535) + (e.b & 65535) + (h.b & 65535) + (c.b & 65535);
        g = (d.b >>> 16) + (b.b >>> 16) + (e.b >>> 16) + (h.b >>> 16) + (c.b >>> 16) + (m >>> 16);
        l = (g & 65535) << 16 | m & 65535;
        m = (d.a & 65535) + (b.a & 65535) + (e.a & 65535) + (h.a & 65535) + (c.a & 65535) + (g >>> 16);
        g = (d.a >>> 16) + (b.a >>> 16) + (e.a >>> 16) + (h.a >>> 16) + (c.a >>> 16) + (m >>> 16);
        return new a((g & 65535) << 16 | m & 65535, l);
    }
    function B(d, b) {
        return new a(d.a ^ b.a, d.b ^ b.b);
    }
    function A(d) {
        var b = [], e;
        if ("SHA-1" === d) b = [
            1732584193,
            4023233417,
            2562383102,
            271733878,
            3285377520
        ];
        else if (0 === d.lastIndexOf("SHA-", 0)) switch(b = [
            3238371032,
            914150663,
            812702999,
            4144912697,
            4290775857,
            1750603025,
            1694076839,
            3204075428
        ], e = [
            1779033703,
            3144134277,
            1013904242,
            2773480762,
            1359893119,
            2600822924,
            528734635,
            1541459225
        ], d){
            case "SHA-224":
                break;
            case "SHA-256":
                b = e;
                break;
            case "SHA-384":
                b = [
                    new a(3418070365, b[0]),
                    new a(1654270250, b[1]),
                    new a(2438529370, b[2]),
                    new a(355462360, b[3]),
                    new a(1731405415, b[4]),
                    new a(41048885895, b[5]),
                    new a(3675008525, b[6]),
                    new a(1203062813, b[7])
                ];
                break;
            case "SHA-512":
                b = [
                    new a(e[0], 4089235720),
                    new a(e[1], 2227873595),
                    new a(e[2], 4271175723),
                    new a(e[3], 1595750129),
                    new a(e[4], 2917565137),
                    new a(e[5], 725511199),
                    new a(e[6], 4215389547),
                    new a(e[7], 327033209)
                ];
                break;
            default:
                throw Error("Unknown SHA variant");
        }
        else if (0 === d.lastIndexOf("SHA3-", 0) || 0 === d.lastIndexOf("SHAKE", 0)) for(d = 0; 5 > d; d += 1)b[d] = [
            new a(0, 0),
            new a(0, 0),
            new a(0, 0),
            new a(0, 0),
            new a(0, 0)
        ];
        else throw Error("No SHA variants supported");
        return b;
    }
    function K(a, b) {
        var e = [], h, c, m, g, l, p, f;
        h = b[0];
        c = b[1];
        m = b[2];
        g = b[3];
        l = b[4];
        for(f = 0; 80 > f; f += 1)e[f] = 16 > f ? a[f] : y(e[f - 3] ^ e[f - 8] ^ e[f - 14] ^ e[f - 16], 1), p = 20 > f ? H(y(h, 5), c & m ^ ~c & g, l, 1518500249, e[f]) : 40 > f ? H(y(h, 5), c ^ m ^ g, l, 1859775393, e[f]) : 60 > f ? H(y(h, 5), W(c, m, g), l, 2400959708, e[f]) : H(y(h, 5), c ^ m ^ g, l, 3395469782, e[f]), l = g, g = m, m = y(c, 30), c = h, h = p;
        b[0] = G(h, b[0]);
        b[1] = G(c, b[1]);
        b[2] = G(m, b[2]);
        b[3] = G(g, b[3]);
        b[4] = G(l, b[4]);
        return b;
    }
    function ba(a, b, e, c) {
        var k;
        for(k = (b + 65 >>> 9 << 4) + 15; a.length <= k;)a.push(0);
        a[b >>> 5] |= 128 << 24 - b % 32;
        b += e;
        a[k] = b & 4294967295;
        a[k - 1] = b / 4294967296 | 0;
        b = a.length;
        for(k = 0; k < b; k += 16)c = K(a.slice(k, k + 16), c);
        return c;
    }
    function L(d, b, e) {
        var h, k, m, g, l, p, f, n, q, u, r, t, v, x, y, A, z, w, F, B, C, D, E = [], J;
        if ("SHA-224" === e || "SHA-256" === e) u = 64, t = 1, D = Number, v = G, x = na, y = H, A = ja, z = la, w = fa, F = ha, C = W, B = ca, J = c;
        else if ("SHA-384" === e || "SHA-512" === e) u = 80, t = 2, D = a, v = oa, x = pa, y = qa, A = ka, z = ma, w = ga, F = ia, C = ea, B = da, J = X;
        else throw Error("Unexpected error in SHA-2 implementation");
        e = b[0];
        h = b[1];
        k = b[2];
        m = b[3];
        g = b[4];
        l = b[5];
        p = b[6];
        f = b[7];
        for(r = 0; r < u; r += 1)16 > r ? (q = r * t, n = d.length <= q ? 0 : d[q], q = d.length <= q + 1 ? 0 : d[q + 1], E[r] = new D(n, q)) : E[r] = x(z(E[r - 2]), E[r - 7], A(E[r - 15]), E[r - 16]), n = y(f, F(g), B(g, l, p), J[r], E[r]), q = v(w(e), C(e, h, k)), f = p, p = l, l = g, g = v(m, n), m = k, k = h, h = e, e = v(n, q);
        b[0] = v(e, b[0]);
        b[1] = v(h, b[1]);
        b[2] = v(k, b[2]);
        b[3] = v(m, b[3]);
        b[4] = v(g, b[4]);
        b[5] = v(l, b[5]);
        b[6] = v(p, b[6]);
        b[7] = v(f, b[7]);
        return b;
    }
    function D(d, b) {
        var e, c, k, m, g = [], l = [];
        if (null !== d) for(c = 0; c < d.length; c += 2)b[(c >>> 1) % 5][(c >>> 1) / 5 | 0] = B(b[(c >>> 1) % 5][(c >>> 1) / 5 | 0], new a(d[c + 1], d[c]));
        for(e = 0; 24 > e; e += 1){
            m = A("SHA3-");
            for(c = 0; 5 > c; c += 1){
                k = b[c][0];
                var p = b[c][1], f = b[c][2], n = b[c][3], q = b[c][4];
                g[c] = new a(k.a ^ p.a ^ f.a ^ n.a ^ q.a, k.b ^ p.b ^ f.b ^ n.b ^ q.b);
            }
            for(c = 0; 5 > c; c += 1)l[c] = B(g[(c + 4) % 5], U(g[(c + 1) % 5], 1));
            for(c = 0; 5 > c; c += 1)for(k = 0; 5 > k; k += 1)b[c][k] = B(b[c][k], l[c]);
            for(c = 0; 5 > c; c += 1)for(k = 0; 5 > k; k += 1)m[k][(2 * c + 3 * k) % 5] = U(b[c][k], Y[c][k]);
            for(c = 0; 5 > c; c += 1)for(k = 0; 5 > k; k += 1)b[c][k] = B(m[c][k], new a(~m[(c + 1) % 5][k].a & m[(c + 2) % 5][k].a, ~m[(c + 1) % 5][k].b & m[(c + 2) % 5][k].b));
            b[0][0] = B(b[0][0], Z[e]);
        }
        return b;
    }
    var c, X, Y, Z;
    c = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
    ];
    X = [
        new a(c[0], 3609767458),
        new a(c[1], 602891725),
        new a(c[2], 3964484399),
        new a(c[3], 2173295548),
        new a(c[4], 4081628472),
        new a(c[5], 3053834265),
        new a(c[6], 2937671579),
        new a(c[7], 3664609560),
        new a(c[8], 2734883394),
        new a(c[9], 1164996542),
        new a(c[10], 1323610764),
        new a(c[11], 3590304994),
        new a(c[12], 4068182383),
        new a(c[13], 991336113),
        new a(c[14], 633803317),
        new a(c[15], 3479774868),
        new a(c[16], 2666613458),
        new a(c[17], 944711139),
        new a(c[18], 2341262773),
        new a(c[19], 2007800933),
        new a(c[20], 1495990901),
        new a(c[21], 1856431235),
        new a(c[22], 3175218132),
        new a(c[23], 2198950837),
        new a(c[24], 3999719339),
        new a(c[25], 766784016),
        new a(c[26], 2566594879),
        new a(c[27], 3203337956),
        new a(c[28], 1034457026),
        new a(c[29], 2466948901),
        new a(c[30], 3758326383),
        new a(c[31], 168717936),
        new a(c[32], 1188179964),
        new a(c[33], 1546045734),
        new a(c[34], 1522805485),
        new a(c[35], 2643833823),
        new a(c[36], 2343527390),
        new a(c[37], 1014477480),
        new a(c[38], 1206759142),
        new a(c[39], 344077627),
        new a(c[40], 1290863460),
        new a(c[41], 3158454273),
        new a(c[42], 3505952657),
        new a(c[43], 106217008),
        new a(c[44], 3606008344),
        new a(c[45], 1432725776),
        new a(c[46], 1467031594),
        new a(c[47], 851169720),
        new a(c[48], 3100823752),
        new a(c[49], 1363258195),
        new a(c[50], 3750685593),
        new a(c[51], 3785050280),
        new a(c[52], 3318307427),
        new a(c[53], 3812723403),
        new a(c[54], 2003034995),
        new a(c[55], 3602036899),
        new a(c[56], 1575990012),
        new a(c[57], 1125592928),
        new a(c[58], 2716904306),
        new a(c[59], 442776044),
        new a(c[60], 593698344),
        new a(c[61], 3733110249),
        new a(c[62], 2999351573),
        new a(c[63], 3815920427),
        new a(3391569614, 3928383900),
        new a(3515267271, 566280711),
        new a(3940187606, 3454069534),
        new a(4118630271, 4000239992),
        new a(116418474, 1914138554),
        new a(174292421, 2731055270),
        new a(289380356, 3203993006),
        new a(460393269, 320620315),
        new a(685471733, 587496836),
        new a(852142971, 1086792851),
        new a(1017036298, 365543100),
        new a(1126000580, 2618297676),
        new a(1288033470, 3409855158),
        new a(1501505948, 4234509866),
        new a(1607167915, 987167468),
        new a(1816402316, 1246189591)
    ];
    Z = [
        new a(0, 1),
        new a(0, 32898),
        new a(2147483648, 32906),
        new a(2147483648, 2147516416),
        new a(0, 32907),
        new a(0, 2147483649),
        new a(2147483648, 2147516545),
        new a(2147483648, 32777),
        new a(0, 138),
        new a(0, 136),
        new a(0, 2147516425),
        new a(0, 2147483658),
        new a(0, 2147516555),
        new a(2147483648, 139),
        new a(2147483648, 32905),
        new a(2147483648, 32771),
        new a(2147483648, 32770),
        new a(2147483648, 128),
        new a(0, 32778),
        new a(2147483648, 2147483658),
        new a(2147483648, 2147516545),
        new a(2147483648, 32896),
        new a(0, 2147483649),
        new a(2147483648, 2147516424)
    ];
    Y = [
        [
            0,
            36,
            3,
            41,
            18
        ],
        [
            1,
            44,
            10,
            45,
            2
        ],
        [
            62,
            6,
            43,
            15,
            61
        ],
        [
            28,
            55,
            25,
            21,
            56
        ],
        [
            27,
            20,
            39,
            8,
            14
        ]
    ];
    "function" === typeof define && define.amd ? ((r)=>r !== undefined && __turbopack_export_value__(r))(function() {
        return C;
    }(__turbopack_require__, exports, module)) : "undefined" !== typeof exports ? ("undefined" !== ("TURBOPACK compile-time value", "object") && module.exports && (module.exports = C), exports = C) : aa.jsSHA = C;
})(this);
}}),
"[project]/node_modules/.pnpm/js-sha512@0.8.0/node_modules/js-sha512/src/sha512.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/*
 * [js-sha512]{@link https://github.com/emn178/js-sha512}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2018
 * @license MIT
 */ /*jslint bitwise: true */ (function() {
    'use strict';
    var INPUT_ERROR = 'input is invalid type';
    var FINALIZE_ERROR = 'finalize already called';
    var WINDOW = "undefined" === 'object';
    var root = ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : {};
    if (root.JS_SHA512_NO_WINDOW) {
        WINDOW = false;
    }
    var WEB_WORKER = !WINDOW && typeof self === 'object';
    var NODE_JS = !root.JS_SHA512_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
    if (NODE_JS) {
        root = global;
    } else if (WEB_WORKER) {
        root = self;
    }
    var COMMON_JS = !root.JS_SHA512_NO_COMMON_JS && ("TURBOPACK compile-time value", "object") === 'object' && module.exports;
    var AMD = typeof define === 'function' && define.amd;
    var ARRAY_BUFFER = !root.JS_SHA512_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
    var HEX_CHARS = '0123456789abcdef'.split('');
    var EXTRA = [
        -2147483648,
        8388608,
        32768,
        128
    ];
    var SHIFT = [
        24,
        16,
        8,
        0
    ];
    var K = [
        0x428A2F98,
        0xD728AE22,
        0x71374491,
        0x23EF65CD,
        0xB5C0FBCF,
        0xEC4D3B2F,
        0xE9B5DBA5,
        0x8189DBBC,
        0x3956C25B,
        0xF348B538,
        0x59F111F1,
        0xB605D019,
        0x923F82A4,
        0xAF194F9B,
        0xAB1C5ED5,
        0xDA6D8118,
        0xD807AA98,
        0xA3030242,
        0x12835B01,
        0x45706FBE,
        0x243185BE,
        0x4EE4B28C,
        0x550C7DC3,
        0xD5FFB4E2,
        0x72BE5D74,
        0xF27B896F,
        0x80DEB1FE,
        0x3B1696B1,
        0x9BDC06A7,
        0x25C71235,
        0xC19BF174,
        0xCF692694,
        0xE49B69C1,
        0x9EF14AD2,
        0xEFBE4786,
        0x384F25E3,
        0x0FC19DC6,
        0x8B8CD5B5,
        0x240CA1CC,
        0x77AC9C65,
        0x2DE92C6F,
        0x592B0275,
        0x4A7484AA,
        0x6EA6E483,
        0x5CB0A9DC,
        0xBD41FBD4,
        0x76F988DA,
        0x831153B5,
        0x983E5152,
        0xEE66DFAB,
        0xA831C66D,
        0x2DB43210,
        0xB00327C8,
        0x98FB213F,
        0xBF597FC7,
        0xBEEF0EE4,
        0xC6E00BF3,
        0x3DA88FC2,
        0xD5A79147,
        0x930AA725,
        0x06CA6351,
        0xE003826F,
        0x14292967,
        0x0A0E6E70,
        0x27B70A85,
        0x46D22FFC,
        0x2E1B2138,
        0x5C26C926,
        0x4D2C6DFC,
        0x5AC42AED,
        0x53380D13,
        0x9D95B3DF,
        0x650A7354,
        0x8BAF63DE,
        0x766A0ABB,
        0x3C77B2A8,
        0x81C2C92E,
        0x47EDAEE6,
        0x92722C85,
        0x1482353B,
        0xA2BFE8A1,
        0x4CF10364,
        0xA81A664B,
        0xBC423001,
        0xC24B8B70,
        0xD0F89791,
        0xC76C51A3,
        0x0654BE30,
        0xD192E819,
        0xD6EF5218,
        0xD6990624,
        0x5565A910,
        0xF40E3585,
        0x5771202A,
        0x106AA070,
        0x32BBD1B8,
        0x19A4C116,
        0xB8D2D0C8,
        0x1E376C08,
        0x5141AB53,
        0x2748774C,
        0xDF8EEB99,
        0x34B0BCB5,
        0xE19B48A8,
        0x391C0CB3,
        0xC5C95A63,
        0x4ED8AA4A,
        0xE3418ACB,
        0x5B9CCA4F,
        0x7763E373,
        0x682E6FF3,
        0xD6B2B8A3,
        0x748F82EE,
        0x5DEFB2FC,
        0x78A5636F,
        0x43172F60,
        0x84C87814,
        0xA1F0AB72,
        0x8CC70208,
        0x1A6439EC,
        0x90BEFFFA,
        0x23631E28,
        0xA4506CEB,
        0xDE82BDE9,
        0xBEF9A3F7,
        0xB2C67915,
        0xC67178F2,
        0xE372532B,
        0xCA273ECE,
        0xEA26619C,
        0xD186B8C7,
        0x21C0C207,
        0xEADA7DD6,
        0xCDE0EB1E,
        0xF57D4F7F,
        0xEE6ED178,
        0x06F067AA,
        0x72176FBA,
        0x0A637DC5,
        0xA2C898A6,
        0x113F9804,
        0xBEF90DAE,
        0x1B710B35,
        0x131C471B,
        0x28DB77F5,
        0x23047D84,
        0x32CAAB7B,
        0x40C72493,
        0x3C9EBE0A,
        0x15C9BEBC,
        0x431D67C4,
        0x9C100D4C,
        0x4CC5D4BE,
        0xCB3E42B6,
        0x597F299C,
        0xFC657E2A,
        0x5FCB6FAB,
        0x3AD6FAEC,
        0x6C44198C,
        0x4A475817
    ];
    var OUTPUT_TYPES = [
        'hex',
        'array',
        'digest',
        'arrayBuffer'
    ];
    var blocks = [];
    if (root.JS_SHA512_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function(obj) {
            return Object.prototype.toString.call(obj) === '[object Array]';
        };
    }
    if (ARRAY_BUFFER && (root.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function(obj) {
            return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
    }
    var createOutputMethod = function(outputType, bits) {
        return function(message) {
            return new Sha512(bits, true).update(message)[outputType]();
        };
    };
    var createMethod = function(bits) {
        var method = createOutputMethod('hex', bits);
        method.create = function() {
            return new Sha512(bits);
        };
        method.update = function(message) {
            return method.create().update(message);
        };
        for(var i = 0; i < OUTPUT_TYPES.length; ++i){
            var type = OUTPUT_TYPES[i];
            method[type] = createOutputMethod(type, bits);
        }
        return method;
    };
    var createHmacOutputMethod = function(outputType, bits) {
        return function(key, message) {
            return new HmacSha512(key, bits, true).update(message)[outputType]();
        };
    };
    var createHmacMethod = function(bits) {
        var method = createHmacOutputMethod('hex', bits);
        method.create = function(key) {
            return new HmacSha512(key, bits);
        };
        method.update = function(key, message) {
            return method.create(key).update(message);
        };
        for(var i = 0; i < OUTPUT_TYPES.length; ++i){
            var type = OUTPUT_TYPES[i];
            method[type] = createHmacOutputMethod(type, bits);
        }
        return method;
    };
    function Sha512(bits, sharedMemory) {
        if (sharedMemory) {
            blocks[0] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = blocks[16] = blocks[17] = blocks[18] = blocks[19] = blocks[20] = blocks[21] = blocks[22] = blocks[23] = blocks[24] = blocks[25] = blocks[26] = blocks[27] = blocks[28] = blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;
            this.blocks = blocks;
        } else {
            this.blocks = [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ];
        }
        if (bits == 384) {
            this.h0h = 0xCBBB9D5D;
            this.h0l = 0xC1059ED8;
            this.h1h = 0x629A292A;
            this.h1l = 0x367CD507;
            this.h2h = 0x9159015A;
            this.h2l = 0x3070DD17;
            this.h3h = 0x152FECD8;
            this.h3l = 0xF70E5939;
            this.h4h = 0x67332667;
            this.h4l = 0xFFC00B31;
            this.h5h = 0x8EB44A87;
            this.h5l = 0x68581511;
            this.h6h = 0xDB0C2E0D;
            this.h6l = 0x64F98FA7;
            this.h7h = 0x47B5481D;
            this.h7l = 0xBEFA4FA4;
        } else if (bits == 256) {
            this.h0h = 0x22312194;
            this.h0l = 0xFC2BF72C;
            this.h1h = 0x9F555FA3;
            this.h1l = 0xC84C64C2;
            this.h2h = 0x2393B86B;
            this.h2l = 0x6F53B151;
            this.h3h = 0x96387719;
            this.h3l = 0x5940EABD;
            this.h4h = 0x96283EE2;
            this.h4l = 0xA88EFFE3;
            this.h5h = 0xBE5E1E25;
            this.h5l = 0x53863992;
            this.h6h = 0x2B0199FC;
            this.h6l = 0x2C85B8AA;
            this.h7h = 0x0EB72DDC;
            this.h7l = 0x81C52CA2;
        } else if (bits == 224) {
            this.h0h = 0x8C3D37C8;
            this.h0l = 0x19544DA2;
            this.h1h = 0x73E19966;
            this.h1l = 0x89DCD4D6;
            this.h2h = 0x1DFAB7AE;
            this.h2l = 0x32FF9C82;
            this.h3h = 0x679DD514;
            this.h3l = 0x582F9FCF;
            this.h4h = 0x0F6D2B69;
            this.h4l = 0x7BD44DA8;
            this.h5h = 0x77E36F73;
            this.h5l = 0x04C48942;
            this.h6h = 0x3F9D85A8;
            this.h6l = 0x6A1D36C8;
            this.h7h = 0x1112E6AD;
            this.h7l = 0x91D692A1;
        } else {
            this.h0h = 0x6A09E667;
            this.h0l = 0xF3BCC908;
            this.h1h = 0xBB67AE85;
            this.h1l = 0x84CAA73B;
            this.h2h = 0x3C6EF372;
            this.h2l = 0xFE94F82B;
            this.h3h = 0xA54FF53A;
            this.h3l = 0x5F1D36F1;
            this.h4h = 0x510E527F;
            this.h4l = 0xADE682D1;
            this.h5h = 0x9B05688C;
            this.h5l = 0x2B3E6C1F;
            this.h6h = 0x1F83D9AB;
            this.h6l = 0xFB41BD6B;
            this.h7h = 0x5BE0CD19;
            this.h7l = 0x137E2179;
        }
        this.bits = bits;
        this.block = this.start = this.bytes = this.hBytes = 0;
        this.finalized = this.hashed = false;
    }
    Sha512.prototype.update = function(message) {
        if (this.finalized) {
            throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== 'string') {
            if (type === 'object') {
                if (message === null) {
                    throw new Error(INPUT_ERROR);
                } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
                    message = new Uint8Array(message);
                } else if (!Array.isArray(message)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                        throw new Error(INPUT_ERROR);
                    }
                }
            } else {
                throw new Error(INPUT_ERROR);
            }
            notString = true;
        }
        var code, index = 0, i, length = message.length, blocks = this.blocks;
        while(index < length){
            if (this.hashed) {
                this.hashed = false;
                blocks[0] = this.block;
                blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = blocks[16] = blocks[17] = blocks[18] = blocks[19] = blocks[20] = blocks[21] = blocks[22] = blocks[23] = blocks[24] = blocks[25] = blocks[26] = blocks[27] = blocks[28] = blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;
            }
            if (notString) {
                for(i = this.start; index < length && i < 128; ++index){
                    blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
                }
            } else {
                for(i = this.start; index < length && i < 128; ++index){
                    code = message.charCodeAt(index);
                    if (code < 0x80) {
                        blocks[i >> 2] |= code << SHIFT[i++ & 3];
                    } else if (code < 0x800) {
                        blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                    } else if (code < 0xd800 || code >= 0xe000) {
                        blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                    } else {
                        code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);
                        blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                    }
                }
            }
            this.lastByteIndex = i;
            this.bytes += i - this.start;
            if (i >= 128) {
                this.block = blocks[32];
                this.start = i - 128;
                this.hash();
                this.hashed = true;
            } else {
                this.start = i;
            }
        }
        if (this.bytes > 4294967295) {
            this.hBytes += this.bytes / 4294967296 << 0;
            this.bytes = this.bytes % 4294967296;
        }
        return this;
    };
    Sha512.prototype.finalize = function() {
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        var blocks = this.blocks, i = this.lastByteIndex;
        blocks[32] = this.block;
        blocks[i >> 2] |= EXTRA[i & 3];
        this.block = blocks[32];
        if (i >= 112) {
            if (!this.hashed) {
                this.hash();
            }
            blocks[0] = this.block;
            blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = blocks[16] = blocks[17] = blocks[18] = blocks[19] = blocks[20] = blocks[21] = blocks[22] = blocks[23] = blocks[24] = blocks[25] = blocks[26] = blocks[27] = blocks[28] = blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;
        }
        blocks[30] = this.hBytes << 3 | this.bytes >>> 29;
        blocks[31] = this.bytes << 3;
        this.hash();
    };
    Sha512.prototype.hash = function() {
        var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l, h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l, h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l, h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l, blocks = this.blocks, j, s0h, s0l, s1h, s1l, c1, c2, c3, c4, abh, abl, dah, dal, cdh, cdl, bch, bcl, majh, majl, t1h, t1l, t2h, t2l, chh, chl;
        for(j = 32; j < 160; j += 2){
            t1h = blocks[j - 30];
            t1l = blocks[j - 29];
            s0h = (t1h >>> 1 | t1l << 31) ^ (t1h >>> 8 | t1l << 24) ^ t1h >>> 7;
            s0l = (t1l >>> 1 | t1h << 31) ^ (t1l >>> 8 | t1h << 24) ^ (t1l >>> 7 | t1h << 25);
            t1h = blocks[j - 4];
            t1l = blocks[j - 3];
            s1h = (t1h >>> 19 | t1l << 13) ^ (t1l >>> 29 | t1h << 3) ^ t1h >>> 6;
            s1l = (t1l >>> 19 | t1h << 13) ^ (t1h >>> 29 | t1l << 3) ^ (t1l >>> 6 | t1h << 26);
            t1h = blocks[j - 32];
            t1l = blocks[j - 31];
            t2h = blocks[j - 14];
            t2l = blocks[j - 13];
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (s0l & 0xFFFF) + (s1l & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (s0l >>> 16) + (s1l >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (s0h & 0xFFFF) + (s1h & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (s0h >>> 16) + (s1h >>> 16) + (c3 >>> 16);
            blocks[j] = c4 << 16 | c3 & 0xFFFF;
            blocks[j + 1] = c2 << 16 | c1 & 0xFFFF;
        }
        var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;
        bch = bh & ch;
        bcl = bl & cl;
        for(j = 0; j < 160; j += 8){
            s0h = (ah >>> 28 | al << 4) ^ (al >>> 2 | ah << 30) ^ (al >>> 7 | ah << 25);
            s0l = (al >>> 28 | ah << 4) ^ (ah >>> 2 | al << 30) ^ (ah >>> 7 | al << 25);
            s1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (el >>> 9 | eh << 23);
            s1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (eh >>> 9 | el << 23);
            abh = ah & bh;
            abl = al & bl;
            majh = abh ^ ah & ch ^ bch;
            majl = abl ^ al & cl ^ bcl;
            chh = eh & fh ^ ~eh & gh;
            chl = el & fl ^ ~el & gl;
            t1h = blocks[j];
            t1l = blocks[j + 1];
            t2h = K[j];
            t2l = K[j + 1];
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (hl & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (hl >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (hh & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (hh >>> 16) + (c3 >>> 16);
            t1h = c4 << 16 | c3 & 0xFFFF;
            t1l = c2 << 16 | c1 & 0xFFFF;
            c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);
            c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);
            c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);
            c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);
            t2h = c4 << 16 | c3 & 0xFFFF;
            t2l = c2 << 16 | c1 & 0xFFFF;
            c1 = (dl & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (dl >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (dh & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (dh >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            hh = c4 << 16 | c3 & 0xFFFF;
            hl = c2 << 16 | c1 & 0xFFFF;
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            dh = c4 << 16 | c3 & 0xFFFF;
            dl = c2 << 16 | c1 & 0xFFFF;
            s0h = (dh >>> 28 | dl << 4) ^ (dl >>> 2 | dh << 30) ^ (dl >>> 7 | dh << 25);
            s0l = (dl >>> 28 | dh << 4) ^ (dh >>> 2 | dl << 30) ^ (dh >>> 7 | dl << 25);
            s1h = (hh >>> 14 | hl << 18) ^ (hh >>> 18 | hl << 14) ^ (hl >>> 9 | hh << 23);
            s1l = (hl >>> 14 | hh << 18) ^ (hl >>> 18 | hh << 14) ^ (hh >>> 9 | hl << 23);
            dah = dh & ah;
            dal = dl & al;
            majh = dah ^ dh & bh ^ abh;
            majl = dal ^ dl & bl ^ abl;
            chh = hh & eh ^ ~hh & fh;
            chl = hl & el ^ ~hl & fl;
            t1h = blocks[j + 2];
            t1l = blocks[j + 3];
            t2h = K[j + 2];
            t2l = K[j + 3];
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (gl & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (gl >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (gh & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (gh >>> 16) + (c3 >>> 16);
            t1h = c4 << 16 | c3 & 0xFFFF;
            t1l = c2 << 16 | c1 & 0xFFFF;
            c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);
            c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);
            c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);
            c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);
            t2h = c4 << 16 | c3 & 0xFFFF;
            t2l = c2 << 16 | c1 & 0xFFFF;
            c1 = (cl & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (cl >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (ch & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (ch >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            gh = c4 << 16 | c3 & 0xFFFF;
            gl = c2 << 16 | c1 & 0xFFFF;
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            ch = c4 << 16 | c3 & 0xFFFF;
            cl = c2 << 16 | c1 & 0xFFFF;
            s0h = (ch >>> 28 | cl << 4) ^ (cl >>> 2 | ch << 30) ^ (cl >>> 7 | ch << 25);
            s0l = (cl >>> 28 | ch << 4) ^ (ch >>> 2 | cl << 30) ^ (ch >>> 7 | cl << 25);
            s1h = (gh >>> 14 | gl << 18) ^ (gh >>> 18 | gl << 14) ^ (gl >>> 9 | gh << 23);
            s1l = (gl >>> 14 | gh << 18) ^ (gl >>> 18 | gh << 14) ^ (gh >>> 9 | gl << 23);
            cdh = ch & dh;
            cdl = cl & dl;
            majh = cdh ^ ch & ah ^ dah;
            majl = cdl ^ cl & al ^ dal;
            chh = gh & hh ^ ~gh & eh;
            chl = gl & hl ^ ~gl & el;
            t1h = blocks[j + 4];
            t1l = blocks[j + 5];
            t2h = K[j + 4];
            t2l = K[j + 5];
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (fl & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (fl >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (fh & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (fh >>> 16) + (c3 >>> 16);
            t1h = c4 << 16 | c3 & 0xFFFF;
            t1l = c2 << 16 | c1 & 0xFFFF;
            c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);
            c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);
            c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);
            c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);
            t2h = c4 << 16 | c3 & 0xFFFF;
            t2l = c2 << 16 | c1 & 0xFFFF;
            c1 = (bl & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (bl >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (bh & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (bh >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            fh = c4 << 16 | c3 & 0xFFFF;
            fl = c2 << 16 | c1 & 0xFFFF;
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            bh = c4 << 16 | c3 & 0xFFFF;
            bl = c2 << 16 | c1 & 0xFFFF;
            s0h = (bh >>> 28 | bl << 4) ^ (bl >>> 2 | bh << 30) ^ (bl >>> 7 | bh << 25);
            s0l = (bl >>> 28 | bh << 4) ^ (bh >>> 2 | bl << 30) ^ (bh >>> 7 | bl << 25);
            s1h = (fh >>> 14 | fl << 18) ^ (fh >>> 18 | fl << 14) ^ (fl >>> 9 | fh << 23);
            s1l = (fl >>> 14 | fh << 18) ^ (fl >>> 18 | fh << 14) ^ (fh >>> 9 | fl << 23);
            bch = bh & ch;
            bcl = bl & cl;
            majh = bch ^ bh & dh ^ cdh;
            majl = bcl ^ bl & dl ^ cdl;
            chh = fh & gh ^ ~fh & hh;
            chl = fl & gl ^ ~fl & hl;
            t1h = blocks[j + 6];
            t1l = blocks[j + 7];
            t2h = K[j + 6];
            t2l = K[j + 7];
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (el & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (el >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (eh & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (eh >>> 16) + (c3 >>> 16);
            t1h = c4 << 16 | c3 & 0xFFFF;
            t1l = c2 << 16 | c1 & 0xFFFF;
            c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);
            c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);
            c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);
            c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);
            t2h = c4 << 16 | c3 & 0xFFFF;
            t2l = c2 << 16 | c1 & 0xFFFF;
            c1 = (al & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (al >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (ah & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (ah >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            eh = c4 << 16 | c3 & 0xFFFF;
            el = c2 << 16 | c1 & 0xFFFF;
            c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);
            c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);
            c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);
            c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);
            ah = c4 << 16 | c3 & 0xFFFF;
            al = c2 << 16 | c1 & 0xFFFF;
        }
        c1 = (h0l & 0xFFFF) + (al & 0xFFFF);
        c2 = (h0l >>> 16) + (al >>> 16) + (c1 >>> 16);
        c3 = (h0h & 0xFFFF) + (ah & 0xFFFF) + (c2 >>> 16);
        c4 = (h0h >>> 16) + (ah >>> 16) + (c3 >>> 16);
        this.h0h = c4 << 16 | c3 & 0xFFFF;
        this.h0l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h1l & 0xFFFF) + (bl & 0xFFFF);
        c2 = (h1l >>> 16) + (bl >>> 16) + (c1 >>> 16);
        c3 = (h1h & 0xFFFF) + (bh & 0xFFFF) + (c2 >>> 16);
        c4 = (h1h >>> 16) + (bh >>> 16) + (c3 >>> 16);
        this.h1h = c4 << 16 | c3 & 0xFFFF;
        this.h1l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h2l & 0xFFFF) + (cl & 0xFFFF);
        c2 = (h2l >>> 16) + (cl >>> 16) + (c1 >>> 16);
        c3 = (h2h & 0xFFFF) + (ch & 0xFFFF) + (c2 >>> 16);
        c4 = (h2h >>> 16) + (ch >>> 16) + (c3 >>> 16);
        this.h2h = c4 << 16 | c3 & 0xFFFF;
        this.h2l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h3l & 0xFFFF) + (dl & 0xFFFF);
        c2 = (h3l >>> 16) + (dl >>> 16) + (c1 >>> 16);
        c3 = (h3h & 0xFFFF) + (dh & 0xFFFF) + (c2 >>> 16);
        c4 = (h3h >>> 16) + (dh >>> 16) + (c3 >>> 16);
        this.h3h = c4 << 16 | c3 & 0xFFFF;
        this.h3l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h4l & 0xFFFF) + (el & 0xFFFF);
        c2 = (h4l >>> 16) + (el >>> 16) + (c1 >>> 16);
        c3 = (h4h & 0xFFFF) + (eh & 0xFFFF) + (c2 >>> 16);
        c4 = (h4h >>> 16) + (eh >>> 16) + (c3 >>> 16);
        this.h4h = c4 << 16 | c3 & 0xFFFF;
        this.h4l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h5l & 0xFFFF) + (fl & 0xFFFF);
        c2 = (h5l >>> 16) + (fl >>> 16) + (c1 >>> 16);
        c3 = (h5h & 0xFFFF) + (fh & 0xFFFF) + (c2 >>> 16);
        c4 = (h5h >>> 16) + (fh >>> 16) + (c3 >>> 16);
        this.h5h = c4 << 16 | c3 & 0xFFFF;
        this.h5l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h6l & 0xFFFF) + (gl & 0xFFFF);
        c2 = (h6l >>> 16) + (gl >>> 16) + (c1 >>> 16);
        c3 = (h6h & 0xFFFF) + (gh & 0xFFFF) + (c2 >>> 16);
        c4 = (h6h >>> 16) + (gh >>> 16) + (c3 >>> 16);
        this.h6h = c4 << 16 | c3 & 0xFFFF;
        this.h6l = c2 << 16 | c1 & 0xFFFF;
        c1 = (h7l & 0xFFFF) + (hl & 0xFFFF);
        c2 = (h7l >>> 16) + (hl >>> 16) + (c1 >>> 16);
        c3 = (h7h & 0xFFFF) + (hh & 0xFFFF) + (c2 >>> 16);
        c4 = (h7h >>> 16) + (hh >>> 16) + (c3 >>> 16);
        this.h7h = c4 << 16 | c3 & 0xFFFF;
        this.h7l = c2 << 16 | c1 & 0xFFFF;
    };
    Sha512.prototype.hex = function() {
        this.finalize();
        var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l, h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l, h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l, h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l, bits = this.bits;
        var hex = HEX_CHARS[h0h >> 28 & 0x0F] + HEX_CHARS[h0h >> 24 & 0x0F] + HEX_CHARS[h0h >> 20 & 0x0F] + HEX_CHARS[h0h >> 16 & 0x0F] + HEX_CHARS[h0h >> 12 & 0x0F] + HEX_CHARS[h0h >> 8 & 0x0F] + HEX_CHARS[h0h >> 4 & 0x0F] + HEX_CHARS[h0h & 0x0F] + HEX_CHARS[h0l >> 28 & 0x0F] + HEX_CHARS[h0l >> 24 & 0x0F] + HEX_CHARS[h0l >> 20 & 0x0F] + HEX_CHARS[h0l >> 16 & 0x0F] + HEX_CHARS[h0l >> 12 & 0x0F] + HEX_CHARS[h0l >> 8 & 0x0F] + HEX_CHARS[h0l >> 4 & 0x0F] + HEX_CHARS[h0l & 0x0F] + HEX_CHARS[h1h >> 28 & 0x0F] + HEX_CHARS[h1h >> 24 & 0x0F] + HEX_CHARS[h1h >> 20 & 0x0F] + HEX_CHARS[h1h >> 16 & 0x0F] + HEX_CHARS[h1h >> 12 & 0x0F] + HEX_CHARS[h1h >> 8 & 0x0F] + HEX_CHARS[h1h >> 4 & 0x0F] + HEX_CHARS[h1h & 0x0F] + HEX_CHARS[h1l >> 28 & 0x0F] + HEX_CHARS[h1l >> 24 & 0x0F] + HEX_CHARS[h1l >> 20 & 0x0F] + HEX_CHARS[h1l >> 16 & 0x0F] + HEX_CHARS[h1l >> 12 & 0x0F] + HEX_CHARS[h1l >> 8 & 0x0F] + HEX_CHARS[h1l >> 4 & 0x0F] + HEX_CHARS[h1l & 0x0F] + HEX_CHARS[h2h >> 28 & 0x0F] + HEX_CHARS[h2h >> 24 & 0x0F] + HEX_CHARS[h2h >> 20 & 0x0F] + HEX_CHARS[h2h >> 16 & 0x0F] + HEX_CHARS[h2h >> 12 & 0x0F] + HEX_CHARS[h2h >> 8 & 0x0F] + HEX_CHARS[h2h >> 4 & 0x0F] + HEX_CHARS[h2h & 0x0F] + HEX_CHARS[h2l >> 28 & 0x0F] + HEX_CHARS[h2l >> 24 & 0x0F] + HEX_CHARS[h2l >> 20 & 0x0F] + HEX_CHARS[h2l >> 16 & 0x0F] + HEX_CHARS[h2l >> 12 & 0x0F] + HEX_CHARS[h2l >> 8 & 0x0F] + HEX_CHARS[h2l >> 4 & 0x0F] + HEX_CHARS[h2l & 0x0F] + HEX_CHARS[h3h >> 28 & 0x0F] + HEX_CHARS[h3h >> 24 & 0x0F] + HEX_CHARS[h3h >> 20 & 0x0F] + HEX_CHARS[h3h >> 16 & 0x0F] + HEX_CHARS[h3h >> 12 & 0x0F] + HEX_CHARS[h3h >> 8 & 0x0F] + HEX_CHARS[h3h >> 4 & 0x0F] + HEX_CHARS[h3h & 0x0F];
        if (bits >= 256) {
            hex += HEX_CHARS[h3l >> 28 & 0x0F] + HEX_CHARS[h3l >> 24 & 0x0F] + HEX_CHARS[h3l >> 20 & 0x0F] + HEX_CHARS[h3l >> 16 & 0x0F] + HEX_CHARS[h3l >> 12 & 0x0F] + HEX_CHARS[h3l >> 8 & 0x0F] + HEX_CHARS[h3l >> 4 & 0x0F] + HEX_CHARS[h3l & 0x0F];
        }
        if (bits >= 384) {
            hex += HEX_CHARS[h4h >> 28 & 0x0F] + HEX_CHARS[h4h >> 24 & 0x0F] + HEX_CHARS[h4h >> 20 & 0x0F] + HEX_CHARS[h4h >> 16 & 0x0F] + HEX_CHARS[h4h >> 12 & 0x0F] + HEX_CHARS[h4h >> 8 & 0x0F] + HEX_CHARS[h4h >> 4 & 0x0F] + HEX_CHARS[h4h & 0x0F] + HEX_CHARS[h4l >> 28 & 0x0F] + HEX_CHARS[h4l >> 24 & 0x0F] + HEX_CHARS[h4l >> 20 & 0x0F] + HEX_CHARS[h4l >> 16 & 0x0F] + HEX_CHARS[h4l >> 12 & 0x0F] + HEX_CHARS[h4l >> 8 & 0x0F] + HEX_CHARS[h4l >> 4 & 0x0F] + HEX_CHARS[h4l & 0x0F] + HEX_CHARS[h5h >> 28 & 0x0F] + HEX_CHARS[h5h >> 24 & 0x0F] + HEX_CHARS[h5h >> 20 & 0x0F] + HEX_CHARS[h5h >> 16 & 0x0F] + HEX_CHARS[h5h >> 12 & 0x0F] + HEX_CHARS[h5h >> 8 & 0x0F] + HEX_CHARS[h5h >> 4 & 0x0F] + HEX_CHARS[h5h & 0x0F] + HEX_CHARS[h5l >> 28 & 0x0F] + HEX_CHARS[h5l >> 24 & 0x0F] + HEX_CHARS[h5l >> 20 & 0x0F] + HEX_CHARS[h5l >> 16 & 0x0F] + HEX_CHARS[h5l >> 12 & 0x0F] + HEX_CHARS[h5l >> 8 & 0x0F] + HEX_CHARS[h5l >> 4 & 0x0F] + HEX_CHARS[h5l & 0x0F];
        }
        if (bits == 512) {
            hex += HEX_CHARS[h6h >> 28 & 0x0F] + HEX_CHARS[h6h >> 24 & 0x0F] + HEX_CHARS[h6h >> 20 & 0x0F] + HEX_CHARS[h6h >> 16 & 0x0F] + HEX_CHARS[h6h >> 12 & 0x0F] + HEX_CHARS[h6h >> 8 & 0x0F] + HEX_CHARS[h6h >> 4 & 0x0F] + HEX_CHARS[h6h & 0x0F] + HEX_CHARS[h6l >> 28 & 0x0F] + HEX_CHARS[h6l >> 24 & 0x0F] + HEX_CHARS[h6l >> 20 & 0x0F] + HEX_CHARS[h6l >> 16 & 0x0F] + HEX_CHARS[h6l >> 12 & 0x0F] + HEX_CHARS[h6l >> 8 & 0x0F] + HEX_CHARS[h6l >> 4 & 0x0F] + HEX_CHARS[h6l & 0x0F] + HEX_CHARS[h7h >> 28 & 0x0F] + HEX_CHARS[h7h >> 24 & 0x0F] + HEX_CHARS[h7h >> 20 & 0x0F] + HEX_CHARS[h7h >> 16 & 0x0F] + HEX_CHARS[h7h >> 12 & 0x0F] + HEX_CHARS[h7h >> 8 & 0x0F] + HEX_CHARS[h7h >> 4 & 0x0F] + HEX_CHARS[h7h & 0x0F] + HEX_CHARS[h7l >> 28 & 0x0F] + HEX_CHARS[h7l >> 24 & 0x0F] + HEX_CHARS[h7l >> 20 & 0x0F] + HEX_CHARS[h7l >> 16 & 0x0F] + HEX_CHARS[h7l >> 12 & 0x0F] + HEX_CHARS[h7l >> 8 & 0x0F] + HEX_CHARS[h7l >> 4 & 0x0F] + HEX_CHARS[h7l & 0x0F];
        }
        return hex;
    };
    Sha512.prototype.toString = Sha512.prototype.hex;
    Sha512.prototype.digest = function() {
        this.finalize();
        var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l, h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l, h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l, h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l, bits = this.bits;
        var arr = [
            h0h >> 24 & 0xFF,
            h0h >> 16 & 0xFF,
            h0h >> 8 & 0xFF,
            h0h & 0xFF,
            h0l >> 24 & 0xFF,
            h0l >> 16 & 0xFF,
            h0l >> 8 & 0xFF,
            h0l & 0xFF,
            h1h >> 24 & 0xFF,
            h1h >> 16 & 0xFF,
            h1h >> 8 & 0xFF,
            h1h & 0xFF,
            h1l >> 24 & 0xFF,
            h1l >> 16 & 0xFF,
            h1l >> 8 & 0xFF,
            h1l & 0xFF,
            h2h >> 24 & 0xFF,
            h2h >> 16 & 0xFF,
            h2h >> 8 & 0xFF,
            h2h & 0xFF,
            h2l >> 24 & 0xFF,
            h2l >> 16 & 0xFF,
            h2l >> 8 & 0xFF,
            h2l & 0xFF,
            h3h >> 24 & 0xFF,
            h3h >> 16 & 0xFF,
            h3h >> 8 & 0xFF,
            h3h & 0xFF
        ];
        if (bits >= 256) {
            arr.push(h3l >> 24 & 0xFF, h3l >> 16 & 0xFF, h3l >> 8 & 0xFF, h3l & 0xFF);
        }
        if (bits >= 384) {
            arr.push(h4h >> 24 & 0xFF, h4h >> 16 & 0xFF, h4h >> 8 & 0xFF, h4h & 0xFF, h4l >> 24 & 0xFF, h4l >> 16 & 0xFF, h4l >> 8 & 0xFF, h4l & 0xFF, h5h >> 24 & 0xFF, h5h >> 16 & 0xFF, h5h >> 8 & 0xFF, h5h & 0xFF, h5l >> 24 & 0xFF, h5l >> 16 & 0xFF, h5l >> 8 & 0xFF, h5l & 0xFF);
        }
        if (bits == 512) {
            arr.push(h6h >> 24 & 0xFF, h6h >> 16 & 0xFF, h6h >> 8 & 0xFF, h6h & 0xFF, h6l >> 24 & 0xFF, h6l >> 16 & 0xFF, h6l >> 8 & 0xFF, h6l & 0xFF, h7h >> 24 & 0xFF, h7h >> 16 & 0xFF, h7h >> 8 & 0xFF, h7h & 0xFF, h7l >> 24 & 0xFF, h7l >> 16 & 0xFF, h7l >> 8 & 0xFF, h7l & 0xFF);
        }
        return arr;
    };
    Sha512.prototype.array = Sha512.prototype.digest;
    Sha512.prototype.arrayBuffer = function() {
        this.finalize();
        var bits = this.bits;
        var buffer = new ArrayBuffer(bits / 8);
        var dataView = new DataView(buffer);
        dataView.setUint32(0, this.h0h);
        dataView.setUint32(4, this.h0l);
        dataView.setUint32(8, this.h1h);
        dataView.setUint32(12, this.h1l);
        dataView.setUint32(16, this.h2h);
        dataView.setUint32(20, this.h2l);
        dataView.setUint32(24, this.h3h);
        if (bits >= 256) {
            dataView.setUint32(28, this.h3l);
        }
        if (bits >= 384) {
            dataView.setUint32(32, this.h4h);
            dataView.setUint32(36, this.h4l);
            dataView.setUint32(40, this.h5h);
            dataView.setUint32(44, this.h5l);
        }
        if (bits == 512) {
            dataView.setUint32(48, this.h6h);
            dataView.setUint32(52, this.h6l);
            dataView.setUint32(56, this.h7h);
            dataView.setUint32(60, this.h7l);
        }
        return buffer;
    };
    Sha512.prototype.clone = function() {
        var hash = new Sha512(this.bits, false);
        this.copyTo(hash);
        return hash;
    };
    Sha512.prototype.copyTo = function(hash) {
        var i = 0, attrs = [
            'h0h',
            'h0l',
            'h1h',
            'h1l',
            'h2h',
            'h2l',
            'h3h',
            'h3l',
            'h4h',
            'h4l',
            'h5h',
            'h5l',
            'h6h',
            'h6l',
            'h7h',
            'h7l',
            'start',
            'bytes',
            'hBytes',
            'finalized',
            'hashed',
            'lastByteIndex'
        ];
        for(i = 0; i < attrs.length; ++i){
            hash[attrs[i]] = this[attrs[i]];
        }
        for(i = 0; i < this.blocks.length; ++i){
            hash.blocks[i] = this.blocks[i];
        }
    };
    function HmacSha512(key, bits, sharedMemory) {
        var notString, type = typeof key;
        if (type !== 'string') {
            if (type === 'object') {
                if (key === null) {
                    throw new Error(INPUT_ERROR);
                } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {
                    key = new Uint8Array(key);
                } else if (!Array.isArray(key)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {
                        throw new Error(INPUT_ERROR);
                    }
                }
            } else {
                throw new Error(INPUT_ERROR);
            }
            notString = true;
        }
        var length = key.length;
        if (!notString) {
            var bytes = [], length = key.length, index = 0, code;
            for(var i = 0; i < length; ++i){
                code = key.charCodeAt(i);
                if (code < 0x80) {
                    bytes[index++] = code;
                } else if (code < 0x800) {
                    bytes[index++] = 0xc0 | code >> 6;
                    bytes[index++] = 0x80 | code & 0x3f;
                } else if (code < 0xd800 || code >= 0xe000) {
                    bytes[index++] = 0xe0 | code >> 12;
                    bytes[index++] = 0x80 | code >> 6 & 0x3f;
                    bytes[index++] = 0x80 | code & 0x3f;
                } else {
                    code = 0x10000 + ((code & 0x3ff) << 10 | key.charCodeAt(++i) & 0x3ff);
                    bytes[index++] = 0xf0 | code >> 18;
                    bytes[index++] = 0x80 | code >> 12 & 0x3f;
                    bytes[index++] = 0x80 | code >> 6 & 0x3f;
                    bytes[index++] = 0x80 | code & 0x3f;
                }
            }
            key = bytes;
        }
        if (key.length > 128) {
            key = new Sha512(bits, true).update(key).array();
        }
        var oKeyPad = [], iKeyPad = [];
        for(var i = 0; i < 128; ++i){
            var b = key[i] || 0;
            oKeyPad[i] = 0x5c ^ b;
            iKeyPad[i] = 0x36 ^ b;
        }
        Sha512.call(this, bits, sharedMemory);
        this.update(iKeyPad);
        this.oKeyPad = oKeyPad;
        this.inner = true;
        this.sharedMemory = sharedMemory;
    }
    HmacSha512.prototype = new Sha512();
    HmacSha512.prototype.finalize = function() {
        Sha512.prototype.finalize.call(this);
        if (this.inner) {
            this.inner = false;
            var innerHash = this.array();
            Sha512.call(this, this.bits, this.sharedMemory);
            this.update(this.oKeyPad);
            this.update(innerHash);
            Sha512.prototype.finalize.call(this);
        }
    };
    HmacSha512.prototype.clone = function() {
        var hash = new HmacSha512([], this.bits, false);
        this.copyTo(hash);
        hash.inner = this.inner;
        for(var i = 0; i < this.oKeyPad.length; ++i){
            hash.oKeyPad[i] = this.oKeyPad[i];
        }
        return hash;
    };
    var exports = createMethod(512);
    exports.sha512 = exports;
    exports.sha384 = createMethod(384);
    exports.sha512_256 = createMethod(256);
    exports.sha512_224 = createMethod(224);
    exports.sha512.hmac = createHmacMethod(512);
    exports.sha384.hmac = createHmacMethod(384);
    exports.sha512_256.hmac = createHmacMethod(256);
    exports.sha512_224.hmac = createHmacMethod(224);
    if (COMMON_JS) {
        module.exports = exports;
    } else {
        root.sha512 = exports.sha512;
        root.sha384 = exports.sha384;
        root.sha512_256 = exports.sha512_256;
        root.sha512_224 = exports.sha512_224;
        if (AMD) {
            ((r)=>r !== undefined && __turbopack_export_value__(r))(function() {
                return exports;
            }(__turbopack_require__, exports, module));
        }
    }
})();
}}),
"[project]/node_modules/.pnpm/browserify-bignum@1.3.0-2/node_modules/browserify-bignum/bignumber.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/* bignumber.js v1.3.0 https://github.com/MikeMcl/bignumber.js/LICENCE */ /*jslint bitwise: true, eqeq: true, plusplus: true, sub: true, white: true, maxerr: 500 */ /*global module */ /*
  bignumber.js v1.3.0
  A JavaScript library for arbitrary-precision arithmetic.
  https://github.com/MikeMcl/bignumber.js
  Copyright (c) 2012 Michael Mclaughlin <M8ch88l@gmail.com>
  MIT Expat Licence
*/ /*********************************** DEFAULTS ************************************/ /*
 * The default values below must be integers within the stated ranges (inclusive).
 * Most of these values can be changed during run-time using BigNumber.config().
 */ /*
 * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP,
 * MAX_EXP, and the argument to toFixed, toPrecision and toExponential, beyond
 * which an exception is thrown (if ERRORS is true).
 */ var MAX = 1E9, // Limit of magnitude of exponent argument to toPower.
MAX_POWER = 1E6, // The maximum number of decimal places for operations involving division.
DECIMAL_PLACES = 20, /*
     * The rounding mode used when rounding to the above decimal places, and when
     * using toFixed, toPrecision and toExponential, and round (default value).
     * UP         0 Away from zero.
     * DOWN       1 Towards zero.
     * CEIL       2 Towards +Infinity.
     * FLOOR      3 Towards -Infinity.
     * HALF_UP    4 Towards nearest neighbour. If equidistant, up.
     * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
     * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
     * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
     * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
     */ ROUNDING_MODE = 4, // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]
// The exponent value at and beneath which toString returns exponential notation.
// Number type: -7
TO_EXP_NEG = -7, // The exponent value at and above which toString returns exponential notation.
// Number type: 21
TO_EXP_POS = 21, // RANGE : [MIN_EXP, MAX_EXP]
// The minimum exponent value, beneath which underflow to zero occurs.
// Number type: -324  (5e-324)
MIN_EXP = -MAX, // The maximum exponent value, above which overflow to Infinity occurs.
// Number type:  308  (1.7976931348623157e+308)
MAX_EXP = MAX, // Whether BigNumber Errors are ever thrown.
// CHANGE parseInt to parseFloat if changing ERRORS to false.
ERRORS = true, parse = parseInt, /***********************************************************************************/ P = BigNumber.prototype, DIGITS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_', outOfRange, id = 0, isValid = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, trim = String.prototype.trim || function() {
    return this.replace(/^\s+|\s+$/g, '');
}, ONE = BigNumber(1);
// CONSTRUCTOR
/*
 * The exported function.
 * Create and return a new instance of a BigNumber object.
 *
 * n {number|string|BigNumber} A numeric value.
 * [b] {number} The base of n. Integer, 2 to 64 inclusive.
 */ function BigNumber(n, b) {
    var e, i, isNum, digits, valid, orig, x = this;
    // Enable constructor usage without new.
    if (!(x instanceof BigNumber)) {
        return new BigNumber(n, b);
    }
    // Duplicate.
    if (n instanceof BigNumber) {
        id = 0;
        // e is undefined.
        if (b !== e) {
            n += '';
        } else {
            x['s'] = n['s'];
            x['e'] = n['e'];
            x['c'] = (n = n['c']) ? n.slice() : n;
            return;
        }
    }
    // If number, check if minus zero.
    if (typeof n != 'string') {
        n = (isNum = typeof n == 'number' || Object.prototype.toString.call(n) == '[object Number]') && n === 0 && 1 / n < 0 ? '-0' : n + '';
    }
    orig = n;
    if (b === e && isValid.test(n)) {
        // Determine sign.
        x['s'] = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;
    // Either n is not a valid BigNumber or a base has been specified.
    } else {
        // Enable exponential notation to be used with base 10 argument.
        // Ensure return value is rounded to DECIMAL_PLACES as with other bases.
        if (b == 10) {
            return setMode(n, DECIMAL_PLACES, ROUNDING_MODE);
        }
        n = trim.call(n).replace(/^\+(?!-)/, '');
        x['s'] = n.charAt(0) == '-' ? (n = n.replace(/^-(?!-)/, ''), -1) : 1;
        if (b != null) {
            if ((b == (b | 0) || !ERRORS) && !(outOfRange = !(b >= 2 && b < 65))) {
                digits = '[' + DIGITS.slice(0, b = b | 0) + ']+';
                // Before non-decimal number validity test and base conversion
                // remove the `.` from e.g. '1.', and replace e.g. '.1' with '0.1'.
                n = n.replace(/\.$/, '').replace(/^\./, '0.');
                // Any number in exponential form will fail due to the e+/-.
                if (valid = new RegExp('^' + digits + '(?:\\.' + digits + ')?$', b < 37 ? 'i' : '').test(n)) {
                    if (isNum) {
                        if (n.replace(/^0\.0*|\./, '').length > 15) {
                            // 'new BigNumber() number type has more than 15 significant digits: {n}'
                            ifExceptionsThrow(orig, 0);
                        }
                        // Prevent later check for length on converted number.
                        isNum = !isNum;
                    }
                    n = convert(n, 10, b, x['s']);
                } else if (n != 'Infinity' && n != 'NaN') {
                    // 'new BigNumber() not a base {b} number: {n}'
                    ifExceptionsThrow(orig, 1, b);
                    n = 'NaN';
                }
            } else {
                // 'new BigNumber() base not an integer: {b}'
                // 'new BigNumber() base out of range: {b}'
                ifExceptionsThrow(b, 2);
                // Ignore base.
                valid = isValid.test(n);
            }
        } else {
            valid = isValid.test(n);
        }
        if (!valid) {
            // Infinity/NaN
            x['c'] = x['e'] = null;
            // NaN
            if (n != 'Infinity') {
                // No exception on NaN.
                if (n != 'NaN') {
                    // 'new BigNumber() not a number: {n}'
                    ifExceptionsThrow(orig, 3);
                }
                x['s'] = null;
            }
            id = 0;
            return;
        }
    }
    // Decimal point?
    if ((e = n.indexOf('.')) > -1) {
        n = n.replace('.', '');
    }
    // Exponential form?
    if ((i = n.search(/e/i)) > 0) {
        // Determine exponent.
        if (e < 0) {
            e = i;
        }
        e += +n.slice(i + 1);
        n = n.substring(0, i);
    } else if (e < 0) {
        // Integer.
        e = n.length;
    }
    // Determine leading zeros.
    for(i = 0; n.charAt(i) == '0'; i++){}
    b = n.length;
    // Disallow numbers with over 15 significant digits if number type.
    if (isNum && b > 15 && n.slice(i).length > 15) {
        // 'new BigNumber() number type has more than 15 significant digits: {n}'
        ifExceptionsThrow(orig, 0);
    }
    id = 0;
    // Overflow?
    if ((e -= i + 1) > MAX_EXP) {
        // Infinity.
        x['c'] = x['e'] = null;
    // Zero or underflow?
    } else if (i == b || e < MIN_EXP) {
        // Zero.
        x['c'] = [
            x['e'] = 0
        ];
    } else {
        // Determine trailing zeros.
        for(; n.charAt(--b) == '0';){}
        x['e'] = e;
        x['c'] = [];
        // Convert string to array of digits (without leading and trailing zeros).
        for(e = 0; i <= b; x['c'][e++] = +n.charAt(i++)){}
    }
}
// CONSTRUCTOR PROPERTIES/METHODS
BigNumber['ROUND_UP'] = 0;
BigNumber['ROUND_DOWN'] = 1;
BigNumber['ROUND_CEIL'] = 2;
BigNumber['ROUND_FLOOR'] = 3;
BigNumber['ROUND_HALF_UP'] = 4;
BigNumber['ROUND_HALF_DOWN'] = 5;
BigNumber['ROUND_HALF_EVEN'] = 6;
BigNumber['ROUND_HALF_CEIL'] = 7;
BigNumber['ROUND_HALF_FLOOR'] = 8;
/*
 * Create an instance from a Buffer
 */ BigNumber['fromBuffer'] = function(buf, opts) {
    if (!opts) opts = {};
    var endian = {
        1: 'big',
        '-1': 'little'
    }[opts.endian] || opts.endian || 'big';
    var size = opts.size === 'auto' ? Math.ceil(buf.length) : opts.size || 1;
    if (buf.length % size !== 0) {
        throw new RangeError('Buffer length (' + buf.length + ')' + ' must be a multiple of size (' + size + ')');
    }
    var hex = [];
    for(var i = 0; i < buf.length; i += size){
        var chunk = [];
        for(var j = 0; j < size; j++){
            chunk.push(buf[i + (endian === 'big' ? j : size - j - 1)]);
        }
        hex.push(chunk.map(function(c) {
            return (c < 16 ? '0' : '') + c.toString(16);
        }).join(''));
    }
    return BigNumber(hex.join(''), 16);
};
/*
 * Configure infrequently-changing library-wide settings.
 *
 * Accept an object or an argument list, with one or many of the following
 * properties or parameters respectively:
 * [ DECIMAL_PLACES [, ROUNDING_MODE [, EXPONENTIAL_AT [, RANGE [, ERRORS ]]]]]
 *
 * E.g.
 * BigNumber.config(20, 4) is equivalent to
 * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
 * Ignore properties/parameters set to null or undefined.
 *
 * Return an object with the properties current values.
 */ BigNumber['config'] = function() {
    var v, p, i = 0, r = {}, a = arguments, o = a[0], c = 'config', inRange = function(n, lo, hi) {
        return !((outOfRange = n < lo || n > hi) || parse(n) != n && n !== 0);
    }, has = o && typeof o == 'object' ? function() {
        if (o.hasOwnProperty(p)) return (v = o[p]) != null;
    } : function() {
        if (a.length > i) return (v = a[i++]) != null;
    };
    // [DECIMAL_PLACES] {number} Integer, 0 to MAX inclusive.
    if (has(p = 'DECIMAL_PLACES')) {
        if (inRange(v, 0, MAX)) {
            DECIMAL_PLACES = v | 0;
        } else {
            // 'config() DECIMAL_PLACES not an integer: {v}'
            // 'config() DECIMAL_PLACES out of range: {v}'
            ifExceptionsThrow(v, p, c);
        }
    }
    r[p] = DECIMAL_PLACES;
    // [ROUNDING_MODE] {number} Integer, 0 to 8 inclusive.
    if (has(p = 'ROUNDING_MODE')) {
        if (inRange(v, 0, 8)) {
            ROUNDING_MODE = v | 0;
        } else {
            // 'config() ROUNDING_MODE not an integer: {v}'
            // 'config() ROUNDING_MODE out of range: {v}'
            ifExceptionsThrow(v, p, c);
        }
    }
    r[p] = ROUNDING_MODE;
    /*
     * [EXPONENTIAL_AT] {number|number[]} Integer, -MAX to MAX inclusive or
     * [ integer -MAX to 0 inclusive, 0 to MAX inclusive ].
     */ if (has(p = 'EXPONENTIAL_AT')) {
        if (inRange(v, -MAX, MAX)) {
            TO_EXP_NEG = -(TO_EXP_POS = ~~(v < 0 ? -v : +v));
        } else if (!outOfRange && v && inRange(v[0], -MAX, 0) && inRange(v[1], 0, MAX)) {
            TO_EXP_NEG = ~~v[0];
            TO_EXP_POS = ~~v[1];
        } else {
            // 'config() EXPONENTIAL_AT not an integer or not [integer, integer]: {v}'
            // 'config() EXPONENTIAL_AT out of range or not [negative, positive: {v}'
            ifExceptionsThrow(v, p, c, 1);
        }
    }
    r[p] = [
        TO_EXP_NEG,
        TO_EXP_POS
    ];
    /*
     * [RANGE][ {number|number[]} Non-zero integer, -MAX to MAX inclusive or
     * [ integer -MAX to -1 inclusive, integer 1 to MAX inclusive ].
     */ if (has(p = 'RANGE')) {
        if (inRange(v, -MAX, MAX) && ~~v) {
            MIN_EXP = -(MAX_EXP = ~~(v < 0 ? -v : +v));
        } else if (!outOfRange && v && inRange(v[0], -MAX, -1) && inRange(v[1], 1, MAX)) {
            MIN_EXP = ~~v[0], MAX_EXP = ~~v[1];
        } else {
            // 'config() RANGE not a non-zero integer or not [integer, integer]: {v}'
            // 'config() RANGE out of range or not [negative, positive: {v}'
            ifExceptionsThrow(v, p, c, 1, 1);
        }
    }
    r[p] = [
        MIN_EXP,
        MAX_EXP
    ];
    // [ERRORS] {boolean|number} true, false, 1 or 0.
    if (has(p = 'ERRORS')) {
        if (v === !!v || v === 1 || v === 0) {
            parse = (outOfRange = id = 0, ERRORS = !!v) ? parseInt : parseFloat;
        } else {
            // 'config() ERRORS not a boolean or binary digit: {v}'
            ifExceptionsThrow(v, p, c, 0, 0, 1);
        }
    }
    r[p] = ERRORS;
    return r;
};
// PRIVATE FUNCTIONS
// Assemble error messages. Throw BigNumber Errors.
function ifExceptionsThrow(arg, i, j, isArray, isRange, isErrors) {
    if (ERRORS) {
        var error, method = [
            'new BigNumber',
            'cmp',
            'div',
            'eq',
            'gt',
            'gte',
            'lt',
            'lte',
            'minus',
            'mod',
            'plus',
            'times',
            'toFr'
        ][id ? id < 0 ? -id : id : 1 / id < 0 ? 1 : 0] + '()', message = outOfRange ? ' out of range' : ' not a' + (isRange ? ' non-zero' : 'n') + ' integer';
        message = ([
            method + ' number type has more than 15 significant digits',
            method + ' not a base ' + j + ' number',
            method + ' base' + message,
            method + ' not a number'
        ][i] || j + '() ' + i + (isErrors ? ' not a boolean or binary digit' : message + (isArray ? ' or not [' + (outOfRange ? ' negative, positive' : ' integer, integer') + ' ]' : ''))) + ': ' + arg;
        outOfRange = id = 0;
        error = new Error(message);
        error['name'] = 'BigNumber Error';
        throw error;
    }
}
/*
 * Convert a numeric string of baseIn to a numeric string of baseOut.
 */ function convert(nStr, baseOut, baseIn, sign) {
    var e, dvs, dvd, nArr, fracArr, fracBN;
    // Convert string of base bIn to an array of numbers of baseOut.
    // Eg. strToArr('255', 10) where baseOut is 16, returns [15, 15].
    // Eg. strToArr('ff', 16)  where baseOut is 10, returns [2, 5, 5].
    function strToArr(str, bIn) {
        var j, i = 0, strL = str.length, arrL, arr = [
            0
        ];
        for(bIn = bIn || baseIn; i < strL; i++){
            for(arrL = arr.length, j = 0; j < arrL; arr[j] *= bIn, j++){}
            for(arr[0] += DIGITS.indexOf(str.charAt(i)), j = 0; j < arr.length; j++){
                if (arr[j] > baseOut - 1) {
                    if (arr[j + 1] == null) {
                        arr[j + 1] = 0;
                    }
                    arr[j + 1] += arr[j] / baseOut ^ 0;
                    arr[j] %= baseOut;
                }
            }
        }
        return arr.reverse();
    }
    // Convert array to string.
    // E.g. arrToStr( [9, 10, 11] ) becomes '9ab' (in bases above 11).
    function arrToStr(arr) {
        var i = 0, arrL = arr.length, str = '';
        for(; i < arrL; str += DIGITS.charAt(arr[i++])){}
        return str;
    }
    if (baseIn < 37) {
        nStr = nStr.toLowerCase();
    }
    /*
     * If non-integer convert integer part and fraction part separately.
     * Convert the fraction part as if it is an integer than use division to
     * reduce it down again to a value less than one.
     */ if ((e = nStr.indexOf('.')) > -1) {
        /*
         * Calculate the power to which to raise the base to get the number
         * to divide the fraction part by after it has been converted as an
         * integer to the required base.
         */ e = nStr.length - e - 1;
        // Use toFixed to avoid possible exponential notation.
        dvs = strToArr(new BigNumber(baseIn)['pow'](e)['toF'](), 10);
        nArr = nStr.split('.');
        // Convert the base of the fraction part (as integer).
        dvd = strToArr(nArr[1]);
        // Convert the base of the integer part.
        nArr = strToArr(nArr[0]);
        // Result will be a BigNumber with a value less than 1.
        fracBN = divide(dvd, dvs, dvd.length - dvs.length, sign, baseOut, // Is least significant digit of integer part an odd number?
        nArr[nArr.length - 1] & 1);
        fracArr = fracBN['c'];
        // e can be <= 0  ( if e == 0, fracArr is [0] or [1] ).
        if (e = fracBN['e']) {
            // Append zeros according to the exponent of the result.
            for(; ++e; fracArr.unshift(0)){}
            // Append the fraction part to the converted integer part.
            nStr = arrToStr(nArr) + '.' + arrToStr(fracArr);
        // fracArr is [1].
        // Fraction digits rounded up, so increment last digit of integer part.
        } else if (fracArr[0]) {
            if (nArr[e = nArr.length - 1] < baseOut - 1) {
                ++nArr[e];
                nStr = arrToStr(nArr);
            } else {
                nStr = new BigNumber(arrToStr(nArr), baseOut)['plus'](ONE)['toS'](baseOut);
            }
        // fracArr is [0]. No fraction digits.
        } else {
            nStr = arrToStr(nArr);
        }
    } else {
        // Simple integer. Convert base.
        nStr = arrToStr(strToArr(nStr));
    }
    return nStr;
}
// Perform division in the specified base. Called by div and convert.
function divide(dvd, dvs, exp, s, base, isOdd) {
    var dvsL, dvsT, next, cmp, remI, dvsZ = dvs.slice(), dvdI = dvsL = dvs.length, dvdL = dvd.length, rem = dvd.slice(0, dvsL), remL = rem.length, quo = new BigNumber(ONE), qc = quo['c'] = [], qi = 0, dig = DECIMAL_PLACES + (quo['e'] = exp) + 1;
    quo['s'] = s;
    s = dig < 0 ? 0 : dig;
    // Add zeros to make remainder as long as divisor.
    for(; remL++ < dvsL; rem.push(0)){}
    // Create version of divisor with leading zero.
    dvsZ.unshift(0);
    do {
        // 'next' is how many times the divisor goes into the current remainder.
        for(next = 0; next < base; next++){
            // Compare divisor and remainder.
            if (dvsL != (remL = rem.length)) {
                cmp = dvsL > remL ? 1 : -1;
            } else {
                for(remI = -1, cmp = 0; ++remI < dvsL;){
                    if (dvs[remI] != rem[remI]) {
                        cmp = dvs[remI] > rem[remI] ? 1 : -1;
                        break;
                    }
                }
            }
            // Subtract divisor from remainder (if divisor < remainder).
            if (cmp < 0) {
                // Remainder cannot be more than one digit longer than divisor.
                // Equalise lengths using divisor with extra leading zero?
                for(dvsT = remL == dvsL ? dvs : dvsZ; remL;){
                    if (rem[--remL] < dvsT[remL]) {
                        for(remI = remL; remI && !rem[--remI]; rem[remI] = base - 1){}
                        --rem[remI];
                        rem[remL] += base;
                    }
                    rem[remL] -= dvsT[remL];
                }
                for(; !rem[0]; rem.shift()){}
            } else {
                break;
            }
        }
        // Add the 'next' digit to the result array.
        qc[qi++] = cmp ? next : ++next;
        // Update the remainder.
        rem[0] && cmp ? rem[remL] = dvd[dvdI] || 0 : rem = [
            dvd[dvdI]
        ];
    }while ((dvdI++ < dvdL || rem[0] != null) && s--)
    // Leading zero? Do not remove if result is simply zero (qi == 1).
    if (!qc[0] && qi != 1) {
        // There can't be more than one zero.
        --quo['e'];
        qc.shift();
    }
    // Round?
    if (qi > dig) {
        rnd(quo, DECIMAL_PLACES, base, isOdd, rem[0] != null);
    }
    // Overflow?
    if (quo['e'] > MAX_EXP) {
        // Infinity.
        quo['c'] = quo['e'] = null;
    // Underflow?
    } else if (quo['e'] < MIN_EXP) {
        // Zero.
        quo['c'] = [
            quo['e'] = 0
        ];
    }
    return quo;
}
/*
 * Return a string representing the value of BigNumber n in normal or
 * exponential notation rounded to the specified decimal places or
 * significant digits.
 * Called by toString, toExponential (exp 1), toFixed, and toPrecision (exp 2).
 * d is the index (with the value in normal notation) of the digit that may be
 * rounded up.
 */ function format(n, d, exp) {
    // Initially, i is the number of decimal places required.
    var i = d - (n = new BigNumber(n))['e'], c = n['c'];
    // +-Infinity or NaN?
    if (!c) {
        return n['toS']();
    }
    // Round?
    if (c.length > ++d) {
        rnd(n, i, 10);
    }
    // Recalculate d if toFixed as n['e'] may have changed if value rounded up.
    i = c[0] == 0 ? i + 1 : exp ? d : n['e'] + i + 1;
    // Append zeros?
    for(; c.length < i; c.push(0)){}
    i = n['e'];
    /*
     * toPrecision returns exponential notation if the number of significant
     * digits specified is less than the number of digits necessary to
     * represent the integer part of the value in normal notation.
     */ return exp == 1 || exp == 2 && (--d < i || i <= TO_EXP_NEG) ? (n['s'] < 0 && c[0] ? '-' : '') + (c.length > 1 ? (c.splice(1, 0, '.'), c.join('')) : c[0]) + (i < 0 ? 'e' : 'e+') + i : n['toS']();
}
// Round if necessary.
// Called by divide, format, setMode and sqrt.
function rnd(x, dp, base, isOdd, r) {
    var xc = x['c'], isNeg = x['s'] < 0, half = base / 2, i = x['e'] + dp + 1, // 'next' is the digit after the digit that may be rounded up.
    next = xc[i], /*
         * 'more' is whether there are digits after 'next'.
         * E.g.
         * 0.005 (e = -3) to be rounded to 0 decimal places (dp = 0) gives i = -2
         * The 'next' digit is zero, and there ARE 'more' digits after it.
         * 0.5 (e = -1) dp = 0 gives i = 0
         * The 'next' digit is 5 and there are no 'more' digits after it.
         */ more = r || i < 0 || xc[i + 1] != null;
    r = ROUNDING_MODE < 4 ? (next != null || more) && (ROUNDING_MODE == 0 || ROUNDING_MODE == 2 && !isNeg || ROUNDING_MODE == 3 && isNeg) : next > half || next == half && (ROUNDING_MODE == 4 || more || /*
           * isOdd is used in base conversion and refers to the least significant
           * digit of the integer part of the value to be converted. The fraction
           * part is rounded by this method separately from the integer part.
           */ ROUNDING_MODE == 6 && (xc[i - 1] & 1 || !dp && isOdd) || ROUNDING_MODE == 7 && !isNeg || ROUNDING_MODE == 8 && isNeg);
    if (i < 1 || !xc[0]) {
        xc.length = 0;
        xc.push(0);
        if (r) {
            // 1, 0.1, 0.01, 0.001, 0.0001 etc.
            xc[0] = 1;
            x['e'] = -dp;
        } else {
            // Zero.
            x['e'] = 0;
        }
        return x;
    }
    // Remove any digits after the required decimal places.
    xc.length = i--;
    // Round up?
    if (r) {
        // Rounding up may mean the previous digit has to be rounded up and so on.
        for(--base; ++xc[i] > base;){
            xc[i] = 0;
            if (!i--) {
                ++x['e'];
                xc.unshift(1);
            }
        }
    }
    // Remove trailing zeros.
    for(i = xc.length; !xc[--i]; xc.pop()){}
    return x;
}
// Round after setting the appropriate rounding mode.
// Handles ceil, floor and round.
function setMode(x, dp, rm) {
    var r = ROUNDING_MODE;
    ROUNDING_MODE = rm;
    x = new BigNumber(x);
    x['c'] && rnd(x, dp, 10);
    ROUNDING_MODE = r;
    return x;
}
// PROTOTYPE/INSTANCE METHODS
/*
 * Return a new BigNumber whose value is the absolute value of this BigNumber.
 */ P['abs'] = P['absoluteValue'] = function() {
    var x = new BigNumber(this);
    if (x['s'] < 0) {
        x['s'] = 1;
    }
    return x;
};
/*
 * Return the bit length of the number.
 */ P['bitLength'] = function() {
    return this.toString(2).length;
};
/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * rounded to a whole number in the direction of Infinity.
 */ P['ceil'] = function() {
    return setMode(this, 0, 2);
};
/*
 * Return
 * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
 * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
 * 0 if they have the same value,
 * or null if the value of either is NaN.
 */ P['comparedTo'] = P['cmp'] = function(y, b) {
    var a, x = this, xc = x['c'], yc = (id = -id, y = new BigNumber(y, b))['c'], i = x['s'], j = y['s'], k = x['e'], l = y['e'];
    // Either NaN?
    if (!i || !j) {
        return null;
    }
    a = xc && !xc[0], b = yc && !yc[0];
    // Either zero?
    if (a || b) {
        return a ? b ? 0 : -j : i;
    }
    // Signs differ?
    if (i != j) {
        return i;
    }
    // Either Infinity?
    if (a = i < 0, b = k == l, !xc || !yc) {
        return b ? 0 : !xc ^ a ? 1 : -1;
    }
    // Compare exponents.
    if (!b) {
        return k > l ^ a ? 1 : -1;
    }
    // Compare digit by digit.
    for(i = -1, j = (k = xc.length) < (l = yc.length) ? k : l; ++i < j;){
        if (xc[i] != yc[i]) {
            return xc[i] > yc[i] ^ a ? 1 : -1;
        }
    }
    // Compare lengths.
    return k == l ? 0 : k > l ^ a ? 1 : -1;
};
/*
 *  n / 0 = I
 *  n / N = N
 *  n / I = 0
 *  0 / n = 0
 *  0 / 0 = N
 *  0 / N = N
 *  0 / I = 0
 *  N / n = N
 *  N / 0 = N
 *  N / N = N
 *  N / I = N
 *  I / n = I
 *  I / 0 = I
 *  I / N = N
 *  I / I = N
 *
 * Return a new BigNumber whose value is the value of this BigNumber
 * divided by the value of BigNumber(y, b), rounded according to
 * DECIMAL_PLACES and ROUNDING_MODE.
 */ P['dividedBy'] = P['div'] = function(y, b) {
    var xc = this['c'], xe = this['e'], xs = this['s'], yc = (id = 2, y = new BigNumber(y, b))['c'], ye = y['e'], ys = y['s'], s = xs == ys ? 1 : -1;
    // Either NaN/Infinity/0?
    return !xe && (!xc || !xc[0]) || !ye && (!yc || !yc[0]) ? new BigNumber(!xs || !ys || // Both 0 or both Infinity?
    (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0) : divide(xc, yc, xe - ye, s, 10);
};
/*
 * Return true if the value of this BigNumber is equal to the value of
 * BigNumber(n, b), otherwise returns false.
 */ P['equals'] = P['eq'] = function(n, b) {
    id = 3;
    return this['cmp'](n, b) === 0;
};
/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * rounded to a whole number in the direction of -Infinity.
 */ P['floor'] = function() {
    return setMode(this, 0, 3);
};
/*
 * Return true if the value of this BigNumber is greater than the value of
 * BigNumber(n, b), otherwise returns false.
 */ P['greaterThan'] = P['gt'] = function(n, b) {
    id = 4;
    return this['cmp'](n, b) > 0;
};
/*
 * Return true if the value of this BigNumber is greater than or equal to
 * the value of BigNumber(n, b), otherwise returns false.
 */ P['greaterThanOrEqualTo'] = P['gte'] = P['gt'] = function(n, b) {
    id = 5;
    return (b = this['cmp'](n, b)) == 1 || b === 0;
};
/*
 * Return true if the value of this BigNumber is a finite number, otherwise
 * returns false.
 */ P['isFinite'] = P['isF'] = function() {
    return !!this['c'];
};
/*
 * Return true if the value of this BigNumber is NaN, otherwise returns
 * false.
 */ P['isNaN'] = function() {
    return !this['s'];
};
/*
 * Return true if the value of this BigNumber is negative, otherwise
 * returns false.
 */ P['isNegative'] = P['isNeg'] = function() {
    return this['s'] < 0;
};
/*
 * Return true if the value of this BigNumber is 0 or -0, otherwise returns
 * false.
 */ P['isZero'] = P['isZ'] = function() {
    return !!this['c'] && this['c'][0] == 0;
};
/*
 * Return true if the value of this BigNumber is less than the value of
 * BigNumber(n, b), otherwise returns false.
 */ P['lessThan'] = P['lt'] = function(n, b) {
    id = 6;
    return this['cmp'](n, b) < 0;
};
/*
 * Return true if the value of this BigNumber is less than or equal to the
 * value of BigNumber(n, b), otherwise returns false.
 */ P['lessThanOrEqualTo'] = P['lte'] = P['le'] = function(n, b) {
    id = 7;
    return (b = this['cmp'](n, b)) == -1 || b === 0;
};
/*
 *  n - 0 = n
 *  n - N = N
 *  n - I = -I
 *  0 - n = -n
 *  0 - 0 = 0
 *  0 - N = N
 *  0 - I = -I
 *  N - n = N
 *  N - 0 = N
 *  N - N = N
 *  N - I = N
 *  I - n = I
 *  I - 0 = I
 *  I - N = N
 *  I - I = N
 *
 * Return a new BigNumber whose value is the value of this BigNumber minus
 * the value of BigNumber(y, b).
 */ P['minus'] = P['sub'] = function(y, b) {
    var d, i, j, xLTy, x = this, a = x['s'];
    b = (id = 8, y = new BigNumber(y, b))['s'];
    // Either NaN?
    if (!a || !b) {
        return new BigNumber(NaN);
    }
    // Signs differ?
    if (a != b) {
        return y['s'] = -b, x['plus'](y);
    }
    var xc = x['c'], xe = x['e'], yc = y['c'], ye = y['e'];
    if (!xe || !ye) {
        // Either Infinity?
        if (!xc || !yc) {
            return xc ? (y['s'] = -b, y) : new BigNumber(yc ? x : NaN);
        }
        // Either zero?
        if (!xc[0] || !yc[0]) {
            // y is non-zero?
            return yc[0] ? (y['s'] = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
        }
    }
    // Determine which is the bigger number.
    // Prepend zeros to equalise exponents.
    if (xc = xc.slice(), a = xe - ye) {
        d = (xLTy = a < 0) ? (a = -a, xc) : (ye = xe, yc);
        for(d.reverse(), b = a; b--; d.push(0)){}
        d.reverse();
    } else {
        // Exponents equal. Check digit by digit.
        j = ((xLTy = xc.length < yc.length) ? xc : yc).length;
        for(a = b = 0; b < j; b++){
            if (xc[b] != yc[b]) {
                xLTy = xc[b] < yc[b];
                break;
            }
        }
    }
    // x < y? Point xc to the array of the bigger number.
    if (xLTy) {
        d = xc, xc = yc, yc = d;
        y['s'] = -y['s'];
    }
    /*
     * Append zeros to xc if shorter. No need to add zeros to yc if shorter
     * as subtraction only needs to start at yc.length.
     */ if ((b = -((j = xc.length) - yc.length)) > 0) {
        for(; b--; xc[j++] = 0){}
    }
    // Subtract yc from xc.
    for(b = yc.length; b > a;){
        if (xc[--b] < yc[b]) {
            for(i = b; i && !xc[--i]; xc[i] = 9){}
            --xc[i];
            xc[b] += 10;
        }
        xc[b] -= yc[b];
    }
    // Remove trailing zeros.
    for(; xc[--j] == 0; xc.pop()){}
    // Remove leading zeros and adjust exponent accordingly.
    for(; xc[0] == 0; xc.shift(), --ye){}
    /*
     * No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
     * when neither x or y are Infinity.
     */ // Underflow?
    if (ye < MIN_EXP || !xc[0]) {
        /*
         * Following IEEE 754 (2008) 6.3,
         * n - n = +0  but  n - n = -0 when rounding towards -Infinity.
         */ if (!xc[0]) {
            y['s'] = ROUNDING_MODE == 3 ? -1 : 1;
        }
        // Result is zero.
        xc = [
            ye = 0
        ];
    }
    return y['c'] = xc, y['e'] = ye, y;
};
/*
 *   n % 0 =  N
 *   n % N =  N
 *   0 % n =  0
 *  -0 % n = -0
 *   0 % 0 =  N
 *   0 % N =  N
 *   N % n =  N
 *   N % 0 =  N
 *   N % N =  N
 *
 * Return a new BigNumber whose value is the value of this BigNumber modulo
 * the value of BigNumber(y, b).
 */ P['modulo'] = P['mod'] = function(y, b) {
    var x = this, xc = x['c'], yc = (id = 9, y = new BigNumber(y, b))['c'], i = x['s'], j = y['s'];
    // Is x or y NaN, or y zero?
    b = !i || !j || yc && !yc[0];
    if (b || xc && !xc[0]) {
        return new BigNumber(b ? NaN : x);
    }
    x['s'] = y['s'] = 1;
    b = y['cmp'](x) == 1;
    x['s'] = i, y['s'] = j;
    return b ? new BigNumber(x) : (i = DECIMAL_PLACES, j = ROUNDING_MODE, DECIMAL_PLACES = 0, ROUNDING_MODE = 1, x = x['div'](y), DECIMAL_PLACES = i, ROUNDING_MODE = j, this['minus'](x['times'](y)));
};
/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * negated, i.e. multiplied by -1.
 */ P['negated'] = P['neg'] = function() {
    var x = new BigNumber(this);
    return x['s'] = -x['s'] || null, x;
};
/*
 *  n + 0 = n
 *  n + N = N
 *  n + I = I
 *  0 + n = n
 *  0 + 0 = 0
 *  0 + N = N
 *  0 + I = I
 *  N + n = N
 *  N + 0 = N
 *  N + N = N
 *  N + I = N
 *  I + n = I
 *  I + 0 = I
 *  I + N = N
 *  I + I = I
 *
 * Return a new BigNumber whose value is the value of this BigNumber plus
 * the value of BigNumber(y, b).
 */ P['plus'] = P['add'] = function(y, b) {
    var d, x = this, a = x['s'];
    b = (id = 10, y = new BigNumber(y, b))['s'];
    // Either NaN?
    if (!a || !b) {
        return new BigNumber(NaN);
    }
    // Signs differ?
    if (a != b) {
        return y['s'] = -b, x['minus'](y);
    }
    var xe = x['e'], xc = x['c'], ye = y['e'], yc = y['c'];
    if (!xe || !ye) {
        // Either Infinity?
        if (!xc || !yc) {
            // Return +-Infinity.
            return new BigNumber(a / 0);
        }
        // Either zero?
        if (!xc[0] || !yc[0]) {
            // y is non-zero?
            return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }
    }
    // Prepend zeros to equalise exponents.
    // Note: Faster to use reverse then do unshifts.
    if (xc = xc.slice(), a = xe - ye) {
        d = a > 0 ? (ye = xe, yc) : (a = -a, xc);
        for(d.reverse(); a--; d.push(0)){}
        d.reverse();
    }
    // Point xc to the longer array.
    if (xc.length - yc.length < 0) {
        d = yc, yc = xc, xc = d;
    }
    /*
     * Only start adding at yc.length - 1 as the
     * further digits of xc can be left as they are.
     */ for(a = yc.length, b = 0; a; b = (xc[--a] = xc[a] + yc[a] + b) / 10 ^ 0, xc[a] %= 10){}
    // No need to check for zero, as +x + +y != 0 && -x + -y != 0
    if (b) {
        xc.unshift(b);
        // Overflow? (MAX_EXP + 1 possible)
        if (++ye > MAX_EXP) {
            // Infinity.
            xc = ye = null;
        }
    }
    // Remove trailing zeros.
    for(a = xc.length; xc[--a] == 0; xc.pop()){}
    return y['c'] = xc, y['e'] = ye, y;
};
/*
 * Return a BigNumber whose value is the value of this BigNumber raised to
 * the power e. If e is negative round according to DECIMAL_PLACES and
 * ROUNDING_MODE.
 *
 * e {number} Integer, -MAX_POWER to MAX_POWER inclusive.
 */ P['toPower'] = P['pow'] = function(e) {
    // e to integer, avoiding NaN or Infinity becoming 0.
    var i = e * 0 == 0 ? e | 0 : e, x = new BigNumber(this), y = new BigNumber(ONE);
    // Use Math.pow?
    // Pass +-Infinity for out of range exponents.
    if (((outOfRange = e < -MAX_POWER || e > MAX_POWER) && (i = e * 1 / 0) || /*
          * Any exponent that fails the parse becomes NaN.
          *
          * Include 'e !== 0' because on Opera -0 == parseFloat(-0) is false,
          * despite -0 === parseFloat(-0) && -0 == parseFloat('-0') is true.
          */ parse(e) != e && e !== 0 && !(i = NaN)) && // 'pow() exponent not an integer: {e}'
    // 'pow() exponent out of range: {e}'
    !ifExceptionsThrow(e, 'exponent', 'pow') || // Pass zero to Math.pow, as any value to the power zero is 1.
    !i) {
        // i is +-Infinity, NaN or 0.
        return new BigNumber(Math.pow(x['toS'](), i));
    }
    for(i = i < 0 ? -i : i;;){
        if (i & 1) {
            y = y['times'](x);
        }
        i >>= 1;
        if (!i) {
            break;
        }
        x = x['times'](x);
    }
    return e < 0 ? ONE['div'](y) : y;
};
/*
 * Return a BigNumber whose value is the value of this BigNumber raised to
 * the power m modulo n.
 *
 * m {BigNumber} the value to take the power of
 * n {BigNumber} the value to modulo by
 */ P['powm'] = function(m, n) {
    return this.pow(m).mod(n);
};
/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * rounded to a maximum of dp decimal places using rounding mode rm, or to
 * 0 and ROUNDING_MODE respectively if omitted.
 *
 * [dp] {number} Integer, 0 to MAX inclusive.
 * [rm] {number} Integer, 0 to 8 inclusive.
 */ P['round'] = function(dp, rm) {
    dp = dp == null || ((outOfRange = dp < 0 || dp > MAX) || parse(dp) != dp) && // 'round() decimal places out of range: {dp}'
    // 'round() decimal places not an integer: {dp}'
    !ifExceptionsThrow(dp, 'decimal places', 'round') ? 0 : dp | 0;
    rm = rm == null || ((outOfRange = rm < 0 || rm > 8) || // Include '&& rm !== 0' because with Opera -0 == parseFloat(-0) is false.
    parse(rm) != rm && rm !== 0) && // 'round() mode not an integer: {rm}'
    // 'round() mode out of range: {rm}'
    !ifExceptionsThrow(rm, 'mode', 'round') ? ROUNDING_MODE : rm | 0;
    return setMode(this, dp, rm);
};
/*
 *  sqrt(-n) =  N
 *  sqrt( N) =  N
 *  sqrt(-I) =  N
 *  sqrt( I) =  I
 *  sqrt( 0) =  0
 *  sqrt(-0) = -0
 *
 * Return a new BigNumber whose value is the square root of the value of
 * this BigNumber, rounded according to DECIMAL_PLACES and ROUNDING_MODE.
 */ P['squareRoot'] = P['sqrt'] = function() {
    var n, r, re, t, x = this, c = x['c'], s = x['s'], e = x['e'], dp = DECIMAL_PLACES, rm = ROUNDING_MODE, half = new BigNumber('0.5');
    // Negative/NaN/Infinity/zero?
    if (s !== 1 || !c || !c[0]) {
        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
    }
    // Initial estimate.
    s = Math.sqrt(x['toS']());
    ROUNDING_MODE = 1;
    /*
      Math.sqrt underflow/overflow?
      Pass x to Math.sqrt as integer, then adjust the exponent of the result.
     */ if (s == 0 || s == 1 / 0) {
        n = c.join('');
        if (!(n.length + e & 1)) {
            n += '0';
        }
        r = new BigNumber(Math.sqrt(n) + '');
        // r may still not be finite.
        if (!r['c']) {
            r['c'] = [
                1
            ];
        }
        r['e'] = ((e + 1) / 2 | 0) - (e < 0 || e & 1);
    } else {
        r = new BigNumber(n = s.toString());
    }
    re = r['e'];
    s = re + (DECIMAL_PLACES += 4);
    if (s < 3) {
        s = 0;
    }
    e = s;
    // Newton-Raphson iteration.
    for(;;){
        t = r;
        r = half['times'](t['plus'](x['div'](t)));
        if (t['c'].slice(0, s).join('') === r['c'].slice(0, s).join('')) {
            c = r['c'];
            /*
              The exponent of r may here be one less than the final result
              exponent (re), e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust
              s so the rounding digits are indexed correctly.
             */ s = s - (n && r['e'] < re);
            /*
              The 4th rounding digit may be in error by -1 so if the 4 rounding
              digits are 9999 or 4999 (i.e. approaching a rounding boundary)
              continue the iteration.
             */ if (c[s] == 9 && c[s - 1] == 9 && c[s - 2] == 9 && (c[s - 3] == 9 || n && c[s - 3] == 4)) {
                /*
                  If 9999 on first run through, check to see if rounding up
                  gives the exact result as the nines may infinitely repeat.
                 */ if (n && c[s - 3] == 9) {
                    t = r['round'](dp, 0);
                    if (t['times'](t)['eq'](x)) {
                        ROUNDING_MODE = rm;
                        DECIMAL_PLACES = dp;
                        return t;
                    }
                }
                DECIMAL_PLACES += 4;
                s += 4;
                n = '';
            } else {
                /*
                  If the rounding digits are null, 0000 or 5000, check for an
                  exact result. If not, then there are further digits so
                  increment the 1st rounding digit to ensure correct rounding.
                 */ if (!c[e] && !c[e - 1] && !c[e - 2] && (!c[e - 3] || c[e - 3] == 5)) {
                    // Truncate to the first rounding digit.
                    if (c.length > e - 2) {
                        c.length = e - 2;
                    }
                    if (!r['times'](r)['eq'](x)) {
                        while(c.length < e - 3){
                            c.push(0);
                        }
                        c[e - 3]++;
                    }
                }
                ROUNDING_MODE = rm;
                rnd(r, DECIMAL_PLACES = dp, 10);
                return r;
            }
        }
    }
};
/*
 *  n * 0 = 0
 *  n * N = N
 *  n * I = I
 *  0 * n = 0
 *  0 * 0 = 0
 *  0 * N = N
 *  0 * I = N
 *  N * n = N
 *  N * 0 = N
 *  N * N = N
 *  N * I = N
 *  I * n = I
 *  I * 0 = N
 *  I * N = N
 *  I * I = I
 *
 * Return a new BigNumber whose value is the value of this BigNumber times
 * the value of BigNumber(y, b).
 */ P['times'] = P['mul'] = function(y, b) {
    var c, x = this, xc = x['c'], yc = (id = 11, y = new BigNumber(y, b))['c'], i = x['e'], j = y['e'], a = x['s'];
    y['s'] = a == (b = y['s']) ? 1 : -1;
    // Either NaN/Infinity/0?
    if (!i && (!xc || !xc[0]) || !j && (!yc || !yc[0])) {
        // Either NaN?
        return new BigNumber(!a || !b || // x is 0 and y is Infinity  or  y is 0 and x is Infinity?
        xc && !xc[0] && !yc || yc && !yc[0] && !xc ? NaN : !xc || !yc ? y['s'] / 0 : y['s'] * 0);
    }
    y['e'] = i + j;
    if ((a = xc.length) < (b = yc.length)) {
        c = xc, xc = yc, yc = c, j = a, a = b, b = j;
    }
    for(j = a + b, c = []; j--; c.push(0)){}
    // Multiply!
    for(i = b - 1; i > -1; i--){
        for(b = 0, j = a + i; j > i; b = c[j] + yc[i] * xc[j - i - 1] + b, c[j--] = b % 10 | 0, b = b / 10 | 0){}
        if (b) {
            c[j] = (c[j] + b) % 10;
        }
    }
    b && ++y['e'];
    // Remove any leading zero.
    !c[0] && c.shift();
    // Remove trailing zeros.
    for(j = c.length; !c[--j]; c.pop()){}
    // No zero check needed as only x * 0 == 0 etc.
    // Overflow?
    y['c'] = y['e'] > MAX_EXP ? y['e'] = null : y['e'] < MIN_EXP ? [
        y['e'] = 0
    ] : c;
    return y;
};
/*
 * Return a buffer containing the 
 */ P['toBuffer'] = function(opts) {
    if (typeof opts === 'string') {
        if (opts !== 'mpint') return 'Unsupported Buffer representation';
        var abs = this.abs();
        var buf = abs.toBuffer({
            size: 1,
            endian: 'big'
        });
        var len = buf.length === 1 && buf[0] === 0 ? 0 : buf.length;
        if (buf[0] & 0x80) len++;
        var ret = new Buffer(4 + len);
        if (len > 0) buf.copy(ret, 4 + (buf[0] & 0x80 ? 1 : 0));
        if (buf[0] & 0x80) ret[4] = 0;
        ret[0] = len & 0xff << 24;
        ret[1] = len & 0xff << 16;
        ret[2] = len & 0xff << 8;
        ret[3] = len & 0xff << 0;
        // two's compliment for negative integers:
        var isNeg = this.lt(0);
        if (isNeg) {
            for(var i = 4; i < ret.length; i++){
                ret[i] = 0xff - ret[i];
            }
        }
        ret[4] = ret[4] & 0x7f | (isNeg ? 0x80 : 0);
        if (isNeg) ret[ret.length - 1]++;
        return ret;
    }
    if (!opts) opts = {};
    var endian = {
        1: 'big',
        '-1': 'little'
    }[opts.endian] || opts.endian || 'big';
    var hex = this.toString(16);
    if (hex.charAt(0) === '-') throw new Error('converting negative numbers to Buffers not supported yet');
    var size = opts.size === 'auto' ? Math.ceil(hex.length / 2) : opts.size || 1;
    var len = Math.ceil(hex.length / (2 * size)) * size;
    var buf = new Buffer(len);
    // zero-pad the hex string so the chunks are all `size` long
    while(hex.length < 2 * len)hex = '0' + hex;
    var hx = hex.split(new RegExp('(.{' + 2 * size + '})')).filter(function(s) {
        return s.length > 0;
    });
    hx.forEach(function(chunk, i) {
        for(var j = 0; j < size; j++){
            var ix = i * size + (endian === 'big' ? j : size - j - 1);
            buf[ix] = parseInt(chunk.slice(j * 2, j * 2 + 2), 16);
        }
    });
    return buf;
};
/*
 * Return a string representing the value of this BigNumber in exponential
 * notation to dp fixed decimal places and rounded using ROUNDING_MODE if
 * necessary.
 *
 * [dp] {number} Integer, 0 to MAX inclusive.
 */ P['toExponential'] = P['toE'] = function(dp) {
    return format(this, (dp == null || ((outOfRange = dp < 0 || dp > MAX) || /*
         * Include '&& dp !== 0' because with Opera -0 == parseFloat(-0) is
         * false, despite -0 == parseFloat('-0') && 0 == -0 being true.
         */ parse(dp) != dp && dp !== 0) && // 'toE() decimal places not an integer: {dp}'
    // 'toE() decimal places out of range: {dp}'
    !ifExceptionsThrow(dp, 'decimal places', 'toE')) && this['c'] ? this['c'].length - 1 : dp | 0, 1);
};
/*
 * Return a string representing the value of this BigNumber in normal
 * notation to dp fixed decimal places and rounded using ROUNDING_MODE if
 * necessary.
 *
 * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
 * but e.g. (-0.00001).toFixed(0) is '-0'.
 *
 * [dp] {number} Integer, 0 to MAX inclusive.
 */ P['toFixed'] = P['toF'] = function(dp) {
    var n, str, d, x = this;
    if (!(dp == null || ((outOfRange = dp < 0 || dp > MAX) || parse(dp) != dp && dp !== 0) && // 'toF() decimal places not an integer: {dp}'
    // 'toF() decimal places out of range: {dp}'
    !ifExceptionsThrow(dp, 'decimal places', 'toF'))) {
        d = x['e'] + (dp | 0);
    }
    n = TO_EXP_NEG, dp = TO_EXP_POS;
    TO_EXP_NEG = -(TO_EXP_POS = 1 / 0);
    // Note: str is initially undefined.
    if (d == str) {
        str = x['toS']();
    } else {
        str = format(x, d);
        // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.
        // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
        if (x['s'] < 0 && x['c']) {
            // As e.g. -0 toFixed(3), will wrongly be returned as -0.000 from toString.
            if (!x['c'][0]) {
                str = str.replace(/^-/, '');
            // As e.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.
            } else if (str.indexOf('-') < 0) {
                str = '-' + str;
            }
        }
    }
    TO_EXP_NEG = n, TO_EXP_POS = dp;
    return str;
};
/*
 * Return a string array representing the value of this BigNumber as a
 * simple fraction with an integer numerator and an integer denominator.
 * The denominator will be a positive non-zero value less than or equal to
 * the specified maximum denominator. If a maximum denominator is not
 * specified, the denominator will be the lowest value necessary to
 * represent the number exactly.
 *
 * [maxD] {number|string|BigNumber} Integer >= 1 and < Infinity.
 */ P['toFraction'] = P['toFr'] = function(maxD) {
    var q, frac, n0, d0, d2, n, e, n1 = d0 = new BigNumber(ONE), d1 = n0 = new BigNumber('0'), x = this, xc = x['c'], exp = MAX_EXP, dp = DECIMAL_PLACES, rm = ROUNDING_MODE, d = new BigNumber(ONE);
    // NaN, Infinity.
    if (!xc) {
        return x['toS']();
    }
    e = d['e'] = xc.length - x['e'] - 1;
    // If max denominator is undefined or null...
    if (maxD == null || // or NaN...
    (!(id = 12, n = new BigNumber(maxD))['s'] || // or less than 1, or Infinity...
    (outOfRange = n['cmp'](n1) < 0 || !n['c']) || ERRORS && n['e'] < n['c'].length - 1) && // 'toFr() max denominator not an integer: {maxD}'
    // 'toFr() max denominator out of range: {maxD}'
    !ifExceptionsThrow(maxD, 'max denominator', 'toFr') || // or greater than the maxD needed to specify the value exactly...
    (maxD = n)['cmp'](d) > 0) {
        // d is e.g. 10, 100, 1000, 10000... , n1 is 1.
        maxD = e > 0 ? d : n1;
    }
    MAX_EXP = 1 / 0;
    n = new BigNumber(xc.join(''));
    for(DECIMAL_PLACES = 0, ROUNDING_MODE = 1;;){
        q = n['div'](d);
        d2 = d0['plus'](q['times'](d1));
        if (d2['cmp'](maxD) == 1) {
            break;
        }
        d0 = d1, d1 = d2;
        n1 = n0['plus'](q['times'](d2 = n1));
        n0 = d2;
        d = n['minus'](q['times'](d2 = d));
        n = d2;
    }
    d2 = maxD['minus'](d0)['div'](d1);
    n0 = n0['plus'](d2['times'](n1));
    d0 = d0['plus'](d2['times'](d1));
    n0['s'] = n1['s'] = x['s'];
    DECIMAL_PLACES = e * 2;
    ROUNDING_MODE = rm;
    // Determine which fraction is closer to x, n0 / d0 or n1 / d1?
    frac = n1['div'](d1)['minus'](x)['abs']()['cmp'](n0['div'](d0)['minus'](x)['abs']()) < 1 ? [
        n1['toS'](),
        d1['toS']()
    ] : [
        n0['toS'](),
        d0['toS']()
    ];
    return MAX_EXP = exp, DECIMAL_PLACES = dp, frac;
};
/*
 * Return a string representing the value of this BigNumber to sd significant
 * digits and rounded using ROUNDING_MODE if necessary.
 * If sd is less than the number of digits necessary to represent the integer
 * part of the value in normal notation, then use exponential notation.
 *
 * sd {number} Integer, 1 to MAX inclusive.
 */ P['toPrecision'] = P['toP'] = function(sd) {
    /*
     * ERRORS true: Throw if sd not undefined, null or an integer in range.
     * ERRORS false: Ignore sd if not a number or not in range.
     * Truncate non-integers.
     */ return sd == null || ((outOfRange = sd < 1 || sd > MAX) || parse(sd) != sd) && // 'toP() precision not an integer: {sd}'
    // 'toP() precision out of range: {sd}'
    !ifExceptionsThrow(sd, 'precision', 'toP') ? this['toS']() : format(this, --sd | 0, 2);
};
/*
 * Return a string representing the value of this BigNumber in base b, or
 * base 10 if b is omitted. If a base is specified, including base 10,
 * round according to DECIMAL_PLACES and ROUNDING_MODE.
 * If a base is not specified, and this BigNumber has a positive exponent
 * that is equal to or greater than TO_EXP_POS, or a negative exponent equal
 * to or less than TO_EXP_NEG, return exponential notation.
 *
 * [b] {number} Integer, 2 to 64 inclusive.
 */ P['toString'] = P['toS'] = function(b) {
    var u, str, strL, x = this, xe = x['e'];
    // Infinity or NaN?
    if (xe === null) {
        str = x['s'] ? 'Infinity' : 'NaN';
    // Exponential format?
    } else if (b === u && (xe <= TO_EXP_NEG || xe >= TO_EXP_POS)) {
        return format(x, x['c'].length - 1, 1);
    } else {
        str = x['c'].join('');
        // Negative exponent?
        if (xe < 0) {
            // Prepend zeros.
            for(; ++xe; str = '0' + str){}
            str = '0.' + str;
        // Positive exponent?
        } else if (strL = str.length, xe > 0) {
            if (++xe > strL) {
                // Append zeros.
                for(xe -= strL; xe--; str += '0'){}
            } else if (xe < strL) {
                str = str.slice(0, xe) + '.' + str.slice(xe);
            }
        // Exponent zero.
        } else {
            if (u = str.charAt(0), strL > 1) {
                str = u + '.' + str.slice(1);
            // Avoid '-0'
            } else if (u == '0') {
                return u;
            }
        }
        if (b != null) {
            if (!(outOfRange = !(b >= 2 && b < 65)) && (b == (b | 0) || !ERRORS)) {
                str = convert(str, b | 0, 10, x['s']);
                // Avoid '-0'
                if (str == '0') {
                    return str;
                }
            } else {
                // 'toS() base not an integer: {b}'
                // 'toS() base out of range: {b}'
                ifExceptionsThrow(b, 'base', 'toS');
            }
        }
    }
    return x['s'] < 0 ? '-' + str : str;
};
/*
 * Return as toString, but do not accept a base argument.
 */ P['valueOf'] = function() {
    return this['toS']();
};
// Add aliases for BigDecimal methods.
//P['add'] = P['plus'];
//P['subtract'] = P['minus'];
//P['multiply'] = P['times'];
//P['divide'] = P['div'];
//P['remainder'] = P['mod'];
//P['compareTo'] = P['cmp'];
//P['negate'] = P['neg'];
// EXPORT
module.exports = BigNumber;
}}),
"[project]/node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ /* eslint-disable node/no-deprecated-api */ var buffer = __turbopack_require__("[externals]/buffer [external] (buffer, cjs)");
var Buffer = buffer.Buffer;
// alternative to using Object.keys for old browsers
function copyProps(src, dst) {
    for(var key in src){
        dst[key] = src[key];
    }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
    module.exports = buffer;
} else {
    // Copy properties from require('buffer')
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
}
function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer(arg, encodingOrOffset, length);
}
SafeBuffer.prototype = Object.create(Buffer.prototype);
// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);
SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
        throw new TypeError('Argument must not be a number');
    }
    return Buffer(arg, encodingOrOffset, length);
};
SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
    }
    var buf = Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') {
            buf.fill(fill, encoding);
        } else {
            buf.fill(fill);
        }
    } else {
        buf.fill(0);
    }
    return buf;
};
SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
    }
    return Buffer(size);
};
SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
    }
    return buffer.SlowBuffer(size);
};
}}),
"[project]/node_modules/.pnpm/base-x@3.0.10/node_modules/base-x/src/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
// base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
// @ts-ignore
var _Buffer = __turbopack_require__("[project]/node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js [app-rsc] (ecmascript)").Buffer;
function base(ALPHABET) {
    if (ALPHABET.length >= 255) {
        throw new TypeError('Alphabet too long');
    }
    var BASE_MAP = new Uint8Array(256);
    for(var j = 0; j < BASE_MAP.length; j++){
        BASE_MAP[j] = 255;
    }
    for(var i = 0; i < ALPHABET.length; i++){
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) {
            throw new TypeError(x + ' is ambiguous');
        }
        BASE_MAP[xc] = i;
    }
    var BASE = ALPHABET.length;
    var LEADER = ALPHABET.charAt(0);
    var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
    ;
    var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
    ;
    function encode(source) {
        if (Array.isArray(source) || source instanceof Uint8Array) {
            source = _Buffer.from(source);
        }
        if (!_Buffer.isBuffer(source)) {
            throw new TypeError('Expected Buffer');
        }
        if (source.length === 0) {
            return '';
        }
        // Skip & count leading zeroes.
        var zeroes = 0;
        var length = 0;
        var pbegin = 0;
        var pend = source.length;
        while(pbegin !== pend && source[pbegin] === 0){
            pbegin++;
            zeroes++;
        }
        // Allocate enough space in big-endian base58 representation.
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        // Process the bytes.
        while(pbegin !== pend){
            var carry = source[pbegin];
            // Apply "b58 = b58 * 256 + ch".
            var i = 0;
            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){
                carry += 256 * b58[it1] >>> 0;
                b58[it1] = carry % BASE >>> 0;
                carry = carry / BASE >>> 0;
            }
            if (carry !== 0) {
                throw new Error('Non-zero carry');
            }
            length = i;
            pbegin++;
        }
        // Skip leading zeroes in base58 result.
        var it2 = size - length;
        while(it2 !== size && b58[it2] === 0){
            it2++;
        }
        // Translate the result into a string.
        var str = LEADER.repeat(zeroes);
        for(; it2 < size; ++it2){
            str += ALPHABET.charAt(b58[it2]);
        }
        return str;
    }
    function decodeUnsafe(source) {
        if (typeof source !== 'string') {
            throw new TypeError('Expected String');
        }
        if (source.length === 0) {
            return _Buffer.alloc(0);
        }
        var psz = 0;
        // Skip and count leading '1's.
        var zeroes = 0;
        var length = 0;
        while(source[psz] === LEADER){
            zeroes++;
            psz++;
        }
        // Allocate enough space in big-endian base256 representation.
        var size = (source.length - psz) * FACTOR + 1 >>> 0 // log(58) / log(256), rounded up.
        ;
        var b256 = new Uint8Array(size);
        // Process the characters.
        while(psz < source.length){
            // Decode character
            var carry = BASE_MAP[source.charCodeAt(psz)];
            // Invalid character
            if (carry === 255) {
                return;
            }
            var i = 0;
            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){
                carry += BASE * b256[it3] >>> 0;
                b256[it3] = carry % 256 >>> 0;
                carry = carry / 256 >>> 0;
            }
            if (carry !== 0) {
                throw new Error('Non-zero carry');
            }
            length = i;
            psz++;
        }
        // Skip leading zeroes in b256.
        var it4 = size - length;
        while(it4 !== size && b256[it4] === 0){
            it4++;
        }
        var vch = _Buffer.allocUnsafe(zeroes + (size - it4));
        vch.fill(0x00, 0, zeroes);
        var j = zeroes;
        while(it4 !== size){
            vch[j++] = b256[it4++];
        }
        return vch;
    }
    function decode(string) {
        var buffer = decodeUnsafe(string);
        if (buffer) {
            return buffer;
        }
        throw new Error('Non-base' + BASE + ' character');
    }
    return {
        encode: encode,
        decodeUnsafe: decodeUnsafe,
        decode: decode
    };
}
module.exports = base;
}}),
"[project]/node_modules/.pnpm/cbor-js@0.1.0/node_modules/cbor-js/cbor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */ (function(global, undefined) {
    "use strict";
    var POW_2_24 = Math.pow(2, -24), POW_2_32 = Math.pow(2, 32), POW_2_53 = Math.pow(2, 53);
    function encode(value) {
        var data = new ArrayBuffer(256);
        var dataView = new DataView(data);
        var lastLength;
        var offset = 0;
        function ensureSpace(length) {
            var newByteLength = data.byteLength;
            var requiredLength = offset + length;
            while(newByteLength < requiredLength)newByteLength *= 2;
            if (newByteLength !== data.byteLength) {
                var oldDataView = dataView;
                data = new ArrayBuffer(newByteLength);
                dataView = new DataView(data);
                var uint32count = offset + 3 >> 2;
                for(var i = 0; i < uint32count; ++i)dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));
            }
            lastLength = length;
            return dataView;
        }
        function write() {
            offset += lastLength;
        }
        function writeFloat64(value) {
            write(ensureSpace(8).setFloat64(offset, value));
        }
        function writeUint8(value) {
            write(ensureSpace(1).setUint8(offset, value));
        }
        function writeUint8Array(value) {
            var dataView = ensureSpace(value.length);
            for(var i = 0; i < value.length; ++i)dataView.setUint8(offset + i, value[i]);
            write();
        }
        function writeUint16(value) {
            write(ensureSpace(2).setUint16(offset, value));
        }
        function writeUint32(value) {
            write(ensureSpace(4).setUint32(offset, value));
        }
        function writeUint64(value) {
            var low = value % POW_2_32;
            var high = (value - low) / POW_2_32;
            var dataView = ensureSpace(8);
            dataView.setUint32(offset, high);
            dataView.setUint32(offset + 4, low);
            write();
        }
        function writeTypeAndLength(type, length) {
            if (length < 24) {
                writeUint8(type << 5 | length);
            } else if (length < 0x100) {
                writeUint8(type << 5 | 24);
                writeUint8(length);
            } else if (length < 0x10000) {
                writeUint8(type << 5 | 25);
                writeUint16(length);
            } else if (length < 0x100000000) {
                writeUint8(type << 5 | 26);
                writeUint32(length);
            } else {
                writeUint8(type << 5 | 27);
                writeUint64(length);
            }
        }
        function encodeItem(value) {
            var i;
            if (value === false) return writeUint8(0xf4);
            if (value === true) return writeUint8(0xf5);
            if (value === null) return writeUint8(0xf6);
            if (value === undefined) return writeUint8(0xf7);
            switch(typeof value){
                case "number":
                    if (Math.floor(value) === value) {
                        if (0 <= value && value <= POW_2_53) return writeTypeAndLength(0, value);
                        if (-POW_2_53 <= value && value < 0) return writeTypeAndLength(1, -(value + 1));
                    }
                    writeUint8(0xfb);
                    return writeFloat64(value);
                case "string":
                    var utf8data = [];
                    for(i = 0; i < value.length; ++i){
                        var charCode = value.charCodeAt(i);
                        if (charCode < 0x80) {
                            utf8data.push(charCode);
                        } else if (charCode < 0x800) {
                            utf8data.push(0xc0 | charCode >> 6);
                            utf8data.push(0x80 | charCode & 0x3f);
                        } else if (charCode < 0xd800) {
                            utf8data.push(0xe0 | charCode >> 12);
                            utf8data.push(0x80 | charCode >> 6 & 0x3f);
                            utf8data.push(0x80 | charCode & 0x3f);
                        } else {
                            charCode = (charCode & 0x3ff) << 10;
                            charCode |= value.charCodeAt(++i) & 0x3ff;
                            charCode += 0x10000;
                            utf8data.push(0xf0 | charCode >> 18);
                            utf8data.push(0x80 | charCode >> 12 & 0x3f);
                            utf8data.push(0x80 | charCode >> 6 & 0x3f);
                            utf8data.push(0x80 | charCode & 0x3f);
                        }
                    }
                    writeTypeAndLength(3, utf8data.length);
                    return writeUint8Array(utf8data);
                default:
                    var length;
                    if (Array.isArray(value)) {
                        length = value.length;
                        writeTypeAndLength(4, length);
                        for(i = 0; i < length; ++i)encodeItem(value[i]);
                    } else if (value instanceof Uint8Array) {
                        writeTypeAndLength(2, value.length);
                        writeUint8Array(value);
                    } else {
                        var keys = Object.keys(value);
                        length = keys.length;
                        writeTypeAndLength(5, length);
                        for(i = 0; i < length; ++i){
                            var key = keys[i];
                            encodeItem(key);
                            encodeItem(value[key]);
                        }
                    }
            }
        }
        encodeItem(value);
        if ("slice" in data) return data.slice(0, offset);
        var ret = new ArrayBuffer(offset);
        var retView = new DataView(ret);
        for(var i = 0; i < offset; ++i)retView.setUint8(i, dataView.getUint8(i));
        return ret;
    }
    function decode(data, tagger, simpleValue) {
        var dataView = new DataView(data);
        var offset = 0;
        if (typeof tagger !== "function") tagger = function(value) {
            return value;
        };
        if (typeof simpleValue !== "function") simpleValue = function() {
            return undefined;
        };
        function read(value, length) {
            offset += length;
            return value;
        }
        function readArrayBuffer(length) {
            return read(new Uint8Array(data, offset, length), length);
        }
        function readFloat16() {
            var tempArrayBuffer = new ArrayBuffer(4);
            var tempDataView = new DataView(tempArrayBuffer);
            var value = readUint16();
            var sign = value & 0x8000;
            var exponent = value & 0x7c00;
            var fraction = value & 0x03ff;
            if (exponent === 0x7c00) exponent = 0xff << 10;
            else if (exponent !== 0) exponent += 127 - 15 << 10;
            else if (fraction !== 0) return fraction * POW_2_24;
            tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);
            return tempDataView.getFloat32(0);
        }
        function readFloat32() {
            return read(dataView.getFloat32(offset), 4);
        }
        function readFloat64() {
            return read(dataView.getFloat64(offset), 8);
        }
        function readUint8() {
            return read(dataView.getUint8(offset), 1);
        }
        function readUint16() {
            return read(dataView.getUint16(offset), 2);
        }
        function readUint32() {
            return read(dataView.getUint32(offset), 4);
        }
        function readUint64() {
            return readUint32() * POW_2_32 + readUint32();
        }
        function readBreak() {
            if (dataView.getUint8(offset) !== 0xff) return false;
            offset += 1;
            return true;
        }
        function readLength(additionalInformation) {
            if (additionalInformation < 24) return additionalInformation;
            if (additionalInformation === 24) return readUint8();
            if (additionalInformation === 25) return readUint16();
            if (additionalInformation === 26) return readUint32();
            if (additionalInformation === 27) return readUint64();
            if (additionalInformation === 31) return -1;
            throw "Invalid length encoding";
        }
        function readIndefiniteStringLength(majorType) {
            var initialByte = readUint8();
            if (initialByte === 0xff) return -1;
            var length = readLength(initialByte & 0x1f);
            if (length < 0 || initialByte >> 5 !== majorType) throw "Invalid indefinite length element";
            return length;
        }
        function appendUtf16data(utf16data, length) {
            for(var i = 0; i < length; ++i){
                var value = readUint8();
                if (value & 0x80) {
                    if (value < 0xe0) {
                        value = (value & 0x1f) << 6 | readUint8() & 0x3f;
                        length -= 1;
                    } else if (value < 0xf0) {
                        value = (value & 0x0f) << 12 | (readUint8() & 0x3f) << 6 | readUint8() & 0x3f;
                        length -= 2;
                    } else {
                        value = (value & 0x0f) << 18 | (readUint8() & 0x3f) << 12 | (readUint8() & 0x3f) << 6 | readUint8() & 0x3f;
                        length -= 3;
                    }
                }
                if (value < 0x10000) {
                    utf16data.push(value);
                } else {
                    value -= 0x10000;
                    utf16data.push(0xd800 | value >> 10);
                    utf16data.push(0xdc00 | value & 0x3ff);
                }
            }
        }
        function decodeItem() {
            var initialByte = readUint8();
            var majorType = initialByte >> 5;
            var additionalInformation = initialByte & 0x1f;
            var i;
            var length;
            if (majorType === 7) {
                switch(additionalInformation){
                    case 25:
                        return readFloat16();
                    case 26:
                        return readFloat32();
                    case 27:
                        return readFloat64();
                }
            }
            length = readLength(additionalInformation);
            if (length < 0 && (majorType < 2 || 6 < majorType)) throw "Invalid length";
            switch(majorType){
                case 0:
                    return length;
                case 1:
                    return -1 - length;
                case 2:
                    if (length < 0) {
                        var elements = [];
                        var fullArrayLength = 0;
                        while((length = readIndefiniteStringLength(majorType)) >= 0){
                            fullArrayLength += length;
                            elements.push(readArrayBuffer(length));
                        }
                        var fullArray = new Uint8Array(fullArrayLength);
                        var fullArrayOffset = 0;
                        for(i = 0; i < elements.length; ++i){
                            fullArray.set(elements[i], fullArrayOffset);
                            fullArrayOffset += elements[i].length;
                        }
                        return fullArray;
                    }
                    return readArrayBuffer(length);
                case 3:
                    var utf16data = [];
                    if (length < 0) {
                        while((length = readIndefiniteStringLength(majorType)) >= 0)appendUtf16data(utf16data, length);
                    } else appendUtf16data(utf16data, length);
                    return String.fromCharCode.apply(null, utf16data);
                case 4:
                    var retArray;
                    if (length < 0) {
                        retArray = [];
                        while(!readBreak())retArray.push(decodeItem());
                    } else {
                        retArray = new Array(length);
                        for(i = 0; i < length; ++i)retArray[i] = decodeItem();
                    }
                    return retArray;
                case 5:
                    var retObject = {};
                    for(i = 0; i < length || length < 0 && !readBreak(); ++i){
                        var key = decodeItem();
                        retObject[key] = decodeItem();
                    }
                    return retObject;
                case 6:
                    return tagger(decodeItem(), length);
                case 7:
                    switch(length){
                        case 20:
                            return false;
                        case 21:
                            return true;
                        case 22:
                            return null;
                        case 23:
                            return undefined;
                        default:
                            return simpleValue(length);
                    }
            }
        }
        var ret = decodeItem();
        if (offset !== data.byteLength) throw "Remaining bytes";
        return ret;
    }
    var obj = {
        encode: encode,
        decode: decode
    };
    if (typeof define === "function" && define.amd) ((f, r = typeof f !== "function" ? f : f(__turbopack_require__, exports, module))=>r !== undefined && __turbopack_export_value(r))(obj);
    else if (("TURBOPACK compile-time value", "object") !== 'undefined' && module.exports) module.exports = obj;
    else if (!global.CBOR) global.CBOR = obj;
})(this);
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
;
const createBuffer = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from && __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc && __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].allocUnsafe && __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].allocUnsafeSlow ? __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from : (val)=>new __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"](val);
const __TURBOPACK__default__export__ = createBuffer;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
function __TURBOPACK__default__export__(model, calc) {
    const fn = (buf, previous)=>calc(buf, previous) >>> 0;
    fn.signed = calc;
    fn.unsigned = fn;
    fn.model = model;
    return fn;
}
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc1.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
const crc1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('crc1', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = ~~previous;
    let accum = 0;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        accum += byte;
    }
    crc += accum % 256;
    return crc % 256;
});
const __TURBOPACK__default__export__ = crc1;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc8.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`
// prettier-ignore
let TABLE = [
    0x00,
    0x07,
    0x0e,
    0x09,
    0x1c,
    0x1b,
    0x12,
    0x15,
    0x38,
    0x3f,
    0x36,
    0x31,
    0x24,
    0x23,
    0x2a,
    0x2d,
    0x70,
    0x77,
    0x7e,
    0x79,
    0x6c,
    0x6b,
    0x62,
    0x65,
    0x48,
    0x4f,
    0x46,
    0x41,
    0x54,
    0x53,
    0x5a,
    0x5d,
    0xe0,
    0xe7,
    0xee,
    0xe9,
    0xfc,
    0xfb,
    0xf2,
    0xf5,
    0xd8,
    0xdf,
    0xd6,
    0xd1,
    0xc4,
    0xc3,
    0xca,
    0xcd,
    0x90,
    0x97,
    0x9e,
    0x99,
    0x8c,
    0x8b,
    0x82,
    0x85,
    0xa8,
    0xaf,
    0xa6,
    0xa1,
    0xb4,
    0xb3,
    0xba,
    0xbd,
    0xc7,
    0xc0,
    0xc9,
    0xce,
    0xdb,
    0xdc,
    0xd5,
    0xd2,
    0xff,
    0xf8,
    0xf1,
    0xf6,
    0xe3,
    0xe4,
    0xed,
    0xea,
    0xb7,
    0xb0,
    0xb9,
    0xbe,
    0xab,
    0xac,
    0xa5,
    0xa2,
    0x8f,
    0x88,
    0x81,
    0x86,
    0x93,
    0x94,
    0x9d,
    0x9a,
    0x27,
    0x20,
    0x29,
    0x2e,
    0x3b,
    0x3c,
    0x35,
    0x32,
    0x1f,
    0x18,
    0x11,
    0x16,
    0x03,
    0x04,
    0x0d,
    0x0a,
    0x57,
    0x50,
    0x59,
    0x5e,
    0x4b,
    0x4c,
    0x45,
    0x42,
    0x6f,
    0x68,
    0x61,
    0x66,
    0x73,
    0x74,
    0x7d,
    0x7a,
    0x89,
    0x8e,
    0x87,
    0x80,
    0x95,
    0x92,
    0x9b,
    0x9c,
    0xb1,
    0xb6,
    0xbf,
    0xb8,
    0xad,
    0xaa,
    0xa3,
    0xa4,
    0xf9,
    0xfe,
    0xf7,
    0xf0,
    0xe5,
    0xe2,
    0xeb,
    0xec,
    0xc1,
    0xc6,
    0xcf,
    0xc8,
    0xdd,
    0xda,
    0xd3,
    0xd4,
    0x69,
    0x6e,
    0x67,
    0x60,
    0x75,
    0x72,
    0x7b,
    0x7c,
    0x51,
    0x56,
    0x5f,
    0x58,
    0x4d,
    0x4a,
    0x43,
    0x44,
    0x19,
    0x1e,
    0x17,
    0x10,
    0x05,
    0x02,
    0x0b,
    0x0c,
    0x21,
    0x26,
    0x2f,
    0x28,
    0x3d,
    0x3a,
    0x33,
    0x34,
    0x4e,
    0x49,
    0x40,
    0x47,
    0x52,
    0x55,
    0x5c,
    0x5b,
    0x76,
    0x71,
    0x78,
    0x7f,
    0x6a,
    0x6d,
    0x64,
    0x63,
    0x3e,
    0x39,
    0x30,
    0x37,
    0x22,
    0x25,
    0x2c,
    0x2b,
    0x06,
    0x01,
    0x08,
    0x0f,
    0x1a,
    0x1d,
    0x14,
    0x13,
    0xae,
    0xa9,
    0xa0,
    0xa7,
    0xb2,
    0xb5,
    0xbc,
    0xbb,
    0x96,
    0x91,
    0x98,
    0x9f,
    0x8a,
    0x8d,
    0x84,
    0x83,
    0xde,
    0xd9,
    0xd0,
    0xd7,
    0xc2,
    0xc5,
    0xcc,
    0xcb,
    0xe6,
    0xe1,
    0xe8,
    0xef,
    0xfa,
    0xfd,
    0xf4,
    0xf3
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc8 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('crc-8', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = ~~previous;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = TABLE[(crc ^ byte) & 0xff] & 0xff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc8;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc81wire.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`
// prettier-ignore
let TABLE = [
    0x00,
    0x5e,
    0xbc,
    0xe2,
    0x61,
    0x3f,
    0xdd,
    0x83,
    0xc2,
    0x9c,
    0x7e,
    0x20,
    0xa3,
    0xfd,
    0x1f,
    0x41,
    0x9d,
    0xc3,
    0x21,
    0x7f,
    0xfc,
    0xa2,
    0x40,
    0x1e,
    0x5f,
    0x01,
    0xe3,
    0xbd,
    0x3e,
    0x60,
    0x82,
    0xdc,
    0x23,
    0x7d,
    0x9f,
    0xc1,
    0x42,
    0x1c,
    0xfe,
    0xa0,
    0xe1,
    0xbf,
    0x5d,
    0x03,
    0x80,
    0xde,
    0x3c,
    0x62,
    0xbe,
    0xe0,
    0x02,
    0x5c,
    0xdf,
    0x81,
    0x63,
    0x3d,
    0x7c,
    0x22,
    0xc0,
    0x9e,
    0x1d,
    0x43,
    0xa1,
    0xff,
    0x46,
    0x18,
    0xfa,
    0xa4,
    0x27,
    0x79,
    0x9b,
    0xc5,
    0x84,
    0xda,
    0x38,
    0x66,
    0xe5,
    0xbb,
    0x59,
    0x07,
    0xdb,
    0x85,
    0x67,
    0x39,
    0xba,
    0xe4,
    0x06,
    0x58,
    0x19,
    0x47,
    0xa5,
    0xfb,
    0x78,
    0x26,
    0xc4,
    0x9a,
    0x65,
    0x3b,
    0xd9,
    0x87,
    0x04,
    0x5a,
    0xb8,
    0xe6,
    0xa7,
    0xf9,
    0x1b,
    0x45,
    0xc6,
    0x98,
    0x7a,
    0x24,
    0xf8,
    0xa6,
    0x44,
    0x1a,
    0x99,
    0xc7,
    0x25,
    0x7b,
    0x3a,
    0x64,
    0x86,
    0xd8,
    0x5b,
    0x05,
    0xe7,
    0xb9,
    0x8c,
    0xd2,
    0x30,
    0x6e,
    0xed,
    0xb3,
    0x51,
    0x0f,
    0x4e,
    0x10,
    0xf2,
    0xac,
    0x2f,
    0x71,
    0x93,
    0xcd,
    0x11,
    0x4f,
    0xad,
    0xf3,
    0x70,
    0x2e,
    0xcc,
    0x92,
    0xd3,
    0x8d,
    0x6f,
    0x31,
    0xb2,
    0xec,
    0x0e,
    0x50,
    0xaf,
    0xf1,
    0x13,
    0x4d,
    0xce,
    0x90,
    0x72,
    0x2c,
    0x6d,
    0x33,
    0xd1,
    0x8f,
    0x0c,
    0x52,
    0xb0,
    0xee,
    0x32,
    0x6c,
    0x8e,
    0xd0,
    0x53,
    0x0d,
    0xef,
    0xb1,
    0xf0,
    0xae,
    0x4c,
    0x12,
    0x91,
    0xcf,
    0x2d,
    0x73,
    0xca,
    0x94,
    0x76,
    0x28,
    0xab,
    0xf5,
    0x17,
    0x49,
    0x08,
    0x56,
    0xb4,
    0xea,
    0x69,
    0x37,
    0xd5,
    0x8b,
    0x57,
    0x09,
    0xeb,
    0xb5,
    0x36,
    0x68,
    0x8a,
    0xd4,
    0x95,
    0xcb,
    0x29,
    0x77,
    0xf4,
    0xaa,
    0x48,
    0x16,
    0xe9,
    0xb7,
    0x55,
    0x0b,
    0x88,
    0xd6,
    0x34,
    0x6a,
    0x2b,
    0x75,
    0x97,
    0xc9,
    0x4a,
    0x14,
    0xf6,
    0xa8,
    0x74,
    0x2a,
    0xc8,
    0x96,
    0x15,
    0x4b,
    0xa9,
    0xf7,
    0xb6,
    0xe8,
    0x0a,
    0x54,
    0xd7,
    0x89,
    0x6b,
    0x35
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc81wire = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('dallas-1-wire', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = ~~previous;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = TABLE[(crc ^ byte) & 0xff] & 0xff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc81wire;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`
// prettier-ignore
let TABLE = [
    0x0000,
    0xc0c1,
    0xc181,
    0x0140,
    0xc301,
    0x03c0,
    0x0280,
    0xc241,
    0xc601,
    0x06c0,
    0x0780,
    0xc741,
    0x0500,
    0xc5c1,
    0xc481,
    0x0440,
    0xcc01,
    0x0cc0,
    0x0d80,
    0xcd41,
    0x0f00,
    0xcfc1,
    0xce81,
    0x0e40,
    0x0a00,
    0xcac1,
    0xcb81,
    0x0b40,
    0xc901,
    0x09c0,
    0x0880,
    0xc841,
    0xd801,
    0x18c0,
    0x1980,
    0xd941,
    0x1b00,
    0xdbc1,
    0xda81,
    0x1a40,
    0x1e00,
    0xdec1,
    0xdf81,
    0x1f40,
    0xdd01,
    0x1dc0,
    0x1c80,
    0xdc41,
    0x1400,
    0xd4c1,
    0xd581,
    0x1540,
    0xd701,
    0x17c0,
    0x1680,
    0xd641,
    0xd201,
    0x12c0,
    0x1380,
    0xd341,
    0x1100,
    0xd1c1,
    0xd081,
    0x1040,
    0xf001,
    0x30c0,
    0x3180,
    0xf141,
    0x3300,
    0xf3c1,
    0xf281,
    0x3240,
    0x3600,
    0xf6c1,
    0xf781,
    0x3740,
    0xf501,
    0x35c0,
    0x3480,
    0xf441,
    0x3c00,
    0xfcc1,
    0xfd81,
    0x3d40,
    0xff01,
    0x3fc0,
    0x3e80,
    0xfe41,
    0xfa01,
    0x3ac0,
    0x3b80,
    0xfb41,
    0x3900,
    0xf9c1,
    0xf881,
    0x3840,
    0x2800,
    0xe8c1,
    0xe981,
    0x2940,
    0xeb01,
    0x2bc0,
    0x2a80,
    0xea41,
    0xee01,
    0x2ec0,
    0x2f80,
    0xef41,
    0x2d00,
    0xedc1,
    0xec81,
    0x2c40,
    0xe401,
    0x24c0,
    0x2580,
    0xe541,
    0x2700,
    0xe7c1,
    0xe681,
    0x2640,
    0x2200,
    0xe2c1,
    0xe381,
    0x2340,
    0xe101,
    0x21c0,
    0x2080,
    0xe041,
    0xa001,
    0x60c0,
    0x6180,
    0xa141,
    0x6300,
    0xa3c1,
    0xa281,
    0x6240,
    0x6600,
    0xa6c1,
    0xa781,
    0x6740,
    0xa501,
    0x65c0,
    0x6480,
    0xa441,
    0x6c00,
    0xacc1,
    0xad81,
    0x6d40,
    0xaf01,
    0x6fc0,
    0x6e80,
    0xae41,
    0xaa01,
    0x6ac0,
    0x6b80,
    0xab41,
    0x6900,
    0xa9c1,
    0xa881,
    0x6840,
    0x7800,
    0xb8c1,
    0xb981,
    0x7940,
    0xbb01,
    0x7bc0,
    0x7a80,
    0xba41,
    0xbe01,
    0x7ec0,
    0x7f80,
    0xbf41,
    0x7d00,
    0xbdc1,
    0xbc81,
    0x7c40,
    0xb401,
    0x74c0,
    0x7580,
    0xb541,
    0x7700,
    0xb7c1,
    0xb681,
    0x7640,
    0x7200,
    0xb2c1,
    0xb381,
    0x7340,
    0xb101,
    0x71c0,
    0x7080,
    0xb041,
    0x5000,
    0x90c1,
    0x9181,
    0x5140,
    0x9301,
    0x53c0,
    0x5280,
    0x9241,
    0x9601,
    0x56c0,
    0x5780,
    0x9741,
    0x5500,
    0x95c1,
    0x9481,
    0x5440,
    0x9c01,
    0x5cc0,
    0x5d80,
    0x9d41,
    0x5f00,
    0x9fc1,
    0x9e81,
    0x5e40,
    0x5a00,
    0x9ac1,
    0x9b81,
    0x5b40,
    0x9901,
    0x59c0,
    0x5880,
    0x9841,
    0x8801,
    0x48c0,
    0x4980,
    0x8941,
    0x4b00,
    0x8bc1,
    0x8a81,
    0x4a40,
    0x4e00,
    0x8ec1,
    0x8f81,
    0x4f40,
    0x8d01,
    0x4dc0,
    0x4c80,
    0x8c41,
    0x4400,
    0x84c1,
    0x8581,
    0x4540,
    0x8701,
    0x47c0,
    0x4680,
    0x8641,
    0x8201,
    0x42c0,
    0x4380,
    0x8341,
    0x4100,
    0x81c1,
    0x8081,
    0x4040
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc16 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('crc-16', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = ~~previous;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = (TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc16;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16ccitt.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`
// prettier-ignore
let TABLE = [
    0x0000,
    0x1021,
    0x2042,
    0x3063,
    0x4084,
    0x50a5,
    0x60c6,
    0x70e7,
    0x8108,
    0x9129,
    0xa14a,
    0xb16b,
    0xc18c,
    0xd1ad,
    0xe1ce,
    0xf1ef,
    0x1231,
    0x0210,
    0x3273,
    0x2252,
    0x52b5,
    0x4294,
    0x72f7,
    0x62d6,
    0x9339,
    0x8318,
    0xb37b,
    0xa35a,
    0xd3bd,
    0xc39c,
    0xf3ff,
    0xe3de,
    0x2462,
    0x3443,
    0x0420,
    0x1401,
    0x64e6,
    0x74c7,
    0x44a4,
    0x5485,
    0xa56a,
    0xb54b,
    0x8528,
    0x9509,
    0xe5ee,
    0xf5cf,
    0xc5ac,
    0xd58d,
    0x3653,
    0x2672,
    0x1611,
    0x0630,
    0x76d7,
    0x66f6,
    0x5695,
    0x46b4,
    0xb75b,
    0xa77a,
    0x9719,
    0x8738,
    0xf7df,
    0xe7fe,
    0xd79d,
    0xc7bc,
    0x48c4,
    0x58e5,
    0x6886,
    0x78a7,
    0x0840,
    0x1861,
    0x2802,
    0x3823,
    0xc9cc,
    0xd9ed,
    0xe98e,
    0xf9af,
    0x8948,
    0x9969,
    0xa90a,
    0xb92b,
    0x5af5,
    0x4ad4,
    0x7ab7,
    0x6a96,
    0x1a71,
    0x0a50,
    0x3a33,
    0x2a12,
    0xdbfd,
    0xcbdc,
    0xfbbf,
    0xeb9e,
    0x9b79,
    0x8b58,
    0xbb3b,
    0xab1a,
    0x6ca6,
    0x7c87,
    0x4ce4,
    0x5cc5,
    0x2c22,
    0x3c03,
    0x0c60,
    0x1c41,
    0xedae,
    0xfd8f,
    0xcdec,
    0xddcd,
    0xad2a,
    0xbd0b,
    0x8d68,
    0x9d49,
    0x7e97,
    0x6eb6,
    0x5ed5,
    0x4ef4,
    0x3e13,
    0x2e32,
    0x1e51,
    0x0e70,
    0xff9f,
    0xefbe,
    0xdfdd,
    0xcffc,
    0xbf1b,
    0xaf3a,
    0x9f59,
    0x8f78,
    0x9188,
    0x81a9,
    0xb1ca,
    0xa1eb,
    0xd10c,
    0xc12d,
    0xf14e,
    0xe16f,
    0x1080,
    0x00a1,
    0x30c2,
    0x20e3,
    0x5004,
    0x4025,
    0x7046,
    0x6067,
    0x83b9,
    0x9398,
    0xa3fb,
    0xb3da,
    0xc33d,
    0xd31c,
    0xe37f,
    0xf35e,
    0x02b1,
    0x1290,
    0x22f3,
    0x32d2,
    0x4235,
    0x5214,
    0x6277,
    0x7256,
    0xb5ea,
    0xa5cb,
    0x95a8,
    0x8589,
    0xf56e,
    0xe54f,
    0xd52c,
    0xc50d,
    0x34e2,
    0x24c3,
    0x14a0,
    0x0481,
    0x7466,
    0x6447,
    0x5424,
    0x4405,
    0xa7db,
    0xb7fa,
    0x8799,
    0x97b8,
    0xe75f,
    0xf77e,
    0xc71d,
    0xd73c,
    0x26d3,
    0x36f2,
    0x0691,
    0x16b0,
    0x6657,
    0x7676,
    0x4615,
    0x5634,
    0xd94c,
    0xc96d,
    0xf90e,
    0xe92f,
    0x99c8,
    0x89e9,
    0xb98a,
    0xa9ab,
    0x5844,
    0x4865,
    0x7806,
    0x6827,
    0x18c0,
    0x08e1,
    0x3882,
    0x28a3,
    0xcb7d,
    0xdb5c,
    0xeb3f,
    0xfb1e,
    0x8bf9,
    0x9bd8,
    0xabbb,
    0xbb9a,
    0x4a75,
    0x5a54,
    0x6a37,
    0x7a16,
    0x0af1,
    0x1ad0,
    0x2ab3,
    0x3a92,
    0xfd2e,
    0xed0f,
    0xdd6c,
    0xcd4d,
    0xbdaa,
    0xad8b,
    0x9de8,
    0x8dc9,
    0x7c26,
    0x6c07,
    0x5c64,
    0x4c45,
    0x3ca2,
    0x2c83,
    0x1ce0,
    0x0cc1,
    0xef1f,
    0xff3e,
    0xcf5d,
    0xdf7c,
    0xaf9b,
    0xbfba,
    0x8fd9,
    0x9ff8,
    0x6e17,
    0x7e36,
    0x4e55,
    0x5e74,
    0x2e93,
    0x3eb2,
    0x0ed1,
    0x1ef0
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc16ccitt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('ccitt', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = (TABLE[(crc >> 8 ^ byte) & 0xff] ^ crc << 8) & 0xffff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc16ccitt;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16modbus.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`
// prettier-ignore
let TABLE = [
    0x0000,
    0xc0c1,
    0xc181,
    0x0140,
    0xc301,
    0x03c0,
    0x0280,
    0xc241,
    0xc601,
    0x06c0,
    0x0780,
    0xc741,
    0x0500,
    0xc5c1,
    0xc481,
    0x0440,
    0xcc01,
    0x0cc0,
    0x0d80,
    0xcd41,
    0x0f00,
    0xcfc1,
    0xce81,
    0x0e40,
    0x0a00,
    0xcac1,
    0xcb81,
    0x0b40,
    0xc901,
    0x09c0,
    0x0880,
    0xc841,
    0xd801,
    0x18c0,
    0x1980,
    0xd941,
    0x1b00,
    0xdbc1,
    0xda81,
    0x1a40,
    0x1e00,
    0xdec1,
    0xdf81,
    0x1f40,
    0xdd01,
    0x1dc0,
    0x1c80,
    0xdc41,
    0x1400,
    0xd4c1,
    0xd581,
    0x1540,
    0xd701,
    0x17c0,
    0x1680,
    0xd641,
    0xd201,
    0x12c0,
    0x1380,
    0xd341,
    0x1100,
    0xd1c1,
    0xd081,
    0x1040,
    0xf001,
    0x30c0,
    0x3180,
    0xf141,
    0x3300,
    0xf3c1,
    0xf281,
    0x3240,
    0x3600,
    0xf6c1,
    0xf781,
    0x3740,
    0xf501,
    0x35c0,
    0x3480,
    0xf441,
    0x3c00,
    0xfcc1,
    0xfd81,
    0x3d40,
    0xff01,
    0x3fc0,
    0x3e80,
    0xfe41,
    0xfa01,
    0x3ac0,
    0x3b80,
    0xfb41,
    0x3900,
    0xf9c1,
    0xf881,
    0x3840,
    0x2800,
    0xe8c1,
    0xe981,
    0x2940,
    0xeb01,
    0x2bc0,
    0x2a80,
    0xea41,
    0xee01,
    0x2ec0,
    0x2f80,
    0xef41,
    0x2d00,
    0xedc1,
    0xec81,
    0x2c40,
    0xe401,
    0x24c0,
    0x2580,
    0xe541,
    0x2700,
    0xe7c1,
    0xe681,
    0x2640,
    0x2200,
    0xe2c1,
    0xe381,
    0x2340,
    0xe101,
    0x21c0,
    0x2080,
    0xe041,
    0xa001,
    0x60c0,
    0x6180,
    0xa141,
    0x6300,
    0xa3c1,
    0xa281,
    0x6240,
    0x6600,
    0xa6c1,
    0xa781,
    0x6740,
    0xa501,
    0x65c0,
    0x6480,
    0xa441,
    0x6c00,
    0xacc1,
    0xad81,
    0x6d40,
    0xaf01,
    0x6fc0,
    0x6e80,
    0xae41,
    0xaa01,
    0x6ac0,
    0x6b80,
    0xab41,
    0x6900,
    0xa9c1,
    0xa881,
    0x6840,
    0x7800,
    0xb8c1,
    0xb981,
    0x7940,
    0xbb01,
    0x7bc0,
    0x7a80,
    0xba41,
    0xbe01,
    0x7ec0,
    0x7f80,
    0xbf41,
    0x7d00,
    0xbdc1,
    0xbc81,
    0x7c40,
    0xb401,
    0x74c0,
    0x7580,
    0xb541,
    0x7700,
    0xb7c1,
    0xb681,
    0x7640,
    0x7200,
    0xb2c1,
    0xb381,
    0x7340,
    0xb101,
    0x71c0,
    0x7080,
    0xb041,
    0x5000,
    0x90c1,
    0x9181,
    0x5140,
    0x9301,
    0x53c0,
    0x5280,
    0x9241,
    0x9601,
    0x56c0,
    0x5780,
    0x9741,
    0x5500,
    0x95c1,
    0x9481,
    0x5440,
    0x9c01,
    0x5cc0,
    0x5d80,
    0x9d41,
    0x5f00,
    0x9fc1,
    0x9e81,
    0x5e40,
    0x5a00,
    0x9ac1,
    0x9b81,
    0x5b40,
    0x9901,
    0x59c0,
    0x5880,
    0x9841,
    0x8801,
    0x48c0,
    0x4980,
    0x8941,
    0x4b00,
    0x8bc1,
    0x8a81,
    0x4a40,
    0x4e00,
    0x8ec1,
    0x8f81,
    0x4f40,
    0x8d01,
    0x4dc0,
    0x4c80,
    0x8c41,
    0x4400,
    0x84c1,
    0x8581,
    0x4540,
    0x8701,
    0x47c0,
    0x4680,
    0x8641,
    0x8201,
    0x42c0,
    0x4380,
    0x8341,
    0x4100,
    0x81c1,
    0x8081,
    0x4040
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc16modbus = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('crc-16-modbus', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = (TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc16modbus;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16xmodem.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
const crc16xmodem = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('xmodem', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        let code = crc >>> 8 & 0xff;
        code ^= byte & 0xff;
        code ^= code >>> 4;
        crc = crc << 8 & 0xffff;
        crc ^= code;
        code = code << 5 & 0xffff;
        crc ^= code;
        code = code << 7 & 0xffff;
        crc ^= code;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc16xmodem;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16kermit.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`
// prettier-ignore
let TABLE = [
    0x0000,
    0x1189,
    0x2312,
    0x329b,
    0x4624,
    0x57ad,
    0x6536,
    0x74bf,
    0x8c48,
    0x9dc1,
    0xaf5a,
    0xbed3,
    0xca6c,
    0xdbe5,
    0xe97e,
    0xf8f7,
    0x1081,
    0x0108,
    0x3393,
    0x221a,
    0x56a5,
    0x472c,
    0x75b7,
    0x643e,
    0x9cc9,
    0x8d40,
    0xbfdb,
    0xae52,
    0xdaed,
    0xcb64,
    0xf9ff,
    0xe876,
    0x2102,
    0x308b,
    0x0210,
    0x1399,
    0x6726,
    0x76af,
    0x4434,
    0x55bd,
    0xad4a,
    0xbcc3,
    0x8e58,
    0x9fd1,
    0xeb6e,
    0xfae7,
    0xc87c,
    0xd9f5,
    0x3183,
    0x200a,
    0x1291,
    0x0318,
    0x77a7,
    0x662e,
    0x54b5,
    0x453c,
    0xbdcb,
    0xac42,
    0x9ed9,
    0x8f50,
    0xfbef,
    0xea66,
    0xd8fd,
    0xc974,
    0x4204,
    0x538d,
    0x6116,
    0x709f,
    0x0420,
    0x15a9,
    0x2732,
    0x36bb,
    0xce4c,
    0xdfc5,
    0xed5e,
    0xfcd7,
    0x8868,
    0x99e1,
    0xab7a,
    0xbaf3,
    0x5285,
    0x430c,
    0x7197,
    0x601e,
    0x14a1,
    0x0528,
    0x37b3,
    0x263a,
    0xdecd,
    0xcf44,
    0xfddf,
    0xec56,
    0x98e9,
    0x8960,
    0xbbfb,
    0xaa72,
    0x6306,
    0x728f,
    0x4014,
    0x519d,
    0x2522,
    0x34ab,
    0x0630,
    0x17b9,
    0xef4e,
    0xfec7,
    0xcc5c,
    0xddd5,
    0xa96a,
    0xb8e3,
    0x8a78,
    0x9bf1,
    0x7387,
    0x620e,
    0x5095,
    0x411c,
    0x35a3,
    0x242a,
    0x16b1,
    0x0738,
    0xffcf,
    0xee46,
    0xdcdd,
    0xcd54,
    0xb9eb,
    0xa862,
    0x9af9,
    0x8b70,
    0x8408,
    0x9581,
    0xa71a,
    0xb693,
    0xc22c,
    0xd3a5,
    0xe13e,
    0xf0b7,
    0x0840,
    0x19c9,
    0x2b52,
    0x3adb,
    0x4e64,
    0x5fed,
    0x6d76,
    0x7cff,
    0x9489,
    0x8500,
    0xb79b,
    0xa612,
    0xd2ad,
    0xc324,
    0xf1bf,
    0xe036,
    0x18c1,
    0x0948,
    0x3bd3,
    0x2a5a,
    0x5ee5,
    0x4f6c,
    0x7df7,
    0x6c7e,
    0xa50a,
    0xb483,
    0x8618,
    0x9791,
    0xe32e,
    0xf2a7,
    0xc03c,
    0xd1b5,
    0x2942,
    0x38cb,
    0x0a50,
    0x1bd9,
    0x6f66,
    0x7eef,
    0x4c74,
    0x5dfd,
    0xb58b,
    0xa402,
    0x9699,
    0x8710,
    0xf3af,
    0xe226,
    0xd0bd,
    0xc134,
    0x39c3,
    0x284a,
    0x1ad1,
    0x0b58,
    0x7fe7,
    0x6e6e,
    0x5cf5,
    0x4d7c,
    0xc60c,
    0xd785,
    0xe51e,
    0xf497,
    0x8028,
    0x91a1,
    0xa33a,
    0xb2b3,
    0x4a44,
    0x5bcd,
    0x6956,
    0x78df,
    0x0c60,
    0x1de9,
    0x2f72,
    0x3efb,
    0xd68d,
    0xc704,
    0xf59f,
    0xe416,
    0x90a9,
    0x8120,
    0xb3bb,
    0xa232,
    0x5ac5,
    0x4b4c,
    0x79d7,
    0x685e,
    0x1ce1,
    0x0d68,
    0x3ff3,
    0x2e7a,
    0xe70e,
    0xf687,
    0xc41c,
    0xd595,
    0xa12a,
    0xb0a3,
    0x8238,
    0x93b1,
    0x6b46,
    0x7acf,
    0x4854,
    0x59dd,
    0x2d62,
    0x3ceb,
    0x0e70,
    0x1ff9,
    0xf78f,
    0xe606,
    0xd49d,
    0xc514,
    0xb1ab,
    0xa022,
    0x92b9,
    0x8330,
    0x7bc7,
    0x6a4e,
    0x58d5,
    0x495c,
    0x3de3,
    0x2c6a,
    0x1ef1,
    0x0f78
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc16kermit = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('kermit', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = (TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc16kermit;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc24.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`
// prettier-ignore
let TABLE = [
    0x000000,
    0x864cfb,
    0x8ad50d,
    0x0c99f6,
    0x93e6e1,
    0x15aa1a,
    0x1933ec,
    0x9f7f17,
    0xa18139,
    0x27cdc2,
    0x2b5434,
    0xad18cf,
    0x3267d8,
    0xb42b23,
    0xb8b2d5,
    0x3efe2e,
    0xc54e89,
    0x430272,
    0x4f9b84,
    0xc9d77f,
    0x56a868,
    0xd0e493,
    0xdc7d65,
    0x5a319e,
    0x64cfb0,
    0xe2834b,
    0xee1abd,
    0x685646,
    0xf72951,
    0x7165aa,
    0x7dfc5c,
    0xfbb0a7,
    0x0cd1e9,
    0x8a9d12,
    0x8604e4,
    0x00481f,
    0x9f3708,
    0x197bf3,
    0x15e205,
    0x93aefe,
    0xad50d0,
    0x2b1c2b,
    0x2785dd,
    0xa1c926,
    0x3eb631,
    0xb8faca,
    0xb4633c,
    0x322fc7,
    0xc99f60,
    0x4fd39b,
    0x434a6d,
    0xc50696,
    0x5a7981,
    0xdc357a,
    0xd0ac8c,
    0x56e077,
    0x681e59,
    0xee52a2,
    0xe2cb54,
    0x6487af,
    0xfbf8b8,
    0x7db443,
    0x712db5,
    0xf7614e,
    0x19a3d2,
    0x9fef29,
    0x9376df,
    0x153a24,
    0x8a4533,
    0x0c09c8,
    0x00903e,
    0x86dcc5,
    0xb822eb,
    0x3e6e10,
    0x32f7e6,
    0xb4bb1d,
    0x2bc40a,
    0xad88f1,
    0xa11107,
    0x275dfc,
    0xdced5b,
    0x5aa1a0,
    0x563856,
    0xd074ad,
    0x4f0bba,
    0xc94741,
    0xc5deb7,
    0x43924c,
    0x7d6c62,
    0xfb2099,
    0xf7b96f,
    0x71f594,
    0xee8a83,
    0x68c678,
    0x645f8e,
    0xe21375,
    0x15723b,
    0x933ec0,
    0x9fa736,
    0x19ebcd,
    0x8694da,
    0x00d821,
    0x0c41d7,
    0x8a0d2c,
    0xb4f302,
    0x32bff9,
    0x3e260f,
    0xb86af4,
    0x2715e3,
    0xa15918,
    0xadc0ee,
    0x2b8c15,
    0xd03cb2,
    0x567049,
    0x5ae9bf,
    0xdca544,
    0x43da53,
    0xc596a8,
    0xc90f5e,
    0x4f43a5,
    0x71bd8b,
    0xf7f170,
    0xfb6886,
    0x7d247d,
    0xe25b6a,
    0x641791,
    0x688e67,
    0xeec29c,
    0x3347a4,
    0xb50b5f,
    0xb992a9,
    0x3fde52,
    0xa0a145,
    0x26edbe,
    0x2a7448,
    0xac38b3,
    0x92c69d,
    0x148a66,
    0x181390,
    0x9e5f6b,
    0x01207c,
    0x876c87,
    0x8bf571,
    0x0db98a,
    0xf6092d,
    0x7045d6,
    0x7cdc20,
    0xfa90db,
    0x65efcc,
    0xe3a337,
    0xef3ac1,
    0x69763a,
    0x578814,
    0xd1c4ef,
    0xdd5d19,
    0x5b11e2,
    0xc46ef5,
    0x42220e,
    0x4ebbf8,
    0xc8f703,
    0x3f964d,
    0xb9dab6,
    0xb54340,
    0x330fbb,
    0xac70ac,
    0x2a3c57,
    0x26a5a1,
    0xa0e95a,
    0x9e1774,
    0x185b8f,
    0x14c279,
    0x928e82,
    0x0df195,
    0x8bbd6e,
    0x872498,
    0x016863,
    0xfad8c4,
    0x7c943f,
    0x700dc9,
    0xf64132,
    0x693e25,
    0xef72de,
    0xe3eb28,
    0x65a7d3,
    0x5b59fd,
    0xdd1506,
    0xd18cf0,
    0x57c00b,
    0xc8bf1c,
    0x4ef3e7,
    0x426a11,
    0xc426ea,
    0x2ae476,
    0xaca88d,
    0xa0317b,
    0x267d80,
    0xb90297,
    0x3f4e6c,
    0x33d79a,
    0xb59b61,
    0x8b654f,
    0x0d29b4,
    0x01b042,
    0x87fcb9,
    0x1883ae,
    0x9ecf55,
    0x9256a3,
    0x141a58,
    0xefaaff,
    0x69e604,
    0x657ff2,
    0xe33309,
    0x7c4c1e,
    0xfa00e5,
    0xf69913,
    0x70d5e8,
    0x4e2bc6,
    0xc8673d,
    0xc4fecb,
    0x42b230,
    0xddcd27,
    0x5b81dc,
    0x57182a,
    0xd154d1,
    0x26359f,
    0xa07964,
    0xace092,
    0x2aac69,
    0xb5d37e,
    0x339f85,
    0x3f0673,
    0xb94a88,
    0x87b4a6,
    0x01f85d,
    0x0d61ab,
    0x8b2d50,
    0x145247,
    0x921ebc,
    0x9e874a,
    0x18cbb1,
    0xe37b16,
    0x6537ed,
    0x69ae1b,
    0xefe2e0,
    0x709df7,
    0xf6d10c,
    0xfa48fa,
    0x7c0401,
    0x42fa2f,
    0xc4b6d4,
    0xc82f22,
    0x4e63d9,
    0xd11cce,
    0x575035,
    0x5bc9c3,
    0xdd8538
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc24 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('crc-24', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = (TABLE[(crc >> 16 ^ byte) & 0xff] ^ crc << 8) & 0xffffff;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crc24;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc32.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`
// prettier-ignore
let TABLE = [
    0x00000000,
    0x77073096,
    0xee0e612c,
    0x990951ba,
    0x076dc419,
    0x706af48f,
    0xe963a535,
    0x9e6495a3,
    0x0edb8832,
    0x79dcb8a4,
    0xe0d5e91e,
    0x97d2d988,
    0x09b64c2b,
    0x7eb17cbd,
    0xe7b82d07,
    0x90bf1d91,
    0x1db71064,
    0x6ab020f2,
    0xf3b97148,
    0x84be41de,
    0x1adad47d,
    0x6ddde4eb,
    0xf4d4b551,
    0x83d385c7,
    0x136c9856,
    0x646ba8c0,
    0xfd62f97a,
    0x8a65c9ec,
    0x14015c4f,
    0x63066cd9,
    0xfa0f3d63,
    0x8d080df5,
    0x3b6e20c8,
    0x4c69105e,
    0xd56041e4,
    0xa2677172,
    0x3c03e4d1,
    0x4b04d447,
    0xd20d85fd,
    0xa50ab56b,
    0x35b5a8fa,
    0x42b2986c,
    0xdbbbc9d6,
    0xacbcf940,
    0x32d86ce3,
    0x45df5c75,
    0xdcd60dcf,
    0xabd13d59,
    0x26d930ac,
    0x51de003a,
    0xc8d75180,
    0xbfd06116,
    0x21b4f4b5,
    0x56b3c423,
    0xcfba9599,
    0xb8bda50f,
    0x2802b89e,
    0x5f058808,
    0xc60cd9b2,
    0xb10be924,
    0x2f6f7c87,
    0x58684c11,
    0xc1611dab,
    0xb6662d3d,
    0x76dc4190,
    0x01db7106,
    0x98d220bc,
    0xefd5102a,
    0x71b18589,
    0x06b6b51f,
    0x9fbfe4a5,
    0xe8b8d433,
    0x7807c9a2,
    0x0f00f934,
    0x9609a88e,
    0xe10e9818,
    0x7f6a0dbb,
    0x086d3d2d,
    0x91646c97,
    0xe6635c01,
    0x6b6b51f4,
    0x1c6c6162,
    0x856530d8,
    0xf262004e,
    0x6c0695ed,
    0x1b01a57b,
    0x8208f4c1,
    0xf50fc457,
    0x65b0d9c6,
    0x12b7e950,
    0x8bbeb8ea,
    0xfcb9887c,
    0x62dd1ddf,
    0x15da2d49,
    0x8cd37cf3,
    0xfbd44c65,
    0x4db26158,
    0x3ab551ce,
    0xa3bc0074,
    0xd4bb30e2,
    0x4adfa541,
    0x3dd895d7,
    0xa4d1c46d,
    0xd3d6f4fb,
    0x4369e96a,
    0x346ed9fc,
    0xad678846,
    0xda60b8d0,
    0x44042d73,
    0x33031de5,
    0xaa0a4c5f,
    0xdd0d7cc9,
    0x5005713c,
    0x270241aa,
    0xbe0b1010,
    0xc90c2086,
    0x5768b525,
    0x206f85b3,
    0xb966d409,
    0xce61e49f,
    0x5edef90e,
    0x29d9c998,
    0xb0d09822,
    0xc7d7a8b4,
    0x59b33d17,
    0x2eb40d81,
    0xb7bd5c3b,
    0xc0ba6cad,
    0xedb88320,
    0x9abfb3b6,
    0x03b6e20c,
    0x74b1d29a,
    0xead54739,
    0x9dd277af,
    0x04db2615,
    0x73dc1683,
    0xe3630b12,
    0x94643b84,
    0x0d6d6a3e,
    0x7a6a5aa8,
    0xe40ecf0b,
    0x9309ff9d,
    0x0a00ae27,
    0x7d079eb1,
    0xf00f9344,
    0x8708a3d2,
    0x1e01f268,
    0x6906c2fe,
    0xf762575d,
    0x806567cb,
    0x196c3671,
    0x6e6b06e7,
    0xfed41b76,
    0x89d32be0,
    0x10da7a5a,
    0x67dd4acc,
    0xf9b9df6f,
    0x8ebeeff9,
    0x17b7be43,
    0x60b08ed5,
    0xd6d6a3e8,
    0xa1d1937e,
    0x38d8c2c4,
    0x4fdff252,
    0xd1bb67f1,
    0xa6bc5767,
    0x3fb506dd,
    0x48b2364b,
    0xd80d2bda,
    0xaf0a1b4c,
    0x36034af6,
    0x41047a60,
    0xdf60efc3,
    0xa867df55,
    0x316e8eef,
    0x4669be79,
    0xcb61b38c,
    0xbc66831a,
    0x256fd2a0,
    0x5268e236,
    0xcc0c7795,
    0xbb0b4703,
    0x220216b9,
    0x5505262f,
    0xc5ba3bbe,
    0xb2bd0b28,
    0x2bb45a92,
    0x5cb36a04,
    0xc2d7ffa7,
    0xb5d0cf31,
    0x2cd99e8b,
    0x5bdeae1d,
    0x9b64c2b0,
    0xec63f226,
    0x756aa39c,
    0x026d930a,
    0x9c0906a9,
    0xeb0e363f,
    0x72076785,
    0x05005713,
    0x95bf4a82,
    0xe2b87a14,
    0x7bb12bae,
    0x0cb61b38,
    0x92d28e9b,
    0xe5d5be0d,
    0x7cdcefb7,
    0x0bdbdf21,
    0x86d3d2d4,
    0xf1d4e242,
    0x68ddb3f8,
    0x1fda836e,
    0x81be16cd,
    0xf6b9265b,
    0x6fb077e1,
    0x18b74777,
    0x88085ae6,
    0xff0f6a70,
    0x66063bca,
    0x11010b5c,
    0x8f659eff,
    0xf862ae69,
    0x616bffd3,
    0x166ccf45,
    0xa00ae278,
    0xd70dd2ee,
    0x4e048354,
    0x3903b3c2,
    0xa7672661,
    0xd06016f7,
    0x4969474d,
    0x3e6e77db,
    0xaed16a4a,
    0xd9d65adc,
    0x40df0b66,
    0x37d83bf0,
    0xa9bcae53,
    0xdebb9ec5,
    0x47b2cf7f,
    0x30b5ffe9,
    0xbdbdf21c,
    0xcabac28a,
    0x53b39330,
    0x24b4a3a6,
    0xbad03605,
    0xcdd70693,
    0x54de5729,
    0x23d967bf,
    0xb3667a2e,
    0xc4614ab8,
    0x5d681b02,
    0x2a6f2b94,
    0xb40bbe37,
    0xc30c8ea1,
    0x5a05df1b,
    0x2d02ef8d
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crc32 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('crc-32', function(buf, previous) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = previous === 0 ? 0 : ~~previous ^ -1;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;
    }
    return crc ^ -1;
});
const __TURBOPACK__default__export__ = crc32;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crcjam.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/create_buffer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/define_crc.js [app-rsc] (ecmascript)");
;
;
;
// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`
// prettier-ignore
let TABLE = [
    0x00000000,
    0x77073096,
    0xee0e612c,
    0x990951ba,
    0x076dc419,
    0x706af48f,
    0xe963a535,
    0x9e6495a3,
    0x0edb8832,
    0x79dcb8a4,
    0xe0d5e91e,
    0x97d2d988,
    0x09b64c2b,
    0x7eb17cbd,
    0xe7b82d07,
    0x90bf1d91,
    0x1db71064,
    0x6ab020f2,
    0xf3b97148,
    0x84be41de,
    0x1adad47d,
    0x6ddde4eb,
    0xf4d4b551,
    0x83d385c7,
    0x136c9856,
    0x646ba8c0,
    0xfd62f97a,
    0x8a65c9ec,
    0x14015c4f,
    0x63066cd9,
    0xfa0f3d63,
    0x8d080df5,
    0x3b6e20c8,
    0x4c69105e,
    0xd56041e4,
    0xa2677172,
    0x3c03e4d1,
    0x4b04d447,
    0xd20d85fd,
    0xa50ab56b,
    0x35b5a8fa,
    0x42b2986c,
    0xdbbbc9d6,
    0xacbcf940,
    0x32d86ce3,
    0x45df5c75,
    0xdcd60dcf,
    0xabd13d59,
    0x26d930ac,
    0x51de003a,
    0xc8d75180,
    0xbfd06116,
    0x21b4f4b5,
    0x56b3c423,
    0xcfba9599,
    0xb8bda50f,
    0x2802b89e,
    0x5f058808,
    0xc60cd9b2,
    0xb10be924,
    0x2f6f7c87,
    0x58684c11,
    0xc1611dab,
    0xb6662d3d,
    0x76dc4190,
    0x01db7106,
    0x98d220bc,
    0xefd5102a,
    0x71b18589,
    0x06b6b51f,
    0x9fbfe4a5,
    0xe8b8d433,
    0x7807c9a2,
    0x0f00f934,
    0x9609a88e,
    0xe10e9818,
    0x7f6a0dbb,
    0x086d3d2d,
    0x91646c97,
    0xe6635c01,
    0x6b6b51f4,
    0x1c6c6162,
    0x856530d8,
    0xf262004e,
    0x6c0695ed,
    0x1b01a57b,
    0x8208f4c1,
    0xf50fc457,
    0x65b0d9c6,
    0x12b7e950,
    0x8bbeb8ea,
    0xfcb9887c,
    0x62dd1ddf,
    0x15da2d49,
    0x8cd37cf3,
    0xfbd44c65,
    0x4db26158,
    0x3ab551ce,
    0xa3bc0074,
    0xd4bb30e2,
    0x4adfa541,
    0x3dd895d7,
    0xa4d1c46d,
    0xd3d6f4fb,
    0x4369e96a,
    0x346ed9fc,
    0xad678846,
    0xda60b8d0,
    0x44042d73,
    0x33031de5,
    0xaa0a4c5f,
    0xdd0d7cc9,
    0x5005713c,
    0x270241aa,
    0xbe0b1010,
    0xc90c2086,
    0x5768b525,
    0x206f85b3,
    0xb966d409,
    0xce61e49f,
    0x5edef90e,
    0x29d9c998,
    0xb0d09822,
    0xc7d7a8b4,
    0x59b33d17,
    0x2eb40d81,
    0xb7bd5c3b,
    0xc0ba6cad,
    0xedb88320,
    0x9abfb3b6,
    0x03b6e20c,
    0x74b1d29a,
    0xead54739,
    0x9dd277af,
    0x04db2615,
    0x73dc1683,
    0xe3630b12,
    0x94643b84,
    0x0d6d6a3e,
    0x7a6a5aa8,
    0xe40ecf0b,
    0x9309ff9d,
    0x0a00ae27,
    0x7d079eb1,
    0xf00f9344,
    0x8708a3d2,
    0x1e01f268,
    0x6906c2fe,
    0xf762575d,
    0x806567cb,
    0x196c3671,
    0x6e6b06e7,
    0xfed41b76,
    0x89d32be0,
    0x10da7a5a,
    0x67dd4acc,
    0xf9b9df6f,
    0x8ebeeff9,
    0x17b7be43,
    0x60b08ed5,
    0xd6d6a3e8,
    0xa1d1937e,
    0x38d8c2c4,
    0x4fdff252,
    0xd1bb67f1,
    0xa6bc5767,
    0x3fb506dd,
    0x48b2364b,
    0xd80d2bda,
    0xaf0a1b4c,
    0x36034af6,
    0x41047a60,
    0xdf60efc3,
    0xa867df55,
    0x316e8eef,
    0x4669be79,
    0xcb61b38c,
    0xbc66831a,
    0x256fd2a0,
    0x5268e236,
    0xcc0c7795,
    0xbb0b4703,
    0x220216b9,
    0x5505262f,
    0xc5ba3bbe,
    0xb2bd0b28,
    0x2bb45a92,
    0x5cb36a04,
    0xc2d7ffa7,
    0xb5d0cf31,
    0x2cd99e8b,
    0x5bdeae1d,
    0x9b64c2b0,
    0xec63f226,
    0x756aa39c,
    0x026d930a,
    0x9c0906a9,
    0xeb0e363f,
    0x72076785,
    0x05005713,
    0x95bf4a82,
    0xe2b87a14,
    0x7bb12bae,
    0x0cb61b38,
    0x92d28e9b,
    0xe5d5be0d,
    0x7cdcefb7,
    0x0bdbdf21,
    0x86d3d2d4,
    0xf1d4e242,
    0x68ddb3f8,
    0x1fda836e,
    0x81be16cd,
    0xf6b9265b,
    0x6fb077e1,
    0x18b74777,
    0x88085ae6,
    0xff0f6a70,
    0x66063bca,
    0x11010b5c,
    0x8f659eff,
    0xf862ae69,
    0x616bffd3,
    0x166ccf45,
    0xa00ae278,
    0xd70dd2ee,
    0x4e048354,
    0x3903b3c2,
    0xa7672661,
    0xd06016f7,
    0x4969474d,
    0x3e6e77db,
    0xaed16a4a,
    0xd9d65adc,
    0x40df0b66,
    0x37d83bf0,
    0xa9bcae53,
    0xdebb9ec5,
    0x47b2cf7f,
    0x30b5ffe9,
    0xbdbdf21c,
    0xcabac28a,
    0x53b39330,
    0x24b4a3a6,
    0xbad03605,
    0xcdd70693,
    0x54de5729,
    0x23d967bf,
    0xb3667a2e,
    0xc4614ab8,
    0x5d681b02,
    0x2a6f2b94,
    0xb40bbe37,
    0xc30c8ea1,
    0x5a05df1b,
    0x2d02ef8d
];
if (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);
const crcjam = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$define_crc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])('jam', function(buf, previous = -1) {
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].isBuffer(buf)) buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$create_buffer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(buf);
    let crc = previous === 0 ? 0 : ~~previous;
    for(let index = 0; index < buf.length; index++){
        const byte = buf[index];
        crc = TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;
    }
    return crc;
});
const __TURBOPACK__default__export__ = crcjam;
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc1$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc1.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc81wire$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc81wire.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16ccitt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16ccitt.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16modbus$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16modbus.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16xmodem$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16xmodem.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16kermit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16kermit.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc24$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc24.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc32.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crcjam$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crcjam.js [app-rsc] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const __TURBOPACK__default__export__ = {
    crc1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc1$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc8: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc81wire: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc81wire$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc16: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc16ccitt: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16ccitt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc16modbus: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16modbus$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc16xmodem: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16xmodem$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc16kermit: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16kermit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc24: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc24$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crc32: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"],
    crcjam: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crcjam$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]
};
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc1$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc1.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc81wire$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc81wire.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16ccitt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16ccitt.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16modbus$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16modbus.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16xmodem$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16xmodem.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16kermit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16kermit.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc24$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc24.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc32.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crcjam$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crcjam.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "crc1": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc1$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc16": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc16ccitt": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16ccitt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc16kermit": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16kermit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc16modbus": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16modbus$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc16xmodem": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16xmodem$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc24": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc24$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc32": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc8": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crc81wire": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc81wire$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "crcjam": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crcjam$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"]),
    "default": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc1$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc1.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16ccitt$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16ccitt.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16kermit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16kermit.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16modbus$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16modbus.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc16xmodem$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc16xmodem.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc24$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc24.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc32$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc32.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc8$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc8.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crc81wire$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crc81wire.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$crcjam$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/crcjam.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "crc1": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc1"]),
    "crc16": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc16"]),
    "crc16ccitt": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc16ccitt"]),
    "crc16kermit": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc16kermit"]),
    "crc16modbus": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc16modbus"]),
    "crc16xmodem": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc16xmodem"]),
    "crc24": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc24"]),
    "crc32": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc32"]),
    "crc8": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc8"]),
    "crc81wire": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crc81wire"]),
    "crcjam": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crcjam"]),
    "default": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$crc$40$3$2e$8$2e$0$2f$node_modules$2f$crc$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js [app-rsc] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/lodash.isequal@4.5.0/node_modules/lodash.isequal/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ /** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', asyncTag = '[object AsyncFunction]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', nullTag = '[object Null]', objectTag = '[object Object]', promiseTag = '[object Promise]', proxyTag = '[object Proxy]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', undefinedTag = '[object Undefined]', weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
/** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
/** Detect free variable `exports`. */ var freeExports = ("TURBOPACK compile-time value", "object") == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */ var freeModule = freeExports && ("TURBOPACK compile-time value", "object") == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
/** Used to access faster Node.js helpers. */ var nodeUtil = function() {
    try {
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
}();
/* Node.js helper references. */ var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */ function arrayFilter(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
    while(++index < length){
        var value = array[index];
        if (predicate(value, index, array)) {
            result[resIndex++] = value;
        }
    }
    return result;
}
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */ function arrayPush(array, values) {
    var index = -1, length = values.length, offset = array.length;
    while(++index < length){
        array[offset + index] = values[index];
    }
    return array;
}
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */ function arraySome(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length;
    while(++index < length){
        if (predicate(array[index], index, array)) {
            return true;
        }
    }
    return false;
}
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */ function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while(++index < n){
        result[index] = iteratee(index);
    }
    return result;
}
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */ function baseUnary(func) {
    return function(value) {
        return func(value);
    };
}
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function cacheHas(cache, key) {
    return cache.has(key);
}
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */ function getValue(object, key) {
    return object == null ? undefined : object[key];
}
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */ function mapToArray(map) {
    var index = -1, result = Array(map.size);
    map.forEach(function(value, key) {
        result[++index] = [
            key,
            value
        ];
    });
    return result;
}
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */ function overArg(func, transform) {
    return function(arg) {
        return func(transform(arg));
    };
}
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */ function setToArray(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value) {
        result[++index] = value;
    });
    return result;
}
/** Used for built-in method references. */ var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
/** Used to detect overreaching core-js shims. */ var coreJsData = root['__core-js_shared__'];
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var nativeObjectToString = objectProto.toString;
/** Used to detect if a method is native. */ var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/** Built-in value references. */ var Buffer = moduleExports ? root.Buffer : undefined, Symbol = root.Symbol, Uint8Array = root.Uint8Array, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeKeys = overArg(Object.keys, Object);
/* Built-in method references that are verified to be native. */ var DataView = getNative(root, 'DataView'), Map = getNative(root, 'Map'), Promise = getNative(root, 'Promise'), Set = getNative(root, 'Set'), WeakMap = getNative(root, 'WeakMap'), nativeCreate = getNative(Object, 'create');
/** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Hash(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */ function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
}
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
}
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
}
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */ function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
}
// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function ListCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */ function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
}
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
        return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
        data.pop();
    } else {
        splice.call(data, index, 1);
    }
    --this.size;
    return true;
}
/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
}
/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
}
/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */ function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
        ++this.size;
        data.push([
            key,
            value
        ]);
    } else {
        data[index][1] = value;
    }
    return this;
}
// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function MapCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */ function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
    };
}
/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
}
/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function mapCacheGet(key) {
    return getMapData(this, key).get(key);
}
/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function mapCacheHas(key) {
    return getMapData(this, key).has(key);
}
/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */ function mapCacheSet(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
}
// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */ function SetCache(values) {
    var index = -1, length = values == null ? 0 : values.length;
    this.__data__ = new MapCache;
    while(++index < length){
        this.add(values[index]);
    }
}
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */ function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
}
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */ function setCacheHas(value) {
    return this.__data__.has(value);
}
// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
}
/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */ function stackClear() {
    this.__data__ = new ListCache;
    this.size = 0;
}
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function stackDelete(key) {
    var data = this.__data__, result = data['delete'](key);
    this.size = data.size;
    return result;
}
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function stackGet(key) {
    return this.__data__.get(key);
}
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function stackHas(key) {
    return this.__data__.has(key);
}
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */ function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([
                key,
                value
            ]);
            this.size = ++data.size;
            return this;
        }
        data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
}
// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */ function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for(var key in value){
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (// Safari 9 has enumerable `arguments.length` in strict mode.
        key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
        isIndex(key, length)))) {
            result.push(key);
        }
    }
    return result;
}
/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function assocIndexOf(array, key) {
    var length = array.length;
    while(length--){
        if (eq(array[length][0], key)) {
            return length;
        }
    }
    return -1;
}
/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ function baseGetTag(value) {
    if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */ function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
}
/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */ function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
        return true;
    }
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
            return false;
        }
        objIsArr = true;
        objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'), othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
        if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack);
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
    }
    if (!isSameTag) {
        return false;
    }
    stack || (stack = new Stack);
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */ function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
        return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
}
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */ function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */ function baseKeys(object) {
    if (!isPrototype(object)) {
        return nativeKeys(object);
    }
    var result = [];
    for(var key in Object(object)){
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
        }
    }
    return result;
}
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) {
        return stacked == other;
    }
    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
    stack.set(array, other);
    stack.set(other, array);
    // Ignore non-index properties.
    while(++index < arrLength){
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
            if (compared) {
                continue;
            }
            result = false;
            break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
            if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    return seen.push(othIndex);
                }
            })) {
                result = false;
                break;
            }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
        }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
}
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch(tag){
        case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
            }
            object = object.buffer;
            other = other.buffer;
        case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                return false;
            }
            return true;
        case boolTag:
        case dateTag:
        case numberTag:
            // Coerce booleans to `1` or `0` and dates to milliseconds.
            // Invalid dates are coerced to `NaN`.
            return eq(+object, +other);
        case errorTag:
            return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
            // Coerce regexes to strings and treat strings, primitives and objects,
            // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
            // for more details.
            return object == other + '';
        case mapTag:
            var convert = mapToArray;
        case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) {
                return false;
            }
            // Assume cyclic values are equal.
            var stacked = stack.get(object);
            if (stacked) {
                return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG;
            // Recursively compare objects (susceptible to call stack limits).
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;
        case symbolTag:
            if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
    }
    return false;
}
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
        return false;
    }
    var index = objLength;
    while(index--){
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
        }
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) {
        return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while(++index < objLength){
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
        }
        skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
            result = false;
        }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
}
/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */ function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
}
/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */ function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}
/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */ function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
}
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */ function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
    try {
        value[symToStringTag] = undefined;
        var unmasked = true;
    } catch (e) {}
    var result = nativeObjectToString.call(value);
    if ("TURBOPACK compile-time truthy", 1) {
        if (isOwn) {
            value[symToStringTag] = tag;
        } else {
            delete value[symToStringTag];
        }
    }
    return result;
}
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
    if (object == null) {
        return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
    });
};
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ var getTag = baseGetTag;
// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) {
    getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : '';
        if (ctorString) {
            switch(ctorString){
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
        }
        return result;
    };
}
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */ function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */ function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */ function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
}
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */ function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
}
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */ function objectToString(value) {
    return nativeObjectToString.call(value);
}
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */ function toSource(func) {
    if (func != null) {
        try {
            return funcToString.call(func);
        } catch (e) {}
        try {
            return func + '';
        } catch (e) {}
    }
    return '';
}
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */ function eq(value, other) {
    return value === other || value !== value && other !== other;
}
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */ var isArguments = baseIsArguments(function() {
    return arguments;
}()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */ var isArray = Array.isArray;
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */ function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
}
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */ var isBuffer = nativeIsBuffer || stubFalse;
/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */ function isEqual(value, other) {
    return baseIsEqual(value, other);
}
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */ function isFunction(value) {
    if (!isObject(value)) {
        return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */ function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
}
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return value != null && typeof value == 'object';
}
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */ function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */ function stubArray() {
    return [];
}
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */ function stubFalse() {
    return false;
}
module.exports = isEqual;
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/resolveRequestDocument.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.resolveRequestDocument = void 0;
const graphql_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/index.mjs [app-rsc] (ecmascript)");
/**
 * helpers
 */ const extractOperationName = (document)=>{
    let operationName = undefined;
    const operationDefinitions = document.definitions.filter((definition)=>definition.kind === `OperationDefinition`);
    if (operationDefinitions.length === 1) {
        operationName = operationDefinitions[0]?.name?.value;
    }
    return operationName;
};
const resolveRequestDocument = (document)=>{
    if (typeof document === `string`) {
        let operationName = undefined;
        try {
            const parsedDocument = (0, graphql_1.parse)(document);
            operationName = extractOperationName(parsedDocument);
        } catch (err) {
        // Failed parsing the document, the operationName will be undefined
        }
        return {
            query: document,
            operationName
        };
    }
    const operationName = extractOperationName(document);
    return {
        query: (0, graphql_1.print)(document),
        operationName
    };
};
exports.resolveRequestDocument = resolveRequestDocument; //# sourceMappingURL=resolveRequestDocument.js.map
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ClientError = void 0;
class ClientError extends Error {
    constructor(response, request){
        const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({
            response,
            request
        })}`;
        super(message);
        Object.setPrototypeOf(this, ClientError.prototype);
        this.response = response;
        this.request = request;
        // this is needed as Safari doesn't support .captureStackTrace
        if (typeof Error.captureStackTrace === `function`) {
            Error.captureStackTrace(this, ClientError);
        }
    }
    static extractMessage(response) {
        return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`;
    }
}
exports.ClientError = ClientError; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/graphql-ws.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GraphQLWebSocketClient = void 0;
/* eslint-disable */ const resolveRequestDocument_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/resolveRequestDocument.js [app-rsc] (ecmascript)");
const types_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/types.js [app-rsc] (ecmascript)");
// import type WebSocket from 'ws'
const CONNECTION_INIT = `connection_init`;
const CONNECTION_ACK = `connection_ack`;
const PING = `ping`;
const PONG = `pong`;
const SUBSCRIBE = `subscribe`;
const NEXT = `next`;
const ERROR = `error`;
const COMPLETE = `complete`;
class GraphQLWebSocketMessage {
    get type() {
        return this._type;
    }
    get id() {
        return this._id;
    }
    get payload() {
        return this._payload;
    }
    constructor(type, payload, id){
        this._type = type;
        this._payload = payload;
        this._id = id;
    }
    get text() {
        const result = {
            type: this.type
        };
        if (this.id != null && this.id != undefined) result.id = this.id;
        if (this.payload != null && this.payload != undefined) result.payload = this.payload;
        return JSON.stringify(result);
    }
    static parse(data, f) {
        const { type, payload, id } = JSON.parse(data);
        return new GraphQLWebSocketMessage(type, f(payload), id);
    }
}
class GraphQLWebSocketClient {
    constructor(socket, { onInit, onAcknowledged, onPing, onPong }){
        this.socketState = {
            acknowledged: false,
            lastRequestId: 0,
            subscriptions: {}
        };
        this.socket = socket;
        socket.addEventListener(`open`, async (e)=>{
            this.socketState.acknowledged = false;
            this.socketState.subscriptions = {};
            socket.send(ConnectionInit(onInit ? await onInit() : null).text);
        });
        socket.addEventListener(`close`, (e)=>{
            this.socketState.acknowledged = false;
            this.socketState.subscriptions = {};
        });
        socket.addEventListener(`error`, (e)=>{
            console.error(e);
        });
        socket.addEventListener(`message`, (e)=>{
            try {
                const message = parseMessage(e.data);
                switch(message.type){
                    case CONNECTION_ACK:
                        {
                            if (this.socketState.acknowledged) {
                                console.warn(`Duplicate CONNECTION_ACK message ignored`);
                            } else {
                                this.socketState.acknowledged = true;
                                if (onAcknowledged) onAcknowledged(message.payload);
                            }
                            return;
                        }
                    case PING:
                        {
                            if (onPing) onPing(message.payload).then((r)=>socket.send(Pong(r).text));
                            else socket.send(Pong(null).text);
                            return;
                        }
                    case PONG:
                        {
                            if (onPong) onPong(message.payload);
                            return;
                        }
                }
                if (!this.socketState.acknowledged) {
                    // Web-socket connection not acknowledged
                    return;
                }
                if (message.id === undefined || message.id === null || !this.socketState.subscriptions[message.id]) {
                    // No subscription identifer or subscription indentifier is not found
                    return;
                }
                const { query, variables, subscriber } = this.socketState.subscriptions[message.id];
                switch(message.type){
                    case NEXT:
                        {
                            if (!message.payload.errors && message.payload.data) {
                                subscriber.next && subscriber.next(message.payload.data);
                            }
                            if (message.payload.errors) {
                                subscriber.error && subscriber.error(new types_js_1.ClientError({
                                    ...message.payload,
                                    status: 200
                                }, {
                                    query,
                                    variables
                                }));
                            } else {}
                            return;
                        }
                    case ERROR:
                        {
                            subscriber.error && subscriber.error(new types_js_1.ClientError({
                                errors: message.payload,
                                status: 200
                            }, {
                                query,
                                variables
                            }));
                            return;
                        }
                    case COMPLETE:
                        {
                            subscriber.complete && subscriber.complete();
                            delete this.socketState.subscriptions[message.id];
                            return;
                        }
                }
            } catch (e) {
                // Unexpected errors while handling graphql-ws message
                console.error(e);
                socket.close(1006);
            }
            socket.close(4400, `Unknown graphql-ws message.`);
        });
    }
    makeSubscribe(query, operationName, subscriber, variables) {
        const subscriptionId = (this.socketState.lastRequestId++).toString();
        this.socketState.subscriptions[subscriptionId] = {
            query,
            variables,
            subscriber
        };
        this.socket.send(Subscribe(subscriptionId, {
            query,
            operationName,
            variables
        }).text);
        return ()=>{
            this.socket.send(Complete(subscriptionId).text);
            delete this.socketState.subscriptions[subscriptionId];
        };
    }
    rawRequest(query, variables) {
        return new Promise((resolve, reject)=>{
            let result;
            this.rawSubscribe(query, {
                next: (data, extensions)=>result = {
                        data,
                        extensions
                    },
                error: reject,
                complete: ()=>resolve(result)
            }, variables);
        });
    }
    request(document, variables) {
        return new Promise((resolve, reject)=>{
            let result;
            this.subscribe(document, {
                next: (data)=>result = data,
                error: reject,
                complete: ()=>resolve(result)
            }, variables);
        });
    }
    subscribe(document, subscriber, variables) {
        const { query, operationName } = (0, resolveRequestDocument_js_1.resolveRequestDocument)(document);
        return this.makeSubscribe(query, operationName, subscriber, variables);
    }
    rawSubscribe(query, subscriber, variables) {
        return this.makeSubscribe(query, undefined, subscriber, variables);
    }
    ping(payload) {
        this.socket.send(Ping(payload).text);
    }
    close() {
        this.socket.close(1000);
    }
}
GraphQLWebSocketClient.PROTOCOL = `graphql-transport-ws`;
exports.GraphQLWebSocketClient = GraphQLWebSocketClient;
// Helper functions
function parseMessage(data, f = (a)=>a) {
    const m = GraphQLWebSocketMessage.parse(data, f);
    return m;
}
function ConnectionInit(payload) {
    return new GraphQLWebSocketMessage(CONNECTION_INIT, payload);
}
function Ping(payload) {
    return new GraphQLWebSocketMessage(PING, payload, undefined);
}
function Pong(payload) {
    return new GraphQLWebSocketMessage(PONG, payload, undefined);
}
function Subscribe(id, payload) {
    return new GraphQLWebSocketMessage(SUBSCRIBE, payload, id);
}
function Complete(id) {
    return new GraphQLWebSocketMessage(COMPLETE, undefined, id);
} //# sourceMappingURL=graphql-ws.js.map
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/defaultJsonSerializer.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultJsonSerializer = void 0;
exports.defaultJsonSerializer = JSON; //# sourceMappingURL=defaultJsonSerializer.js.map
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/helpers.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HeadersInstanceToPlainObject = exports.uppercase = void 0;
const uppercase = (str)=>str.toUpperCase();
exports.uppercase = uppercase;
/**
 * Convert Headers instance into regular object
 */ const HeadersInstanceToPlainObject = (headers)=>{
    const o = {};
    headers.forEach((v, k)=>{
        o[k] = v;
    });
    return o;
};
exports.HeadersInstanceToPlainObject = HeadersInstanceToPlainObject; //# sourceMappingURL=helpers.js.map
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/parseArgs.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseRawRequestExtendedArgs = exports.parseRequestExtendedArgs = exports.parseBatchRequestArgs = exports.parseRawRequestArgs = exports.parseRequestArgs = void 0;
const parseRequestArgs = (documentOrOptions, variables, requestHeaders)=>{
    return documentOrOptions.document ? documentOrOptions : {
        document: documentOrOptions,
        variables: variables,
        requestHeaders: requestHeaders,
        signal: undefined
    };
};
exports.parseRequestArgs = parseRequestArgs;
const parseRawRequestArgs = (queryOrOptions, variables, requestHeaders)=>{
    return queryOrOptions.query ? queryOrOptions : {
        query: queryOrOptions,
        variables: variables,
        requestHeaders: requestHeaders,
        signal: undefined
    };
};
exports.parseRawRequestArgs = parseRawRequestArgs;
const parseBatchRequestArgs = (documentsOrOptions, requestHeaders)=>{
    return documentsOrOptions.documents ? documentsOrOptions : {
        documents: documentsOrOptions,
        requestHeaders: requestHeaders,
        signal: undefined
    };
};
exports.parseBatchRequestArgs = parseBatchRequestArgs;
const parseRequestExtendedArgs = (urlOrOptions, document, ...variablesAndRequestHeaders)=>{
    const [variables, requestHeaders] = variablesAndRequestHeaders;
    return urlOrOptions.document ? urlOrOptions : {
        url: urlOrOptions,
        document: document,
        variables,
        requestHeaders,
        signal: undefined
    };
};
exports.parseRequestExtendedArgs = parseRequestExtendedArgs;
const parseRawRequestExtendedArgs = (urlOrOptions, query, ...variablesAndRequestHeaders)=>{
    const [variables, requestHeaders] = variablesAndRequestHeaders;
    return urlOrOptions.query ? urlOrOptions : {
        url: urlOrOptions,
        query: query,
        variables,
        requestHeaders,
        signal: undefined
    };
};
exports.parseRawRequestExtendedArgs = parseRawRequestExtendedArgs; //# sourceMappingURL=parseArgs.js.map
}}),
"[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = exports.batchRequests = exports.resolveRequestDocument = exports.GraphQLWebSocketClient = exports.gql = void 0;
const defaultJsonSerializer_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/defaultJsonSerializer.js [app-rsc] (ecmascript)");
const helpers_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/helpers.js [app-rsc] (ecmascript)");
const parseArgs_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/parseArgs.js [app-rsc] (ecmascript)");
const resolveRequestDocument_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/resolveRequestDocument.js [app-rsc] (ecmascript)");
const types_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/types.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ClientError", {
    enumerable: true,
    get: function() {
        return types_js_1.ClientError;
    }
});
const cross_fetch_1 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/node-ponyfill.js [app-rsc] (ecmascript)")), CrossFetch = cross_fetch_1;
/**
 * Convert the given headers configuration into a plain object.
 */ const resolveHeaders = (headers)=>{
    let oHeaders = {};
    if (headers) {
        if (typeof Headers !== `undefined` && headers instanceof Headers || CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers) {
            oHeaders = (0, helpers_js_1.HeadersInstanceToPlainObject)(headers);
        } else if (Array.isArray(headers)) {
            headers.forEach(([name, value])=>{
                if (name && value !== undefined) {
                    oHeaders[name] = value;
                }
            });
        } else {
            oHeaders = headers;
        }
    }
    return oHeaders;
};
/**
 * Clean a GraphQL document to send it via a GET query
 */ const cleanQuery = (str)=>str.replace(/([\s,]|#[^\n\r]+)+/g, ` `).trim();
/**
 * Create query string for GraphQL request
 */ const buildRequestConfig = (params)=>{
    if (!Array.isArray(params.query)) {
        const params_ = params;
        const search = [
            `query=${encodeURIComponent(cleanQuery(params_.query))}`
        ];
        if (params.variables) {
            search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`);
        }
        if (params_.operationName) {
            search.push(`operationName=${encodeURIComponent(params_.operationName)}`);
        }
        return search.join(`&`);
    }
    if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {
        throw new Error(`Cannot create query with given variable type, array expected`);
    }
    // Batch support
    const params_ = params;
    const payload = params.query.reduce((acc, currentQuery, index)=>{
        acc.push({
            query: cleanQuery(currentQuery),
            variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined
        });
        return acc;
    }, []);
    return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`;
};
const createHttpMethodFetcher = (method)=>async (params)=>{
        const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params;
        const headers = {
            ...params.headers
        };
        let queryParams = ``;
        let body = undefined;
        if (method === `POST`) {
            body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer);
            if (typeof body === `string`) {
                // @ts-expect-error todo
                headers[`Content-Type`] = `application/json`;
            }
        } else {
            // @ts-expect-error todo needs ADT for TS to understand the different states
            queryParams = buildRequestConfig({
                query,
                variables,
                operationName,
                jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer_js_1.defaultJsonSerializer
            });
        }
        const init = {
            method,
            headers,
            body,
            ...fetchOptions
        };
        let urlResolved = url;
        let initResolved = init;
        if (middleware) {
            const result = await Promise.resolve(middleware({
                ...init,
                url,
                operationName,
                variables
            }));
            const { url: urlNew, ...initNew } = result;
            urlResolved = urlNew;
            initResolved = initNew;
        }
        if (queryParams) {
            urlResolved = `${urlResolved}?${queryParams}`;
        }
        return await fetch(urlResolved, initResolved);
    };
/**
 * GraphQL Client.
 */ class GraphQLClient {
    constructor(url, requestConfig = {}){
        this.url = url;
        this.requestConfig = requestConfig;
        /**
         * Send a GraphQL query to the server.
         */ this.rawRequest = async (...args)=>{
            const [queryOrOptions, variables, requestHeaders] = args;
            const rawRequestOptions = (0, parseArgs_js_1.parseRawRequestArgs)(queryOrOptions, variables, requestHeaders);
            const { headers, fetch = cross_fetch_1.default, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;
            const { url } = this;
            if (rawRequestOptions.signal !== undefined) {
                fetchOptions.signal = rawRequestOptions.signal;
            }
            const { operationName } = (0, resolveRequestDocument_js_1.resolveRequestDocument)(rawRequestOptions.query);
            return makeRequest({
                url,
                query: rawRequestOptions.query,
                variables: rawRequestOptions.variables,
                headers: {
                    ...resolveHeaders(callOrIdentity(headers)),
                    ...resolveHeaders(rawRequestOptions.requestHeaders)
                },
                operationName,
                fetch,
                method,
                fetchOptions,
                middleware: requestMiddleware
            }).then((response)=>{
                if (responseMiddleware) {
                    responseMiddleware(response);
                }
                return response;
            }).catch((error)=>{
                if (responseMiddleware) {
                    responseMiddleware(error);
                }
                throw error;
            });
        };
    }
    async request(documentOrOptions, ...variablesAndRequestHeaders) {
        const [variables, requestHeaders] = variablesAndRequestHeaders;
        const requestOptions = (0, parseArgs_js_1.parseRequestArgs)(documentOrOptions, variables, requestHeaders);
        const { headers, fetch = cross_fetch_1.default, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;
        const { url } = this;
        if (requestOptions.signal !== undefined) {
            fetchOptions.signal = requestOptions.signal;
        }
        const { query, operationName } = (0, resolveRequestDocument_js_1.resolveRequestDocument)(requestOptions.document);
        return makeRequest({
            url,
            query,
            variables: requestOptions.variables,
            headers: {
                ...resolveHeaders(callOrIdentity(headers)),
                ...resolveHeaders(requestOptions.requestHeaders)
            },
            operationName,
            fetch,
            method,
            fetchOptions,
            middleware: requestMiddleware
        }).then((response)=>{
            if (responseMiddleware) {
                responseMiddleware(response);
            }
            return response.data;
        }).catch((error)=>{
            if (responseMiddleware) {
                responseMiddleware(error);
            }
            throw error;
        });
    }
    // prettier-ignore
    batchRequests(documentsOrOptions, requestHeaders) {
        const batchRequestOptions = (0, parseArgs_js_1.parseBatchRequestArgs)(documentsOrOptions, requestHeaders);
        const { headers, ...fetchOptions } = this.requestConfig;
        if (batchRequestOptions.signal !== undefined) {
            fetchOptions.signal = batchRequestOptions.signal;
        }
        const queries = batchRequestOptions.documents.map(({ document })=>(0, resolveRequestDocument_js_1.resolveRequestDocument)(document).query);
        const variables = batchRequestOptions.documents.map(({ variables })=>variables);
        return makeRequest({
            url: this.url,
            query: queries,
            // @ts-expect-error TODO reconcile batch variables into system.
            variables,
            headers: {
                ...resolveHeaders(callOrIdentity(headers)),
                ...resolveHeaders(batchRequestOptions.requestHeaders)
            },
            operationName: undefined,
            fetch: this.requestConfig.fetch ?? cross_fetch_1.default,
            method: this.requestConfig.method || `POST`,
            fetchOptions,
            middleware: this.requestConfig.requestMiddleware
        }).then((response)=>{
            if (this.requestConfig.responseMiddleware) {
                this.requestConfig.responseMiddleware(response);
            }
            return response.data;
        }).catch((error)=>{
            if (this.requestConfig.responseMiddleware) {
                this.requestConfig.responseMiddleware(error);
            }
            throw error;
        });
    }
    setHeaders(headers) {
        this.requestConfig.headers = headers;
        return this;
    }
    /**
     * Attach a header to the client. All subsequent requests will have this header.
     */ setHeader(key, value) {
        const { headers } = this.requestConfig;
        if (headers) {
            // todo what if headers is in nested array form... ?
            //@ts-expect-error todo
            headers[key] = value;
        } else {
            this.requestConfig.headers = {
                [key]: value
            };
        }
        return this;
    }
    /**
     * Change the client endpoint. All subsequent requests will send to this endpoint.
     */ setEndpoint(value) {
        this.url = value;
        return this;
    }
}
exports.GraphQLClient = GraphQLClient;
const makeRequest = async (params)=>{
    const { query, variables, fetchOptions } = params;
    const fetcher = createHttpMethodFetcher((0, helpers_js_1.uppercase)(params.method ?? `post`));
    const isBatchingQuery = Array.isArray(params.query);
    const response = await fetcher(params);
    const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer_js_1.defaultJsonSerializer);
    const successfullyReceivedData = Array.isArray(result) ? !result.some(({ data })=>!data) : Boolean(result.data);
    const successfullyPassedErrorPolicy = Array.isArray(result) || !result.errors || Array.isArray(result.errors) && !result.errors.length || fetchOptions.errorPolicy === `all` || fetchOptions.errorPolicy === `ignore`;
    if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {
        // @ts-expect-error TODO fixme
        const { errors: _, ...rest } = Array.isArray(result) ? result : result;
        const data = fetchOptions.errorPolicy === `ignore` ? rest : result;
        const dataEnvelope = isBatchingQuery ? {
            data
        } : data;
        // @ts-expect-error TODO
        return {
            ...dataEnvelope,
            headers: response.headers,
            status: response.status
        };
    } else {
        const errorResult = typeof result === `string` ? {
            error: result
        } : result;
        throw new types_js_1.ClientError(// @ts-expect-error TODO
        {
            ...errorResult,
            status: response.status,
            headers: response.headers
        }, {
            query,
            variables
        });
    }
};
/**
 * Send a GraphQL Query to the GraphQL server for execution.
 */ const rawRequest = async (...args)=>{
    const [urlOrOptions, query, ...variablesAndRequestHeaders] = args;
    const requestOptions = (0, parseArgs_js_1.parseRawRequestExtendedArgs)(urlOrOptions, query, ...variablesAndRequestHeaders);
    const client = new GraphQLClient(requestOptions.url);
    return client.rawRequest({
        ...requestOptions
    });
};
exports.rawRequest = rawRequest;
// prettier-ignore
// eslint-disable-next-line
async function request(urlOrOptions, document, ...variablesAndRequestHeaders) {
    const requestOptions = (0, parseArgs_js_1.parseRequestExtendedArgs)(urlOrOptions, document, ...variablesAndRequestHeaders);
    const client = new GraphQLClient(requestOptions.url);
    return client.request({
        ...requestOptions
    });
}
exports.request = request;
/**
 * Send a batch of GraphQL Document to the GraphQL server for execution.
 *
 * @example
 *
 * ```ts
 * // You can pass a raw string
 *
 * await batchRequests('https://foo.bar/graphql', [
 * {
 *  query: `
 *   {
 *     query {
 *       users
 *     }
 *   }`
 * },
 * {
 *   query: `
 *   {
 *     query {
 *       users
 *     }
 *   }`
 * }])
 *
 * // You can also pass a GraphQL DocumentNode as query. Convenient if you
 * // are using graphql-tag package.
 *
 * import gql from 'graphql-tag'
 *
 * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])
 * ```
 */ const batchRequests = async (...args)=>{
    const params = parseBatchRequestsArgsExtended(args);
    const client = new GraphQLClient(params.url);
    return client.batchRequests(params);
};
exports.batchRequests = batchRequests;
const parseBatchRequestsArgsExtended = (args)=>{
    if (args.length === 1) {
        return args[0];
    } else {
        return {
            url: args[0],
            documents: args[1],
            requestHeaders: args[2],
            signal: undefined
        };
    }
};
const createRequestBody = (query, variables, operationName, jsonSerializer)=>{
    const jsonSerializer_ = jsonSerializer ?? defaultJsonSerializer_js_1.defaultJsonSerializer;
    if (!Array.isArray(query)) {
        return jsonSerializer_.stringify({
            query,
            variables,
            operationName
        });
    }
    if (typeof variables !== `undefined` && !Array.isArray(variables)) {
        throw new Error(`Cannot create request body with given variable type, array expected`);
    }
    // Batch support
    const payload = query.reduce((acc, currentQuery, index)=>{
        acc.push({
            query: currentQuery,
            variables: variables ? variables[index] : undefined
        });
        return acc;
    }, []);
    return jsonSerializer_.stringify(payload);
};
const getResult = async (response, jsonSerializer)=>{
    let contentType;
    response.headers.forEach((value, key)=>{
        if (key.toLowerCase() === `content-type`) {
            contentType = value;
        }
    });
    if (contentType && (contentType.toLowerCase().startsWith(`application/json`) || contentType.toLowerCase().startsWith(`application/graphql+json`) || contentType.toLowerCase().startsWith(`application/graphql-response+json`))) {
        return jsonSerializer.parse(await response.text());
    } else {
        return response.text();
    }
};
const callOrIdentity = (value)=>{
    return typeof value === `function` ? value() : value;
};
/**
 * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.
 *
 * @example
 * ```
 * import { gql } from 'graphql-request'
 *
 * await request('https://foo.bar/graphql', gql`...`)
 * ```
 *
 * @remarks
 *
 * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named "gql". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.
 */ const gql = (chunks, ...variables)=>{
    return chunks.reduce((acc, chunk, index)=>`${acc}${chunk}${index in variables ? String(variables[index]) : ``}`, ``);
};
exports.gql = gql;
var graphql_ws_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/graphql-ws.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "GraphQLWebSocketClient", {
    enumerable: true,
    get: function() {
        return graphql_ws_js_1.GraphQLWebSocketClient;
    }
});
var resolveRequestDocument_js_2 = __turbopack_require__("[project]/node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/cjs/resolveRequestDocument.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "resolveRequestDocument", {
    enumerable: true,
    get: function() {
        return resolveRequestDocument_js_2.resolveRequestDocument;
    }
});
exports.default = request; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/webidl-conversions@3.0.1/node_modules/webidl-conversions/lib/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var conversions = {};
module.exports = conversions;
function sign(x) {
    return x < 0 ? -1 : 1;
}
function evenRound(x) {
    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.
    if (x % 1 === 0.5 && (x & 1) === 0) {
        return Math.floor(x);
    } else {
        return Math.round(x);
    }
}
function createNumberConversion(bitLength, typeOpts) {
    if (!typeOpts.unsigned) {
        --bitLength;
    }
    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);
    const upperBound = Math.pow(2, bitLength) - 1;
    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);
    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);
    return function(V, opts) {
        if (!opts) opts = {};
        let x = +V;
        if (opts.enforceRange) {
            if (!Number.isFinite(x)) {
                throw new TypeError("Argument is not a finite number");
            }
            x = sign(x) * Math.floor(Math.abs(x));
            if (x < lowerBound || x > upperBound) {
                throw new TypeError("Argument is not in byte range");
            }
            return x;
        }
        if (!isNaN(x) && opts.clamp) {
            x = evenRound(x);
            if (x < lowerBound) x = lowerBound;
            if (x > upperBound) x = upperBound;
            return x;
        }
        if (!Number.isFinite(x) || x === 0) {
            return 0;
        }
        x = sign(x) * Math.floor(Math.abs(x));
        x = x % moduloVal;
        if (!typeOpts.unsigned && x >= moduloBound) {
            return x - moduloVal;
        } else if (typeOpts.unsigned) {
            if (x < 0) {
                x += moduloVal;
            } else if (x === -0) {
                return 0;
            }
        }
        return x;
    };
}
conversions["void"] = function() {
    return undefined;
};
conversions["boolean"] = function(val) {
    return !!val;
};
conversions["byte"] = createNumberConversion(8, {
    unsigned: false
});
conversions["octet"] = createNumberConversion(8, {
    unsigned: true
});
conversions["short"] = createNumberConversion(16, {
    unsigned: false
});
conversions["unsigned short"] = createNumberConversion(16, {
    unsigned: true
});
conversions["long"] = createNumberConversion(32, {
    unsigned: false
});
conversions["unsigned long"] = createNumberConversion(32, {
    unsigned: true
});
conversions["long long"] = createNumberConversion(32, {
    unsigned: false,
    moduloBitLength: 64
});
conversions["unsigned long long"] = createNumberConversion(32, {
    unsigned: true,
    moduloBitLength: 64
});
conversions["double"] = function(V) {
    const x = +V;
    if (!Number.isFinite(x)) {
        throw new TypeError("Argument is not a finite floating-point value");
    }
    return x;
};
conversions["unrestricted double"] = function(V) {
    const x = +V;
    if (isNaN(x)) {
        throw new TypeError("Argument is NaN");
    }
    return x;
};
// not quite valid, but good enough for JS
conversions["float"] = conversions["double"];
conversions["unrestricted float"] = conversions["unrestricted double"];
conversions["DOMString"] = function(V, opts) {
    if (!opts) opts = {};
    if (opts.treatNullAsEmptyString && V === null) {
        return "";
    }
    return String(V);
};
conversions["ByteString"] = function(V, opts) {
    const x = String(V);
    let c = undefined;
    for(let i = 0; (c = x.codePointAt(i)) !== undefined; ++i){
        if (c > 255) {
            throw new TypeError("Argument is not a valid bytestring");
        }
    }
    return x;
};
conversions["USVString"] = function(V) {
    const S = String(V);
    const n = S.length;
    const U = [];
    for(let i = 0; i < n; ++i){
        const c = S.charCodeAt(i);
        if (c < 0xD800 || c > 0xDFFF) {
            U.push(String.fromCodePoint(c));
        } else if (0xDC00 <= c && c <= 0xDFFF) {
            U.push(String.fromCodePoint(0xFFFD));
        } else {
            if (i === n - 1) {
                U.push(String.fromCodePoint(0xFFFD));
            } else {
                const d = S.charCodeAt(i + 1);
                if (0xDC00 <= d && d <= 0xDFFF) {
                    const a = c & 0x3FF;
                    const b = d & 0x3FF;
                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));
                    ++i;
                } else {
                    U.push(String.fromCodePoint(0xFFFD));
                }
            }
        }
    }
    return U.join('');
};
conversions["Date"] = function(V, opts) {
    if (!(V instanceof Date)) {
        throw new TypeError("Argument is not a Date object");
    }
    if (isNaN(V)) {
        return undefined;
    }
    return V;
};
conversions["RegExp"] = function(V, opts) {
    if (!(V instanceof RegExp)) {
        V = new RegExp(V);
    }
    return V;
};
}}),
"[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
module.exports.mixin = function mixin(target, source) {
    const keys = Object.getOwnPropertyNames(source);
    for(let i = 0; i < keys.length; ++i){
        Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));
    }
};
module.exports.wrapperSymbol = Symbol("wrapper");
module.exports.implSymbol = Symbol("impl");
module.exports.wrapperForImpl = function(impl) {
    return impl[module.exports.wrapperSymbol];
};
module.exports.implForWrapper = function(wrapper) {
    return wrapper[module.exports.implSymbol];
};
}}),
"[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
const punycode = __turbopack_require__("[externals]/punycode [external] (punycode, cjs)");
const tr46 = __turbopack_require__("[project]/node_modules/.pnpm/tr46@0.0.3/node_modules/tr46/index.js [app-rsc] (ecmascript)");
const specialSchemes = {
    ftp: 21,
    file: null,
    gopher: 70,
    http: 80,
    https: 443,
    ws: 80,
    wss: 443
};
const failure = Symbol("failure");
function countSymbols(str) {
    return punycode.ucs2.decode(str).length;
}
function at(input, idx) {
    const c = input[idx];
    return isNaN(c) ? undefined : String.fromCodePoint(c);
}
function isASCIIDigit(c) {
    return c >= 0x30 && c <= 0x39;
}
function isASCIIAlpha(c) {
    return c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A;
}
function isASCIIAlphanumeric(c) {
    return isASCIIAlpha(c) || isASCIIDigit(c);
}
function isASCIIHex(c) {
    return isASCIIDigit(c) || c >= 0x41 && c <= 0x46 || c >= 0x61 && c <= 0x66;
}
function isSingleDot(buffer) {
    return buffer === "." || buffer.toLowerCase() === "%2e";
}
function isDoubleDot(buffer) {
    buffer = buffer.toLowerCase();
    return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";
}
function isWindowsDriveLetterCodePoints(cp1, cp2) {
    return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
}
function isWindowsDriveLetterString(string) {
    return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");
}
function isNormalizedWindowsDriveLetterString(string) {
    return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";
}
function containsForbiddenHostCodePoint(string) {
    return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
}
function containsForbiddenHostCodePointExcludingPercent(string) {
    return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
}
function isSpecialScheme(scheme) {
    return specialSchemes[scheme] !== undefined;
}
function isSpecial(url) {
    return isSpecialScheme(url.scheme);
}
function defaultPort(scheme) {
    return specialSchemes[scheme];
}
function percentEncode(c) {
    let hex = c.toString(16).toUpperCase();
    if (hex.length === 1) {
        hex = "0" + hex;
    }
    return "%" + hex;
}
function utf8PercentEncode(c) {
    const buf = new Buffer(c);
    let str = "";
    for(let i = 0; i < buf.length; ++i){
        str += percentEncode(buf[i]);
    }
    return str;
}
function utf8PercentDecode(str) {
    const input = new Buffer(str);
    const output = [];
    for(let i = 0; i < input.length; ++i){
        if (input[i] !== 37) {
            output.push(input[i]);
        } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {
            output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));
            i += 2;
        } else {
            output.push(input[i]);
        }
    }
    return new Buffer(output).toString();
}
function isC0ControlPercentEncode(c) {
    return c <= 0x1F || c > 0x7E;
}
const extraPathPercentEncodeSet = new Set([
    32,
    34,
    35,
    60,
    62,
    63,
    96,
    123,
    125
]);
function isPathPercentEncode(c) {
    return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
}
const extraUserinfoPercentEncodeSet = new Set([
    47,
    58,
    59,
    61,
    64,
    91,
    92,
    93,
    94,
    124
]);
function isUserinfoPercentEncode(c) {
    return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
}
function percentEncodeChar(c, encodeSetPredicate) {
    const cStr = String.fromCodePoint(c);
    if (encodeSetPredicate(c)) {
        return utf8PercentEncode(cStr);
    }
    return cStr;
}
function parseIPv4Number(input) {
    let R = 10;
    if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {
        input = input.substring(2);
        R = 16;
    } else if (input.length >= 2 && input.charAt(0) === "0") {
        input = input.substring(1);
        R = 8;
    }
    if (input === "") {
        return 0;
    }
    const regex = R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/;
    if (regex.test(input)) {
        return failure;
    }
    return parseInt(input, R);
}
function parseIPv4(input) {
    const parts = input.split(".");
    if (parts[parts.length - 1] === "") {
        if (parts.length > 1) {
            parts.pop();
        }
    }
    if (parts.length > 4) {
        return input;
    }
    const numbers = [];
    for (const part of parts){
        if (part === "") {
            return input;
        }
        const n = parseIPv4Number(part);
        if (n === failure) {
            return input;
        }
        numbers.push(n);
    }
    for(let i = 0; i < numbers.length - 1; ++i){
        if (numbers[i] > 255) {
            return failure;
        }
    }
    if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {
        return failure;
    }
    let ipv4 = numbers.pop();
    let counter = 0;
    for (const n of numbers){
        ipv4 += n * Math.pow(256, 3 - counter);
        ++counter;
    }
    return ipv4;
}
function serializeIPv4(address) {
    let output = "";
    let n = address;
    for(let i = 1; i <= 4; ++i){
        output = String(n % 256) + output;
        if (i !== 4) {
            output = "." + output;
        }
        n = Math.floor(n / 256);
    }
    return output;
}
function parseIPv6(input) {
    const address = [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
    ];
    let pieceIndex = 0;
    let compress = null;
    let pointer = 0;
    input = punycode.ucs2.decode(input);
    if (input[pointer] === 58) {
        if (input[pointer + 1] !== 58) {
            return failure;
        }
        pointer += 2;
        ++pieceIndex;
        compress = pieceIndex;
    }
    while(pointer < input.length){
        if (pieceIndex === 8) {
            return failure;
        }
        if (input[pointer] === 58) {
            if (compress !== null) {
                return failure;
            }
            ++pointer;
            ++pieceIndex;
            compress = pieceIndex;
            continue;
        }
        let value = 0;
        let length = 0;
        while(length < 4 && isASCIIHex(input[pointer])){
            value = value * 0x10 + parseInt(at(input, pointer), 16);
            ++pointer;
            ++length;
        }
        if (input[pointer] === 46) {
            if (length === 0) {
                return failure;
            }
            pointer -= length;
            if (pieceIndex > 6) {
                return failure;
            }
            let numbersSeen = 0;
            while(input[pointer] !== undefined){
                let ipv4Piece = null;
                if (numbersSeen > 0) {
                    if (input[pointer] === 46 && numbersSeen < 4) {
                        ++pointer;
                    } else {
                        return failure;
                    }
                }
                if (!isASCIIDigit(input[pointer])) {
                    return failure;
                }
                while(isASCIIDigit(input[pointer])){
                    const number = parseInt(at(input, pointer));
                    if (ipv4Piece === null) {
                        ipv4Piece = number;
                    } else if (ipv4Piece === 0) {
                        return failure;
                    } else {
                        ipv4Piece = ipv4Piece * 10 + number;
                    }
                    if (ipv4Piece > 255) {
                        return failure;
                    }
                    ++pointer;
                }
                address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;
                ++numbersSeen;
                if (numbersSeen === 2 || numbersSeen === 4) {
                    ++pieceIndex;
                }
            }
            if (numbersSeen !== 4) {
                return failure;
            }
            break;
        } else if (input[pointer] === 58) {
            ++pointer;
            if (input[pointer] === undefined) {
                return failure;
            }
        } else if (input[pointer] !== undefined) {
            return failure;
        }
        address[pieceIndex] = value;
        ++pieceIndex;
    }
    if (compress !== null) {
        let swaps = pieceIndex - compress;
        pieceIndex = 7;
        while(pieceIndex !== 0 && swaps > 0){
            const temp = address[compress + swaps - 1];
            address[compress + swaps - 1] = address[pieceIndex];
            address[pieceIndex] = temp;
            --pieceIndex;
            --swaps;
        }
    } else if (compress === null && pieceIndex !== 8) {
        return failure;
    }
    return address;
}
function serializeIPv6(address) {
    let output = "";
    const seqResult = findLongestZeroSequence(address);
    const compress = seqResult.idx;
    let ignore0 = false;
    for(let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex){
        if (ignore0 && address[pieceIndex] === 0) {
            continue;
        } else if (ignore0) {
            ignore0 = false;
        }
        if (compress === pieceIndex) {
            const separator = pieceIndex === 0 ? "::" : ":";
            output += separator;
            ignore0 = true;
            continue;
        }
        output += address[pieceIndex].toString(16);
        if (pieceIndex !== 7) {
            output += ":";
        }
    }
    return output;
}
function parseHost(input, isSpecialArg) {
    if (input[0] === "[") {
        if (input[input.length - 1] !== "]") {
            return failure;
        }
        return parseIPv6(input.substring(1, input.length - 1));
    }
    if (!isSpecialArg) {
        return parseOpaqueHost(input);
    }
    const domain = utf8PercentDecode(input);
    const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);
    if (asciiDomain === null) {
        return failure;
    }
    if (containsForbiddenHostCodePoint(asciiDomain)) {
        return failure;
    }
    const ipv4Host = parseIPv4(asciiDomain);
    if (typeof ipv4Host === "number" || ipv4Host === failure) {
        return ipv4Host;
    }
    return asciiDomain;
}
function parseOpaqueHost(input) {
    if (containsForbiddenHostCodePointExcludingPercent(input)) {
        return failure;
    }
    let output = "";
    const decoded = punycode.ucs2.decode(input);
    for(let i = 0; i < decoded.length; ++i){
        output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
    }
    return output;
}
function findLongestZeroSequence(arr) {
    let maxIdx = null;
    let maxLen = 1; // only find elements > 1
    let currStart = null;
    let currLen = 0;
    for(let i = 0; i < arr.length; ++i){
        if (arr[i] !== 0) {
            if (currLen > maxLen) {
                maxIdx = currStart;
                maxLen = currLen;
            }
            currStart = null;
            currLen = 0;
        } else {
            if (currStart === null) {
                currStart = i;
            }
            ++currLen;
        }
    }
    // if trailing zeros
    if (currLen > maxLen) {
        maxIdx = currStart;
        maxLen = currLen;
    }
    return {
        idx: maxIdx,
        len: maxLen
    };
}
function serializeHost(host) {
    if (typeof host === "number") {
        return serializeIPv4(host);
    }
    // IPv6 serializer
    if (host instanceof Array) {
        return "[" + serializeIPv6(host) + "]";
    }
    return host;
}
function trimControlChars(url) {
    return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
}
function trimTabAndNewline(url) {
    return url.replace(/\u0009|\u000A|\u000D/g, "");
}
function shortenPath(url) {
    const path = url.path;
    if (path.length === 0) {
        return;
    }
    if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {
        return;
    }
    path.pop();
}
function includesCredentials(url) {
    return url.username !== "" || url.password !== "";
}
function cannotHaveAUsernamePasswordPort(url) {
    return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
}
function isNormalizedWindowsDriveLetter(string) {
    return /^[A-Za-z]:$/.test(string);
}
function URLStateMachine(input, base, encodingOverride, url, stateOverride) {
    this.pointer = 0;
    this.input = input;
    this.base = base || null;
    this.encodingOverride = encodingOverride || "utf-8";
    this.stateOverride = stateOverride;
    this.url = url;
    this.failure = false;
    this.parseError = false;
    if (!this.url) {
        this.url = {
            scheme: "",
            username: "",
            password: "",
            host: null,
            port: null,
            path: [],
            query: null,
            fragment: null,
            cannotBeABaseURL: false
        };
        const res = trimControlChars(this.input);
        if (res !== this.input) {
            this.parseError = true;
        }
        this.input = res;
    }
    const res = trimTabAndNewline(this.input);
    if (res !== this.input) {
        this.parseError = true;
    }
    this.input = res;
    this.state = stateOverride || "scheme start";
    this.buffer = "";
    this.atFlag = false;
    this.arrFlag = false;
    this.passwordTokenSeenFlag = false;
    this.input = punycode.ucs2.decode(this.input);
    for(; this.pointer <= this.input.length; ++this.pointer){
        const c = this.input[this.pointer];
        const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);
        // exec state machine
        const ret = this["parse " + this.state](c, cStr);
        if (!ret) {
            break; // terminate algorithm
        } else if (ret === failure) {
            this.failure = true;
            break;
        }
    }
}
URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {
    if (isASCIIAlpha(c)) {
        this.buffer += cStr.toLowerCase();
        this.state = "scheme";
    } else if (!this.stateOverride) {
        this.state = "no scheme";
        --this.pointer;
    } else {
        this.parseError = true;
        return failure;
    }
    return true;
};
URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {
    if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {
        this.buffer += cStr.toLowerCase();
    } else if (c === 58) {
        if (this.stateOverride) {
            if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
                return false;
            }
            if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
                return false;
            }
            if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
                return false;
            }
            if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
                return false;
            }
        }
        this.url.scheme = this.buffer;
        this.buffer = "";
        if (this.stateOverride) {
            return false;
        }
        if (this.url.scheme === "file") {
            if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
                this.parseError = true;
            }
            this.state = "file";
        } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
            this.state = "special relative or authority";
        } else if (isSpecial(this.url)) {
            this.state = "special authority slashes";
        } else if (this.input[this.pointer + 1] === 47) {
            this.state = "path or authority";
            ++this.pointer;
        } else {
            this.url.cannotBeABaseURL = true;
            this.url.path.push("");
            this.state = "cannot-be-a-base-URL path";
        }
    } else if (!this.stateOverride) {
        this.buffer = "";
        this.state = "no scheme";
        this.pointer = -1;
    } else {
        this.parseError = true;
        return failure;
    }
    return true;
};
URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {
    if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {
        return failure;
    } else if (this.base.cannotBeABaseURL && c === 35) {
        this.url.scheme = this.base.scheme;
        this.url.path = this.base.path.slice();
        this.url.query = this.base.query;
        this.url.fragment = "";
        this.url.cannotBeABaseURL = true;
        this.state = "fragment";
    } else if (this.base.scheme === "file") {
        this.state = "file";
        --this.pointer;
    } else {
        this.state = "relative";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {
    if (c === 47 && this.input[this.pointer + 1] === 47) {
        this.state = "special authority ignore slashes";
        ++this.pointer;
    } else {
        this.parseError = true;
        this.state = "relative";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {
    if (c === 47) {
        this.state = "authority";
    } else {
        this.state = "path";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse relative"] = function parseRelative(c) {
    this.url.scheme = this.base.scheme;
    if (isNaN(c)) {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice();
        this.url.query = this.base.query;
    } else if (c === 47) {
        this.state = "relative slash";
    } else if (c === 63) {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice();
        this.url.query = "";
        this.state = "query";
    } else if (c === 35) {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice();
        this.url.query = this.base.query;
        this.url.fragment = "";
        this.state = "fragment";
    } else if (isSpecial(this.url) && c === 92) {
        this.parseError = true;
        this.state = "relative slash";
    } else {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice(0, this.base.path.length - 1);
        this.state = "path";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {
    if (isSpecial(this.url) && (c === 47 || c === 92)) {
        if (c === 92) {
            this.parseError = true;
        }
        this.state = "special authority ignore slashes";
    } else if (c === 47) {
        this.state = "authority";
    } else {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.state = "path";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {
    if (c === 47 && this.input[this.pointer + 1] === 47) {
        this.state = "special authority ignore slashes";
        ++this.pointer;
    } else {
        this.parseError = true;
        this.state = "special authority ignore slashes";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {
    if (c !== 47 && c !== 92) {
        this.state = "authority";
        --this.pointer;
    } else {
        this.parseError = true;
    }
    return true;
};
URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {
    if (c === 64) {
        this.parseError = true;
        if (this.atFlag) {
            this.buffer = "%40" + this.buffer;
        }
        this.atFlag = true;
        // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars
        const len = countSymbols(this.buffer);
        for(let pointer = 0; pointer < len; ++pointer){
            const codePoint = this.buffer.codePointAt(pointer);
            if (codePoint === 58 && !this.passwordTokenSeenFlag) {
                this.passwordTokenSeenFlag = true;
                continue;
            }
            const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
            if (this.passwordTokenSeenFlag) {
                this.url.password += encodedCodePoints;
            } else {
                this.url.username += encodedCodePoints;
            }
        }
        this.buffer = "";
    } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        if (this.atFlag && this.buffer === "") {
            this.parseError = true;
            return failure;
        }
        this.pointer -= countSymbols(this.buffer) + 1;
        this.buffer = "";
        this.state = "host";
    } else {
        this.buffer += cStr;
    }
    return true;
};
URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {
    if (this.stateOverride && this.url.scheme === "file") {
        --this.pointer;
        this.state = "file host";
    } else if (c === 58 && !this.arrFlag) {
        if (this.buffer === "") {
            this.parseError = true;
            return failure;
        }
        const host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure) {
            return failure;
        }
        this.url.host = host;
        this.buffer = "";
        this.state = "port";
        if (this.stateOverride === "hostname") {
            return false;
        }
    } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        --this.pointer;
        if (isSpecial(this.url) && this.buffer === "") {
            this.parseError = true;
            return failure;
        } else if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null)) {
            this.parseError = true;
            return false;
        }
        const host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure) {
            return failure;
        }
        this.url.host = host;
        this.buffer = "";
        this.state = "path start";
        if (this.stateOverride) {
            return false;
        }
    } else {
        if (c === 91) {
            this.arrFlag = true;
        } else if (c === 93) {
            this.arrFlag = false;
        }
        this.buffer += cStr;
    }
    return true;
};
URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {
    if (isASCIIDigit(c)) {
        this.buffer += cStr;
    } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {
        if (this.buffer !== "") {
            const port = parseInt(this.buffer);
            if (port > Math.pow(2, 16) - 1) {
                this.parseError = true;
                return failure;
            }
            this.url.port = port === defaultPort(this.url.scheme) ? null : port;
            this.buffer = "";
        }
        if (this.stateOverride) {
            return false;
        }
        this.state = "path start";
        --this.pointer;
    } else {
        this.parseError = true;
        return failure;
    }
    return true;
};
const fileOtherwiseCodePoints = new Set([
    47,
    92,
    63,
    35
]);
URLStateMachine.prototype["parse file"] = function parseFile(c) {
    this.url.scheme = "file";
    if (c === 47 || c === 92) {
        if (c === 92) {
            this.parseError = true;
        }
        this.state = "file slash";
    } else if (this.base !== null && this.base.scheme === "file") {
        if (isNaN(c)) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            this.url.query = this.base.query;
        } else if (c === 63) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            this.url.query = "";
            this.state = "query";
        } else if (c === 35) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            this.url.query = this.base.query;
            this.url.fragment = "";
            this.state = "fragment";
        } else {
            if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
            !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
            !fileOtherwiseCodePoints.has(this.input[this.pointer + 2])) {
                this.url.host = this.base.host;
                this.url.path = this.base.path.slice();
                shortenPath(this.url);
            } else {
                this.parseError = true;
            }
            this.state = "path";
            --this.pointer;
        }
    } else {
        this.state = "path";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {
    if (c === 47 || c === 92) {
        if (c === 92) {
            this.parseError = true;
        }
        this.state = "file host";
    } else {
        if (this.base !== null && this.base.scheme === "file") {
            if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
                this.url.path.push(this.base.path[0]);
            } else {
                this.url.host = this.base.host;
            }
        }
        this.state = "path";
        --this.pointer;
    }
    return true;
};
URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {
    if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {
        --this.pointer;
        if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
            this.parseError = true;
            this.state = "path";
        } else if (this.buffer === "") {
            this.url.host = "";
            if (this.stateOverride) {
                return false;
            }
            this.state = "path start";
        } else {
            let host = parseHost(this.buffer, isSpecial(this.url));
            if (host === failure) {
                return failure;
            }
            if (host === "localhost") {
                host = "";
            }
            this.url.host = host;
            if (this.stateOverride) {
                return false;
            }
            this.buffer = "";
            this.state = "path start";
        }
    } else {
        this.buffer += cStr;
    }
    return true;
};
URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {
    if (isSpecial(this.url)) {
        if (c === 92) {
            this.parseError = true;
        }
        this.state = "path";
        if (c !== 47 && c !== 92) {
            --this.pointer;
        }
    } else if (!this.stateOverride && c === 63) {
        this.url.query = "";
        this.state = "query";
    } else if (!this.stateOverride && c === 35) {
        this.url.fragment = "";
        this.state = "fragment";
    } else if (c !== undefined) {
        this.state = "path";
        if (c !== 47) {
            --this.pointer;
        }
    }
    return true;
};
URLStateMachine.prototype["parse path"] = function parsePath(c) {
    if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {
        if (isSpecial(this.url) && c === 92) {
            this.parseError = true;
        }
        if (isDoubleDot(this.buffer)) {
            shortenPath(this.url);
            if (c !== 47 && !(isSpecial(this.url) && c === 92)) {
                this.url.path.push("");
            }
        } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {
            this.url.path.push("");
        } else if (!isSingleDot(this.buffer)) {
            if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
                if (this.url.host !== "" && this.url.host !== null) {
                    this.parseError = true;
                    this.url.host = "";
                }
                this.buffer = this.buffer[0] + ":";
            }
            this.url.path.push(this.buffer);
        }
        this.buffer = "";
        if (this.url.scheme === "file" && (c === undefined || c === 63 || c === 35)) {
            while(this.url.path.length > 1 && this.url.path[0] === ""){
                this.parseError = true;
                this.url.path.shift();
            }
        }
        if (c === 63) {
            this.url.query = "";
            this.state = "query";
        }
        if (c === 35) {
            this.url.fragment = "";
            this.state = "fragment";
        }
    } else {
        // TODO: If c is not a URL code point and not "%", parse error.
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
        }
        this.buffer += percentEncodeChar(c, isPathPercentEncode);
    }
    return true;
};
URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {
    if (c === 63) {
        this.url.query = "";
        this.state = "query";
    } else if (c === 35) {
        this.url.fragment = "";
        this.state = "fragment";
    } else {
        // TODO: Add: not a URL code point
        if (!isNaN(c) && c !== 37) {
            this.parseError = true;
        }
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
        }
        if (!isNaN(c)) {
            this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);
        }
    }
    return true;
};
URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {
    if (isNaN(c) || !this.stateOverride && c === 35) {
        if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
            this.encodingOverride = "utf-8";
        }
        const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead
        for(let i = 0; i < buffer.length; ++i){
            if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E) {
                this.url.query += percentEncode(buffer[i]);
            } else {
                this.url.query += String.fromCodePoint(buffer[i]);
            }
        }
        this.buffer = "";
        if (c === 35) {
            this.url.fragment = "";
            this.state = "fragment";
        }
    } else {
        // TODO: If c is not a URL code point and not "%", parse error.
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
        }
        this.buffer += cStr;
    }
    return true;
};
URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {
    if (isNaN(c)) {} else if (c === 0x0) {
        this.parseError = true;
    } else {
        // TODO: If c is not a URL code point and not "%", parse error.
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
        }
        this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);
    }
    return true;
};
function serializeURL(url, excludeFragment) {
    let output = url.scheme + ":";
    if (url.host !== null) {
        output += "//";
        if (url.username !== "" || url.password !== "") {
            output += url.username;
            if (url.password !== "") {
                output += ":" + url.password;
            }
            output += "@";
        }
        output += serializeHost(url.host);
        if (url.port !== null) {
            output += ":" + url.port;
        }
    } else if (url.host === null && url.scheme === "file") {
        output += "//";
    }
    if (url.cannotBeABaseURL) {
        output += url.path[0];
    } else {
        for (const string of url.path){
            output += "/" + string;
        }
    }
    if (url.query !== null) {
        output += "?" + url.query;
    }
    if (!excludeFragment && url.fragment !== null) {
        output += "#" + url.fragment;
    }
    return output;
}
function serializeOrigin(tuple) {
    let result = tuple.scheme + "://";
    result += serializeHost(tuple.host);
    if (tuple.port !== null) {
        result += ":" + tuple.port;
    }
    return result;
}
module.exports.serializeURL = serializeURL;
module.exports.serializeURLOrigin = function(url) {
    // https://url.spec.whatwg.org/#concept-url-origin
    switch(url.scheme){
        case "blob":
            try {
                return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));
            } catch (e) {
                // serializing an opaque origin returns "null"
                return "null";
            }
        case "ftp":
        case "gopher":
        case "http":
        case "https":
        case "ws":
        case "wss":
            return serializeOrigin({
                scheme: url.scheme,
                host: url.host,
                port: url.port
            });
        case "file":
            // spec says "exercise to the reader", chrome says "file://"
            return "file://";
        default:
            // serializing an opaque origin returns "null"
            return "null";
    }
};
module.exports.basicURLParse = function(input, options) {
    if (options === undefined) {
        options = {};
    }
    const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);
    if (usm.failure) {
        return "failure";
    }
    return usm.url;
};
module.exports.setTheUsername = function(url, username) {
    url.username = "";
    const decoded = punycode.ucs2.decode(username);
    for(let i = 0; i < decoded.length; ++i){
        url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
    }
};
module.exports.setThePassword = function(url, password) {
    url.password = "";
    const decoded = punycode.ucs2.decode(password);
    for(let i = 0; i < decoded.length; ++i){
        url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
    }
};
module.exports.serializeHost = serializeHost;
module.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;
module.exports.serializeInteger = function(integer) {
    return String(integer);
};
module.exports.parseURL = function(input, options) {
    if (options === undefined) {
        options = {};
    }
    // We don't handle blobs, so this just delegates:
    return module.exports.basicURLParse(input, {
        baseURL: options.baseURL,
        encodingOverride: options.encodingOverride
    });
};
}}),
"[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL-impl.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
const usm = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)");
exports.implementation = class URLImpl {
    constructor(constructorArgs){
        const url = constructorArgs[0];
        const base = constructorArgs[1];
        let parsedBase = null;
        if (base !== undefined) {
            parsedBase = usm.basicURLParse(base);
            if (parsedBase === "failure") {
                throw new TypeError("Invalid base URL");
            }
        }
        const parsedURL = usm.basicURLParse(url, {
            baseURL: parsedBase
        });
        if (parsedURL === "failure") {
            throw new TypeError("Invalid URL");
        }
        this._url = parsedURL;
    // TODO: query stuff
    }
    get href() {
        return usm.serializeURL(this._url);
    }
    set href(v) {
        const parsedURL = usm.basicURLParse(v);
        if (parsedURL === "failure") {
            throw new TypeError("Invalid URL");
        }
        this._url = parsedURL;
    }
    get origin() {
        return usm.serializeURLOrigin(this._url);
    }
    get protocol() {
        return this._url.scheme + ":";
    }
    set protocol(v) {
        usm.basicURLParse(v + ":", {
            url: this._url,
            stateOverride: "scheme start"
        });
    }
    get username() {
        return this._url.username;
    }
    set username(v) {
        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
            return;
        }
        usm.setTheUsername(this._url, v);
    }
    get password() {
        return this._url.password;
    }
    set password(v) {
        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
            return;
        }
        usm.setThePassword(this._url, v);
    }
    get host() {
        const url = this._url;
        if (url.host === null) {
            return "";
        }
        if (url.port === null) {
            return usm.serializeHost(url.host);
        }
        return usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
    }
    set host(v) {
        if (this._url.cannotBeABaseURL) {
            return;
        }
        usm.basicURLParse(v, {
            url: this._url,
            stateOverride: "host"
        });
    }
    get hostname() {
        if (this._url.host === null) {
            return "";
        }
        return usm.serializeHost(this._url.host);
    }
    set hostname(v) {
        if (this._url.cannotBeABaseURL) {
            return;
        }
        usm.basicURLParse(v, {
            url: this._url,
            stateOverride: "hostname"
        });
    }
    get port() {
        if (this._url.port === null) {
            return "";
        }
        return usm.serializeInteger(this._url.port);
    }
    set port(v) {
        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
            return;
        }
        if (v === "") {
            this._url.port = null;
        } else {
            usm.basicURLParse(v, {
                url: this._url,
                stateOverride: "port"
            });
        }
    }
    get pathname() {
        if (this._url.cannotBeABaseURL) {
            return this._url.path[0];
        }
        if (this._url.path.length === 0) {
            return "";
        }
        return "/" + this._url.path.join("/");
    }
    set pathname(v) {
        if (this._url.cannotBeABaseURL) {
            return;
        }
        this._url.path = [];
        usm.basicURLParse(v, {
            url: this._url,
            stateOverride: "path start"
        });
    }
    get search() {
        if (this._url.query === null || this._url.query === "") {
            return "";
        }
        return "?" + this._url.query;
    }
    set search(v) {
        // TODO: query stuff
        const url = this._url;
        if (v === "") {
            url.query = null;
            return;
        }
        const input = v[0] === "?" ? v.substring(1) : v;
        url.query = "";
        usm.basicURLParse(input, {
            url,
            stateOverride: "query"
        });
    }
    get hash() {
        if (this._url.fragment === null || this._url.fragment === "") {
            return "";
        }
        return "#" + this._url.fragment;
    }
    set hash(v) {
        if (v === "") {
            this._url.fragment = null;
            return;
        }
        const input = v[0] === "#" ? v.substring(1) : v;
        this._url.fragment = "";
        usm.basicURLParse(input, {
            url: this._url,
            stateOverride: "fragment"
        });
    }
    toJSON() {
        return this.href;
    }
};
}}),
"[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
const conversions = __turbopack_require__("[project]/node_modules/.pnpm/webidl-conversions@3.0.1/node_modules/webidl-conversions/lib/index.js [app-rsc] (ecmascript)");
const utils = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/utils.js [app-rsc] (ecmascript)");
const Impl = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL-impl.js [app-rsc] (ecmascript)");
const impl = utils.implSymbol;
function URL(url) {
    if (!this || this[impl] || !(this instanceof URL)) {
        throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
    }
    if (arguments.length < 1) {
        throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
    }
    const args = [];
    for(let i = 0; i < arguments.length && i < 2; ++i){
        args[i] = arguments[i];
    }
    args[0] = conversions["USVString"](args[0]);
    if (args[1] !== undefined) {
        args[1] = conversions["USVString"](args[1]);
    }
    module.exports.setup(this, args);
}
URL.prototype.toJSON = function toJSON() {
    if (!this || !module.exports.is(this)) {
        throw new TypeError("Illegal invocation");
    }
    const args = [];
    for(let i = 0; i < arguments.length && i < 0; ++i){
        args[i] = arguments[i];
    }
    return this[impl].toJSON.apply(this[impl], args);
};
Object.defineProperty(URL.prototype, "href", {
    get () {
        return this[impl].href;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].href = V;
    },
    enumerable: true,
    configurable: true
});
URL.prototype.toString = function() {
    if (!this || !module.exports.is(this)) {
        throw new TypeError("Illegal invocation");
    }
    return this.href;
};
Object.defineProperty(URL.prototype, "origin", {
    get () {
        return this[impl].origin;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "protocol", {
    get () {
        return this[impl].protocol;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].protocol = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "username", {
    get () {
        return this[impl].username;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].username = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "password", {
    get () {
        return this[impl].password;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].password = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "host", {
    get () {
        return this[impl].host;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].host = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "hostname", {
    get () {
        return this[impl].hostname;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].hostname = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "port", {
    get () {
        return this[impl].port;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].port = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "pathname", {
    get () {
        return this[impl].pathname;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].pathname = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "search", {
    get () {
        return this[impl].search;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].search = V;
    },
    enumerable: true,
    configurable: true
});
Object.defineProperty(URL.prototype, "hash", {
    get () {
        return this[impl].hash;
    },
    set (V) {
        V = conversions["USVString"](V);
        this[impl].hash = V;
    },
    enumerable: true,
    configurable: true
});
module.exports = {
    is (obj) {
        return !!obj && obj[impl] instanceof Impl.implementation;
    },
    create (constructorArgs, privateData) {
        let obj = Object.create(URL.prototype);
        this.setup(obj, constructorArgs, privateData);
        return obj;
    },
    setup (obj, constructorArgs, privateData) {
        if (!privateData) privateData = {};
        privateData.wrapper = obj;
        obj[impl] = new Impl.implementation(constructorArgs, privateData);
        obj[impl][utils.wrapperSymbol] = obj;
    },
    interface: URL,
    expose: {
        Window: {
            URL: URL
        },
        Worker: {
            URL: URL
        }
    }
};
}}),
"[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/public-api.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
exports.URL = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL.js [app-rsc] (ecmascript)").interface;
exports.serializeURL = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").serializeURL;
exports.serializeURLOrigin = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").serializeURLOrigin;
exports.basicURLParse = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").basicURLParse;
exports.setTheUsername = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").setTheUsername;
exports.setThePassword = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").setThePassword;
exports.serializeHost = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").serializeHost;
exports.serializeInteger = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").serializeInteger;
exports.parseURL = __turbopack_require__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js [app-rsc] (ecmascript)").parseURL;
}}),
"[project]/node_modules/.pnpm/node-fetch@2.7.0/node_modules/node-fetch/lib/index.mjs [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AbortError": (()=>AbortError),
    "FetchError": (()=>FetchError),
    "Headers": (()=>Headers),
    "Request": (()=>Request),
    "Response": (()=>Response),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__ = __turbopack_import__("[externals]/stream [external] (stream, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$http__$5b$external$5d$__$28$http$2c$__cjs$29$__ = __turbopack_import__("[externals]/http [external] (http, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$url__$5b$external$5d$__$28$url$2c$__cjs$29$__ = __turbopack_import__("[externals]/url [external] (url, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$whatwg$2d$url$40$5$2e$0$2e$0$2f$node_modules$2f$whatwg$2d$url$2f$lib$2f$public$2d$api$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/public-api.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$https__$5b$external$5d$__$28$https$2c$__cjs$29$__ = __turbopack_import__("[externals]/https [external] (https, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__ = __turbopack_import__("[externals]/zlib [external] (zlib, cjs)");
;
;
;
;
;
;
// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js
// fix for "Readable" isn't a named export issue
const Readable = __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"].Readable;
const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');
class Blob {
    constructor(){
        this[TYPE] = '';
        const blobParts = arguments[0];
        const options = arguments[1];
        const buffers = [];
        let size = 0;
        if (blobParts) {
            const a = blobParts;
            const length = Number(a.length);
            for(let i = 0; i < length; i++){
                const element = a[i];
                let buffer;
                if (element instanceof Buffer) {
                    buffer = element;
                } else if (ArrayBuffer.isView(element)) {
                    buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
                } else if (element instanceof ArrayBuffer) {
                    buffer = Buffer.from(element);
                } else if (element instanceof Blob) {
                    buffer = element[BUFFER];
                } else {
                    buffer = Buffer.from(typeof element === 'string' ? element : String(element));
                }
                size += buffer.length;
                buffers.push(buffer);
            }
        }
        this[BUFFER] = Buffer.concat(buffers);
        let type = options && options.type !== undefined && String(options.type).toLowerCase();
        if (type && !/[^\u0020-\u007E]/.test(type)) {
            this[TYPE] = type;
        }
    }
    get size() {
        return this[BUFFER].length;
    }
    get type() {
        return this[TYPE];
    }
    text() {
        return Promise.resolve(this[BUFFER].toString());
    }
    arrayBuffer() {
        const buf = this[BUFFER];
        const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        return Promise.resolve(ab);
    }
    stream() {
        const readable = new Readable();
        readable._read = function() {};
        readable.push(this[BUFFER]);
        readable.push(null);
        return readable;
    }
    toString() {
        return '[object Blob]';
    }
    slice() {
        const size = this.size;
        const start = arguments[0];
        const end = arguments[1];
        let relativeStart, relativeEnd;
        if (start === undefined) {
            relativeStart = 0;
        } else if (start < 0) {
            relativeStart = Math.max(size + start, 0);
        } else {
            relativeStart = Math.min(start, size);
        }
        if (end === undefined) {
            relativeEnd = size;
        } else if (end < 0) {
            relativeEnd = Math.max(size + end, 0);
        } else {
            relativeEnd = Math.min(end, size);
        }
        const span = Math.max(relativeEnd - relativeStart, 0);
        const buffer = this[BUFFER];
        const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
        const blob = new Blob([], {
            type: arguments[2]
        });
        blob[BUFFER] = slicedBuffer;
        return blob;
    }
}
Object.defineProperties(Blob.prototype, {
    size: {
        enumerable: true
    },
    type: {
        enumerable: true
    },
    slice: {
        enumerable: true
    }
});
Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
    value: 'Blob',
    writable: false,
    enumerable: false,
    configurable: true
});
/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */ /**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */ function FetchError(message, type, systemError) {
    Error.call(this, message);
    this.message = message;
    this.type = type;
    // when err.type is `system`, err.code contains system error code
    if (systemError) {
        this.code = this.errno = systemError.code;
    }
    // hide custom error implementation details from end-users
    Error.captureStackTrace(this, this.constructor);
}
FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';
let convert;
try {
    convert = __turbopack_require__("[project]/node_modules/encoding/lib/encoding.js [app-rsc] (ecmascript)").convert;
} catch (e) {}
const INTERNALS = Symbol('Body internals');
// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"].PassThrough;
/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */ function Body(body) {
    var _this = this;
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _ref$size = _ref.size;
    let size = _ref$size === undefined ? 0 : _ref$size;
    var _ref$timeout = _ref.timeout;
    let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;
    if (body == null) {
        // body is undefined or null
        body = null;
    } else if (isURLSearchParams(body)) {
        // body is a URLSearchParams
        body = Buffer.from(body.toString());
    } else if (isBlob(body)) ;
    else if (Buffer.isBuffer(body)) ;
    else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
        // body is ArrayBuffer
        body = Buffer.from(body);
    } else if (ArrayBuffer.isView(body)) {
        // body is ArrayBufferView
        body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
    } else if (body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"]) ;
    else {
        // none of the above
        // coerce to string then buffer
        body = Buffer.from(String(body));
    }
    this[INTERNALS] = {
        body,
        disturbed: false,
        error: null
    };
    this.size = size;
    this.timeout = timeout;
    if (body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"]) {
        body.on('error', function(err) {
            const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
            _this[INTERNALS].error = error;
        });
    }
}
Body.prototype = {
    get body () {
        return this[INTERNALS].body;
    },
    get bodyUsed () {
        return this[INTERNALS].disturbed;
    },
    /**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */ arrayBuffer () {
        return consumeBody.call(this).then(function(buf) {
            return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        });
    },
    /**
  * Return raw response as Blob
  *
  * @return Promise
  */ blob () {
        let ct = this.headers && this.headers.get('content-type') || '';
        return consumeBody.call(this).then(function(buf) {
            return Object.assign(// Prevent copying
            new Blob([], {
                type: ct.toLowerCase()
            }), {
                [BUFFER]: buf
            });
        });
    },
    /**
  * Decode response as json
  *
  * @return  Promise
  */ json () {
        var _this2 = this;
        return consumeBody.call(this).then(function(buffer) {
            try {
                return JSON.parse(buffer.toString());
            } catch (err) {
                return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
            }
        });
    },
    /**
  * Decode response as text
  *
  * @return  Promise
  */ text () {
        return consumeBody.call(this).then(function(buffer) {
            return buffer.toString();
        });
    },
    /**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */ buffer () {
        return consumeBody.call(this);
    },
    /**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */ textConverted () {
        var _this3 = this;
        return consumeBody.call(this).then(function(buffer) {
            return convertBody(buffer, _this3.headers);
        });
    }
};
// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
    body: {
        enumerable: true
    },
    bodyUsed: {
        enumerable: true
    },
    arrayBuffer: {
        enumerable: true
    },
    blob: {
        enumerable: true
    },
    json: {
        enumerable: true
    },
    text: {
        enumerable: true
    }
});
Body.mixIn = function(proto) {
    for (const name of Object.getOwnPropertyNames(Body.prototype)){
        // istanbul ignore else: future proof
        if (!(name in proto)) {
            const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
            Object.defineProperty(proto, name, desc);
        }
    }
};
/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */ function consumeBody() {
    var _this4 = this;
    if (this[INTERNALS].disturbed) {
        return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
    }
    this[INTERNALS].disturbed = true;
    if (this[INTERNALS].error) {
        return Body.Promise.reject(this[INTERNALS].error);
    }
    let body = this.body;
    // body is null
    if (body === null) {
        return Body.Promise.resolve(Buffer.alloc(0));
    }
    // body is blob
    if (isBlob(body)) {
        body = body.stream();
    }
    // body is buffer
    if (Buffer.isBuffer(body)) {
        return Body.Promise.resolve(body);
    }
    // istanbul ignore if: should never happen
    if (!(body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"])) {
        return Body.Promise.resolve(Buffer.alloc(0));
    }
    // body is stream
    // get ready to actually consume the body
    let accum = [];
    let accumBytes = 0;
    let abort = false;
    return new Body.Promise(function(resolve, reject) {
        let resTimeout;
        // allow timeout on slow response body
        if (_this4.timeout) {
            resTimeout = setTimeout(function() {
                abort = true;
                reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
            }, _this4.timeout);
        }
        // handle stream errors
        body.on('error', function(err) {
            if (err.name === 'AbortError') {
                // if the request was aborted, reject with this Error
                abort = true;
                reject(err);
            } else {
                // other errors, such as incorrect content-encoding
                reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
            }
        });
        body.on('data', function(chunk) {
            if (abort || chunk === null) {
                return;
            }
            if (_this4.size && accumBytes + chunk.length > _this4.size) {
                abort = true;
                reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
                return;
            }
            accumBytes += chunk.length;
            accum.push(chunk);
        });
        body.on('end', function() {
            if (abort) {
                return;
            }
            clearTimeout(resTimeout);
            try {
                resolve(Buffer.concat(accum, accumBytes));
            } catch (err) {
                // handle streams that have accumulated too much data (issue #414)
                reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
            }
        });
    });
}
/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */ function convertBody(buffer, headers) {
    if (typeof convert !== 'function') {
        throw new Error('The package `encoding` must be installed to use the textConverted() function');
    }
    const ct = headers.get('content-type');
    let charset = 'utf-8';
    let res, str;
    // header
    if (ct) {
        res = /charset=([^;]*)/i.exec(ct);
    }
    // no charset in content type, peek at response body for at most 1024 bytes
    str = buffer.slice(0, 1024).toString();
    // html5
    if (!res && str) {
        res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
    }
    // html4
    if (!res && str) {
        res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
        if (!res) {
            res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
            if (res) {
                res.pop(); // drop last quote
            }
        }
        if (res) {
            res = /charset=(.*)/i.exec(res.pop());
        }
    }
    // xml
    if (!res && str) {
        res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
    }
    // found charset
    if (res) {
        charset = res.pop();
        // prevent decode issues when sites use incorrect encoding
        // ref: https://hsivonen.fi/encoding-menu/
        if (charset === 'gb2312' || charset === 'gbk') {
            charset = 'gb18030';
        }
    }
    // turn raw buffers into a single utf-8 buffer
    return convert(buffer, 'UTF-8', charset).toString();
}
/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */ function isURLSearchParams(obj) {
    // Duck-typing as a necessary condition.
    if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
        return false;
    }
    // Brand-checking and more duck-typing as optional condition.
    return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}
/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */ function isBlob(obj) {
    return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}
/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */ function clone(instance) {
    let p1, p2;
    let body = instance.body;
    // don't allow cloning a used body
    if (instance.bodyUsed) {
        throw new Error('cannot clone body after it is used');
    }
    // check that body is a stream and not form-data object
    // note: we can't clone the form-data object without having it as a dependency
    if (body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"] && typeof body.getBoundary !== 'function') {
        // tee instance body
        p1 = new PassThrough();
        p2 = new PassThrough();
        body.pipe(p1);
        body.pipe(p2);
        // set instance body to teed body and return the other teed body
        instance[INTERNALS].body = p1;
        body = p2;
    }
    return body;
}
/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */ function extractContentType(body) {
    if (body === null) {
        // body is null
        return null;
    } else if (typeof body === 'string') {
        // body is string
        return 'text/plain;charset=UTF-8';
    } else if (isURLSearchParams(body)) {
        // body is a URLSearchParams
        return 'application/x-www-form-urlencoded;charset=UTF-8';
    } else if (isBlob(body)) {
        // body is blob
        return body.type || null;
    } else if (Buffer.isBuffer(body)) {
        // body is buffer
        return null;
    } else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
        // body is ArrayBuffer
        return null;
    } else if (ArrayBuffer.isView(body)) {
        // body is ArrayBufferView
        return null;
    } else if (typeof body.getBoundary === 'function') {
        // detect form data input from form-data module
        return `multipart/form-data;boundary=${body.getBoundary()}`;
    } else if (body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"]) {
        // body is stream
        // can't really do much about this
        return null;
    } else {
        // Body constructor defaults other things to string
        return 'text/plain;charset=UTF-8';
    }
}
/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */ function getTotalBytes(instance) {
    const body = instance.body;
    if (body === null) {
        // body is null
        return 0;
    } else if (isBlob(body)) {
        return body.size;
    } else if (Buffer.isBuffer(body)) {
        // body is buffer
        return body.length;
    } else if (body && typeof body.getLengthSync === 'function') {
        // detect form data input from form-data module
        if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
        body.hasKnownLength && body.hasKnownLength()) {
            // 2.x
            return body.getLengthSync();
        }
        return null;
    } else {
        // body is stream
        return null;
    }
}
/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */ function writeToStream(dest, instance) {
    const body = instance.body;
    if (body === null) {
        // body is null
        dest.end();
    } else if (isBlob(body)) {
        body.stream().pipe(dest);
    } else if (Buffer.isBuffer(body)) {
        // body is buffer
        dest.write(body);
        dest.end();
    } else {
        // body is stream
        body.pipe(dest);
    }
}
// expose Promise
Body.Promise = global.Promise;
/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */ const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
function validateName(name) {
    name = `${name}`;
    if (invalidTokenRegex.test(name) || name === '') {
        throw new TypeError(`${name} is not a legal HTTP header name`);
    }
}
function validateValue(value) {
    value = `${value}`;
    if (invalidHeaderCharRegex.test(value)) {
        throw new TypeError(`${value} is not a legal HTTP header value`);
    }
}
/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */ function find(map, name) {
    name = name.toLowerCase();
    for(const key in map){
        if (key.toLowerCase() === name) {
            return key;
        }
    }
    return undefined;
}
const MAP = Symbol('map');
class Headers {
    /**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */ constructor(){
        let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
        this[MAP] = Object.create(null);
        if (init instanceof Headers) {
            const rawHeaders = init.raw();
            const headerNames = Object.keys(rawHeaders);
            for (const headerName of headerNames){
                for (const value of rawHeaders[headerName]){
                    this.append(headerName, value);
                }
            }
            return;
        }
        // We don't worry about converting prop to ByteString here as append()
        // will handle it.
        if (init == null) ;
        else if (typeof init === 'object') {
            const method = init[Symbol.iterator];
            if (method != null) {
                if (typeof method !== 'function') {
                    throw new TypeError('Header pairs must be iterable');
                }
                // sequence<sequence<ByteString>>
                // Note: per spec we have to first exhaust the lists then process them
                const pairs = [];
                for (const pair of init){
                    if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
                        throw new TypeError('Each header pair must be iterable');
                    }
                    pairs.push(Array.from(pair));
                }
                for (const pair of pairs){
                    if (pair.length !== 2) {
                        throw new TypeError('Each header pair must be a name/value tuple');
                    }
                    this.append(pair[0], pair[1]);
                }
            } else {
                // record<ByteString, ByteString>
                for (const key of Object.keys(init)){
                    const value = init[key];
                    this.append(key, value);
                }
            }
        } else {
            throw new TypeError('Provided initializer must be an object');
        }
    }
    /**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */ get(name) {
        name = `${name}`;
        validateName(name);
        const key = find(this[MAP], name);
        if (key === undefined) {
            return null;
        }
        return this[MAP][key].join(', ');
    }
    /**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */ forEach(callback) {
        let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
        let pairs = getHeaders(this);
        let i = 0;
        while(i < pairs.length){
            var _pairs$i = pairs[i];
            const name = _pairs$i[0], value = _pairs$i[1];
            callback.call(thisArg, value, name, this);
            pairs = getHeaders(this);
            i++;
        }
    }
    /**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */ set(name, value) {
        name = `${name}`;
        value = `${value}`;
        validateName(name);
        validateValue(value);
        const key = find(this[MAP], name);
        this[MAP][key !== undefined ? key : name] = [
            value
        ];
    }
    /**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */ append(name, value) {
        name = `${name}`;
        value = `${value}`;
        validateName(name);
        validateValue(value);
        const key = find(this[MAP], name);
        if (key !== undefined) {
            this[MAP][key].push(value);
        } else {
            this[MAP][name] = [
                value
            ];
        }
    }
    /**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */ has(name) {
        name = `${name}`;
        validateName(name);
        return find(this[MAP], name) !== undefined;
    }
    /**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */ delete(name) {
        name = `${name}`;
        validateName(name);
        const key = find(this[MAP], name);
        if (key !== undefined) {
            delete this[MAP][key];
        }
    }
    /**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */ raw() {
        return this[MAP];
    }
    /**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */ keys() {
        return createHeadersIterator(this, 'key');
    }
    /**
  * Get an iterator on values.
  *
  * @return  Iterator
  */ values() {
        return createHeadersIterator(this, 'value');
    }
    /**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */ [Symbol.iterator]() {
        return createHeadersIterator(this, 'key+value');
    }
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];
Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
    value: 'Headers',
    writable: false,
    enumerable: false,
    configurable: true
});
Object.defineProperties(Headers.prototype, {
    get: {
        enumerable: true
    },
    forEach: {
        enumerable: true
    },
    set: {
        enumerable: true
    },
    append: {
        enumerable: true
    },
    has: {
        enumerable: true
    },
    delete: {
        enumerable: true
    },
    keys: {
        enumerable: true
    },
    values: {
        enumerable: true
    },
    entries: {
        enumerable: true
    }
});
function getHeaders(headers) {
    let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';
    const keys = Object.keys(headers[MAP]).sort();
    return keys.map(kind === 'key' ? function(k) {
        return k.toLowerCase();
    } : kind === 'value' ? function(k) {
        return headers[MAP][k].join(', ');
    } : function(k) {
        return [
            k.toLowerCase(),
            headers[MAP][k].join(', ')
        ];
    });
}
const INTERNAL = Symbol('internal');
function createHeadersIterator(target, kind) {
    const iterator = Object.create(HeadersIteratorPrototype);
    iterator[INTERNAL] = {
        target,
        kind,
        index: 0
    };
    return iterator;
}
const HeadersIteratorPrototype = Object.setPrototypeOf({
    next () {
        // istanbul ignore if
        if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
            throw new TypeError('Value of `this` is not a HeadersIterator');
        }
        var _INTERNAL = this[INTERNAL];
        const target = _INTERNAL.target, kind = _INTERNAL.kind, index = _INTERNAL.index;
        const values = getHeaders(target, kind);
        const len = values.length;
        if (index >= len) {
            return {
                value: undefined,
                done: true
            };
        }
        this[INTERNAL].index = index + 1;
        return {
            value: values[index],
            done: false
        };
    }
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
    value: 'HeadersIterator',
    writable: false,
    enumerable: false,
    configurable: true
});
/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */ function exportNodeCompatibleHeaders(headers) {
    const obj = Object.assign({
        __proto__: null
    }, headers[MAP]);
    // http.request() only supports string as Host header. This hack makes
    // specifying custom Host header possible.
    const hostHeaderKey = find(headers[MAP], 'Host');
    if (hostHeaderKey !== undefined) {
        obj[hostHeaderKey] = obj[hostHeaderKey][0];
    }
    return obj;
}
/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */ function createHeadersLenient(obj) {
    const headers = new Headers();
    for (const name of Object.keys(obj)){
        if (invalidTokenRegex.test(name)) {
            continue;
        }
        if (Array.isArray(obj[name])) {
            for (const val of obj[name]){
                if (invalidHeaderCharRegex.test(val)) {
                    continue;
                }
                if (headers[MAP][name] === undefined) {
                    headers[MAP][name] = [
                        val
                    ];
                } else {
                    headers[MAP][name].push(val);
                }
            }
        } else if (!invalidHeaderCharRegex.test(obj[name])) {
            headers[MAP][name] = [
                obj[name]
            ];
        }
    }
    return headers;
}
const INTERNALS$1 = Symbol('Response internals');
// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = __TURBOPACK__imported__module__$5b$externals$5d2f$http__$5b$external$5d$__$28$http$2c$__cjs$29$__["default"].STATUS_CODES;
/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */ class Response {
    constructor(){
        let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        Body.call(this, body, opts);
        const status = opts.status || 200;
        const headers = new Headers(opts.headers);
        if (body != null && !headers.has('Content-Type')) {
            const contentType = extractContentType(body);
            if (contentType) {
                headers.append('Content-Type', contentType);
            }
        }
        this[INTERNALS$1] = {
            url: opts.url,
            status,
            statusText: opts.statusText || STATUS_CODES[status],
            headers,
            counter: opts.counter
        };
    }
    get url() {
        return this[INTERNALS$1].url || '';
    }
    get status() {
        return this[INTERNALS$1].status;
    }
    /**
  * Convenience property representing if the request ended normally
  */ get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
    }
    get redirected() {
        return this[INTERNALS$1].counter > 0;
    }
    get statusText() {
        return this[INTERNALS$1].statusText;
    }
    get headers() {
        return this[INTERNALS$1].headers;
    }
    /**
  * Clone this response
  *
  * @return  Response
  */ clone() {
        return new Response(clone(this), {
            url: this.url,
            status: this.status,
            statusText: this.statusText,
            headers: this.headers,
            ok: this.ok,
            redirected: this.redirected
        });
    }
}
Body.mixIn(Response.prototype);
Object.defineProperties(Response.prototype, {
    url: {
        enumerable: true
    },
    status: {
        enumerable: true
    },
    ok: {
        enumerable: true
    },
    redirected: {
        enumerable: true
    },
    statusText: {
        enumerable: true
    },
    headers: {
        enumerable: true
    },
    clone: {
        enumerable: true
    }
});
Object.defineProperty(Response.prototype, Symbol.toStringTag, {
    value: 'Response',
    writable: false,
    enumerable: false,
    configurable: true
});
const INTERNALS$2 = Symbol('Request internals');
const URL = __TURBOPACK__imported__module__$5b$externals$5d2f$url__$5b$external$5d$__$28$url$2c$__cjs$29$__["default"].URL || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$whatwg$2d$url$40$5$2e$0$2e$0$2f$node_modules$2f$whatwg$2d$url$2f$lib$2f$public$2d$api$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].URL;
// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = __TURBOPACK__imported__module__$5b$externals$5d2f$url__$5b$external$5d$__$28$url$2c$__cjs$29$__["default"].parse;
const format_url = __TURBOPACK__imported__module__$5b$externals$5d2f$url__$5b$external$5d$__$28$url$2c$__cjs$29$__["default"].format;
/**
 * Wrapper around `new URL` to handle arbitrary URLs
 *
 * @param  {string} urlStr
 * @return {void}
 */ function parseURL(urlStr) {
    /*
 	Check whether the URL is absolute or not
 		Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
 	Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
 */ if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
        urlStr = new URL(urlStr).toString();
    }
    // Fallback to old implementation for arbitrary URLs
    return parse_url(urlStr);
}
const streamDestructionSupported = 'destroy' in __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"].Readable.prototype;
/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */ function isRequest(input) {
    return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}
function isAbortSignal(signal) {
    const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
    return !!(proto && proto.constructor.name === 'AbortSignal');
}
/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */ class Request {
    constructor(input){
        let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        let parsedURL;
        // normalize input
        if (!isRequest(input)) {
            if (input && input.href) {
                // in order to support Node.js' Url objects; though WHATWG's URL objects
                // will fall into this branch also (since their `toString()` will return
                // `href` property anyway)
                parsedURL = parseURL(input.href);
            } else {
                // coerce input to a string before attempting to parse
                parsedURL = parseURL(`${input}`);
            }
            input = {};
        } else {
            parsedURL = parseURL(input.url);
        }
        let method = init.method || input.method || 'GET';
        method = method.toUpperCase();
        if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
            throw new TypeError('Request with GET/HEAD method cannot have body');
        }
        let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;
        Body.call(this, inputBody, {
            timeout: init.timeout || input.timeout || 0,
            size: init.size || input.size || 0
        });
        const headers = new Headers(init.headers || input.headers || {});
        if (inputBody != null && !headers.has('Content-Type')) {
            const contentType = extractContentType(inputBody);
            if (contentType) {
                headers.append('Content-Type', contentType);
            }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ('signal' in init) signal = init.signal;
        if (signal != null && !isAbortSignal(signal)) {
            throw new TypeError('Expected signal to be an instanceof AbortSignal');
        }
        this[INTERNALS$2] = {
            method,
            redirect: init.redirect || input.redirect || 'follow',
            headers,
            parsedURL,
            signal
        };
        // node-fetch-only options
        this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
        this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
        this.counter = init.counter || input.counter || 0;
        this.agent = init.agent || input.agent;
    }
    get method() {
        return this[INTERNALS$2].method;
    }
    get url() {
        return format_url(this[INTERNALS$2].parsedURL);
    }
    get headers() {
        return this[INTERNALS$2].headers;
    }
    get redirect() {
        return this[INTERNALS$2].redirect;
    }
    get signal() {
        return this[INTERNALS$2].signal;
    }
    /**
  * Clone this request
  *
  * @return  Request
  */ clone() {
        return new Request(this);
    }
}
Body.mixIn(Request.prototype);
Object.defineProperty(Request.prototype, Symbol.toStringTag, {
    value: 'Request',
    writable: false,
    enumerable: false,
    configurable: true
});
Object.defineProperties(Request.prototype, {
    method: {
        enumerable: true
    },
    url: {
        enumerable: true
    },
    headers: {
        enumerable: true
    },
    redirect: {
        enumerable: true
    },
    clone: {
        enumerable: true
    },
    signal: {
        enumerable: true
    }
});
/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */ function getNodeRequestOptions(request) {
    const parsedURL = request[INTERNALS$2].parsedURL;
    const headers = new Headers(request[INTERNALS$2].headers);
    // fetch step 1.3
    if (!headers.has('Accept')) {
        headers.set('Accept', '*/*');
    }
    // Basic fetch
    if (!parsedURL.protocol || !parsedURL.hostname) {
        throw new TypeError('Only absolute URLs are supported');
    }
    if (!/^https?:$/.test(parsedURL.protocol)) {
        throw new TypeError('Only HTTP(S) protocols are supported');
    }
    if (request.signal && request.body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"].Readable && !streamDestructionSupported) {
        throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
    }
    // HTTP-network-or-cache fetch steps 2.4-2.7
    let contentLengthValue = null;
    if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
        contentLengthValue = '0';
    }
    if (request.body != null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === 'number') {
            contentLengthValue = String(totalBytes);
        }
    }
    if (contentLengthValue) {
        headers.set('Content-Length', contentLengthValue);
    }
    // HTTP-network-or-cache fetch step 2.11
    if (!headers.has('User-Agent')) {
        headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
    }
    // HTTP-network-or-cache fetch step 2.15
    if (request.compress && !headers.has('Accept-Encoding')) {
        headers.set('Accept-Encoding', 'gzip,deflate');
    }
    let agent = request.agent;
    if (typeof agent === 'function') {
        agent = agent(parsedURL);
    }
    // HTTP-network fetch step 4.2
    // chunked encoding is handled by Node.js
    return Object.assign({}, parsedURL, {
        method: request.method,
        headers: exportNodeCompatibleHeaders(headers),
        agent
    });
}
/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */ /**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */ function AbortError(message) {
    Error.call(this, message);
    this.type = 'aborted';
    this.message = message;
    // hide custom error implementation details from end-users
    Error.captureStackTrace(this, this.constructor);
}
AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';
const URL$1 = __TURBOPACK__imported__module__$5b$externals$5d2f$url__$5b$external$5d$__$28$url$2c$__cjs$29$__["default"].URL || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$whatwg$2d$url$40$5$2e$0$2e$0$2f$node_modules$2f$whatwg$2d$url$2f$lib$2f$public$2d$api$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"].URL;
// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"].PassThrough;
const isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {
    const orig = new URL$1(original).hostname;
    const dest = new URL$1(destination).hostname;
    return orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);
};
/**
 * isSameProtocol reports whether the two provided URLs use the same protocol.
 *
 * Both domains must already be in canonical form.
 * @param {string|URL} original
 * @param {string|URL} destination
 */ const isSameProtocol = function isSameProtocol(destination, original) {
    const orig = new URL$1(original).protocol;
    const dest = new URL$1(destination).protocol;
    return orig === dest;
};
/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */ function fetch(url, opts) {
    // allow custom promise
    if (!fetch.Promise) {
        throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
    }
    Body.Promise = fetch.Promise;
    // wrap http.request into fetch
    return new fetch.Promise(function(resolve, reject) {
        // build request object
        const request = new Request(url, opts);
        const options = getNodeRequestOptions(request);
        const send = (options.protocol === 'https:' ? __TURBOPACK__imported__module__$5b$externals$5d2f$https__$5b$external$5d$__$28$https$2c$__cjs$29$__["default"] : __TURBOPACK__imported__module__$5b$externals$5d2f$http__$5b$external$5d$__$28$http$2c$__cjs$29$__["default"]).request;
        const signal = request.signal;
        let response = null;
        const abort = function abort() {
            let error = new AbortError('The user aborted a request.');
            reject(error);
            if (request.body && request.body instanceof __TURBOPACK__imported__module__$5b$externals$5d2f$stream__$5b$external$5d$__$28$stream$2c$__cjs$29$__["default"].Readable) {
                destroyStream(request.body, error);
            }
            if (!response || !response.body) return;
            response.body.emit('error', error);
        };
        if (signal && signal.aborted) {
            abort();
            return;
        }
        const abortAndFinalize = function abortAndFinalize() {
            abort();
            finalize();
        };
        // send request
        const req = send(options);
        let reqTimeout;
        if (signal) {
            signal.addEventListener('abort', abortAndFinalize);
        }
        function finalize() {
            req.abort();
            if (signal) signal.removeEventListener('abort', abortAndFinalize);
            clearTimeout(reqTimeout);
        }
        if (request.timeout) {
            req.once('socket', function(socket) {
                reqTimeout = setTimeout(function() {
                    reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
                    finalize();
                }, request.timeout);
            });
        }
        req.on('error', function(err) {
            reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
            if (response && response.body) {
                destroyStream(response.body, err);
            }
            finalize();
        });
        fixResponseChunkedTransferBadEnding(req, function(err) {
            if (signal && signal.aborted) {
                return;
            }
            if (response && response.body) {
                destroyStream(response.body, err);
            }
        });
        /* c8 ignore next 18 */ if (parseInt(process.version.substring(1)) < 14) {
            // Before Node.js 14, pipeline() does not fully support async iterators and does not always
            // properly handle when the socket close/end events are out of order.
            req.on('socket', function(s) {
                s.addListener('close', function(hadError) {
                    // if a data listener is still present we didn't end cleanly
                    const hasDataListener = s.listenerCount('data') > 0;
                    // if end happened before close but the socket didn't emit an error, do it now
                    if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
                        const err = new Error('Premature close');
                        err.code = 'ERR_STREAM_PREMATURE_CLOSE';
                        response.body.emit('error', err);
                    }
                });
            });
        }
        req.on('response', function(res) {
            clearTimeout(reqTimeout);
            const headers = createHeadersLenient(res.headers);
            // HTTP fetch step 5
            if (fetch.isRedirect(res.statusCode)) {
                // HTTP fetch step 5.2
                const location = headers.get('Location');
                // HTTP fetch step 5.3
                let locationURL = null;
                try {
                    locationURL = location === null ? null : new URL$1(location, request.url).toString();
                } catch (err) {
                    // error here can only be invalid URL in Location: header
                    // do not throw when options.redirect == manual
                    // let the user extract the errorneous redirect URL
                    if (request.redirect !== 'manual') {
                        reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));
                        finalize();
                        return;
                    }
                }
                // HTTP fetch step 5.5
                switch(request.redirect){
                    case 'error':
                        reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
                        finalize();
                        return;
                    case 'manual':
                        // node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
                        if (locationURL !== null) {
                            // handle corrupted header
                            try {
                                headers.set('Location', locationURL);
                            } catch (err) {
                                // istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
                                reject(err);
                            }
                        }
                        break;
                    case 'follow':
                        // HTTP-redirect fetch step 2
                        if (locationURL === null) {
                            break;
                        }
                        // HTTP-redirect fetch step 5
                        if (request.counter >= request.follow) {
                            reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
                            finalize();
                            return;
                        }
                        // HTTP-redirect fetch step 6 (counter increment)
                        // Create a new Request object.
                        const requestOpts = {
                            headers: new Headers(request.headers),
                            follow: request.follow,
                            counter: request.counter + 1,
                            agent: request.agent,
                            compress: request.compress,
                            method: request.method,
                            body: request.body,
                            signal: request.signal,
                            timeout: request.timeout,
                            size: request.size
                        };
                        if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {
                            for (const name of [
                                'authorization',
                                'www-authenticate',
                                'cookie',
                                'cookie2'
                            ]){
                                requestOpts.headers.delete(name);
                            }
                        }
                        // HTTP-redirect fetch step 9
                        if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
                            reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
                            finalize();
                            return;
                        }
                        // HTTP-redirect fetch step 11
                        if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
                            requestOpts.method = 'GET';
                            requestOpts.body = undefined;
                            requestOpts.headers.delete('content-length');
                        }
                        // HTTP-redirect fetch step 15
                        resolve(fetch(new Request(locationURL, requestOpts)));
                        finalize();
                        return;
                }
            }
            // prepare response
            res.once('end', function() {
                if (signal) signal.removeEventListener('abort', abortAndFinalize);
            });
            let body = res.pipe(new PassThrough$1());
            const response_options = {
                url: request.url,
                status: res.statusCode,
                statusText: res.statusMessage,
                headers: headers,
                size: request.size,
                timeout: request.timeout,
                counter: request.counter
            };
            // HTTP-network fetch step 12.1.1.3
            const codings = headers.get('Content-Encoding');
            // HTTP-network fetch step 12.1.1.4: handle content codings
            // in following scenarios we ignore compression support
            // 1. compression support is disabled
            // 2. HEAD request
            // 3. no Content-Encoding header
            // 4. no content response (204)
            // 5. content not modified response (304)
            if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
                response = new Response(body, response_options);
                resolve(response);
                return;
            }
            // For Node v6+
            // Be less strict when decoding compressed responses, since sometimes
            // servers send slightly invalid responses that are still accepted
            // by common browsers.
            // Always using Z_SYNC_FLUSH is what cURL does.
            const zlibOptions = {
                flush: __TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].Z_SYNC_FLUSH,
                finishFlush: __TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].Z_SYNC_FLUSH
            };
            // for gzip
            if (codings == 'gzip' || codings == 'x-gzip') {
                body = body.pipe(__TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].createGunzip(zlibOptions));
                response = new Response(body, response_options);
                resolve(response);
                return;
            }
            // for deflate
            if (codings == 'deflate' || codings == 'x-deflate') {
                // handle the infamous raw deflate response from old servers
                // a hack for old IIS and Apache servers
                const raw = res.pipe(new PassThrough$1());
                raw.once('data', function(chunk) {
                    // see http://stackoverflow.com/questions/37519828
                    if ((chunk[0] & 0x0F) === 0x08) {
                        body = body.pipe(__TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].createInflate());
                    } else {
                        body = body.pipe(__TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].createInflateRaw());
                    }
                    response = new Response(body, response_options);
                    resolve(response);
                });
                raw.on('end', function() {
                    // some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.
                    if (!response) {
                        response = new Response(body, response_options);
                        resolve(response);
                    }
                });
                return;
            }
            // for br
            if (codings == 'br' && typeof __TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].createBrotliDecompress === 'function') {
                body = body.pipe(__TURBOPACK__imported__module__$5b$externals$5d2f$zlib__$5b$external$5d$__$28$zlib$2c$__cjs$29$__["default"].createBrotliDecompress());
                response = new Response(body, response_options);
                resolve(response);
                return;
            }
            // otherwise, use response as-is
            response = new Response(body, response_options);
            resolve(response);
        });
        writeToStream(req, request);
    });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
    let socket;
    request.on('socket', function(s) {
        socket = s;
    });
    request.on('response', function(response) {
        const headers = response.headers;
        if (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {
            response.once('close', function(hadError) {
                // tests for socket presence, as in some situations the
                // the 'socket' event is not triggered for the request
                // (happens in deno), avoids `TypeError`
                // if a data listener is still present we didn't end cleanly
                const hasDataListener = socket && socket.listenerCount('data') > 0;
                if (hasDataListener && !hadError) {
                    const err = new Error('Premature close');
                    err.code = 'ERR_STREAM_PREMATURE_CLOSE';
                    errorCallback(err);
                }
            });
        }
    });
}
function destroyStream(stream, err) {
    if (stream.destroy) {
        stream.destroy(err);
    } else {
        // node < 8
        stream.emit('error', err);
        stream.end();
    }
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */ fetch.isRedirect = function(code) {
    return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};
// expose Promise
fetch.Promise = global.Promise;
const __TURBOPACK__default__export__ = fetch;
;
}}),
"[project]/node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/node-ponyfill.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const nodeFetch = __turbopack_require__("[project]/node_modules/.pnpm/node-fetch@2.7.0/node_modules/node-fetch/lib/index.mjs [app-rsc] (ecmascript)");
const realFetch = nodeFetch.default || nodeFetch;
const fetch = function(url, options) {
    // Support schemaless URIs on the server for parity with the browser.
    // Ex: //github.com/ -> https://github.com/
    if (/^\/\//.test(url)) {
        url = 'https:' + url;
    }
    return realFetch.call(this, url, options);
};
fetch.ponyfill = true;
module.exports = exports = fetch;
exports.fetch = fetch;
exports.Headers = nodeFetch.Headers;
exports.Request = nodeFetch.Request;
exports.Response = nodeFetch.Response;
// Needed for TypeScript consumers without esModuleInterop.
exports.default = fetch;
}}),
"[project]/node_modules/.pnpm/graphql-tag@2.12.6_graphql@16.8.1/node_modules/graphql-tag/lib/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__),
    "disableExperimentalFragmentVariables": (()=>disableExperimentalFragmentVariables),
    "disableFragmentWarnings": (()=>disableFragmentWarnings),
    "enableExperimentalFragmentVariables": (()=>enableExperimentalFragmentVariables),
    "gql": (()=>gql),
    "resetCaches": (()=>resetCaches)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$graphql$40$16$2e$8$2e$1$2f$node_modules$2f$graphql$2f$language$2f$parser$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/parser.mjs [app-rsc] (ecmascript)");
;
;
var docCache = new Map();
var fragmentSourceMap = new Map();
var printFragmentWarnings = true;
var experimentalFragmentVariables = false;
function normalize(string) {
    return string.replace(/[\s,]+/g, ' ').trim();
}
function cacheKeyFromLoc(loc) {
    return normalize(loc.source.body.substring(loc.start, loc.end));
}
function processFragments(ast) {
    var seenKeys = new Set();
    var definitions = [];
    ast.definitions.forEach(function(fragmentDefinition) {
        if (fragmentDefinition.kind === 'FragmentDefinition') {
            var fragmentName = fragmentDefinition.name.value;
            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);
            var sourceKeySet = fragmentSourceMap.get(fragmentName);
            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {
                if (printFragmentWarnings) {
                    console.warn("Warning: fragment with name " + fragmentName + " already exists.\n" + "graphql-tag enforces all fragment names across your application to be unique; read more about\n" + "this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names");
                }
            } else if (!sourceKeySet) {
                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);
            }
            sourceKeySet.add(sourceKey);
            if (!seenKeys.has(sourceKey)) {
                seenKeys.add(sourceKey);
                definitions.push(fragmentDefinition);
            }
        } else {
            definitions.push(fragmentDefinition);
        }
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["__assign"])({}, ast), {
        definitions: definitions
    });
}
function stripLoc(doc) {
    var workSet = new Set(doc.definitions);
    workSet.forEach(function(node) {
        if (node.loc) delete node.loc;
        Object.keys(node).forEach(function(key) {
            var value = node[key];
            if (value && typeof value === 'object') {
                workSet.add(value);
            }
        });
    });
    var loc = doc.loc;
    if (loc) {
        delete loc.startToken;
        delete loc.endToken;
    }
    return doc;
}
function parseDocument(source) {
    var cacheKey = normalize(source);
    if (!docCache.has(cacheKey)) {
        var parsed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$graphql$40$16$2e$8$2e$1$2f$node_modules$2f$graphql$2f$language$2f$parser$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["parse"])(source, {
            experimentalFragmentVariables: experimentalFragmentVariables,
            allowLegacyFragmentVariables: experimentalFragmentVariables
        });
        if (!parsed || parsed.kind !== 'Document') {
            throw new Error('Not a valid GraphQL document.');
        }
        docCache.set(cacheKey, stripLoc(processFragments(parsed)));
    }
    return docCache.get(cacheKey);
}
function gql(literals) {
    var args = [];
    for(var _i = 1; _i < arguments.length; _i++){
        args[_i - 1] = arguments[_i];
    }
    if (typeof literals === 'string') {
        literals = [
            literals
        ];
    }
    var result = literals[0];
    args.forEach(function(arg, i) {
        if (arg && arg.kind === 'Document') {
            result += arg.loc.source.body;
        } else {
            result += arg;
        }
        result += literals[i + 1];
    });
    return parseDocument(result);
}
function resetCaches() {
    docCache.clear();
    fragmentSourceMap.clear();
}
function disableFragmentWarnings() {
    printFragmentWarnings = false;
}
function enableExperimentalFragmentVariables() {
    experimentalFragmentVariables = true;
}
function disableExperimentalFragmentVariables() {
    experimentalFragmentVariables = false;
}
var extras = {
    gql: gql,
    resetCaches: resetCaches,
    disableFragmentWarnings: disableFragmentWarnings,
    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,
    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables
};
(function(gql_1) {
    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;
})(gql || (gql = {}));
gql["default"] = gql;
const __TURBOPACK__default__export__ = gql;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Collection of utils functions related to the library, meant to simplify its use.
 */ exports.default = {
    formatGetRequestFromIdError,
    /**
     * Returns the current timestamp in second
     *
     * @returns current timestamp in second
     */ getCurrentTimestampInSecond: utils_1.getCurrentTimestampInSecond
};
/**
 * Formats a human readable message from ignored transactions
 *
 * @param requestAndMeta return from GetRequestFromId
 * @returns human readable message
 */ function formatGetRequestFromIdError(requestAndMeta) {
    if (requestAndMeta.meta.ignoredTransactions && requestAndMeta.meta.ignoredTransactions.length !== 0 || requestAndMeta.meta.transactionManagerMeta.ignoredTransactions.length !== 0) {
        return `Invalid transaction(s) found: ${JSON.stringify(requestAndMeta.meta.transactionManagerMeta.ignoredTransactions.concat(requestAndMeta.meta.ignoredTransactions || []).filter((tx)=>tx !== null))}`;
    }
    return 'No transaction found';
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/request.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const payment_detection_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+payment-detection@0.49.0/node_modules/@requestnetwork/payment-detection/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/utils.js [app-rsc] (ecmascript)");
const smart_contracts_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+smart-contracts@0.43.0/node_modules/@requestnetwork/smart-contracts/dist/src/lib/index.js [app-rsc] (ecmascript)");
const utils_2 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Class representing a request.
 * Instances of this class can be accepted, paid, refunded, etc.
 * Use the member function `getData` to access the properties of the Request.
 *
 * Requests should be created with `RequestNetwork.createRequest()`.
 */ class Request {
    /**
     * Creates an instance of Request
     *
     * @param requestLogic Instance of the request-logic layer
     * @param requestId ID of the Request
     * @param paymentNetwork Instance of a payment network to manage the request
     * @param contentDataManager Instance of content data manager
     * @param requestLogicCreateResult return from the first request creation (optimization)
     * @param options options
     */ constructor(requestId, requestLogic, currencyManager, options){
        this.paymentNetwork = null;
        this.logger = new utils_2.SimpleLogger(types_1.LogTypes.LogLevel.WARN);
        /**
         * true if the creation emitted an event 'error'
         */ this.confirmationErrorOccurredAtCreation = false;
        /**
         * Data of the request (see request-logic)
         */ this.requestData = null;
        /**
         * Pending data of the request (see request-logic)
         */ this.pendingData = null;
        /**
         * Content data parsed from the extensions data
         */ this.contentData = null;
        /**
         * Meta data of the request (e.g: where the data have been retrieved from)
         */ this.requestMeta = null;
        /**
         * Balance and payments/refund events
         */ this.balance = null;
        /**
         * if true, skip the payment detection
         */ this.skipPaymentDetection = false;
        /**
         * if true, do not send blockchain confirmation events (on creation, approval, etc.)
         */ this.disableEvents = false;
        /**
         * Information for an in-memory request, including transaction data, topics, and payment request data.
         * This is used for requests that haven't been persisted yet, allowing for operations like payments
         * before the request is stored in the data access layer.
         *
         * @property transactionData - Transaction data necessary for persisting the request later on.
         * @property topics - Topics of the request, used for indexing and retrieval when persisting.
         * @property requestData - Structured data primarily used for processing payments before the request is persisted.
         */ this.inMemoryInfo = null;
        this.requestLogic = requestLogic;
        this.requestId = requestId;
        this.contentDataExtension = (options === null || options === void 0 ? void 0 : options.contentDataExtension) || null;
        this.paymentNetwork = (options === null || options === void 0 ? void 0 : options.paymentNetwork) || null;
        this.emitter = new events_1.EventEmitter();
        this.skipPaymentDetection = (options === null || options === void 0 ? void 0 : options.skipPaymentDetection) || false;
        this.disableEvents = (options === null || options === void 0 ? void 0 : options.disableEvents) || false;
        this.currencyManager = currencyManager;
        this.inMemoryInfo = (options === null || options === void 0 ? void 0 : options.inMemoryInfo) || null;
        if ((options === null || options === void 0 ? void 0 : options.requestLogicCreateResult) && !this.disableEvents) {
            const originalEmitter = options.requestLogicCreateResult;
            originalEmitter.on('confirmed', ()=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    try {
                        this.emitter.emit('confirmed', (yield this.refresh()));
                    } catch (error) {
                        originalEmitter.emit('error', error);
                    }
                })).on('error', (error)=>{
                this.confirmationErrorOccurredAtCreation = true;
                this.emitter.emit('error', error);
            });
        }
    }
    /**
     * Listen the confirmation of the creation
     *
     * @param type only "confirmed" event for now
     * @param callback callback to call when confirmed event is risen
     * @returns this
     */ on(event, listener) {
        this.emitter.on(event, listener);
        return this;
    }
    /**
     * Wait for the confirmation
     *
     * @returns the request data
     */ waitForConfirmation() {
        return new Promise((resolve, reject)=>{
            this.on('confirmed', resolve);
            this.on('error', reject);
        });
    }
    /**
     * Accepts a request
     *
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param refundInformation Refund information to add (any because it is specific to the payment network used by the request)
     * @returns The updated request
     */ accept(signerIdentity, refundInformation) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (refundInformation) {
                if (!this.paymentNetwork) {
                    throw new Error('Cannot add refund information without payment network');
                }
                extensionsData.push(this.paymentNetwork.createExtensionsDataForAddRefundInformation(refundInformation));
            }
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const acceptResult = yield this.requestLogic.acceptRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(acceptResult);
        });
    }
    /**
     * Cancels a request
     *
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param refundInformation refund information to add (any because it is specific to the payment network used by the request)
     * @returns The updated request
     */ cancel(signerIdentity, refundInformation) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (refundInformation) {
                if (!this.paymentNetwork) {
                    throw new Error('Cannot add refund information without payment network');
                }
                extensionsData.push(this.paymentNetwork.createExtensionsDataForAddRefundInformation(refundInformation));
            }
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const cancelResult = yield this.requestLogic.cancelRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(cancelResult);
        });
    }
    /**
     * Increases the expected amount of the request.
     *
     * @param deltaAmount Amount by which to increase the expected amount
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param refundInformation Refund information to add (any because it is specific to the payment network used by the request)
     * @returns The updated request
     */ increaseExpectedAmountRequest(deltaAmount, signerIdentity, refundInformation) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (refundInformation) {
                if (!this.paymentNetwork) {
                    throw new Error('Cannot add refund information without payment network');
                }
                extensionsData.push(this.paymentNetwork.createExtensionsDataForAddRefundInformation(refundInformation));
            }
            const parameters = {
                deltaAmount,
                extensionsData,
                requestId: this.requestId
            };
            const increaseExpectedResult = yield this.requestLogic.increaseExpectedAmountRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(increaseExpectedResult);
        });
    }
    /**
     * Reduces the expected amount of the request. This can be called by the payee e.g. to apply discounts or special offers.
     *
     * @param deltaAmount Amount by which to reduce the expected amount
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param paymentInformation Payment information to add (any because it is specific to the payment network used by the request)
     * @returns The updated request
     */ reduceExpectedAmountRequest(deltaAmount, signerIdentity, paymentInformation) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (paymentInformation) {
                if (!this.paymentNetwork) {
                    throw new Error('Cannot add payment information without payment network');
                }
                extensionsData.push(this.paymentNetwork.createExtensionsDataForAddPaymentInformation(paymentInformation));
            }
            const parameters = {
                deltaAmount,
                extensionsData,
                requestId: this.requestId
            };
            const reduceExpectedResult = yield this.requestLogic.reduceExpectedAmountRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(reduceExpectedResult);
        });
    }
    /**
     * Adds stakeholders to a request
     *
     * @param IEncryptionParameters encryptionParams list of addtional encryption parameters to encrypt the channel key with
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param refundInformation refund information to add (any because it is specific to the payment network used by the request)
     * @returns The updated request
     */ addStakeholders(encryptionParams, signerIdentity, refundInformation) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (refundInformation) {
                if (!this.paymentNetwork) {
                    throw new Error('Cannot add refund information without payment network');
                }
                extensionsData.push(this.paymentNetwork.createExtensionsDataForAddRefundInformation(refundInformation));
            }
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addStakeholdersResult = yield this.requestLogic.addStakeholders(parameters, signerIdentity, encryptionParams, true);
            return this.handleRequestDataEvents(addStakeholdersResult);
        });
    }
    /**
     * Adds payment information
     *
     * @param paymentInformation Payment information to add (any because it is specific to the payment network used by the request)
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @returns The updated request
     */ addPaymentInformation(paymentInformation, signerIdentity) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot add payment information without payment network');
            }
            extensionsData.push(this.paymentNetwork.createExtensionsDataForAddPaymentInformation(paymentInformation));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    /**
     * Adds refund information
     *
     * @param refundInformation Refund information to add (any because it is specific to the payment network used by the request)
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @returns The updated request
     */ addRefundInformation(refundInformation, signerIdentity) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot add refund information without payment network');
            }
            extensionsData.push(this.paymentNetwork.createExtensionsDataForAddRefundInformation(refundInformation));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    /**
     * Declare a payment is sent for the declarative payment network
     *
     * @param amount Amount sent
     * @param note Note from payer about the sent payment
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param txHash transaction hash
     * @param network network of the transaction
     * @returns The updated request
     */ declareSentPayment(amount, note, signerIdentity, txHash, network) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot declare sent payment without payment network');
            }
            // We need to cast the object since IPaymentNetwork doesn't implement createExtensionsDataForDeclareSentPayment
            const declarativePaymentNetwork = this.paymentNetwork;
            if (!declarativePaymentNetwork.createExtensionsDataForDeclareSentPayment) {
                throw new Error('Cannot declare sent payment without declarative payment network');
            }
            extensionsData.push(declarativePaymentNetwork.createExtensionsDataForDeclareSentPayment({
                amount,
                note,
                txHash,
                network
            }));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    /**
     * Declare a refund is sent for the declarative payment network
     *
     * @param amount Amount sent
     * @param note Note from payee about the sent refund
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param txHash transaction hash
     * @param network network of the transaction
     * @returns The updated request
     */ declareSentRefund(amount, note, signerIdentity, txHash, network) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot declare sent refund without payment network');
            }
            // We need to cast the object since IPaymentNetwork doesn't implement createExtensionsDataForDeclareSentRefund
            const declarativePaymentNetwork = this.paymentNetwork;
            if (!declarativePaymentNetwork.createExtensionsDataForDeclareSentRefund) {
                throw new Error('Cannot declare sent refund without declarative payment network');
            }
            extensionsData.push(declarativePaymentNetwork.createExtensionsDataForDeclareSentRefund({
                amount,
                note,
                txHash,
                network
            }));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    /**
     * Declare a payment is received for the declarative payment network
     *
     * @param amount Amount received
     * @param note Note from payee about the received payment
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param txHash transaction hash
     * @param network network of the transaction
     * @returns The updated request
     */ declareReceivedPayment(amount, note, signerIdentity, txHash, network) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot declare received payment without payment network');
            }
            // We need to cast the object since IPaymentNetwork doesn't implement createExtensionsDataForDeclareReceivedPayment
            const declarativePaymentNetwork = this.paymentNetwork;
            if (!declarativePaymentNetwork.createExtensionsDataForDeclareReceivedPayment) {
                throw new Error('Cannot declare received payment without declarative payment network');
            }
            extensionsData.push(declarativePaymentNetwork.createExtensionsDataForDeclareReceivedPayment({
                amount,
                note,
                txHash,
                network
            }));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    /**
     * Declare a refund is received for the declarative payment network
     *
     * @param amount Amount received
     * @param note Note from payer about the received refund
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @param txHash transaction hash
     * @param network network of the transaction
     * @returns The updated request
     */ declareReceivedRefund(amount, note, signerIdentity, txHash, network) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot declare received refund without payment network');
            }
            // We need to cast the object since IPaymentNetwork doesn't implement createExtensionsDataForDeclareReceivedRefund
            const declarativePaymentNetwork = this.paymentNetwork;
            if (!declarativePaymentNetwork.createExtensionsDataForDeclareReceivedRefund) {
                throw new Error('Cannot declare received refund without declarative payment network');
            }
            extensionsData.push(declarativePaymentNetwork.createExtensionsDataForDeclareReceivedRefund({
                amount,
                note,
                txHash,
                network
            }));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    /**
     * Add a delegate for the declarative payment network
     *
     * @param delegate Identity of the delegate
     * @param signerIdentity Identity of the signer. The identity type must be supported by the signature provider.
     * @returns The updated request
     */ addDeclarativeDelegate(delegate, signerIdentity) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const extensionsData = [];
            if (!this.paymentNetwork) {
                throw new Error('Cannot declare delegate without payment network');
            }
            // We need to cast the object since IPaymentNetwork doesn't implement createExtensionsDataForDeclareReceivedRefund
            const declarativePaymentNetwork = this.paymentNetwork;
            if (!declarativePaymentNetwork.createExtensionsDataForAddDelegate) {
                throw new Error('Cannot declare delegate without declarative payment network');
            }
            extensionsData.push(declarativePaymentNetwork.createExtensionsDataForAddDelegate({
                delegate
            }));
            const parameters = {
                extensionsData,
                requestId: this.requestId
            };
            const addExtensionResult = yield this.requestLogic.addExtensionsDataRequest(parameters, signerIdentity, true);
            return this.handleRequestDataEvents(addExtensionResult);
        });
    }
    handleRequestDataEvents(eventEmitter) {
        // refresh the local request data
        const requestDataPromise = this.refresh();
        if (!this.disableEvents) {
            eventEmitter.on('confirmed', ()=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    try {
                        const requestData = yield requestDataPromise;
                        requestData.emit('confirmed', (yield this.refresh()));
                    } catch (error) {
                        eventEmitter.emit('error', error);
                    }
                })).on('error', (error)=>{
                this.emitter.emit('error', error);
            });
        }
        return requestDataPromise;
    }
    /**
     * Gets the request data
     *
     * @returns The updated request data
     */ getData() {
        var _a;
        if (this.confirmationErrorOccurredAtCreation) {
            throw Error('request confirmation failed');
        }
        let requestData = (0, utils_2.deepCopy)(this.requestData);
        let pending = (0, utils_2.deepCopy)(this.pendingData);
        if (!requestData && pending) {
            requestData = pending;
            requestData.state = types_1.RequestLogicTypes.STATE.PENDING;
            pending = {
                state: (_a = this.pendingData) === null || _a === void 0 ? void 0 : _a.state
            };
        } else if (!requestData && !pending) {
            return Object.assign(new events_1.EventEmitter(), {});
        }
        const currency = this.currencyManager.fromStorageCurrency(requestData.currency);
        return Object.assign(new events_1.EventEmitter(), Object.assign(Object.assign({}, requestData), {
            balance: this.balance,
            contentData: this.contentData,
            currency: currency ? currency.id : 'unknown',
            currencyInfo: requestData === null || requestData === void 0 ? void 0 : requestData.currency,
            meta: this.requestMeta,
            pending
        }));
    }
    getEscrowData(paymentReference, network) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const escrowContractAddress = smart_contracts_1.erc20EscrowToPayArtifact.getAddress(network);
            const escrowInfoRetriever = new payment_detection_1.EscrowERC20InfoRetriever(paymentReference, escrowContractAddress, 0, '', '', network);
            return yield escrowInfoRetriever.getEscrowRequestMapping();
        });
    }
    /**
     * Refresh the request data and balance from the network (check if new events happened - e.g: accept, payments etc..) and return these data
     *
     * @param requestAndMeta return from getRequestFromId to avoid asking twice
     * @returns Refreshed request data
     */ refresh(requestAndMeta) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (this.confirmationErrorOccurredAtCreation) {
                throw Error('request confirmation failed');
            }
            if (!requestAndMeta) {
                requestAndMeta = yield this.requestLogic.getRequestFromId(this.requestId);
            }
            if (!requestAndMeta.result.request && !requestAndMeta.result.pending) {
                const requestFromIdError = utils_1.default.formatGetRequestFromIdError(requestAndMeta);
                if (requestFromIdError.indexOf('Decryption is not available') !== -1) {
                    this.logger.warn(`Decryption is not available for request ${this.requestId}`);
                } else {
                    throw new Error(`No request found for the id: ${this.requestId} - ${requestFromIdError}`);
                }
            }
            if (this.contentDataExtension) {
                // TODO: PROT-1131 - add a pending content
                this.contentData = yield this.contentDataExtension.getContent(requestAndMeta.result.request || requestAndMeta.result.pending);
            }
            this.requestData = requestAndMeta.result.request;
            this.pendingData = requestAndMeta.result.pending;
            this.requestMeta = requestAndMeta.meta;
            if (!this.skipPaymentDetection) {
                // let's refresh the balance
                yield this.refreshBalance();
            }
            return this.getData();
        });
    }
    /**
     * Refresh only the balance of the request and return it
     *
     * @returns return the balance
     */ refreshBalance() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // TODO: PROT-1131 - add a pending balance
            if (this.paymentNetwork && this.requestData) {
                this.balance = yield this.paymentNetwork.getBalance(this.requestData);
            }
            return this.balance;
        });
    }
    /**
     * Enables the payment detection
     */ enablePaymentDetection() {
        this.skipPaymentDetection = false;
    }
    /**
     * Disables the payment detection
     */ disablePaymentDetection() {
        this.skipPaymentDetection = true;
    }
}
exports.default = Request; //# sourceMappingURL=request.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/content-data-extension.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const DataFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
// Extension ID for this class: content data
const CONTENT_DATA_ID = types_1.ExtensionTypes.ID.CONTENT_DATA;
/**
 * Handles the content data of a request
 */ class ContentDataExtension {
    /**
     * @param advancedLogic Instance of the advanced logic layer
     */ constructor(advancedLogic){
        this.extension = advancedLogic.extensions.contentData;
    }
    /**
     * Creates the extensions data for the creation of this extension
     *
     * @param content Content to link to the request
     * @returns ExtensionsData ready to be added to the request
     */ createExtensionsDataForCreation(content) {
        if (DataFormat.isKnownFormat(content)) {
            const { valid, errors } = DataFormat.validate(content);
            if (!valid) {
                const errorsToShow = errors.map((e)=>JSON.stringify(e)).join('\n');
                throw new Error(`The content data seem to follow a request format but contains errors: ${errorsToShow}`);
            }
        }
        return this.extension.createCreationAction({
            content
        });
    }
    /**
     * Gets the content from the extensions state
     *
     * @param request The request of which we want the content
     * @returns The content
     */ getContent(request) {
        if (request && request.extensions && request.extensions[CONTENT_DATA_ID]) {
            return request.extensions[CONTENT_DATA_ID].values.content;
        }
        return null;
    }
}
exports.default = ContentDataExtension; //# sourceMappingURL=content-data-extension.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-config-defaults.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const config = {
    requestClientVersionHeader: 'X-Request-Network-Client-Version',
    httpRequestMaxRetry: 3,
    httpRequestRetryDelay: 100,
    httpRequestExponentialBackoffDelay: 0,
    httpRequestMaxExponentialBackoffDelay: 30000,
    // Exponential backoff starting at 1s, doubling after each retry, up to a maximum of 64s and max 7 retries with an initial 3s defer delay, yielding a total of 8 calls and total timeout of 130s
    getConfirmationMaxRetry: 7,
    getConfirmationRetryDelay: 0,
    getConfirmationExponentialBackoffDelay: 1000,
    getConfirmationMaxExponentialBackoffDelay: 64000,
    getConfirmationDeferDelay: 3000
};
exports.default = config; //# sourceMappingURL=http-config-defaults.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/package.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"name\":\"@requestnetwork/request-client.js\",\"version\":\"0.54.0\",\"publishConfig\":{\"access\":\"public\"},\"description\":\"Client side library for Request Network.\",\"keywords\":[\"requestnetwork\",\"request-client.js\"],\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/RequestNetwork/requestNetwork.git\"},\"homepage\":\"https://github.com/RequestNetwork/requestNetwork/tree/master/packages/request-client.js#readme\",\"bugs\":{\"url\":\"https://github.com/RequestNetwork/requestNetwork/issues\"},\"license\":\"MIT\",\"engines\":{\"node\":\">=18.0.0\"},\"main\":\"dist/index.js\",\"types\":\"dist/index.d.ts\",\"directories\":{\"lib\":\"src\",\"test\":\"test\"},\"files\":[\"dist\"],\"scripts\":{\"build\":\"run-s build:commonjs build:umd\",\"build:commonjs\":\"tsc -b tsconfig.build.json\",\"build:umd\":\"webpack\",\"clean\":\"rm -rf dist tsconfig.tsbuildinfo tsconfig.build.tsbuildinfo\",\"lint\":\"eslint . --fix\",\"lint:check\":\"eslint .\",\"prepare\":\"yarn run build\",\"test\":\"jest\",\"test:watch\":\"yarn test --watch\"},\"dependencies\":{\"@requestnetwork/advanced-logic\":\"0.49.0\",\"@requestnetwork/currency\":\"0.23.0\",\"@requestnetwork/data-access\":\"0.40.0\",\"@requestnetwork/data-format\":\"0.19.5\",\"@requestnetwork/epk-signature\":\"0.9.5\",\"@requestnetwork/multi-format\":\"0.23.0\",\"@requestnetwork/payment-detection\":\"0.49.0\",\"@requestnetwork/request-logic\":\"0.39.0\",\"@requestnetwork/smart-contracts\":\"0.43.0\",\"@requestnetwork/transaction-manager\":\"0.40.0\",\"@requestnetwork/types\":\"0.49.0\",\"@requestnetwork/utils\":\"0.49.0\",\"ethers\":\"5.7.2\",\"qs\":\"6.11.2\",\"tslib\":\"2.5.0\"},\"devDependencies\":{\"@compodoc/compodoc\":\"1.1.11\",\"@types/jest\":\"29.5.6\",\"amd-loader\":\"0.0.8\",\"crypto-browserify\":\"3.12.0\",\"duplicate-package-checker-webpack-plugin\":\"3.0.0\",\"jest\":\"29.5.0\",\"jest-junit\":\"16.0.0\",\"npm-run-all\":\"4.1.5\",\"source-map-support\":\"0.5.19\",\"stream-browserify\":\"3.0.0\",\"terser-webpack-plugin\":\"4.2.3\",\"ts-jest\":\"29.1.0\",\"ts-loader\":\"8.4.0\",\"ts-node\":\"10.9.1\",\"typescript\":\"5.1.3\",\"webpack\":\"5.94.0\",\"webpack-bundle-analyzer\":\"4.2.0\",\"webpack-cli\":\"3.3.12\"},\"gitHead\":\"e6a17bc76302acb6d469eeebe0f300c4065658b9\"}"));}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-data-access.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const http_config_defaults_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-config-defaults.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const qs_1 = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/index.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const packageJson = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/package.json (json)");
/**
 * Exposes a Data-Access module over HTTP
 */ class HttpDataAccess {
    /**
     * Creates an instance of HttpDataAccess.
     * @param httpConfig @see ClientTypes.IHttpDataAccessConfig for available options.
     * @param nodeConnectionConfig Configuration options to connect to the node.
     */ constructor({ httpConfig, nodeConnectionConfig } = {
        httpConfig: {},
        nodeConnectionConfig: {}
    }){
        // Get Request Client version to set it in the header
        const requestClientVersion = packageJson.version;
        this.httpConfig = Object.assign(Object.assign({}, http_config_defaults_1.default), httpConfig);
        this.nodeConnectionConfig = Object.assign({
            baseURL: 'http://localhost:3000',
            headers: {
                [this.httpConfig.requestClientVersionHeader]: requestClientVersion
            }
        }, nodeConnectionConfig);
    }
    /**
     * Initialize the module. Does nothing, exists only to implement IDataAccess
     *
     * @returns nothing
     */ initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // no-op, nothing to do
            return;
        });
    }
    /**
     * Closes the module. Does nothing, exists only to implement IDataAccess
     *
     * @returns nothing
     */ close() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // no-op, nothing to do
            return;
        });
    }
    /**
     * Persists a new transaction on a node through HTTP.
     *
     * @param transactionData The transaction data
     * @param topics The topics used to index the transaction
     */ persistTransaction(transactionData, channelId, topics) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // We don't retry this request since it may fail because of a slow Storage
            // For example, if the Ethereum network is slow and we retry the request three times
            // three data will be persisted at the end
            const data = yield this.fetch('POST', '/persistTransaction', undefined, {
                channelId,
                topics,
                transactionData
            });
            // Create the return result with EventEmitter
            const result = Object.assign(new events_1.EventEmitter(), data);
            // Try to get the confirmation
            new Promise((r)=>setTimeout(r, this.httpConfig.getConfirmationDeferDelay)).then(()=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    const confirmedData = yield this.getConfirmedTransaction(transactionData);
                    // when found, emit the event 'confirmed'
                    result.emit('confirmed', confirmedData);
                })).catch((e)=>{
                let error = e;
                if (e && 'status' in e && e.status === 404) {
                    error = new Error(`Timeout while confirming the Request was persisted. It is likely that the Request will be confirmed eventually. Catch this error and use getConfirmedTransaction() to continue polling for confirmation. Adjusting the httpConfig settings on the RequestNetwork object to avoid future timeouts. Avoid calling persistTransaction() again to prevent creating a duplicate Request.`);
                }
                result.emit('error', error);
            });
            return result;
        });
    }
    /**
     * Gets a transaction from the node through HTTP.
     * @param transactionData The transaction data
     */ getConfirmedTransaction(transactionData) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const transactionHash = (0, utils_1.normalizeKeccak256Hash)(transactionData).value;
            return yield this.fetchAndRetry('/getConfirmedTransaction', {
                transactionHash
            }, {
                maxRetries: this.httpConfig.getConfirmationMaxRetry,
                retryDelay: this.httpConfig.getConfirmationRetryDelay,
                exponentialBackoffDelay: this.httpConfig.getConfirmationExponentialBackoffDelay,
                maxExponentialBackoffDelay: this.httpConfig.getConfirmationMaxExponentialBackoffDelay
            });
        });
    }
    /**
     * Gets the transactions for a channel from the node through HTTP.
     *
     * @param channelId The channel id to search for
     * @param timestampBoundaries filter timestamp boundaries
     */ getTransactionsByChannelId(channelId, timestampBoundaries) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return yield this.fetchAndRetry('/getTransactionsByChannelId', {
                channelId,
                timestampBoundaries
            });
        });
    }
    /**
     * Gets all the transactions of channel indexed by topic from the node through HTTP.
     *
     * @param topic topic to search for
     * @param updatedBetween filter timestamp boundaries
     */ getChannelsByTopic(topic, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            (0, utils_1.validatePaginationParams)(page, pageSize);
            const params = Object.assign(Object.assign({
                topic,
                updatedBetween
            }, page !== undefined && {
                page
            }), pageSize !== undefined && {
                pageSize
            });
            return yield this.fetchAndRetry('/getChannelsByTopic', params);
        });
    }
    /**
     * Gets all the transactions of channel indexed by multiple topics from the node through HTTP.
     *
     * @param topics topics to search for
     * @param updatedBetween filter timestamp boundaries
     */ getChannelsByMultipleTopics(topics, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            (0, utils_1.validatePaginationParams)(page, pageSize);
            return yield this.fetchAndRetry('/getChannelsByMultipleTopics', {
                topics,
                updatedBetween,
                page,
                pageSize
            });
        });
    }
    /**
     * Gets information from the node (version, files etc...)
     *
     */ _getStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return yield this.fetchAndRetry('/information', {});
        });
    }
    /**
     * Gets the Lit Protocol capacity delegation auth sig from the node through HTTP.
     *
     * @param delegateeAddress the address of the delegatee
     */ getLitCapacityDelegationAuthSig(delegateeAddress) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!delegateeAddress || typeof delegateeAddress !== 'string') {
                throw new Error('delegateeAddress must be a non-empty string');
            }
            if (!ethers_1.utils.isAddress(delegateeAddress)) {
                throw new Error('delegateeAddress must be a valid Ethereum address');
            }
            return yield this.fetchAndRetry('/getLitCapacityDelegationAuthSig', {
                delegateeAddress
            });
        });
    }
    /**
     * Sends an HTTP GET request to the node and retries until it succeeds.
     * Throws when the retry count reaches a maximum.
     *
     * @param url HTTP GET request url
     * @param params HTTP GET request parameters
     * @param retryConfig Maximum retry count, delay between retries, exponential backoff delay, and maximum exponential backoff delay
     */ fetchAndRetry(path, params, retryConfig = {}) {
        var _a, _b, _c, _d;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            retryConfig.maxRetries = (_a = retryConfig.maxRetries) !== null && _a !== void 0 ? _a : this.httpConfig.httpRequestMaxRetry;
            retryConfig.retryDelay = (_b = retryConfig.retryDelay) !== null && _b !== void 0 ? _b : this.httpConfig.httpRequestRetryDelay;
            retryConfig.exponentialBackoffDelay = (_c = retryConfig.exponentialBackoffDelay) !== null && _c !== void 0 ? _c : this.httpConfig.httpRequestExponentialBackoffDelay;
            retryConfig.maxExponentialBackoffDelay = (_d = retryConfig.maxExponentialBackoffDelay) !== null && _d !== void 0 ? _d : this.httpConfig.httpRequestMaxExponentialBackoffDelay;
            return yield (0, utils_1.retry)(()=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    return yield this.fetch('GET', path, params);
                }), retryConfig)();
        });
    }
    fetch(method, path, params, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const _a = this.nodeConnectionConfig, { baseURL, headers } = _a, options = tslib_1.__rest(_a, [
                "baseURL",
                "headers"
            ]);
            const url = new URL(path, baseURL);
            if (params) {
                // qs.parse doesn't handle well mixes of string and object params
                for (const [key, value] of Object.entries(params)){
                    if (typeof value === 'object') {
                        params[key] = JSON.stringify(value);
                    }
                }
                url.search = (0, qs_1.stringify)(params);
            }
            const r = yield fetch(url, Object.assign({
                method,
                body: body ? JSON.stringify(body) : undefined,
                headers: Object.assign({
                    'Content-Type': 'application/json'
                }, headers)
            }, options));
            if (r.ok) {
                return yield r.json();
            }
            throw Object.assign(new Error(r.statusText), {
                status: r.status,
                statusText: r.statusText
            });
        });
    }
}
exports.default = HttpDataAccess; //# sourceMappingURL=http-data-access.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/no-persist-http-data-access.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NoPersistHttpDataAccess = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const http_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-data-access.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
class NoPersistHttpDataAccess extends http_data_access_1.default {
    constructor({ httpConfig, nodeConnectionConfig } = {
        httpConfig: {},
        nodeConnectionConfig: {}
    }){
        super({
            httpConfig,
            nodeConnectionConfig
        });
    }
    persistTransaction(transactionData, channelId, topics) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const data = {
                meta: {
                    topics: topics || [],
                    transactionStorageLocation: '',
                    storageMeta: {
                        state: types_1.StorageTypes.ContentState.PENDING,
                        timestamp: Date.now() / 1000
                    }
                },
                result: {}
            };
            const result = Object.assign(new events_1.EventEmitter(), data);
            // Emit confirmation instantly since data is not going to be persisted
            result.emit('confirmed', result);
            return result;
        });
    }
}
exports.NoPersistHttpDataAccess = NoPersistHttpDataAccess; //# sourceMappingURL=no-persist-http-data-access.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/request-network.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const advanced_logic_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/index.js [app-rsc] (ecmascript)");
const payment_detection_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+payment-detection@0.49.0/node_modules/@requestnetwork/payment-detection/dist/index.js [app-rsc] (ecmascript)");
const request_logic_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/index.js [app-rsc] (ecmascript)");
const transaction_manager_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const content_data_extension_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/content-data-extension.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/request.js [app-rsc] (ecmascript)");
const utils_2 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/utils.js [app-rsc] (ecmascript)");
const no_persist_http_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/no-persist-http-data-access.js [app-rsc] (ecmascript)");
/**
 * Entry point of the request-client.js library. Create requests, get requests, manipulate requests.
 */ class RequestNetwork {
    /**
     * @param dataAccess instance of data-access layer
     * @param signatureProvider module in charge of the signatures
     * @param decryptionProvider module in charge of the decryption
     * @param paymentOptions options for payment detection
     */ constructor({ dataAccess, signatureProvider, decryptionProvider, cipherProvider, currencyManager, paymentOptions }){
        this.supportedIdentities = utils_1.supportedIdentities;
        this.currencyManager = currencyManager || currency_1.CurrencyManager.getDefault();
        this.dataAccess = dataAccess;
        this.advancedLogic = new advanced_logic_1.AdvancedLogic(this.currencyManager);
        this.transaction = new transaction_manager_1.TransactionManager(dataAccess, decryptionProvider, cipherProvider);
        this.requestLogic = new request_logic_1.RequestLogic(this.transaction, signatureProvider, this.advancedLogic);
        this.contentData = new content_data_extension_1.default(this.advancedLogic);
        this.paymentNetworkFactory = new payment_detection_1.PaymentNetworkFactory(this.advancedLogic, this.currencyManager, paymentOptions);
        this.cipherProvider = cipherProvider;
    }
    /**
     * Get the cipher provider
     * @returns the cipher provider
     */ getCipherProvider() {
        return this.cipherProvider;
    }
    /**
     * Set the cipher provider
     * @param cipherProvider the cipher provider
     */ setCipherProvider(cipherProvider) {
        this.cipherProvider = cipherProvider;
    }
    /**
     * Creates a request.
     *
     * @param requestParameters Parameters to create a request
     * @returns The created request
     */ createRequest(parameters, options) {
        var _a, _b;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const { requestParameters, topics, paymentNetwork } = yield this.prepareRequestParameters(parameters);
            const requestLogicCreateResult = yield this.requestLogic.createRequest(requestParameters, parameters.signer, topics);
            const transactionData = (_a = requestLogicCreateResult.meta) === null || _a === void 0 ? void 0 : _a.transactionManagerMeta.transactionData;
            const requestId = requestLogicCreateResult.result.requestId;
            const isSkippingPersistence = this.dataAccess instanceof no_persist_http_data_access_1.NoPersistHttpDataAccess;
            // create the request object
            const request = new request_1.default(requestId, this.requestLogic, this.currencyManager, {
                contentDataExtension: this.contentData,
                paymentNetwork,
                requestLogicCreateResult,
                skipPaymentDetection: parameters.disablePaymentDetection,
                disableEvents: parameters.disableEvents,
                // inMemoryInfo is only used when skipPersistence is enabled
                inMemoryInfo: isSkippingPersistence ? {
                    topics: (_b = requestLogicCreateResult.meta.transactionManagerMeta) === null || _b === void 0 ? void 0 : _b.topics,
                    transactionData: transactionData,
                    requestData: this.prepareRequestDataForPayment(transactionData, requestId)
                } : null
            });
            if (!(options === null || options === void 0 ? void 0 : options.skipRefresh) && !isSkippingPersistence) {
                // refresh the local request data
                yield request.refresh();
            }
            return request;
        });
    }
    /**
     * Persists an in-memory request to the data-access layer.
     *
     * This method is used to persist requests that were initially created with skipPersistence enabled.
     *
     * @param request The Request object to persist. This must be a request that was created with skipPersistence enabled.
     * @returns A promise that resolves to the result of the persist transaction operation.
     * @throws {Error} If the request's `inMemoryInfo` is not provided, indicating it wasn't created with skipPersistence.
     * @throws {Error} If the current data access instance does not support persistence (e.g., NoPersistHttpDataAccess).
     */ persistRequest(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!request.inMemoryInfo) {
                throw new Error('Cannot persist request without inMemoryInfo.');
            }
            if (this.dataAccess instanceof no_persist_http_data_access_1.NoPersistHttpDataAccess) {
                throw new Error('Cannot persist request when skipPersistence is enabled. To persist the request, create a new instance of RequestNetwork without skipPersistence being set to true.');
            }
            const result = yield this.dataAccess.persistTransaction(request.inMemoryInfo.transactionData, request.requestId, request.inMemoryInfo.topics);
            return result;
        });
    }
    /**
     * Creates an encrypted request.
     *
     * @param parameters Parameters to create a request
     * @param encryptionParams Request encryption parameters
     * @returns The created encrypted request
     */ _createEncryptedRequest(parameters, encryptionParams, options) {
        var _a, _b;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const { requestParameters, topics, paymentNetwork } = yield this.prepareRequestParameters(parameters);
            const requestLogicCreateResult = yield this.requestLogic.createEncryptedRequest(requestParameters, parameters.signer, encryptionParams, topics);
            const transactionData = (_a = requestLogicCreateResult.meta) === null || _a === void 0 ? void 0 : _a.transactionManagerMeta.transactionData;
            const requestId = requestLogicCreateResult.result.requestId;
            const isSkippingPersistence = this.dataAccess instanceof no_persist_http_data_access_1.NoPersistHttpDataAccess;
            // create the request object
            const request = new request_1.default(requestId, this.requestLogic, this.currencyManager, {
                contentDataExtension: this.contentData,
                paymentNetwork,
                requestLogicCreateResult,
                skipPaymentDetection: parameters.disablePaymentDetection,
                disableEvents: parameters.disableEvents,
                inMemoryInfo: isSkippingPersistence ? {
                    topics: (_b = requestLogicCreateResult.meta.transactionManagerMeta) === null || _b === void 0 ? void 0 : _b.topics,
                    transactionData: transactionData,
                    requestData: this.prepareRequestDataForPayment(transactionData, requestId)
                } : null
            });
            if (!(options === null || options === void 0 ? void 0 : options.skipRefresh) && !isSkippingPersistence) {
                // refresh the local request data
                yield request.refresh();
            }
            return request;
        });
    }
    /**
     * Gets the ID of a request without creating it.
     *
     * @param requestParameters Parameters to create a request
     * @returns The requestId
     */ computeRequestId(parameters) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const { requestParameters } = yield this.prepareRequestParameters(parameters);
            return this.requestLogic.computeRequestId(requestParameters, parameters.signer);
        });
    }
    /**
     * Create a Request instance from an existing Request's ID
     *
     * @param requestId The ID of the Request
     * @param options options
     * @returns the Request
     */ fromRequestId(requestId, options) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const requestAndMeta = yield this.requestLogic.getRequestFromId(requestId);
            // if no request found, throw a human readable message:
            if (!requestAndMeta.result.request && !requestAndMeta.result.pending) {
                throw new Error(utils_2.default.formatGetRequestFromIdError(requestAndMeta));
            }
            // get the request state. If the creation is not confirmed yet, get the pending state (useful for the payment network)
            const requestState = requestAndMeta.result.request ? requestAndMeta.result.request : requestAndMeta.result.pending;
            const paymentNetwork = this.paymentNetworkFactory.getPaymentNetworkFromRequest(requestState);
            // create the request object
            const request = new request_1.default(requestId, this.requestLogic, this.currencyManager, {
                contentDataExtension: this.contentData,
                paymentNetwork,
                skipPaymentDetection: options === null || options === void 0 ? void 0 : options.disablePaymentDetection,
                disableEvents: options === null || options === void 0 ? void 0 : options.disableEvents
            });
            // refresh the local request data
            yield request.refresh(requestAndMeta);
            return request;
        });
    }
    /**
     * Create an array of request instances from an identity
     *
     * @param updatedBetween filter the requests with time boundaries
     * @param options options
     * @returns the Requests
     */ fromIdentity(identity, updatedBetween, options) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.supportedIdentities.includes(identity.type)) {
                throw new Error(`${identity.type} is not supported`);
            }
            return this.fromTopic(identity, updatedBetween, options);
        });
    }
    /**
     * Create an array of request instances from multiple identities
     *
     * @param updatedBetween filter the requests with time boundaries
     * @param disablePaymentDetection if true, skip the payment detection
     * @returns the requests
     */ fromMultipleIdentities(identities, updatedBetween, options) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const identityNotSupported = identities.find((identity)=>!this.supportedIdentities.includes(identity.type));
            if (identityNotSupported) {
                throw new Error(`${identityNotSupported.type} is not supported`);
            }
            return this.fromMultipleTopics(identities, updatedBetween, options);
        });
    }
    /**
     * Create an array of request instances from a topic
     *
     * @param updatedBetween filter the requests with time boundaries
     * @param options options
     * @returns the Requests
     */ fromTopic(topic, updatedBetween, options) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            (0, utils_1.validatePaginationParams)(options === null || options === void 0 ? void 0 : options.page, options === null || options === void 0 ? void 0 : options.pageSize);
            // Gets all the requests indexed by the value of the identity
            const requestsAndMeta = yield this.requestLogic.getRequestsByTopic(topic, updatedBetween, options === null || options === void 0 ? void 0 : options.page, options === null || options === void 0 ? void 0 : options.pageSize);
            // From the requests of the request-logic layer creates the request objects and gets the payment networks
            const requestPromises = requestsAndMeta.result.requests.map((requestFromLogic)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    // get the request state. If the creation is not confirmed yet, get the pending state (useful for the payment network)
                    const requestState = requestFromLogic.request ? requestFromLogic.request : requestFromLogic.pending;
                    const paymentNetwork = this.paymentNetworkFactory.getPaymentNetworkFromRequest(requestState);
                    // create the request object
                    const request = new request_1.default(requestState.requestId, this.requestLogic, this.currencyManager, {
                        contentDataExtension: this.contentData,
                        paymentNetwork,
                        skipPaymentDetection: options === null || options === void 0 ? void 0 : options.disablePaymentDetection,
                        disableEvents: options === null || options === void 0 ? void 0 : options.disableEvents
                    });
                    // refresh the local request data
                    yield request.refresh();
                    return request;
                }));
            return Promise.all(requestPromises);
        });
    }
    /**
     * Create an array of request instances from a multiple topics
     *
     * @param updatedBetween filter the requests with time boundaries
     * @param options options
     * @returns the Requests
     */ fromMultipleTopics(topics, updatedBetween, options) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            (0, utils_1.validatePaginationParams)(options === null || options === void 0 ? void 0 : options.page, options === null || options === void 0 ? void 0 : options.pageSize);
            // Gets all the requests indexed by the value of the identity
            const requestsAndMeta = yield this.requestLogic.getRequestsByMultipleTopics(topics, updatedBetween, options === null || options === void 0 ? void 0 : options.page, options === null || options === void 0 ? void 0 : options.pageSize);
            // From the requests of the request-logic layer creates the request objects and gets the payment networks
            const requestPromises = requestsAndMeta.result.requests.map((requestFromLogic)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    // get the request state. If the creation is not confirmed yet, get the pending state (useful for the payment network)
                    const requestState = requestFromLogic.request ? requestFromLogic.request : requestFromLogic.pending;
                    const paymentNetwork = this.paymentNetworkFactory.getPaymentNetworkFromRequest(requestState);
                    // create the request object
                    const request = new request_1.default(requestState.requestId, this.requestLogic, this.currencyManager, {
                        contentDataExtension: this.contentData,
                        paymentNetwork,
                        skipPaymentDetection: options === null || options === void 0 ? void 0 : options.disablePaymentDetection,
                        disableEvents: options === null || options === void 0 ? void 0 : options.disableEvents
                    });
                    // refresh the local request data
                    yield request.refresh();
                    return request;
                }));
            return Promise.all(requestPromises);
        });
    }
    /*
     * If request currency is a string, convert it to currency object
     */ getCurrency(input) {
        if (typeof input === 'string') {
            const currency = this.currencyManager.from(input);
            if (!currency) {
                throw new currency_1.UnsupportedCurrencyError(input);
            }
            return currency_1.CurrencyManager.toStorageCurrency(currency);
        }
        return input;
    }
    /**
     * A helper to validate and prepare the parameters of a request.
     * @param parameters Parameters to create a request
     * @returns the parameters, ready for request creation, the topics, and the paymentNetwork
     */ prepareRequestParameters(parameters) {
        var _a, _b, _c, _d;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const currency = this.getCurrency(parameters.requestInfo.currency);
            const requestParameters = Object.assign(Object.assign({}, parameters.requestInfo), {
                currency
            });
            const contentData = parameters.contentData;
            const topics = ((_a = parameters.topics) === null || _a === void 0 ? void 0 : _a.slice()) || [];
            // Check that currency is valid
            if (!this.currencyManager.validateCurrency(currency)) {
                throw new Error('The currency is not valid');
            }
            // avoid mutation of the parameters
            const copiedRequestParameters = (0, utils_1.deepCopy)(requestParameters);
            copiedRequestParameters.extensionsData = [];
            const detectionChain = ((_b = parameters === null || parameters === void 0 ? void 0 : parameters.paymentNetwork) === null || _b === void 0 ? void 0 : _b.parameters) && 'network' in parameters.paymentNetwork.parameters ? (_c = parameters.paymentNetwork.parameters.network) !== null && _c !== void 0 ? _c : requestParameters.currency.network : requestParameters.currency.network;
            const paymentNetwork = parameters.paymentNetwork ? this.paymentNetworkFactory.createPaymentNetwork(parameters.paymentNetwork.id, requestParameters.currency.type, detectionChain) : null;
            if (paymentNetwork) {
                // create the extensions data for the payment network
                copiedRequestParameters.extensionsData.push((yield paymentNetwork.createExtensionsDataForCreation(((_d = parameters.paymentNetwork) === null || _d === void 0 ? void 0 : _d.parameters) || {})));
            }
            if (contentData) {
                // create the extensions data for the content data
                copiedRequestParameters.extensionsData.push(this.contentData.createExtensionsDataForCreation(contentData));
            }
            // add identities as topics
            if (copiedRequestParameters.payee) {
                topics.push(copiedRequestParameters.payee);
            }
            if (copiedRequestParameters.payer) {
                topics.push(copiedRequestParameters.payer);
            }
            if (requestParameters.extensionsData) {
                copiedRequestParameters.extensionsData.push(...requestParameters.extensionsData);
            }
            return {
                requestParameters: copiedRequestParameters,
                topics,
                paymentNetwork
            };
        });
    }
    /**
     * Prepares a payment request structure from transaction data.
     *
     * This method is used to create a request structure similar to a persisted request,
     * allowing users to pay before the request is persisted. This is useful in scenarios
     * where a request is created, paid, and then persisted, as opposed to the normal flow
     * of creating, persisting, and then paying the request.
     *
     * @param transactionData The transaction data containing the request information
     * @param requestId The ID of the request
     * @returns The prepared payment request structure or undefined if transaction data is missing
     */ prepareRequestDataForPayment(transactionData, requestId) {
        var _a;
        const requestData = JSON.parse(transactionData.data).data;
        const newExtensions = {};
        for (const extension of requestData.parameters.extensionsData){
            if (extension.id !== types_1.ExtensionTypes.OTHER_ID.CONTENT_DATA) {
                newExtensions[extension.id] = {
                    events: [
                        {
                            name: extension.action,
                            parameters: {
                                paymentAddress: extension.parameters.paymentAddress,
                                salt: extension.parameters.salt,
                                feeAddress: extension.parameters.feeAddress,
                                feeAmount: extension.parameters.feeAmount
                            },
                            timestamp: requestData.parameters.timestamp
                        }
                    ],
                    id: extension.id,
                    type: types_1.ExtensionTypes.TYPE.PAYMENT_NETWORK,
                    values: {
                        salt: extension.parameters.salt,
                        receivedPaymentAmount: '0',
                        receivedRefundAmount: '0',
                        sentPaymentAmount: '0',
                        sentRefundAmount: '0',
                        paymentAddress: extension.parameters.paymentAddress,
                        feeAddress: extension.parameters.feeAddress,
                        feeAmount: extension.parameters.feeAmount
                    },
                    version: extension.version
                };
            }
        }
        return Object.assign(Object.assign({}, requestData.parameters), {
            requestId,
            meta: null,
            balance: null,
            currency: requestData.parameters.currency.type,
            currencyInfo: {
                type: requestData.parameters.currency.type,
                network: requestData.parameters.currency.network,
                value: requestData.parameters.currency.value || ''
            },
            contentData: (_a = requestData.parameters.extensionsData.find((ext)=>ext.id === types_1.ExtensionTypes.OTHER_ID.CONTENT_DATA)) === null || _a === void 0 ? void 0 : _a.parameters.content,
            pending: null,
            extensions: newExtensions
        });
    }
}
exports.default = RequestNetwork; //# sourceMappingURL=request-network.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/mock-storage.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MockStorage = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Storage layer implemented with in-memory hashmap, to be used for testing.
 */ class MockStorage {
    constructor(){
        this.data = new Map();
        // For test purpose we can force the next append call to emit Error
        this.forceEmitError = false;
    }
    initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return;
        });
    }
    append(content) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!content) {
                throw Error('Error: no content provided');
            }
            const hash = MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(content));
            const nowTimestampInSec = (0, utils_1.getCurrentTimestampInSecond)();
            const resultData = {
                content,
                id: hash,
                meta: {
                    state: types_1.StorageTypes.ContentState.PENDING,
                    storageType: types_1.StorageTypes.StorageSystemType.IN_MEMORY_MOCK,
                    timestamp: nowTimestampInSec
                }
            };
            this.data.set(hash, resultData);
            const result = Object.assign(new events_1.EventEmitter(), resultData);
            setTimeout(()=>{
                if (this.forceEmitError) {
                    // emit error
                    this.forceEmitError = false;
                    result.emit('error', 'forced error asked by _makeNextAppendFailInsteadOfConfirmed()');
                } else {
                    resultData.meta.state = types_1.StorageTypes.ContentState.CONFIRMED;
                    this.data.set(hash, resultData);
                    result.emit('confirmed', resultData);
                }
            // eslint-disable-next-line no-magic-numbers
            }, 100);
            return result;
        });
    }
    read(id) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!id) {
                throw Error('No id provided');
            }
            const data = this.data.get(id);
            if (!data) {
                throw Error('No content found from this id');
            }
            return data;
        });
    }
    readMany(ids) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return Promise.all(ids.map((id)=>this.read(id)));
        });
    }
    getData() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const entries = Array.from(this.data.values());
            const nowTimestampInSec = (0, utils_1.getCurrentTimestampInSecond)();
            return {
                entries,
                lastTimestamp: nowTimestampInSec
            };
        });
    }
    /**
     * Gets information
     *
     */ _getStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return {
                dataIds: {
                    count: Object.entries(this.data).length,
                    values: []
                },
                ignoredDataIds: {
                    count: 0,
                    values: []
                }
            };
        });
    }
    _makeNextAppendFailInsteadOfConfirmed() {
        this.forceEmitError = true;
    }
}
exports.MockStorage = MockStorage; //# sourceMappingURL=mock-storage.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-request-network.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const request_network_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/request-network.js [app-rsc] (ecmascript)");
const http_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-data-access.js [app-rsc] (ecmascript)");
const data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/index.js [app-rsc] (ecmascript)");
const mock_storage_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/mock-storage.js [app-rsc] (ecmascript)");
const no_persist_http_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/no-persist-http-data-access.js [app-rsc] (ecmascript)");
/**
 * Exposes RequestNetwork module configured to use http-data-access.
 */ class HttpRequestNetwork extends request_network_1.default {
    /**
     * Creates an instance of HttpRequestNetwork.
     *
     * @param options.httpConfig Http config that will be used by the underlying data-access. @see ClientTypes.IHttpDataAccessConfig for available options.
     * @param options.nodeConnectionConfig Configuration options to connect to the node.
     * @param options.useMockStorage When true, will use a mock storage in memory. Meant to simplify local development and should never be used in production. Overrides `skipPersistence` when both are true.
     * @param options.signatureProvider Module to handle the signature. If not given it will be impossible to create new transaction (it requires to sign).
     * @param options.currencies custom currency list.
     * @param options.currencyManager custom currency manager (will override `currencies`).
     * @param options.skipPersistence allows creating a transaction without immediate persistence.
     */ constructor({ decryptionProvider, cipherProvider, httpConfig, nodeConnectionConfig, signatureProvider, useMockStorage, currencyManager, paymentOptions, skipPersistence } = {
        httpConfig: {},
        useMockStorage: false,
        skipPersistence: false
    }){
        const dataAccess = useMockStorage ? new data_access_1.MockDataAccess(new mock_storage_1.MockStorage()) : skipPersistence ? new no_persist_http_data_access_1.NoPersistHttpDataAccess({
            httpConfig,
            nodeConnectionConfig
        }) : new http_data_access_1.default({
            httpConfig,
            nodeConnectionConfig
        });
        if (!currencyManager) {
            currencyManager = currency_1.CurrencyManager.getDefault();
        }
        super({
            dataAccess,
            signatureProvider,
            decryptionProvider,
            cipherProvider,
            currencyManager,
            paymentOptions
        });
    }
}
exports.default = HttpRequestNetwork; //# sourceMappingURL=http-request-network.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-metamask-data-access.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/index.js [app-rsc] (ecmascript)");
const smart_contracts_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+smart-contracts@0.43.0/node_modules/@requestnetwork/smart-contracts/dist/src/lib/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const http_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-data-access.js [app-rsc] (ecmascript)");
/**
 * Exposes a Data-Access module over HTTP
 */ class HttpMetaMaskDataAccess extends http_data_access_1.default {
    /**
     * Creates an instance of HttpDataAccess.
     * @param httpConfig Http config that will be used by the underlying http-data-access. @see ClientTypes.IHttpDataAccessConfig
     * @param nodeConnectionConfig Configuration options to connect to the node.
     */ constructor({ httpConfig, nodeConnectionConfig, web3, ethereumProviderUrl } = {
        httpConfig: {}
    }){
        super({
            httpConfig,
            nodeConnectionConfig
        });
        /**
         * Cache block persisted directly (in case the node did not have the time to retrieve it)
         * (public for easier testing)
         */ this.cache = {};
        this.networkName = 'private';
        ethereumProviderUrl = ethereumProviderUrl ? ethereumProviderUrl : 'http://localhost:8545';
        // Creates a local or default provider
        this.provider = web3 ? new ethers_1.ethers.providers.Web3Provider(web3) : new ethers_1.ethers.providers.JsonRpcProvider({
            url: ethereumProviderUrl
        });
    }
    /**
     * Initialize the module. Does nothing, exists only to implement IDataAccess
     *
     * @returns nothing
     */ initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // no-op, nothing to do
            return;
        });
    }
    /**
     * Persists a new transaction using the node only for IPFS but persisting on ethereum through local provider
     *
     * @param transactionData The transaction data
     * @param topics The topics used to index the transaction
     */ persistTransaction(transactionData, channelId, topics) {
        var _a, _b, _c;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.networkName) {
                const network = yield this.provider.getNetwork();
                this.networkName = network.chainId === 1 ? 'mainnet' : network.chainId === 4 ? 'rinkeby' : 'private';
            }
            const submitterContract = smart_contracts_1.requestHashSubmitterArtifact.connect(this.networkName, this.provider.getSigner());
            // We don't use the node to persist the transaction, but we will Do it ourselves
            // create a block and add the transaction in it
            const block = data_access_1.Block.pushTransaction(data_access_1.Block.createEmptyBlock(), transactionData, channelId, topics);
            // store the block on ipfs and get the the ipfs hash and size
            const { ipfsHash, ipfsSize } = yield this.fetch('POST', '/ipfsAdd', {
                data: block
            });
            // get the fee required to submit the hash
            const fee = yield submitterContract.getFeesAmount(ipfsSize);
            // submit the hash to ethereum
            const tx = yield submitterContract.submitHash(ipfsHash, /* eslint-disable no-magic-numbers */ ethers_1.ethers.utils.hexZeroPad(ethers_1.ethers.utils.hexlify(ipfsSize), 32), {
                value: fee
            });
            const ethBlock = yield this.provider.getBlock((_a = tx.blockNumber) !== null && _a !== void 0 ? _a : -1);
            // create the storage meta from the transaction receipt
            const storageMeta = {
                blockConfirmation: tx.confirmations,
                blockNumber: (_b = tx.blockNumber) !== null && _b !== void 0 ? _b : -1,
                blockTimestamp: ethBlock.timestamp,
                fee: fee.toString(),
                networkName: this.networkName,
                smartContractAddress: (_c = tx.to) !== null && _c !== void 0 ? _c : '',
                transactionHash: tx.hash
            };
            // Add the block to the cache
            if (!this.cache[channelId]) {
                this.cache[channelId] = {};
            }
            this.cache[channelId][ipfsHash] = {
                block,
                storageMeta
            };
            const eventEmitter = new events_1.EventEmitter();
            const result = {
                meta: {
                    storageMeta: {
                        ethereum: storageMeta,
                        ipfs: {
                            size: ipfsSize
                        },
                        state: types_1.StorageTypes.ContentState.PENDING,
                        timestamp: storageMeta.blockTimestamp
                    },
                    topics: topics || [],
                    transactionStorageLocation: ipfsHash
                },
                result: {}
            };
            // When the ethereum transaction is mined, emit an event 'confirmed'
            void tx.wait().then((txConfirmed)=>{
                // emit the event to tell the request transaction is confirmed
                eventEmitter.emit('confirmed', {
                    meta: {
                        storageMeta: {
                            ethereum: {
                                blockConfirmation: txConfirmed.confirmations,
                                blockNumber: txConfirmed.blockNumber,
                                blockTimestamp: ethBlock.timestamp,
                                fee: fee.toString(),
                                networkName: this.networkName,
                                smartContractAddress: txConfirmed.to,
                                transactionHash: txConfirmed.transactionHash
                            },
                            state: types_1.StorageTypes.ContentState.CONFIRMED,
                            timestamp: ethBlock.timestamp
                        },
                        topics: topics || [],
                        transactionStorageLocation: ipfsHash
                    },
                    result: {}
                });
            });
            return Object.assign(eventEmitter, result);
        });
    }
    /**
     * Gets the transactions for a channel from the node through HTTP.
     *
     * @param channelId The channel id to search for
     * @param timestampBoundaries filter timestamp boundaries
     */ getTransactionsByChannelId(channelId, timestampBoundaries) {
        var _a, _b, _c;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const data = yield this.fetchAndRetry('/getTransactionsByChannelId', {
                params: {
                    channelId,
                    timestampBoundaries
                }
            }, {
                maxRetries: this.httpConfig.httpRequestMaxRetry,
                retryDelay: this.httpConfig.httpRequestRetryDelay
            });
            // get the transactions from the cache
            const transactionsCached = this.getCachedTransactionsAndCleanCache(channelId, data.meta.transactionsStorageLocation, timestampBoundaries);
            // merge cache and data from the node
            return {
                meta: {
                    storageMeta: (_c = (_a = data.meta.storageMeta) === null || _a === void 0 ? void 0 : _a.concat((_b = transactionsCached.meta.storageMeta) !== null && _b !== void 0 ? _b : [])) !== null && _c !== void 0 ? _c : [],
                    transactionsStorageLocation: data.meta.transactionsStorageLocation.concat(transactionsCached.meta.transactionsStorageLocation)
                },
                result: {
                    transactions: data.result.transactions.concat(transactionsCached.result.transactions)
                }
            };
        });
    }
    /**
     * Gets the cached transactions and remove the ones that have been retrieved from the node
     * (public for easier testing)
     *
     * @param channelId The channel id to search for
     * @param storageLocationFromNode location retrieved from the node
     * @param timestampBoundaries filter timestamp boundaries
     */ getCachedTransactionsAndCleanCache(channelId, storageLocationFromNode, timestampBoundaries) {
        // Remove cache found by the node
        for (const location of storageLocationFromNode){
            this.cache[channelId][location] = null;
        }
        // Create a IReturnGetTransactions object to be merged later with the one from the node
        return Object.keys(this.cache[channelId] || []).reduce((accumulator, location)=>{
            var _a;
            const cache = this.cache[channelId][location];
            // For each cached block for the channel, we return the transaction if they are in the time boundaries
            if (this.cache[channelId][location] && (!timestampBoundaries || (timestampBoundaries.from === undefined || timestampBoundaries.from <= (cache === null || cache === void 0 ? void 0 : cache.storageMeta.blockTimestamp)) && (timestampBoundaries.to === undefined || timestampBoundaries.to >= (cache === null || cache === void 0 ? void 0 : cache.storageMeta.blockTimestamp)))) {
                (_a = accumulator.meta.storageMeta) === null || _a === void 0 ? void 0 : _a.push(cache === null || cache === void 0 ? void 0 : cache.storageMeta);
                accumulator.meta.transactionsStorageLocation.push(location);
                // cache?.block.transactions will always contain one transaction
                accumulator.result.transactions.push({
                    state: types_1.DataAccessTypes.TransactionState.PENDING,
                    timestamp: cache === null || cache === void 0 ? void 0 : cache.storageMeta.blockTimestamp,
                    transaction: cache === null || cache === void 0 ? void 0 : cache.block.transactions[0]
                });
            }
            return accumulator;
        }, {
            meta: {
                storageMeta: [],
                transactionsStorageLocation: []
            },
            result: {
                transactions: []
            }
        });
    }
}
exports.default = HttpMetaMaskDataAccess; //# sourceMappingURL=http-metamask-data-access.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/types.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Payment = exports.Transaction = exports.Storage = exports.Identity = exports.SignatureProvider = exports.Signature = exports.DataAccess = exports.RequestLogic = exports.Encryption = exports.Extension = exports.DecryptionProvider = exports.Log = exports.AdvancedLogic = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
tslib_1.__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/client-types.js [app-rsc] (ecmascript)"), exports);
var types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "AdvancedLogic", {
    enumerable: true,
    get: function() {
        return types_1.AdvancedLogicTypes;
    }
});
Object.defineProperty(exports, "Log", {
    enumerable: true,
    get: function() {
        return types_1.LogTypes;
    }
});
Object.defineProperty(exports, "DecryptionProvider", {
    enumerable: true,
    get: function() {
        return types_1.DecryptionProviderTypes;
    }
});
Object.defineProperty(exports, "Extension", {
    enumerable: true,
    get: function() {
        return types_1.ExtensionTypes;
    }
});
Object.defineProperty(exports, "Encryption", {
    enumerable: true,
    get: function() {
        return types_1.EncryptionTypes;
    }
});
Object.defineProperty(exports, "RequestLogic", {
    enumerable: true,
    get: function() {
        return types_1.RequestLogicTypes;
    }
});
Object.defineProperty(exports, "DataAccess", {
    enumerable: true,
    get: function() {
        return types_1.DataAccessTypes;
    }
});
Object.defineProperty(exports, "Signature", {
    enumerable: true,
    get: function() {
        return types_1.SignatureTypes;
    }
});
Object.defineProperty(exports, "SignatureProvider", {
    enumerable: true,
    get: function() {
        return types_1.SignatureProviderTypes;
    }
});
Object.defineProperty(exports, "Identity", {
    enumerable: true,
    get: function() {
        return types_1.IdentityTypes;
    }
});
Object.defineProperty(exports, "Storage", {
    enumerable: true,
    get: function() {
        return types_1.StorageTypes;
    }
});
Object.defineProperty(exports, "Transaction", {
    enumerable: true,
    get: function() {
        return types_1.TransactionTypes;
    }
});
Object.defineProperty(exports, "Payment", {
    enumerable: true,
    get: function() {
        return types_1.PaymentTypes;
    }
}); //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Utils = exports.Types = exports.HttpMetaMaskDataAccess = exports.HttpDataAccess = exports.RequestNetworkBase = exports.RequestNetwork = exports.Request = exports.PaymentReferenceCalculator = void 0;
const payment_detection_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+payment-detection@0.49.0/node_modules/@requestnetwork/payment-detection/dist/index.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "PaymentReferenceCalculator", {
    enumerable: true,
    get: function() {
        return payment_detection_1.PaymentReferenceCalculator;
    }
});
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/request.js [app-rsc] (ecmascript)");
exports.Request = request_1.default;
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/utils.js [app-rsc] (ecmascript)");
exports.Utils = utils_1.default;
const http_request_network_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-request-network.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "RequestNetwork", {
    enumerable: true,
    get: function() {
        return http_request_network_1.default;
    }
});
const request_network_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/api/request-network.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "RequestNetworkBase", {
    enumerable: true,
    get: function() {
        return request_network_1.default;
    }
});
const http_metamask_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-metamask-data-access.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "HttpMetaMaskDataAccess", {
    enumerable: true,
    get: function() {
        return http_metamask_data_access_1.default;
    }
});
const http_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/http-data-access.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "HttpDataAccess", {
    enumerable: true,
    get: function() {
        return http_data_access_1.default;
    }
});
const Types = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-client.js@0.54.0/node_modules/@requestnetwork/request-client.js/dist/types.js [app-rsc] (ecmascript)");
exports.Types = Types; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/abstract-extension.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AbstractExtension = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Abstract class to create extension
 */ class AbstractExtension {
    constructor(extensionType, extensionId, currentVersion){
        this.extensionType = extensionType;
        this.extensionId = extensionId;
        this.currentVersion = currentVersion;
        this.actions = {};
    }
    /**
     * Creates the extensionsData to create the extension
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        return {
            action: 'create',
            id: this.extensionId,
            parameters: creationParameters,
            version: this.currentVersion
        };
    }
    /**
     * Applies the extension action to the request
     * Is called to interpret the extensions data when applying the transaction
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     *
     * @returns state of the request updated
     */ applyActionToExtension(extensionsState, extensionAction, requestState, actionSigner, timestamp) {
        this.validate(requestState, extensionAction);
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionsState);
        if (extensionAction.action === types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE) {
            if (requestState.extensions[extensionAction.id]) {
                throw Error(`This extension has already been created`);
            }
            copiedExtensionState[extensionAction.id] = this.applyCreation(extensionAction, timestamp, {
                extensionsState,
                extensionAction,
                requestState,
                actionSigner
            });
            return copiedExtensionState;
        }
        // if the action is not "create", the state must have been created before
        if (!extensionsState[extensionAction.id]) {
            throw Error(`The extension should be created before receiving any other action`);
        }
        const actionToApply = this.actions[extensionAction.action];
        if (!actionToApply) {
            throw Error(`Unknown action: ${extensionAction.action}`);
        }
        copiedExtensionState[extensionAction.id] = actionToApply(copiedExtensionState[extensionAction.id], extensionAction, requestState, actionSigner, timestamp);
        return copiedExtensionState;
    }
    /**
     * Applies an extension creation action
     *
     * @param extensionAction action to apply
     * @param _timestamp action timestamp
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _timestamp, // eslint-disable-next-line @typescript-eslint/no-unused-vars
    context) {
        if (!extensionAction.version) {
            throw Error('version is required at creation');
        }
        return {
            events: [],
            id: extensionAction.id,
            type: this.extensionType,
            values: {},
            version: extensionAction.version
        };
    }
    /**
     * Validate the extension action regarding the request
     * It is called at the beginning of every applyActionToExtension()
     * It must throw in case of error
     *
     * @param extensionAction action to apply
     */ validate(// eslint-disable-next-line @typescript-eslint/no-unused-vars
    _request, // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _extensionAction) {}
}
exports.AbstractExtension = AbstractExtension; //# sourceMappingURL=abstract-extension.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/content-data.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const abstract_extension_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/abstract-extension.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
/**
 * Implementation of the content data extension
 */ class ContentDataExtension extends abstract_extension_1.AbstractExtension {
    constructor(){
        super(types_1.ExtensionTypes.TYPE.CONTENT_DATA, types_1.ExtensionTypes.ID.CONTENT_DATA, CURRENT_VERSION);
    }
    /**
     * Creates the extensionsData to create the extension content-data
     * Should be called to create the extensionsData of a request
     *
     * @param extensions IAdvancedLogicExtensionsCreationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be store in the request
     */ createCreationAction(creationParameters) {
        if (!creationParameters.content) {
            throw Error('No content has been given for the extension content-data');
        }
        return super.createCreationAction(creationParameters);
    }
    /**
     * Applies a creation
     *
     * @param extensionAction action to apply
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (!extensionAction.parameters.content) {
            throw Error('No content has been given for the extension content-data');
        }
        const genericCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, genericCreationAction), {
            events: [],
            id: this.extensionId,
            type: this.extensionType,
            values: Object.assign(Object.assign({}, genericCreationAction.values), {
                content: extensionAction.parameters.content
            })
        });
    }
}
exports.default = ContentDataExtension; //# sourceMappingURL=content-data.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/declarative.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const abstract_extension_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/abstract-extension.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
/**
 * Core of the declarative payment network
 */ class DeclarativePaymentNetwork extends abstract_extension_1.AbstractExtension {
    constructor(extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_DECLARATIVE, currentVersion = CURRENT_VERSION){
        super(types_1.ExtensionTypes.TYPE.PAYMENT_NETWORK, extensionId, currentVersion);
        this.extensionId = extensionId;
        this.currentVersion = currentVersion;
        this.actions = Object.assign(Object.assign({}, this.actions), {
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_PAYMENT_INSTRUCTION]: this.applyAddPaymentInstruction.bind(this),
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_REFUND_INSTRUCTION]: this.applyAddRefundInstruction.bind(this),
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_SENT_PAYMENT]: this.applyDeclareSentPayment.bind(this),
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_SENT_REFUND]: this.applyDeclareSentRefund.bind(this),
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_RECEIVED_PAYMENT]: this.applyDeclareReceivedPayment.bind(this),
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_RECEIVED_REFUND]: this.applyDeclareReceivedRefund.bind(this),
            [types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_DELEGATE]: this.applyAddDelegate.bind(this)
        });
    }
    /**
     * Creates the extensionsData to add a sent payment declaration
     *
     * @param parameters parameters to create sent payment declaration
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createDeclareSentPaymentAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_SENT_PAYMENT,
            id: this.extensionId,
            parameters: {
                amount: parameters.amount.toString(),
                note: parameters.note,
                txHash: parameters.txHash,
                network: parameters.network
            }
        };
    }
    /**
     * Creates the extensionsData to add a sent refund declaration
     *
     * @param parameters parameters to create sent refund declaration
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createDeclareSentRefundAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_SENT_REFUND,
            id: this.extensionId,
            parameters: {
                amount: parameters.amount.toString(),
                note: parameters.note,
                txHash: parameters.txHash,
                network: parameters.network
            }
        };
    }
    /**
     * Creates the extensionsData to add a received payment declaration
     *
     * @param parameters parameters to create received payment declaration
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createDeclareReceivedPaymentAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_RECEIVED_PAYMENT,
            id: this.extensionId,
            parameters: {
                amount: parameters.amount.toString(),
                note: parameters.note,
                txHash: parameters.txHash,
                network: parameters.network
            }
        };
    }
    /**
     * Creates the extensionsData to add a received refund declaration
     *
     * @param parameters parameters to create received refund declaration
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createDeclareReceivedRefundAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_RECEIVED_REFUND,
            id: this.extensionId,
            parameters: {
                amount: parameters.amount.toString(),
                note: parameters.note,
                txHash: parameters.txHash,
                network: parameters.network
            }
        };
    }
    /**
     * Creates the extensionsData to add payment instruction
     *
     * @param extensions extensions parameters to add payment instruction
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createAddPaymentInstructionAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_PAYMENT_INSTRUCTION,
            id: this.extensionId,
            parameters: {
                paymentInfo: parameters.paymentInfo
            }
        };
    }
    /**
     * Creates the extensionsData to add refund instruction
     *
     * @param extensions extensions parameters to add refund instruction
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createAddRefundInstructionAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_REFUND_INSTRUCTION,
            id: this.extensionId,
            parameters: {
                refundInfo: parameters.refundInfo
            }
        };
    }
    /**
     * Creates the extensionsData to add delegate
     *
     * @param extensions extensions parameters to add delegate
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createAddDelegateAction(parameters) {
        return {
            action: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_DELEGATE,
            id: this.extensionId,
            parameters: {
                delegate: parameters.delegate
            }
        };
    }
    /** Applies a creation
     *
     * @param extensionAction action to apply
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        const genericCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, genericCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        paymentInfo: (_a = extensionAction.parameters) === null || _a === void 0 ? void 0 : _a.paymentInfo,
                        refundInfo: (_b = extensionAction.parameters) === null || _b === void 0 ? void 0 : _b.refundInfo,
                        salt: (_c = extensionAction.parameters) === null || _c === void 0 ? void 0 : _c.salt,
                        payeeDelegate: (_d = extensionAction.parameters) === null || _d === void 0 ? void 0 : _d.payeeDelegate,
                        payerDelegate: (_e = extensionAction.parameters) === null || _e === void 0 ? void 0 : _e.payerDelegate
                    },
                    timestamp
                }
            ],
            values: {
                paymentInfo: (_f = extensionAction.parameters) === null || _f === void 0 ? void 0 : _f.paymentInfo,
                refundInfo: (_g = extensionAction.parameters) === null || _g === void 0 ? void 0 : _g.refundInfo,
                salt: (_h = extensionAction.parameters) === null || _h === void 0 ? void 0 : _h.salt,
                payeeDelegate: (_j = extensionAction.parameters) === null || _j === void 0 ? void 0 : _j.payeeDelegate,
                payerDelegate: (_k = extensionAction.parameters) === null || _k === void 0 ? void 0 : _k.payerDelegate,
                receivedPaymentAmount: '0',
                receivedRefundAmount: '0',
                sentPaymentAmount: '0',
                sentRefundAmount: '0'
            }
        });
    }
    /** Applies a declare sent payment
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyDeclareSentPayment(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        this.checkIdentities(extensionState, requestState, actionSigner, types_1.RequestLogicTypes.ROLE.PAYER);
        if (!(0, utils_1.isValidAmount)(extensionAction.parameters.amount)) {
            throw Error(`The amount is not a valid amount`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // increment sentPaymentAmount
        copiedExtensionState.values.sentPaymentAmount = (0, utils_1.addAmount)(copiedExtensionState.values.sentPaymentAmount, extensionAction.parameters.amount);
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_SENT_PAYMENT,
            parameters: {
                amount: extensionAction.parameters.amount,
                note: extensionAction.parameters.note,
                txHash: extensionAction.parameters.txHash,
                network: extensionAction.parameters.network
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Applies a declare sent refund
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyDeclareSentRefund(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        this.checkIdentities(extensionState, requestState, actionSigner, types_1.RequestLogicTypes.ROLE.PAYEE);
        if (!(0, utils_1.isValidAmount)(extensionAction.parameters.amount)) {
            throw Error(`The amount is not a valid amount`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // increment sentRefundAmount
        copiedExtensionState.values.sentRefundAmount = (0, utils_1.addAmount)(copiedExtensionState.values.sentRefundAmount, extensionAction.parameters.amount);
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_SENT_REFUND,
            parameters: {
                amount: extensionAction.parameters.amount,
                note: extensionAction.parameters.note,
                txHash: extensionAction.parameters.txHash,
                network: extensionAction.parameters.network
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Applies a declare received payment
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyDeclareReceivedPayment(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        this.checkIdentities(extensionState, requestState, actionSigner, types_1.RequestLogicTypes.ROLE.PAYEE);
        if (!(0, utils_1.isValidAmount)(extensionAction.parameters.amount)) {
            throw Error(`The amount is not a valid amount`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // increment receivedPaymentAmount
        copiedExtensionState.values.receivedPaymentAmount = (0, utils_1.addAmount)(copiedExtensionState.values.receivedPaymentAmount, extensionAction.parameters.amount);
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_RECEIVED_PAYMENT,
            parameters: {
                amount: extensionAction.parameters.amount,
                note: extensionAction.parameters.note,
                txHash: extensionAction.parameters.txHash,
                network: extensionAction.parameters.network
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Applies a declare received refund
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyDeclareReceivedRefund(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        this.checkIdentities(extensionState, requestState, actionSigner, types_1.RequestLogicTypes.ROLE.PAYER);
        if (!(0, utils_1.isValidAmount)(extensionAction.parameters.amount)) {
            throw Error(`The amount is not a valid amount`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // increment receivedRefundAmount
        copiedExtensionState.values.receivedRefundAmount = (0, utils_1.addAmount)(copiedExtensionState.values.receivedRefundAmount, extensionAction.parameters.amount);
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.DECLARE_RECEIVED_REFUND,
            parameters: {
                amount: extensionAction.parameters.amount,
                note: extensionAction.parameters.note,
                txHash: extensionAction.parameters.txHash,
                network: extensionAction.parameters.network
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Applies an add of payment instruction
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyAddPaymentInstruction(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        if (extensionState.values.paymentInfo) {
            throw Error(`The payment instruction already assigned`);
        }
        this.checkIdentities(extensionState, requestState, actionSigner, types_1.RequestLogicTypes.ROLE.PAYEE);
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // assign paymentInfo
        copiedExtensionState.values.paymentInfo = extensionAction.parameters.paymentInfo;
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_PAYMENT_INSTRUCTION,
            parameters: {
                paymentInfo: extensionAction.parameters.paymentInfo
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Applies an add of a delegate
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyAddDelegate(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        let delegateStr;
        if ((0, utils_1.areEqualIdentities)(actionSigner, requestState.payee)) {
            delegateStr = 'payeeDelegate';
        } else if ((0, utils_1.areEqualIdentities)(actionSigner, requestState.payer)) {
            delegateStr = 'payerDelegate';
        } else {
            throw Error(`The signer must be the payee or the payer`);
        }
        if (extensionState.values[delegateStr]) {
            throw Error(`The ${delegateStr} is already assigned`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // assign payeeDelegate or payerDelegate
        copiedExtensionState.values[delegateStr] = extensionAction.parameters.delegate;
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_DELEGATE,
            parameters: {
                delegate: extensionAction.parameters.delegate
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Applies an add of refund instruction
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyAddRefundInstruction(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        if (extensionState.values.refundInfo) {
            throw Error(`The refund instruction already assigned`);
        }
        this.checkIdentities(extensionState, requestState, actionSigner, types_1.RequestLogicTypes.ROLE.PAYER);
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // assign refundInfo
        copiedExtensionState.values.refundInfo = extensionAction.parameters.refundInfo;
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAnyDeclarative.ACTION.ADD_REFUND_INSTRUCTION,
            parameters: {
                refundInfo: extensionAction.parameters.refundInfo
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /** Checks if signer is the right identity from the request and the role expected
     *
     * @param extensionsState previous state of the extensions
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param role The role to check (Payee or Payer)
     *
     * @returns throws in case of error
     */ checkIdentities(extensionState, requestState, actionSigner, role) {
        let requestRole;
        let requestRoleStr;
        let requestRoleDelegate;
        if (role === types_1.RequestLogicTypes.ROLE.PAYER) {
            requestRole = requestState.payer;
            requestRoleStr = 'payer';
            requestRoleDelegate = extensionState.values.payerDelegate;
        }
        if (role === types_1.RequestLogicTypes.ROLE.PAYEE) {
            requestRole = requestState.payee;
            requestRoleStr = 'payee';
            requestRoleDelegate = extensionState.values.payeeDelegate;
        }
        if (!requestRole) {
            throw Error(`The request must have a ${requestRoleStr}`);
        }
        if (!(0, utils_1.areEqualIdentities)(actionSigner, requestRole) && !(0, utils_1.areEqualIdentities)(actionSigner, requestRoleDelegate)) {
            throw Error(`The signer must be the ${requestRoleStr} or the ${requestRoleStr}Delegate`);
        }
    }
}
exports.default = DeclarativePaymentNetwork; //# sourceMappingURL=declarative.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UnsupportedNetworkError = exports.InvalidPaymentAddressError = void 0;
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const declarative_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/declarative.js [app-rsc] (ecmascript)");
/**
 * Core of the address based payment networks
 * This module is called by the address based payment networks to avoid code redundancy
 */ class AddressBasedPaymentNetwork extends declarative_1.default {
    constructor(currencyManager, extensionId, currentVersion, supportedCurrencyType){
        super(extensionId, currentVersion);
        this.currencyManager = currencyManager;
        this.supportedCurrencyType = supportedCurrencyType;
        this.actions = Object.assign(Object.assign({}, this.actions), {
            [types_1.ExtensionTypes.PnAddressBased.ACTION.ADD_PAYMENT_ADDRESS]: this.applyAddPaymentAddress.bind(this),
            [types_1.ExtensionTypes.PnAddressBased.ACTION.ADD_REFUND_ADDRESS]: this.applyAddRefundAddress.bind(this)
        });
    }
    /**
     * Creates the extensionsData for address based payment networks
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        if (creationParameters.paymentAddress && !this.isValidAddress(creationParameters.paymentAddress)) {
            throw new InvalidPaymentAddressError(creationParameters.paymentAddress);
        }
        if (creationParameters.refundAddress && !this.isValidAddress(creationParameters.refundAddress)) {
            throw new InvalidPaymentAddressError(creationParameters.refundAddress, 'refundAddress');
        }
        return super.createCreationAction(creationParameters);
    }
    /**
     * Creates the extensionsData to add a payment address
     *
     * @param addPaymentAddressParameters extensions parameters to create
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createAddPaymentAddressAction(addPaymentAddressParameters) {
        const paymentAddress = addPaymentAddressParameters.paymentAddress;
        if (paymentAddress && !this.isValidAddress(paymentAddress)) {
            throw new InvalidPaymentAddressError(paymentAddress);
        }
        return {
            action: types_1.ExtensionTypes.PnAddressBased.ACTION.ADD_PAYMENT_ADDRESS,
            id: this.extensionId,
            parameters: {
                paymentAddress
            }
        };
    }
    /**
     * Creates the extensionsData to add a refund address
     *
     * @param addRefundAddressParameters extensions parameters to create
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createAddRefundAddressAction(addRefundAddressParameters) {
        const refundAddress = addRefundAddressParameters.refundAddress;
        if (refundAddress && !this.isValidAddress(refundAddress)) {
            throw new InvalidPaymentAddressError(refundAddress, 'refundAddress');
        }
        return {
            action: types_1.ExtensionTypes.PnAddressBased.ACTION.ADD_REFUND_ADDRESS,
            id: this.extensionId,
            parameters: {
                refundAddress
            }
        };
    }
    applyCreation(extensionAction, timestamp) {
        const paymentAddress = extensionAction.parameters.paymentAddress;
        const refundAddress = extensionAction.parameters.refundAddress;
        if (paymentAddress && !this.isValidAddress(paymentAddress)) {
            throw new InvalidPaymentAddressError(paymentAddress);
        }
        if (refundAddress && !this.isValidAddress(refundAddress)) {
            throw new InvalidPaymentAddressError(refundAddress, 'refundAddress');
        }
        const genericCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, genericCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        paymentAddress,
                        refundAddress
                    },
                    timestamp
                }
            ],
            id: this.extensionId,
            type: this.extensionType,
            values: Object.assign(Object.assign({}, genericCreationAction.values), {
                paymentAddress,
                refundAddress
            })
        });
    }
    isValidAddress(address) {
        switch(this.supportedCurrencyType){
            case types_1.RequestLogicTypes.CURRENCY.ETH:
            case types_1.RequestLogicTypes.CURRENCY.ERC20:
            case types_1.RequestLogicTypes.CURRENCY.ERC777:
                return this.isValidAddressForSymbolAndNetwork(address, 'ETH', 'mainnet');
            default:
                throw new Error(`Default implementation of isValidAddressForNetwork() does not support currency type ${this.supportedCurrencyType}. Please override this method if needed.`);
        }
    }
    isValidAddressForSymbolAndNetwork(address, symbol, network) {
        const currency = this.currencyManager.from(symbol, network);
        if (!currency) {
            throw new currency_1.UnsupportedCurrencyError({
                value: symbol,
                network
            });
        }
        return this.currencyManager.validateAddress(address, currency);
    }
    /**
     * Applies the add payment address action
     *
     * @param extensionState previous state of the extension
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     *
     * @returns state of the extension updated
     */ applyAddPaymentAddress(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        if (extensionAction.parameters.paymentAddress && !this.isValidAddress(extensionAction.parameters.paymentAddress)) {
            throw new InvalidPaymentAddressError(extensionAction.parameters.paymentAddress);
        }
        if (extensionState.values.paymentAddress) {
            throw Error(`Payment address already given`);
        }
        if (!requestState.payee) {
            throw Error(`The request must have a payee`);
        }
        if (!(0, utils_1.areEqualIdentities)(actionSigner, requestState.payee)) {
            throw Error(`The signer must be the payee`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // update payment address
        copiedExtensionState.values.paymentAddress = extensionAction.parameters.paymentAddress;
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAddressBased.ACTION.ADD_PAYMENT_ADDRESS,
            parameters: {
                paymentAddress: extensionAction.parameters.paymentAddress
            },
            timestamp
        });
        return copiedExtensionState;
    }
    /**
     * Applies add refund address
     *
     * @param extensionState previous state of the extension
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     *
     * @returns state of the extension updated
     */ applyAddRefundAddress(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        if (extensionAction.parameters.refundAddress && !this.isValidAddress(extensionAction.parameters.refundAddress)) {
            throw Error('refundAddress is not a valid address');
        }
        if (extensionState.values.refundAddress) {
            throw Error(`Refund address already given`);
        }
        if (!requestState.payer) {
            throw Error(`The request must have a payer`);
        }
        if (!(0, utils_1.areEqualIdentities)(actionSigner, requestState.payer)) {
            throw Error(`The signer must be the payer`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // update refund address
        copiedExtensionState.values.refundAddress = extensionAction.parameters.refundAddress;
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnAddressBased.ACTION.ADD_REFUND_ADDRESS,
            parameters: {
                refundAddress: extensionAction.parameters.refundAddress
            },
            timestamp
        });
        return copiedExtensionState;
    }
    validate(request, // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _extensionAction) {
        if (request.currency.type !== this.supportedCurrencyType) {
            throw Error(`This extension can be used only on ${this.supportedCurrencyType} requests`);
        }
        this.throwIfInvalidNetwork(request.currency.network);
    }
    throwIfInvalidNetwork(network) {
        if (!network) {
            throw Error('network is required');
        }
    }
}
exports.default = AddressBasedPaymentNetwork;
class InvalidPaymentAddressError extends Error {
    constructor(address, addressReference = 'paymentAddress'){
        const formattedAddress = address ? ` '${address}'` : '';
        super(`${addressReference}${formattedAddress} is not a valid address`);
    }
}
exports.InvalidPaymentAddressError = InvalidPaymentAddressError;
class UnsupportedNetworkError extends Error {
    constructor(unsupportedNetworkName, supportedNetworks){
        const supportedNetworkDetails = supportedNetworks ? ` (only ${supportedNetworks.join(', ')})` : '';
        super(`Payment network '${unsupportedNetworkName}' is not supported by this extension${supportedNetworkDetails}`);
    }
}
exports.UnsupportedNetworkError = UnsupportedNetworkError; //# sourceMappingURL=address-based.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/bitcoin/mainnet-address-based.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
const BITCOIN_NETWORK = 'mainnet';
/**
 * Implementation of the payment network to pay in BTC based on the addresses
 * With this extension one request can have two dedicated bitcoin addresses (one for payment and one for refund)
 * Every bitcoin transaction that reaches these addresses will be interpreted as payment or refund.
 * Important: the addresses must be exclusive to the request
 */ class BitcoinAddressBasedPaymentNetwork extends address_based_1.default {
    constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.BITCOIN_ADDRESS_BASED){
        super(currencyManager, extensionId, CURRENT_VERSION, types_1.RequestLogicTypes.CURRENCY.BTC);
    }
    isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'BTC', BITCOIN_NETWORK);
    }
}
exports.default = BitcoinAddressBasedPaymentNetwork; //# sourceMappingURL=mainnet-address-based.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/bitcoin/testnet-address-based.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const mainnet_address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/bitcoin/mainnet-address-based.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const BITCOIN_NETWORK = 'testnet';
/**
 * Implementation of the payment network to pay in BTC based on the addresses ON THE BITCOIN TESTNET
 * This payment network MUST BE USED ONLY for TEST PURPOSE. it MUST NEVER BE USED for real request.
 * With this extension one request can have two dedicated bitcoin addresses (one for payment and one for refund)
 * Every bitcoin transaction that reaches these addresses will be interpreted as payment or refund.
 * Important: the addresses must be exclusive to the request
 */ class BitcoinTestnetAddressBasedPaymentNetwork extends mainnet_address_based_1.default {
    constructor(currencyManager){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.TESTNET_BITCOIN_ADDRESS_BASED);
    }
    isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'BTC-testnet', BITCOIN_NETWORK);
    }
}
exports.default = BitcoinTestnetAddressBasedPaymentNetwork; //# sourceMappingURL=testnet-address-based.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/address-based.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
/**
 * Implementation of the payment network to pay in ERC20 tokens based on an Ethereum address
 * With this extension one request can have two dedicated Ethereum addresses (one for payment and one for refund)
 * Every ERC20 ethereum transaction, using the request currency ERC20, that reaches these addresses will be interpreted as payment or refund.
 * Important: the addresses must be exclusive to the request
 */ class Erc20AddressBasedPaymentNetwork extends address_based_1.default {
    constructor(currencyManager){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_ADDRESS_BASED, CURRENT_VERSION, types_1.RequestLogicTypes.CURRENCY.ERC20);
    }
}
exports.default = Erc20AddressBasedPaymentNetwork; //# sourceMappingURL=address-based.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/reference-based.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)");
// Regex for "at least 16 hexadecimal numbers". Used to validate the salt
const eightHexRegex = /[0-9a-f]{16,}/;
/**
 * Core of the reference based payment networks
 * This module is called by the reference based payment networks to avoid code redundancy
 */ class ReferenceBasedPaymentNetwork extends address_based_1.default {
    /**
     * Creates the extensionsData to create the payment detection extension
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        if (!creationParameters.salt) {
            throw Error('salt should not be empty');
        }
        if (!eightHexRegex.test(creationParameters.salt)) {
            throw Error(`The salt must be a string of minimum 16 hexadecimal characters. Example: 'ea3bc7caf64110ca'`);
        }
        return super.createCreationAction(creationParameters);
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp ?
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (!extensionAction.parameters.salt) {
            throw Error('salt should not be empty');
        }
        if (!eightHexRegex.test(extensionAction.parameters.salt)) {
            throw Error(`The salt must be a string of minimum 16 hexadecimal characters. Example: 'ea3bc7caf64110ca'`);
        }
        const basicCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, basicCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        paymentAddress: extensionAction.parameters.paymentAddress,
                        refundAddress: extensionAction.parameters.refundAddress,
                        salt: extensionAction.parameters.salt
                    },
                    timestamp
                }
            ],
            values: Object.assign(Object.assign({}, basicCreationAction.values), {
                salt: extensionAction.parameters.salt
            })
        });
    }
}
exports.default = ReferenceBasedPaymentNetwork; //# sourceMappingURL=reference-based.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/fee-reference-based.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FeeReferenceBasedPaymentNetwork = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/reference-based.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Core of the reference based with fee payment networks
 * This module is called by the fee reference based (ethereum & erc20) payment networks to avoid code redundancy
 */ class FeeReferenceBasedPaymentNetwork extends reference_based_1.default {
    constructor(currencyManager, extensionId, currentVersion, supportedCurrencyType){
        super(currencyManager, extensionId, currentVersion, supportedCurrencyType);
        this.actions = Object.assign(Object.assign({}, this.actions), {
            [types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.ADD_FEE]: this.applyAddFee.bind(this)
        });
    }
    /**
     * Creates the extensionsData to create the payment detection extension
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        if (creationParameters.feeAddress && !this.isValidAddress(creationParameters.feeAddress)) {
            throw Error('feeAddress is not a valid address');
        }
        if (creationParameters.feeAmount && !(0, utils_1.isValidAmount)(creationParameters.feeAmount)) {
            throw Error('feeAmount is not a valid amount');
        }
        if (!creationParameters.feeAmount && creationParameters.feeAddress) {
            throw Error('feeAmount requires feeAddress');
        }
        if (creationParameters.feeAmount && !creationParameters.feeAddress) {
            throw Error('feeAddress requires feeAmount');
        }
        return super.createCreationAction(creationParameters);
    }
    /**
     * Creates the extensionsData to add a fee address
     *
     * @param addFeeParameters extensions parameters to create
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createAddFeeAction(addFeeParameters) {
        if (addFeeParameters.feeAddress && !this.isValidAddress(addFeeParameters.feeAddress)) {
            throw Error('feeAddress is not a valid address');
        }
        if (addFeeParameters.feeAmount && !(0, utils_1.isValidAmount)(addFeeParameters.feeAmount)) {
            throw Error('feeAmount is not a valid amount');
        }
        if (addFeeParameters.feeAddress && !addFeeParameters.feeAmount) {
            throw Error('feeAddress requires feeAmount');
        }
        if (addFeeParameters.feeAmount && !addFeeParameters.feeAddress) {
            throw Error('feeAmount requires feeAddress');
        }
        return {
            action: types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.ADD_FEE,
            id: this.extensionId,
            parameters: addFeeParameters
        };
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp action timestamp
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (extensionAction.parameters.feeAddress && !this.isValidAddress(extensionAction.parameters.feeAddress)) {
            throw Error('feeAddress is not a valid address');
        }
        if (extensionAction.parameters.feeAmount && !(0, utils_1.isValidAmount)(extensionAction.parameters.feeAmount)) {
            throw Error('feeAmount is not a valid amount');
        }
        const proxyPNCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, proxyPNCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        feeAddress: extensionAction.parameters.feeAddress,
                        feeAmount: extensionAction.parameters.feeAmount,
                        paymentAddress: extensionAction.parameters.paymentAddress,
                        refundAddress: extensionAction.parameters.refundAddress,
                        salt: extensionAction.parameters.salt
                    },
                    timestamp
                }
            ],
            values: Object.assign(Object.assign({}, proxyPNCreationAction.values), {
                feeAddress: extensionAction.parameters.feeAddress,
                feeAmount: extensionAction.parameters.feeAmount
            })
        });
    }
    /**
     * Applies an add fee address and amount extension action
     *
     * @param extensionState previous state of the extension
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp action timestamp
     *
     * @returns state of the extension updated
     */ applyAddFee(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        if (extensionAction.parameters.feeAddress && !this.isValidAddress(extensionAction.parameters.feeAddress)) {
            throw Error('feeAddress is not a valid address');
        }
        if (extensionState.values.feeAddress) {
            throw Error(`Fee address already given`);
        }
        if (extensionAction.parameters.feeAmount && !(0, utils_1.isValidAmount)(extensionAction.parameters.feeAmount)) {
            throw Error('feeAmount is not a valid amount');
        }
        if (extensionState.values.feeAmount) {
            throw Error(`Fee amount already given`);
        }
        if (!requestState.payee) {
            throw Error(`The request must have a payee`);
        }
        if (!(0, utils_1.areEqualIdentities)(actionSigner, requestState.payee)) {
            throw Error(`The signer must be the payee`);
        }
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        // update fee address and amount
        copiedExtensionState.values.feeAddress = extensionAction.parameters.feeAddress;
        copiedExtensionState.values.feeAmount = extensionAction.parameters.feeAmount;
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.ADD_FEE,
            parameters: {
                feeAddress: extensionAction.parameters.feeAddress,
                feeAmount: extensionAction.parameters.feeAmount
            },
            timestamp
        });
        return copiedExtensionState;
    }
}
exports.FeeReferenceBasedPaymentNetwork = FeeReferenceBasedPaymentNetwork; //# sourceMappingURL=fee-reference-based.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/fee-proxy-contract.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)");
const fee_reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/fee-reference-based.js [app-rsc] (ecmascript)");
const EVM_CURRENT_VERSION = '0.2.0';
const NEAR_CURRENT_VERSION = 'NEAR-0.1.0';
/**
 * Implementation of the payment network to pay in ERC20, including third-party fees payment, based on a reference provided to a proxy contract.
 */ class Erc20FeeProxyPaymentNetwork extends fee_reference_based_1.FeeReferenceBasedPaymentNetwork {
    /**
     * @param network is only relevant for non-EVM chains (Near and Near testnet)
     */ constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_FEE_PROXY_CONTRACT, currentVersion, network){
        super(currencyManager, extensionId, currentVersion !== null && currentVersion !== void 0 ? currentVersion : Erc20FeeProxyPaymentNetwork.getDefaultCurrencyVersion(network), types_1.RequestLogicTypes.CURRENCY.ERC20);
        this.network = network;
    }
    static getDefaultCurrencyVersion(network) {
        return currency_1.NearChains.isChainSupported(network) ? NEAR_CURRENT_VERSION : EVM_CURRENT_VERSION;
    }
    // Override `validate` to account for network-specific instanciation (non-EVM only)
    validate(request, extensionAction) {
        if (this.network && request.currency.network && !(0, currency_1.isSameChain)(this.network, request.currency.network)) {
            throw new address_based_1.UnsupportedNetworkError(request.currency.network, [
                this.network
            ]);
        }
        super.validate(request, extensionAction);
    }
    // Override `isValidAddress` to account for network-specific instanciation (non-EVM only)
    isValidAddress(address) {
        if (currency_1.NearChains.isChainSupported(this.network)) {
            if (currency_1.NearChains.isTestnet(this.network)) {
                return this.isValidAddressForSymbolAndNetwork(address, 'NEAR-testnet', 'near-testnet');
            } else {
                return this.isValidAddressForSymbolAndNetwork(address, 'NEAR', 'near');
            }
        } else {
            return super.isValidAddress(address);
        }
    }
}
exports.default = Erc20FeeProxyPaymentNetwork; //# sourceMappingURL=fee-proxy-contract.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/proxy-contract.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/reference-based.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
/**
 * Implementation of the payment network to pay in ERC20 based on a reference provided to a proxy contract.
 */ class Erc20ProxyPaymentNetwork extends reference_based_1.default {
    constructor(currencyManager){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_PROXY_CONTRACT, CURRENT_VERSION, types_1.RequestLogicTypes.CURRENCY.ERC20);
    }
}
exports.default = Erc20ProxyPaymentNetwork; //# sourceMappingURL=proxy-contract.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc777/stream.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/reference-based.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
/**
 * Implementation of the payment network to pay in ERC777, including third-party fees payment, based on a reference provided to a proxy contract.
 */ class Erc777StreamPaymentNetwork extends reference_based_1.default {
    constructor(currencyManager){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC777_STREAM, CURRENT_VERSION, types_1.RequestLogicTypes.CURRENCY.ERC777);
    }
    /**
     * Creates the extensionsData to create the payment detection extension
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        if (!types_1.TypesUtils.isOriginalRequestCreationParameters(creationParameters) && !types_1.TypesUtils.isSubsequentRequestCreationParameters(creationParameters)) {
            throw Error('originalRequestId, previousRequestId and recurrenceNumber must be all empty or all filled');
        }
        /* Original Request Creation */ if (types_1.TypesUtils.isOriginalRequestCreationParameters(creationParameters)) {
            if (!creationParameters.expectedFlowRate) {
                throw Error('expectedFlowRate should not be empty');
            }
            if (!creationParameters.expectedStartDate) {
                throw Error('expectedStartDate should not be empty');
            }
            return super.createCreationAction(creationParameters);
        }
        /* Subsequent request Creation */ if (!this.isSubsequentRequestParametersValid(creationParameters)) {
            throw Error('recurrenceNumber must be 1 if originalRequestId and previousRequestId are equal and vice versa');
        }
        return {
            action: types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE,
            id: this.extensionId,
            parameters: creationParameters,
            version: this.currentVersion
        };
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp ?
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (!types_1.TypesUtils.isOriginalRequestCreationParameters(extensionAction.parameters) && !types_1.TypesUtils.isSubsequentRequestCreationParameters(extensionAction.parameters)) {
            throw Error('originalRequestId, previousRequestId and recurrenceNumber must be all empty or all filled');
        }
        /* Master request Creation */ if (types_1.TypesUtils.isOriginalRequestCreationParameters(extensionAction.parameters)) {
            if (!extensionAction.parameters.expectedStartDate || extensionAction.parameters.expectedStartDate && !(0, utils_1.isValidAmount)(extensionAction.parameters.expectedStartDate)) {
                throw Error('expectedStartDate is empty or invalid');
            }
            if (!extensionAction.parameters.expectedFlowRate || extensionAction.parameters.expectedFlowRate && !(0, utils_1.isValidAmount)(extensionAction.parameters.expectedFlowRate)) {
                throw Error('expectedFlowRate is empty or invalid');
            }
            const proxyPNCreationAction = super.applyCreation(extensionAction, timestamp);
            return Object.assign(Object.assign({}, proxyPNCreationAction), {
                events: [
                    {
                        name: types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE,
                        parameters: extensionAction.parameters,
                        timestamp
                    }
                ],
                values: Object.assign(Object.assign({}, proxyPNCreationAction.values), {
                    expectedStartDate: extensionAction.parameters.expectedStartDate,
                    expectedFlowRate: extensionAction.parameters.expectedFlowRate
                })
            });
        }
        /* Subsequent Request Creation */ if (!extensionAction.parameters.originalRequestId) {
            throw Error('originalRequestId is empty');
        }
        if (!extensionAction.parameters.previousRequestId) {
            throw Error('previousRequestId is empty');
        }
        if (!extensionAction.parameters.recurrenceNumber) {
            throw Error('recurrenceNumber is empty');
        }
        if (!extensionAction.version) {
            throw Error('version is required at creation');
        }
        if (!this.isSubsequentRequestParametersValid(extensionAction.parameters)) {
            throw Error('recurrenceNumber must be 1 if originalRequestId and previousRequestId are equal and vice versa');
        }
        return {
            events: [
                {
                    name: types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE,
                    parameters: extensionAction.parameters,
                    timestamp
                }
            ],
            id: extensionAction.id,
            type: this.extensionType,
            values: extensionAction.parameters,
            version: extensionAction.version
        };
    }
    /**
     * Verifies the consistency between the different parameters of the create action for subsequent requests
     *
     * @param parameters extension parameters to check
     *
     * @returns a boolean
     */ isSubsequentRequestParametersValid(parameters) {
        return parameters.originalRequestId === parameters.previousRequestId && parameters.recurrenceNumber === 1 || parameters.recurrenceNumber !== 1 && parameters.originalRequestId !== parameters.previousRequestId;
    }
}
exports.default = Erc777StreamPaymentNetwork; //# sourceMappingURL=stream.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/ethereum/fee-proxy-contract.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const fee_reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/fee-reference-based.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.2.0';
/**
 * Implementation of the payment network to pay in Ethereum, including third-party fees payment, based on a reference provided to a proxy contract.
 */ class EthereumFeeProxyPaymentNetwork extends fee_reference_based_1.FeeReferenceBasedPaymentNetwork {
    constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ETH_FEE_PROXY_CONTRACT, currentVersion = CURRENT_VERSION){
        super(currencyManager, extensionId, currentVersion, types_1.RequestLogicTypes.CURRENCY.ETH);
    }
}
exports.default = EthereumFeeProxyPaymentNetwork; //# sourceMappingURL=fee-proxy-contract.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/ethereum/input-data.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/reference-based.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.3.0';
/**
 * Implementation of the payment network to pay in native token
 * FIXME: rename into EVMNativePaymentNetwork
 */ class EthInputPaymentNetwork extends reference_based_1.default {
    constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ETH_INPUT_DATA, currentVersion = CURRENT_VERSION){
        super(currencyManager, extensionId, currentVersion, types_1.RequestLogicTypes.CURRENCY.ETH);
    }
}
exports.default = EthInputPaymentNetwork; //# sourceMappingURL=input-data.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/native-token.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)");
const reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/reference-based.js [app-rsc] (ecmascript)");
/**
 * Implementation of the payment network to pay in ETH based on input data.
 */ class NativeTokenPaymentNetwork extends reference_based_1.default {
    constructor(currencyManager, extensionId, currentVersion, supportedNetworks){
        super(currencyManager, extensionId, currentVersion, types_1.RequestLogicTypes.CURRENCY.ETH);
        this.supportedNetworks = supportedNetworks;
    }
    createCreationAction(creationParameters) {
        const networkName = creationParameters.paymentNetworkName;
        if (creationParameters.paymentAddress || creationParameters.refundAddress) {
            if (networkName) {
                this.throwIfInvalidNetwork(networkName);
            } else {
                throw new Error(`The network name is mandatory for the creation of the extension ${this.extensionId}.`);
            }
        }
        if (creationParameters.paymentAddress && !this.isValidAddress(creationParameters.paymentAddress)) {
            throw new address_based_1.InvalidPaymentAddressError(creationParameters.paymentAddress);
        }
        if (creationParameters.refundAddress && !this.isValidAddress(creationParameters.refundAddress)) {
            throw new address_based_1.InvalidPaymentAddressError(creationParameters.refundAddress, 'refundAddress');
        }
        return super.createCreationAction(creationParameters);
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isValidAddress(_address) {
        throw new Error(`Default implementation of isValidAddress() does not support native tokens. Please override this method.`);
    }
    throwIfInvalidNetwork(network) {
        super.throwIfInvalidNetwork(network);
        if (this.supportedNetworks && !this.supportedNetworks.includes(network)) {
            throw new address_based_1.UnsupportedNetworkError(network, this.supportedNetworks);
        }
    }
}
exports.default = NativeTokenPaymentNetwork; //# sourceMappingURL=native-token.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/near-native.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const native_token_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/native-token.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.2.0';
/**
 * Implementation of the payment network to pay in Near based on input data.
 */ class NearNativePaymentNetwork extends native_token_1.default {
    constructor(currencyManager, supportedNetworks = [
        'aurora'
    ], currentVersion = CURRENT_VERSION){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.NATIVE_TOKEN, currentVersion, supportedNetworks);
    }
    /**
     * Check if a near address is valid
     *
     * @param {string} address address to check
     * @returns {boolean} true if address is valid
     */ isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'NEAR', 'aurora');
    }
}
exports.default = NearNativePaymentNetwork; //# sourceMappingURL=near-native.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/near-testnet-native.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const near_native_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/near-native.js [app-rsc] (ecmascript)");
/**
 * Implementation of the payment network to pay in Near on testnet based on input data.
 */ class NearTestnetNativeNativePaymentNetwork extends near_native_1.default {
    constructor(currencyManager){
        // testnet PN version is the same as mainnet, can be overridden here if needed
        super(currencyManager, [
            'aurora-testnet',
            'near-testnet'
        ]);
    }
    /**
     * Check if a near testnet address is valid
     *
     * @param {string} address address to check
     * @returns {boolean} true if address is valid
     */ isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'NEAR-testnet', 'aurora-testnet');
    }
}
exports.default = NearTestnetNativeNativePaymentNetwork; //# sourceMappingURL=near-testnet-native.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-erc20-proxy.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const fee_proxy_contract_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/fee-proxy-contract.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
class AnyToErc20ProxyPaymentNetwork extends fee_proxy_contract_1.default {
    constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_ERC20_PROXY, currentVersion = CURRENT_VERSION){
        super(currencyManager, extensionId, currentVersion);
    }
    /**
     * Creates the extensionsData to create the extension ERC20 fee proxy contract payment detection
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        if (!creationParameters.acceptedTokens) {
            throw Error('acceptedTokens is required');
        }
        if (creationParameters.acceptedTokens.length === 0) {
            throw Error('acceptedTokens cannot be empty');
        }
        if (creationParameters.acceptedTokens.some((address)=>!this.isValidAddress(address))) {
            throw Error('acceptedTokens must contains only valid ethereum addresses');
        }
        const network = creationParameters.network;
        this.throwIfInvalidNetwork(network);
        for (const address of creationParameters.acceptedTokens){
            const acceptedCurrency = this.currencyManager.fromAddress(address, network);
            if (!acceptedCurrency) {
                throw new currency_1.UnsupportedCurrencyError({
                    value: address,
                    network
                });
            }
            if (!this.currencyManager.supportsConversion(acceptedCurrency, network)) {
                throw Error(`acceptedTokens must contain only supported token addresses (ERC20 only). ${address} is not supported for ${network}.`);
            }
        }
        return super.createCreationAction(creationParameters);
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp action timestamp
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (!extensionAction.parameters.network || extensionAction.parameters.network.length === 0) {
            throw Error('network is required');
        }
        if (!extensionAction.parameters.acceptedTokens || extensionAction.parameters.acceptedTokens.length === 0) {
            throw Error('acceptedTokens is required and cannot be empty');
        }
        if (extensionAction.parameters.acceptedTokens.some((address)=>!this.isValidAddress(address))) {
            throw Error('acceptedTokens must contains only valid ethereum addresses');
        }
        const feePNCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, feePNCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        feeAddress: extensionAction.parameters.feeAddress,
                        feeAmount: extensionAction.parameters.feeAmount,
                        paymentAddress: extensionAction.parameters.paymentAddress,
                        refundAddress: extensionAction.parameters.refundAddress,
                        salt: extensionAction.parameters.salt,
                        network: extensionAction.parameters.network,
                        acceptedTokens: extensionAction.parameters.acceptedTokens,
                        maxRateTimespan: extensionAction.parameters.maxRateTimespan
                    },
                    timestamp
                }
            ],
            values: Object.assign(Object.assign({}, feePNCreationAction.values), {
                network: extensionAction.parameters.network,
                acceptedTokens: extensionAction.parameters.acceptedTokens,
                maxRateTimespan: extensionAction.parameters.maxRateTimespan
            })
        });
    }
    /**
     * Validate the extension action regarding the currency and network
     * It must throw in case of error
     */ validate(request, extensionAction) {
        var _a;
        const network = extensionAction.action === types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE ? extensionAction.parameters.network : (_a = request.extensions[this.extensionId]) === null || _a === void 0 ? void 0 : _a.values.network;
        if (!network) {
            return;
        }
        // Nothing can be validated if the network has not been given yet
        if (!network) {
            return;
        }
        if (!currency_1.conversionSupportedNetworks.includes(network)) {
            throw new Error(`The network (${network}) is not supported for this payment network.`);
        }
        const currency = this.currencyManager.fromStorageCurrency(request.currency);
        if (!currency) {
            throw new currency_1.UnsupportedCurrencyError(request.currency);
        }
        if (!this.currencyManager.supportsConversion(currency, network)) {
            throw new Error(`The currency (${currency.id}, ${currency.hash}) of the request is not supported for this payment network.`);
        }
    }
}
exports.default = AnyToErc20ProxyPaymentNetwork; //# sourceMappingURL=any-to-erc20-proxy.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-eth-proxy.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const fee_proxy_contract_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/ethereum/fee-proxy-contract.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.2.0';
class AnyToEthProxyPaymentNetwork extends fee_proxy_contract_1.default {
    constructor(currencyManager){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_ETH_PROXY, CURRENT_VERSION);
    }
    /**
     * Creates the extensionsData to create the extension ETH fee proxy contract payment detection
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        this.throwIfInvalidNetwork(creationParameters.network);
        return super.createCreationAction(creationParameters);
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp action timestamp
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (!extensionAction.parameters.network || extensionAction.parameters.network.length === 0) {
            throw Error('network is required');
        }
        const feePNCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, feePNCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        feeAddress: extensionAction.parameters.feeAddress,
                        feeAmount: extensionAction.parameters.feeAmount,
                        paymentAddress: extensionAction.parameters.paymentAddress,
                        refundAddress: extensionAction.parameters.refundAddress,
                        salt: extensionAction.parameters.salt,
                        network: extensionAction.parameters.network,
                        maxRateTimespan: extensionAction.parameters.maxRateTimespan
                    },
                    timestamp
                }
            ],
            values: Object.assign(Object.assign({}, feePNCreationAction.values), {
                network: extensionAction.parameters.network,
                maxRateTimespan: extensionAction.parameters.maxRateTimespan
            })
        });
    }
    /**
     * Validate the extension action regarding the currency and network
     * It must throw in case of error
     */ validate(request, extensionAction) {
        var _a;
        const network = extensionAction.action === types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE ? extensionAction.parameters.network : (_a = request.extensions[this.extensionId]) === null || _a === void 0 ? void 0 : _a.values.network;
        if (!network) {
            throw new Error(`The network must be provided from the creation action or from the extension state`);
        }
        const currency = this.currencyManager.fromStorageCurrency(request.currency);
        if (!currency) {
            throw new currency_1.UnsupportedCurrencyError(request.currency);
        }
        if (!this.currencyManager.supportsConversion(currency, network)) {
            throw new Error(`The currency (${request.currency.value}) of the request is not supported for this payment network.`);
        }
    }
}
exports.default = AnyToEthProxyPaymentNetwork; //# sourceMappingURL=any-to-eth-proxy.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-native.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InvalidMaxRateTimespanError = void 0;
const fee_reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/fee-reference-based.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/address-based.js [app-rsc] (ecmascript)");
class AnyToNativeTokenPaymentNetwork extends fee_reference_based_1.FeeReferenceBasedPaymentNetwork {
    constructor(currencyManager, extensionId, currentVersion, supportedNetworks){
        super(currencyManager, extensionId, currentVersion, types_1.RequestLogicTypes.CURRENCY.ETH);
        this.supportedNetworks = supportedNetworks;
    }
    createCreationAction(creationParameters) {
        const network = creationParameters.network;
        this.throwIfInvalidNetwork(network);
        if (creationParameters.paymentAddress && !this.isValidAddress(creationParameters.paymentAddress)) {
            throw new address_based_1.InvalidPaymentAddressError(creationParameters.paymentAddress);
        }
        if (creationParameters.refundAddress && !this.isValidAddress(creationParameters.refundAddress)) {
            throw new address_based_1.InvalidPaymentAddressError(creationParameters.refundAddress, 'refundAddress');
        }
        if (creationParameters.feeAddress && !this.isValidAddress(creationParameters.feeAddress)) {
            throw new address_based_1.InvalidPaymentAddressError(creationParameters.feeAddress, 'feeAddress');
        }
        if (creationParameters.maxRateTimespan && creationParameters.maxRateTimespan < 0) {
            throw new InvalidMaxRateTimespanError(creationParameters.maxRateTimespan);
        }
        return super.createCreationAction(creationParameters);
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isValidAddress(_address) {
        throw new Error(`Default implementation of isValidAddress() does not support native tokens. Please override this method.`);
    }
    throwIfInvalidNetwork(network) {
        super.throwIfInvalidNetwork(network);
        if (this.supportedNetworks && !this.supportedNetworks.includes(network)) {
            throw new address_based_1.UnsupportedNetworkError(network, this.supportedNetworks);
        }
    }
}
exports.default = AnyToNativeTokenPaymentNetwork;
class InvalidMaxRateTimespanError extends Error {
    constructor(maxRateTimespan){
        super(`${maxRateTimespan} is not a valid maxRateTimespan`);
    }
}
exports.InvalidMaxRateTimespanError = InvalidMaxRateTimespanError; //# sourceMappingURL=any-to-native.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/any-to-near.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const any_to_native_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-native.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
class AnyToNearPaymentNetwork extends any_to_native_1.default {
    constructor(currencyManager, supportedNetworks = [
        'aurora'
    ], currentVersion = CURRENT_VERSION){
        super(currencyManager, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_NATIVE_TOKEN, currentVersion, supportedNetworks);
    }
    /**
     * Check if a near address is valid
     *
     * @param {string} address address to check
     * @returns {boolean} true if address is valid
     */ isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'NEAR', 'aurora');
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp action timestamp
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp) {
        if (!extensionAction.parameters.network || extensionAction.parameters.network.length === 0) {
            throw Error('network is required');
        }
        if (extensionAction.parameters.paymentAddress && !this.isValidAddress(extensionAction.parameters.paymentAddress)) {
            throw Error(`paymentAddress ${extensionAction.parameters.paymentAddress} is not a valid address`);
        }
        if (extensionAction.parameters.feeAddress && !this.isValidAddress(extensionAction.parameters.feeAddress)) {
            throw Error(`feeAddress ${extensionAction.parameters.feeAddress} is not a valid address`);
        }
        if (extensionAction.parameters.refundAddress && !this.isValidAddress(extensionAction.parameters.refundAddress)) {
            throw Error(`refundAddress ${extensionAction.parameters.refundAddress} is not a valid address`);
        }
        const feePNCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, feePNCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: {
                        feeAddress: extensionAction.parameters.feeAddress,
                        feeAmount: extensionAction.parameters.feeAmount,
                        paymentAddress: extensionAction.parameters.paymentAddress,
                        refundAddress: extensionAction.parameters.refundAddress,
                        salt: extensionAction.parameters.salt,
                        network: extensionAction.parameters.network,
                        maxRateTimespan: extensionAction.parameters.maxRateTimespan
                    },
                    timestamp
                }
            ],
            values: Object.assign(Object.assign({}, feePNCreationAction.values), {
                network: extensionAction.parameters.network,
                maxRateTimespan: extensionAction.parameters.maxRateTimespan
            })
        });
    }
    /**
     * Applies add payment address
     *
     * @param extensionState previous state of the extension
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     *
     *  @returns state of the extension updated
     */ applyAddPaymentAddress(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        const paymentAddress = extensionAction.parameters.paymentAddress;
        if (!this.isValidAddress(paymentAddress)) {
            throw new Error(`paymentAddress '${paymentAddress}' is not a valid address`);
        }
        return super.applyAddPaymentAddress(extensionState, extensionAction, requestState, actionSigner, timestamp);
    }
    applyAddFee(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        if (extensionAction.parameters.feeAddress && !this.isValidAddress(extensionAction.parameters.feeAddress)) {
            throw Error('feeAddress is not a valid address');
        }
        return super.applyAddFee(extensionState, extensionAction, requestState, actionSigner, timestamp);
    }
    /**
     * Validate that the network and currency coming from the extension and/or action are valid and supported.
     * It must throw in case of error.
     */ validate(request, extensionAction) {
        var _a;
        const network = extensionAction.action === types_1.ExtensionTypes.PnFeeReferenceBased.ACTION.CREATE ? extensionAction.parameters.network : (_a = request.extensions[this.extensionId]) === null || _a === void 0 ? void 0 : _a.values.network;
        if (!network) {
            throw new Error(`The network must be provided by the creation action or by the extension state`);
        }
        if (!this.supportedNetworks.includes(network)) {
            throw new Error(`The network (${network}) is not supported for this payment network.`);
        }
        const currency = this.currencyManager.fromStorageCurrency(request.currency);
        if (!currency) {
            throw new currency_1.UnsupportedCurrencyError(request.currency);
        }
        if (!this.currencyManager.supportsConversion(currency, network)) {
            throw new Error(`The currency (${request.currency.value}) of the request is not supported for this payment network.`);
        }
    }
}
exports.default = AnyToNearPaymentNetwork; //# sourceMappingURL=any-to-near.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/any-to-near-testnet.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const any_to_near_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/any-to-near.js [app-rsc] (ecmascript)");
class AnyToNearTestnetPaymentNetwork extends any_to_near_1.default {
    constructor(currencyManager){
        // testnet PN version is the same as mainnet, can be overridden here if needed
        super(currencyManager, [
            'aurora-testnet',
            'near-testnet'
        ]);
    }
    /**
     * Check if a near testnet address is valid
     *
     * @param {string} address address to check
     * @returns {boolean} true if address is valid
     */ isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'NEAR-testnet', 'aurora-testnet');
    }
}
exports.default = AnyToNearTestnetPaymentNetwork; //# sourceMappingURL=any-to-near-testnet.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/transferable-receivable.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const fee_reference_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/fee-reference-based.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.2.0';
/**
 * Implementation of the payment network to pay in ERC20 based on a transferable receivable contract.
 */ class Erc20TransferableReceivablePaymentNetwork extends fee_reference_based_1.FeeReferenceBasedPaymentNetwork {
    constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_TRANSFERABLE_RECEIVABLE, currentVersion = CURRENT_VERSION){
        super(currencyManager, extensionId, currentVersion, types_1.RequestLogicTypes.CURRENCY.ERC20);
    }
}
exports.default = Erc20TransferableReceivablePaymentNetwork; //# sourceMappingURL=transferable-receivable.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/meta.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const any_to_erc20_proxy_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-erc20-proxy.js [app-rsc] (ecmascript)");
const any_to_eth_proxy_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-eth-proxy.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const declarative_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/declarative.js [app-rsc] (ecmascript)");
const CURRENT_VERSION = '0.1.0';
class MetaPaymentNetwork extends declarative_1.default {
    constructor(currencyManager, extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID.META, currentVersion = CURRENT_VERSION){
        super(extensionId, currentVersion);
        this.currencyManager = currencyManager;
        this.extensionId = extensionId;
        this.currentVersion = currentVersion;
        this.actions = Object.assign(Object.assign({}, this.actions), {
            [types_1.ExtensionTypes.PnMeta.ACTION.APPLY_ACTION_TO_PN]: this.applyApplyActionToExtension.bind(this)
        });
    }
    /**
     * Creates the extensionsData to create the meta extension payment detection
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */ createCreationAction(creationParameters) {
        Object.entries(creationParameters).forEach(([pnId, creationParameters])=>{
            const pn = this.getExtension(pnId);
            const subPnIdentifiers = [];
            // Perform validation on sub-pn creation parameters
            for (const param of creationParameters){
                pn.createCreationAction(param);
                if (subPnIdentifiers.includes(param.salt)) {
                    throw new Error('Duplicate payment network identifier (salt)');
                }
                subPnIdentifiers.push(param.salt);
            }
        });
        return super.createCreationAction(creationParameters);
    }
    /**
     * Creates the extensionsData to perform an action on a sub-pn
     *
     * @param parameters parameters to create the action to perform
     *
     * @returns IAction the extensionsData to be stored in the request
     */ createApplyActionToPn(parameters) {
        return {
            action: types_1.ExtensionTypes.PnMeta.ACTION.APPLY_ACTION_TO_PN,
            id: this.extensionId,
            parameters: {
                pnIdentifier: parameters.pnIdentifier,
                action: parameters.action,
                parameters: parameters.parameters
            }
        };
    }
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp action timestamp
     *
     * @returns state of the extension created
     */ applyCreation(extensionAction, timestamp, context) {
        if (!context) {
            throw new Error('Context is required');
        }
        const values = {};
        Object.entries(extensionAction.parameters).forEach(([pnId, parameters])=>{
            const pn = this.getExtension(pnId);
            parameters.forEach((params)=>{
                values[params.salt] = pn.applyActionToExtension({}, {
                    action: 'create',
                    id: pnId,
                    parameters: params,
                    version: pn.currentVersion
                }, context.requestState, context.actionSigner, timestamp)[pnId];
            });
        });
        const genericCreationAction = super.applyCreation(extensionAction, timestamp);
        return Object.assign(Object.assign({}, genericCreationAction), {
            events: [
                {
                    name: 'create',
                    parameters: Object.assign({}, extensionAction.parameters),
                    timestamp
                }
            ],
            values: Object.assign(Object.assign({}, genericCreationAction.values), values)
        });
    }
    /** Applies an action on a sub-payment network
     *
     * @param extensionsState previous state of the extensions
     * @param extensionAction action to apply
     * @param requestState request state read-only
     * @param actionSigner identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension created
     */ applyApplyActionToExtension(extensionState, extensionAction, requestState, actionSigner, timestamp) {
        const copiedExtensionState = (0, utils_1.deepCopy)(extensionState);
        const { pnIdentifier, action, parameters } = extensionAction.parameters;
        const extensionToActOn = copiedExtensionState.values[pnIdentifier];
        const pn = this.getExtension(extensionToActOn.id);
        const subExtensionState = {
            [extensionToActOn.id]: extensionToActOn
        };
        copiedExtensionState.values[pnIdentifier] = pn.applyActionToExtension(subExtensionState, {
            id: extensionToActOn.id,
            action,
            parameters
        }, requestState, actionSigner, timestamp)[extensionToActOn.id];
        // update events
        copiedExtensionState.events.push({
            name: types_1.ExtensionTypes.PnMeta.ACTION.APPLY_ACTION_TO_PN,
            parameters: {
                pnIdentifier,
                action,
                parameters
            },
            timestamp,
            from: actionSigner
        });
        return copiedExtensionState;
    }
    /**
     * Validate the extension action regarding the currency and network
     * It must throw in case of error
     */ validate(request, extensionAction) {
        var _a, _b;
        const pnIdentifiers = [];
        if (extensionAction.action === types_1.ExtensionTypes.PnMeta.ACTION.CREATE) {
            Object.entries(extensionAction.parameters).forEach(([pnId, parameters])=>{
                // Checks that the PN is supported
                this.getExtension(pnId);
                if (parameters.action) {
                    throw new Error('Invalid action');
                }
                for (const param of parameters){
                    if (pnIdentifiers.includes(param.salt)) {
                        throw new Error('Duplicate payment network identifier');
                    }
                    pnIdentifiers.push(param.salt);
                }
            });
        } else if (extensionAction.action === types_1.ExtensionTypes.PnMeta.ACTION.APPLY_ACTION_TO_PN) {
            const { pnIdentifier } = extensionAction.parameters;
            const subPnState = (_b = (_a = request.extensions[types_1.ExtensionTypes.PAYMENT_NETWORK_ID.META]) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b[pnIdentifier];
            if (!subPnState) {
                throw new Error(`No payment network with identifier ${pnIdentifier}`);
            }
            // Checks that the PN is supported
            this.getExtension(subPnState.id);
        }
    }
    getExtension(pnId) {
        switch(pnId){
            case types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_DECLARATIVE:
                {
                    return new declarative_1.default();
                }
            case types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_ERC20_PROXY:
                {
                    return new any_to_erc20_proxy_1.default(this.currencyManager);
                }
            case types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_ETH_PROXY:
                {
                    return new any_to_eth_proxy_1.default(this.currencyManager);
                }
            default:
                {
                    throw new Error(`Invalid PN: ${pnId}`);
                }
        }
    }
}
exports.default = MetaPaymentNetwork; //# sourceMappingURL=meta.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/advanced-logic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const currency_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+currency@0.23.0/node_modules/@requestnetwork/currency/dist/index.js [app-rsc] (ecmascript)");
const content_data_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/content-data.js [app-rsc] (ecmascript)");
const mainnet_address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/bitcoin/mainnet-address-based.js [app-rsc] (ecmascript)");
const testnet_address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/bitcoin/testnet-address-based.js [app-rsc] (ecmascript)");
const declarative_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/declarative.js [app-rsc] (ecmascript)");
const address_based_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/address-based.js [app-rsc] (ecmascript)");
const fee_proxy_contract_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/fee-proxy-contract.js [app-rsc] (ecmascript)");
const proxy_contract_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/proxy-contract.js [app-rsc] (ecmascript)");
const stream_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc777/stream.js [app-rsc] (ecmascript)");
const fee_proxy_contract_2 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/ethereum/fee-proxy-contract.js [app-rsc] (ecmascript)");
const input_data_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/ethereum/input-data.js [app-rsc] (ecmascript)");
const near_native_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/near-native.js [app-rsc] (ecmascript)");
const near_testnet_native_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/near-testnet-native.js [app-rsc] (ecmascript)");
const any_to_erc20_proxy_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-erc20-proxy.js [app-rsc] (ecmascript)");
const any_to_eth_proxy_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/any-to-eth-proxy.js [app-rsc] (ecmascript)");
const any_to_near_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/any-to-near.js [app-rsc] (ecmascript)");
const any_to_near_testnet_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/near/any-to-near-testnet.js [app-rsc] (ecmascript)");
const transferable_receivable_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/erc20/transferable-receivable.js [app-rsc] (ecmascript)");
const meta_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/extensions/payment-network/meta.js [app-rsc] (ecmascript)");
/**
 * Module to manage Advanced logic extensions
 * Package to route the format and parsing of extensions following their id
 */ class AdvancedLogic {
    constructor(currencyManager){
        this.currencyManager = currencyManager;
        this.extensions = {
            addressBasedBtc: new mainnet_address_based_1.default(currencyManager),
            addressBasedErc20: new address_based_1.default(currencyManager),
            addressBasedTestnetBtc: new testnet_address_based_1.default(currencyManager),
            contentData: new content_data_1.default(),
            anyToErc20Proxy: new any_to_erc20_proxy_1.default(currencyManager),
            declarative: new declarative_1.default(),
            ethereumInputData: new input_data_1.default(currencyManager),
            feeProxyContractErc20: new fee_proxy_contract_1.default(currencyManager),
            proxyContractErc20: new proxy_contract_1.default(currencyManager),
            erc777Stream: new stream_1.default(currencyManager),
            feeProxyContractEth: new fee_proxy_contract_2.default(currencyManager),
            anyToEthProxy: new any_to_eth_proxy_1.default(currencyManager),
            nativeToken: [
                new near_native_1.default(currencyManager),
                new near_testnet_native_1.default(currencyManager)
            ],
            anyToNativeToken: [
                new any_to_near_1.default(currencyManager),
                new any_to_near_testnet_1.default(currencyManager)
            ],
            erc20TransferableReceivable: new transferable_receivable_1.default(currencyManager),
            metaPn: new meta_1.default(currencyManager)
        };
    }
    /**
     * Applies the extension action to the request extensions state
     *
     * @param extensionsState IExtensionStates previous state of the extensions
     * @param extensionAction IAction action to apply
     * @param requestState IRequest request state read-only
     * @param actionSigner IIdentity identity of the signer
     * @param timestamp timestamp of the action
     *
     * @returns state of the extension
     */ applyActionToExtensions(extensionsState, extensionAction, requestState, actionSigner, timestamp) {
        const extension = this.getExtensionForActionAndState(extensionAction, requestState);
        return extension.applyActionToExtension(extensionsState, extensionAction, requestState, actionSigner, timestamp);
    }
    getExtensionForActionAndState(extensionAction, requestState) {
        const id = extensionAction.id;
        const network = this.getNetwork(extensionAction, requestState) || requestState.currency.network;
        const extension = {
            [types_1.ExtensionTypes.ID.CONTENT_DATA]: this.extensions.contentData,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.BITCOIN_ADDRESS_BASED]: this.extensions.addressBasedBtc,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.TESTNET_BITCOIN_ADDRESS_BASED]: this.extensions.addressBasedTestnetBtc,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_DECLARATIVE]: this.extensions.declarative,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_ADDRESS_BASED]: this.extensions.addressBasedErc20,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_PROXY_CONTRACT]: this.extensions.proxyContractErc20,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_FEE_PROXY_CONTRACT]: this.getFeeProxyContractErc20ForNetwork(network),
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC777_STREAM]: this.extensions.erc777Stream,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ETH_INPUT_DATA]: this.extensions.ethereumInputData,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.NATIVE_TOKEN]: this.getNativeTokenExtensionForNetwork(network),
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_ERC20_PROXY]: this.extensions.anyToErc20Proxy,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ETH_FEE_PROXY_CONTRACT]: this.extensions.feeProxyContractEth,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_ETH_PROXY]: this.extensions.anyToEthProxy,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_NATIVE_TOKEN]: this.getAnyToNativeTokenExtensionForNetwork(network),
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ERC20_TRANSFERABLE_RECEIVABLE]: this.extensions.erc20TransferableReceivable,
            [types_1.ExtensionTypes.PAYMENT_NETWORK_ID.META]: this.extensions.metaPn
        }[id];
        if (!extension) {
            if (id === types_1.ExtensionTypes.PAYMENT_NETWORK_ID.NATIVE_TOKEN || id === types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_NATIVE_TOKEN) {
                throw Error(`extension with id: ${id} not found for network: ${network}`);
            }
            throw Error(`extension not recognized, id: ${id}`);
        }
        return extension;
    }
    getNativeTokenExtensionForNetwork(network) {
        return network ? this.extensions.nativeToken.find((nativeTokenExtension)=>nativeTokenExtension.supportedNetworks.includes(network)) : undefined;
    }
    getAnyToNativeTokenExtensionForNetwork(network) {
        return network ? this.extensions.anyToNativeToken.find((anyToNativeTokenExtension)=>anyToNativeTokenExtension.supportedNetworks.includes(network)) : undefined;
    }
    getFeeProxyContractErc20ForNetwork(network) {
        return currency_1.NearChains.isChainSupported(network) ? new fee_proxy_contract_1.default(this.currencyManager, undefined, undefined, network) : this.extensions.feeProxyContractErc20;
    }
    getNetwork(extensionAction, requestState) {
        var _a, _b;
        if (requestState.currency.network && extensionAction.parameters.paymentNetworkName && !(0, currency_1.isSameChain)(requestState.currency.network, extensionAction.parameters.paymentNetworkName)) {
            throw new Error(`Cannot apply action for network ${extensionAction.parameters.paymentNetworkName} on state with payment network: ${requestState.currency.network}`);
        }
        const network = extensionAction.action === 'create' ? extensionAction.parameters.network : (_b = (_a = requestState.extensions[types_1.ExtensionTypes.PAYMENT_NETWORK_ID.ANY_TO_NATIVE_TOKEN]) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b.network;
        return network;
    }
}
exports.default = AdvancedLogic; //# sourceMappingURL=advanced-logic.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AdvancedLogic = void 0;
var advanced_logic_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+advanced-logic@0.49.0/node_modules/@requestnetwork/advanced-logic/dist/advanced-logic.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "AdvancedLogic", {
    enumerable: true,
    get: function() {
        return advanced_logic_1.default;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/multi-format-group.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MultiFormatGroup = void 0;
/**
 * Class to group multi-formats to make the code more maintainable (see index.ts)
 */ class MultiFormatGroup {
    /**
     * Creates an instance of MultiFormatGroup.
     *
     * @param formats all the formats of this group
     */ constructor(formats){
        /** All the format in the group */ this.availableFormats = [];
        this.availableFormats = formats;
    }
    /**
     * Checks if an object is a deserialized multi-format of this group
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format of this group
     */ isSerializableObject(data) {
        // check if one of the format of the group can handle the data
        return this.availableFormats.some((format)=>format.isSerializableObject(data));
    }
    /**
     * Checks if a string is a serialized multi-format of this group
     *
     * @param formatted string to check
     * @returns true if the data is a serialized multi-format
     */ isDeserializableString(formatted) {
        // check if one of the format of the group can handle the string
        return this.availableFormats.some((format)=>format.isDeserializableString(formatted));
    }
    /**
     * Serializes a deserialized multi-format of this group
     *
     * @param data object to serialize
     * @returns the data as a serialized multi-format
     */ serialize(data) {
        // Find the format that can handle the data
        const matchingFormat = this.availableFormats.find((format)=>format.isSerializableObject(data));
        // if found, serialize with the right format
        if (matchingFormat) {
            return matchingFormat.serialize(data);
        }
        throw new Error('No format found to serialize this object');
    }
    /**
     * Deserialized a multi-format string of this group
     *
     * @param data string to deserialized
     * @returns the data as a deserialized multi-format
     */ deserialize(formatted) {
        // Find the format that can handle the string
        const matchingFormat = this.availableFormats.find((format)=>format.isDeserializableString(formatted));
        // if found, deserialize with the right format
        if (matchingFormat) {
            return matchingFormat.deserialize(formatted);
        }
        throw new Error('No format found to deserialize this string');
    }
}
exports.MultiFormatGroup = MultiFormatGroup; //# sourceMappingURL=multi-format-group.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SerializableMultiFormat = void 0;
/**
 * Class to serialize and deserialize multi-format data
 * This class is meant to be inherited by all the multi-format
 */ class SerializableMultiFormat {
    constructor(prefix, type){
        this.prefix = prefix;
        this.type = type;
    }
    /**
     * Checks if an object is a deserialized multi-format
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format
     */ isSerializableObject(data) {
        return data.type === this.type && !!data.value;
    }
    /**
     * Checks if a string is a serialized multi-format
     *
     * @param data string to check
     * @returns true if the data is a serialized multi-format
     */ isDeserializableString(formattedData) {
        return formattedData.slice(0, 2) === this.prefix;
    }
    /**
     * Serializes a deserialized multi-format
     *
     * @param data object to serialize
     * @returns the data as a serialized multi-format
     */ serialize(data) {
        if (!this.isSerializableObject(data)) {
            throw new Error('object is not a serializable object');
        }
        return `${this.prefix}${data.value}`;
    }
    /**
     * Deserialized a multi-format string
     *
     * @param data string to deserialized
     * @returns the data as a deserialized multi-format
     */ deserialize(formatted) {
        if (!this.isDeserializableString(formatted)) {
            throw new Error('string is not a serialized string');
        }
        return {
            type: this.type,
            value: this.removePrefix(formatted)
        };
    }
    /**
     * Removes prefix of a multi-format
     *
     * @param formattedData the formatted multi-format
     * @returns the hash without the multi-format prefix
     */ removePrefix(formattedData) {
        return formattedData.slice(2);
    }
}
exports.SerializableMultiFormat = SerializableMultiFormat; //# sourceMappingURL=serializable-multi-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/aes256-cbc-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Aes256CbcMultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format AES-256-CBC encrypted data
 */ class Aes256CbcMultiFormat extends serializable_multi_format_1.SerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.AES256_CBC_ENCRYPTED, types_1.EncryptionTypes.METHOD.AES256_CBC);
    }
}
exports.Aes256CbcMultiFormat = Aes256CbcMultiFormat; //# sourceMappingURL=aes256-cbc-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/aes256-gcm-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Aes256GcmMultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format AES-256-GCM encrypted data
 */ class Aes256GcmMultiFormat extends serializable_multi_format_1.SerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.AES256_GCM_ENCRYPTED, types_1.EncryptionTypes.METHOD.AES256_GCM);
    }
}
exports.Aes256GcmMultiFormat = Aes256GcmMultiFormat; //# sourceMappingURL=aes256-gcm-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/ecies-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ECIESMultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format AES-256-CBC encrypted data
 */ class ECIESMultiFormat extends serializable_multi_format_1.SerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.ECIES_ENCRYPTED, types_1.EncryptionTypes.METHOD.ECIES);
    }
}
exports.ECIESMultiFormat = ECIESMultiFormat; //# sourceMappingURL=ecies-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/kms-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.KMSMultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format KMS encrypted data
 */ class KMSMultiFormat extends serializable_multi_format_1.SerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.KMS_ENCRYPTED, types_1.EncryptionTypes.METHOD.KMS);
    }
}
exports.KMSMultiFormat = KMSMultiFormat; //# sourceMappingURL=kms-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/encryption-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.encryptionFormats = void 0;
const multi_format_group_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/multi-format-group.js [app-rsc] (ecmascript)");
const aes256_cbc_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/aes256-cbc-format.js [app-rsc] (ecmascript)");
const aes256_gcm_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/aes256-gcm-format.js [app-rsc] (ecmascript)");
const ecies_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/ecies-format.js [app-rsc] (ecmascript)");
const kms_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/kms-format.js [app-rsc] (ecmascript)");
exports.encryptionFormats = new multi_format_group_1.MultiFormatGroup([
    new kms_format_1.KMSMultiFormat(),
    new aes256_cbc_format_1.Aes256CbcMultiFormat(),
    new ecies_format_1.ECIESMultiFormat(),
    new aes256_gcm_format_1.Aes256GcmMultiFormat()
]); //# sourceMappingURL=encryption-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hexadecimal-serializable-multi-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HexadecimalSerializableMultiFormat = void 0;
const serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format data using hexadecimal values
 * This class is meant to be inherited by all the multi-format using as value a hexadecimal (starting by '0x')
 */ class HexadecimalSerializableMultiFormat extends serializable_multi_format_1.SerializableMultiFormat {
    /**
     * Checks if an object is a deserialized multi-format
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format
     */ isSerializableObject(data) {
        return super.isSerializableObject(data) && data.value.slice(0, 2) === '0x';
    }
    /**
     * Checks if a string is a serialized multi-format
     *
     * @param formatted string to check
     * @returns true if the data is a serialized multi-format
     */ isDeserializableString(formatted) {
        return super.isDeserializableString(formatted);
    }
    /**
     * Serializes a deserialized multi-format
     *
     * @param data object to serialize
     * @returns the data as a serialized multi-format
     */ serialize(data) {
        if (!this.isSerializableObject(data)) {
            throw new Error('object is not a serializable object');
        }
        // replace '0x' by the prefix
        return `${this.prefix}${data.value.slice(2).toLowerCase()}`;
    }
    /**
     * Deserialized a multi-format string
     *
     * @param data string to deserialized
     * @returns the data as a deserialized multi-format
     */ deserialize(formatted) {
        if (!this.isDeserializableString(formatted)) {
            throw new Error('string is not a serialized string');
        }
        return {
            type: this.type,
            // replace the prefix by '0x'
            value: `0x${this.removePrefix(formatted.toLowerCase())}`
        };
    }
}
exports.HexadecimalSerializableMultiFormat = HexadecimalSerializableMultiFormat; //# sourceMappingURL=hexadecimal-serializable-multi-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hash/keccak256-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Keccak256MultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const hexadecimal_serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hexadecimal-serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format AES-256-CBC encrypted data
 */ class Keccak256MultiFormat extends hexadecimal_serializable_multi_format_1.HexadecimalSerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.NORMALIZE_KECCAK256_HASH, types_1.MultiFormatTypes.HashTypes.TYPE.KECCAK256);
    }
    /**
     * Checks if an object is a deserialized multi-format
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format
     */ isSerializableObject(data) {
        return super.isSerializableObject(data) && data.value.length === types_1.MultiFormatTypes.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH;
    }
    /**
     * Checks if a string is a serialized multi-format
     *
     * @param formatted string to check
     * @returns true if the data is a serialized multi-format
     */ isDeserializableString(formatted) {
        return super.isDeserializableString(formatted) && formatted.length === types_1.MultiFormatTypes.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH;
    }
}
exports.Keccak256MultiFormat = Keccak256MultiFormat; //# sourceMappingURL=keccak256-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hash/hash-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hashFormat = void 0;
const multi_format_group_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/multi-format-group.js [app-rsc] (ecmascript)");
const keccak256_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hash/keccak256-format.js [app-rsc] (ecmascript)");
// group all the multi-format concerning the hashing
exports.hashFormat = new multi_format_group_1.MultiFormatGroup([
    new keccak256_format_1.Keccak256MultiFormat()
]); //# sourceMappingURL=hash-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/identity/ethereum-address-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EthereumAddressMultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const hexadecimal_serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hexadecimal-serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format identity ethereum address
 */ class EthereumAddressMultiFormat extends hexadecimal_serializable_multi_format_1.HexadecimalSerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.IDENTITY_ETHEREUM_ADDRESS, types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS);
    }
    /**
     * Checks if an object is a deserialized multi-format
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format
     */ isSerializableObject(data) {
        return super.isSerializableObject(data) && data.value.length === types_1.MultiFormatTypes.FORMAT_IDENTITY_ETHEREUM_ADDRESS_LENGTH;
    }
    /**
     * Checks if a string is a serialized multi-format
     *
     * @param formatted string to check
     * @returns true if the data is a serialized multi-format
     */ isDeserializableString(formatted) {
        return super.isDeserializableString(formatted) && formatted.length === types_1.MultiFormatTypes.FORMAT_IDENTITY_ETHEREUM_ADDRESS_LENGTH;
    }
}
exports.EthereumAddressMultiFormat = EthereumAddressMultiFormat; //# sourceMappingURL=ethereum-address-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/identity/identity-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.identityFormat = void 0;
const multi_format_group_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/multi-format-group.js [app-rsc] (ecmascript)");
const ethereum_address_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/identity/ethereum-address-format.js [app-rsc] (ecmascript)");
// group all the multi-format concerning identities
exports.identityFormat = new multi_format_group_1.MultiFormatGroup([
    new ethereum_address_format_1.EthereumAddressMultiFormat()
]); //# sourceMappingURL=identity-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/plain/plain-text-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PlainTextMultiFormat = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const serializable_multi_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/serializable-multi-format.js [app-rsc] (ecmascript)");
/**
 * Class to serialize and deserialize multi-format plain text
 */ class PlainTextMultiFormat extends serializable_multi_format_1.SerializableMultiFormat {
    constructor(){
        super(types_1.MultiFormatTypes.prefix.PLAIN_TEXT, types_1.MultiFormatTypes.PlainTypes.TYPE.PLAIN_TEXT);
    }
}
exports.PlainTextMultiFormat = PlainTextMultiFormat; //# sourceMappingURL=plain-text-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/plain/plain-format.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.plainFormat = void 0;
const multi_format_group_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/multi-format-group.js [app-rsc] (ecmascript)");
const plain_text_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/plain/plain-text-format.js [app-rsc] (ecmascript)");
// group all the multi-format concerning plain data
exports.plainFormat = new multi_format_group_1.MultiFormatGroup([
    new plain_text_format_1.PlainTextMultiFormat()
]); //# sourceMappingURL=plain-format.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.serialize = exports.deserialize = exports.plainFormat = exports.identityFormat = exports.hashFormat = exports.MultiFormatGroup = exports.encryptionFormats = void 0;
const encryption_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/encryption/encryption-format.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "encryptionFormats", {
    enumerable: true,
    get: function() {
        return encryption_format_1.encryptionFormats;
    }
});
const multi_format_group_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/multi-format-group.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "MultiFormatGroup", {
    enumerable: true,
    get: function() {
        return multi_format_group_1.MultiFormatGroup;
    }
});
const hash_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/hash/hash-format.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "hashFormat", {
    enumerable: true,
    get: function() {
        return hash_format_1.hashFormat;
    }
});
const identity_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/identity/identity-format.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "identityFormat", {
    enumerable: true,
    get: function() {
        return identity_format_1.identityFormat;
    }
});
const plain_format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/plain/plain-format.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "plainFormat", {
    enumerable: true,
    get: function() {
        return plain_format_1.plainFormat;
    }
});
/** List of the groups of formats available */ const availableFormats = [
    encryption_format_1.encryptionFormats,
    identity_format_1.identityFormat,
    hash_format_1.hashFormat,
    plain_format_1.plainFormat
];
/**
 * Deserializes any supported serialized string
 *
 * @param formatted the string to deserialize
 * @returns the deserialized object or throw
 */ function deserialize(formatted) {
    const matchingFormat = availableFormats.find((format)=>format.isDeserializableString(formatted));
    if (matchingFormat) {
        return matchingFormat.deserialize(formatted);
    }
    throw new Error('No format found to deserialize this string');
}
exports.deserialize = deserialize;
/**
 * Serializes any supported serializable object
 *
 * @param data the object to serialize
 * @returns the serialized string or throw.
 */ function serialize(data) {
    const matchingFormat = availableFormats.find((format)=>format.isSerializableObject(data));
    if (matchingFormat) {
        return matchingFormat.serialize(data);
    }
    throw new Error('No format found to serialize this object');
}
exports.serialize = serialize; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/constants.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
const SEMVER_SPEC_VERSION = '2.0.0';
const MAX_LENGTH = 256;
const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */ 9007199254740991;
// Max safe segment length for coercion.
const MAX_SAFE_COMPONENT_LENGTH = 16;
// Max safe length for a build identifier. The max length minus 6 characters for
// the shortest version with a build 0.0.0+BUILD.
const MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
const RELEASE_TYPES = [
    'major',
    'premajor',
    'minor',
    'preminor',
    'patch',
    'prepatch',
    'prerelease'
];
module.exports = {
    MAX_LENGTH,
    MAX_SAFE_COMPONENT_LENGTH,
    MAX_SAFE_BUILD_LENGTH,
    MAX_SAFE_INTEGER,
    RELEASE_TYPES,
    SEMVER_SPEC_VERSION,
    FLAG_INCLUDE_PRERELEASE: 0b001,
    FLAG_LOOSE: 0b010
};
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/debug.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const debug = typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...args)=>console.error('SEMVER', ...args) : ()=>{};
module.exports = debug;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/re.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const { MAX_SAFE_COMPONENT_LENGTH, MAX_SAFE_BUILD_LENGTH, MAX_LENGTH } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/constants.js [app-rsc] (ecmascript)");
const debug = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/debug.js [app-rsc] (ecmascript)");
exports = module.exports = {};
// The actual regexps go on exports.re
const re = exports.re = [];
const safeRe = exports.safeRe = [];
const src = exports.src = [];
const t = exports.t = {};
let R = 0;
const LETTERDASHNUMBER = '[a-zA-Z0-9-]';
// Replace some greedy regex tokens to prevent regex dos issues. These regex are
// used internally via the safeRe object since all inputs in this library get
// normalized first to trim and collapse all extra whitespace. The original
// regexes are exported for userland consumption and lower level usage. A
// future breaking change could export the safer regex only with a note that
// all input should have extra whitespace removed.
const safeRegexReplacements = [
    [
        '\\s',
        1
    ],
    [
        '\\d',
        MAX_LENGTH
    ],
    [
        LETTERDASHNUMBER,
        MAX_SAFE_BUILD_LENGTH
    ]
];
const makeSafeRegex = (value)=>{
    for (const [token, max] of safeRegexReplacements){
        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);
    }
    return value;
};
const createToken = (name, value, isGlobal)=>{
    const safe = makeSafeRegex(value);
    const index = R++;
    debug(name, index, value);
    t[name] = index;
    src[index] = value;
    re[index] = new RegExp(value, isGlobal ? 'g' : undefined);
    safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined);
};
// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.
// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.
createToken('NUMERICIDENTIFIER', '0|[1-9]\\d*');
createToken('NUMERICIDENTIFIERLOOSE', '\\d+');
// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.
createToken('NONNUMERICIDENTIFIER', `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);
// ## Main Version
// Three dot-separated numeric identifiers.
createToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\.` + `(${src[t.NUMERICIDENTIFIER]})\\.` + `(${src[t.NUMERICIDENTIFIER]})`);
createToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);
// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.
createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);
createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);
// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.
createToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);
createToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);
// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.
createToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`);
// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.
createToken('BUILD', `(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);
// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.
// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.
createToken('FULLPLAIN', `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);
createToken('FULL', `^${src[t.FULLPLAIN]}$`);
// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
createToken('LOOSEPLAIN', `[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);
createToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`);
createToken('GTLT', '((?:<|>)?=?)');
// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
createToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
createToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);
createToken('XRANGEPLAIN', `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);
createToken('XRANGEPLAINLOOSE', `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);
createToken('XRANGE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`);
createToken('XRANGELOOSE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`);
// Coercion.
// Extract anything that could conceivably be a part of a valid semver
createToken('COERCE', `${'(^|[^\\d])' + '(\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:$|[^\\d])`);
createToken('COERCERTL', src[t.COERCE], true);
// Tilde ranges.
// Meaning is "reasonably at or greater than"
createToken('LONETILDE', '(?:~>?)');
createToken('TILDETRIM', `(\\s*)${src[t.LONETILDE]}\\s+`, true);
exports.tildeTrimReplace = '$1~';
createToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);
createToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);
// Caret ranges.
// Meaning is "at least and backwards compatible with"
createToken('LONECARET', '(?:\\^)');
createToken('CARETTRIM', `(\\s*)${src[t.LONECARET]}\\s+`, true);
exports.caretTrimReplace = '$1^';
createToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);
createToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);
// A simple gt/lt/eq thing, or just "" to indicate "any version"
createToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`);
createToken('COMPARATOR', `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`);
// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
createToken('COMPARATORTRIM', `(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);
exports.comparatorTrimReplace = '$1$2$3';
// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
createToken('HYPHENRANGE', `^\\s*(${src[t.XRANGEPLAIN]})` + `\\s+-\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\s*$`);
createToken('HYPHENRANGELOOSE', `^\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\s+-\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\s*$`);
// Star ranges basically just allow anything at all.
createToken('STAR', '(<|>)?=?\\s*\\*');
// >=0.0.0 is like a star
createToken('GTE0', '^\\s*>=\\s*0\\.0\\.0\\s*$');
createToken('GTE0PRE', '^\\s*>=\\s*0\\.0\\.0-0\\s*$');
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/parse-options.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// parse out just the options we care about
const looseOption = Object.freeze({
    loose: true
});
const emptyOpts = Object.freeze({});
const parseOptions = (options)=>{
    if (!options) {
        return emptyOpts;
    }
    if (typeof options !== 'object') {
        return looseOption;
    }
    return options;
};
module.exports = parseOptions;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/identifiers.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const numeric = /^[0-9]+$/;
const compareIdentifiers = (a, b)=>{
    const anum = numeric.test(a);
    const bnum = numeric.test(b);
    if (anum && bnum) {
        a = +a;
        b = +b;
    }
    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
};
const rcompareIdentifiers = (a, b)=>compareIdentifiers(b, a);
module.exports = {
    compareIdentifiers,
    rcompareIdentifiers
};
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const debug = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/debug.js [app-rsc] (ecmascript)");
const { MAX_LENGTH, MAX_SAFE_INTEGER } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/constants.js [app-rsc] (ecmascript)");
const { safeRe: re, t } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/re.js [app-rsc] (ecmascript)");
const parseOptions = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/parse-options.js [app-rsc] (ecmascript)");
const { compareIdentifiers } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/identifiers.js [app-rsc] (ecmascript)");
class SemVer {
    constructor(version, options){
        options = parseOptions(options);
        if (version instanceof SemVer) {
            if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {
                return version;
            } else {
                version = version.version;
            }
        } else if (typeof version !== 'string') {
            throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version}".`);
        }
        if (version.length > MAX_LENGTH) {
            throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);
        }
        debug('SemVer', version, options);
        this.options = options;
        this.loose = !!options.loose;
        // this isn't actually relevant for versions, but keep it so that we
        // don't run into trouble passing this.options around.
        this.includePrerelease = !!options.includePrerelease;
        const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);
        if (!m) {
            throw new TypeError(`Invalid Version: ${version}`);
        }
        this.raw = version;
        // these are actually numbers
        this.major = +m[1];
        this.minor = +m[2];
        this.patch = +m[3];
        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
            throw new TypeError('Invalid major version');
        }
        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
            throw new TypeError('Invalid minor version');
        }
        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
            throw new TypeError('Invalid patch version');
        }
        // numberify any prerelease numeric ids
        if (!m[4]) {
            this.prerelease = [];
        } else {
            this.prerelease = m[4].split('.').map((id)=>{
                if (/^[0-9]+$/.test(id)) {
                    const num = +id;
                    if (num >= 0 && num < MAX_SAFE_INTEGER) {
                        return num;
                    }
                }
                return id;
            });
        }
        this.build = m[5] ? m[5].split('.') : [];
        this.format();
    }
    format() {
        this.version = `${this.major}.${this.minor}.${this.patch}`;
        if (this.prerelease.length) {
            this.version += `-${this.prerelease.join('.')}`;
        }
        return this.version;
    }
    toString() {
        return this.version;
    }
    compare(other) {
        debug('SemVer.compare', this.version, this.options, other);
        if (!(other instanceof SemVer)) {
            if (typeof other === 'string' && other === this.version) {
                return 0;
            }
            other = new SemVer(other, this.options);
        }
        if (other.version === this.version) {
            return 0;
        }
        return this.compareMain(other) || this.comparePre(other);
    }
    compareMain(other) {
        if (!(other instanceof SemVer)) {
            other = new SemVer(other, this.options);
        }
        return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
    }
    comparePre(other) {
        if (!(other instanceof SemVer)) {
            other = new SemVer(other, this.options);
        }
        // NOT having a prerelease is > having one
        if (this.prerelease.length && !other.prerelease.length) {
            return -1;
        } else if (!this.prerelease.length && other.prerelease.length) {
            return 1;
        } else if (!this.prerelease.length && !other.prerelease.length) {
            return 0;
        }
        let i = 0;
        do {
            const a = this.prerelease[i];
            const b = other.prerelease[i];
            debug('prerelease compare', i, a, b);
            if (a === undefined && b === undefined) {
                return 0;
            } else if (b === undefined) {
                return 1;
            } else if (a === undefined) {
                return -1;
            } else if (a === b) {
                continue;
            } else {
                return compareIdentifiers(a, b);
            }
        }while (++i)
    }
    compareBuild(other) {
        if (!(other instanceof SemVer)) {
            other = new SemVer(other, this.options);
        }
        let i = 0;
        do {
            const a = this.build[i];
            const b = other.build[i];
            debug('prerelease compare', i, a, b);
            if (a === undefined && b === undefined) {
                return 0;
            } else if (b === undefined) {
                return 1;
            } else if (a === undefined) {
                return -1;
            } else if (a === b) {
                continue;
            } else {
                return compareIdentifiers(a, b);
            }
        }while (++i)
    }
    // preminor will bump the version up to the next minor release, and immediately
    // down to pre-release. premajor and prepatch work the same way.
    inc(release, identifier, identifierBase) {
        switch(release){
            case 'premajor':
                this.prerelease.length = 0;
                this.patch = 0;
                this.minor = 0;
                this.major++;
                this.inc('pre', identifier, identifierBase);
                break;
            case 'preminor':
                this.prerelease.length = 0;
                this.patch = 0;
                this.minor++;
                this.inc('pre', identifier, identifierBase);
                break;
            case 'prepatch':
                // If this is already a prerelease, it will bump to the next version
                // drop any prereleases that might already exist, since they are not
                // relevant at this point.
                this.prerelease.length = 0;
                this.inc('patch', identifier, identifierBase);
                this.inc('pre', identifier, identifierBase);
                break;
            // If the input is a non-prerelease version, this acts the same as
            // prepatch.
            case 'prerelease':
                if (this.prerelease.length === 0) {
                    this.inc('patch', identifier, identifierBase);
                }
                this.inc('pre', identifier, identifierBase);
                break;
            case 'major':
                // If this is a pre-major version, bump up to the same major version.
                // Otherwise increment major.
                // 1.0.0-5 bumps to 1.0.0
                // 1.1.0 bumps to 2.0.0
                if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
                    this.major++;
                }
                this.minor = 0;
                this.patch = 0;
                this.prerelease = [];
                break;
            case 'minor':
                // If this is a pre-minor version, bump up to the same minor version.
                // Otherwise increment minor.
                // 1.2.0-5 bumps to 1.2.0
                // 1.2.1 bumps to 1.3.0
                if (this.patch !== 0 || this.prerelease.length === 0) {
                    this.minor++;
                }
                this.patch = 0;
                this.prerelease = [];
                break;
            case 'patch':
                // If this is not a pre-release version, it will increment the patch.
                // If it is a pre-release it will bump up to the same patch version.
                // 1.2.0-5 patches to 1.2.0
                // 1.2.0 patches to 1.2.1
                if (this.prerelease.length === 0) {
                    this.patch++;
                }
                this.prerelease = [];
                break;
            // This probably shouldn't be used publicly.
            // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
            case 'pre':
                {
                    const base = Number(identifierBase) ? 1 : 0;
                    if (!identifier && identifierBase === false) {
                        throw new Error('invalid increment argument: identifier is empty');
                    }
                    if (this.prerelease.length === 0) {
                        this.prerelease = [
                            base
                        ];
                    } else {
                        let i = this.prerelease.length;
                        while(--i >= 0){
                            if (typeof this.prerelease[i] === 'number') {
                                this.prerelease[i]++;
                                i = -2;
                            }
                        }
                        if (i === -1) {
                            // didn't increment anything
                            if (identifier === this.prerelease.join('.') && identifierBase === false) {
                                throw new Error('invalid increment argument: identifier already exists');
                            }
                            this.prerelease.push(base);
                        }
                    }
                    if (identifier) {
                        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
                        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
                        let prerelease = [
                            identifier,
                            base
                        ];
                        if (identifierBase === false) {
                            prerelease = [
                                identifier
                            ];
                        }
                        if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
                            if (isNaN(this.prerelease[1])) {
                                this.prerelease = prerelease;
                            }
                        } else {
                            this.prerelease = prerelease;
                        }
                    }
                    break;
                }
            default:
                throw new Error(`invalid increment argument: ${release}`);
        }
        this.raw = this.format();
        if (this.build.length) {
            this.raw += `+${this.build.join('.')}`;
        }
        return this;
    }
}
module.exports = SemVer;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const parse = (version, options, throwErrors = false)=>{
    if (version instanceof SemVer) {
        return version;
    }
    try {
        return new SemVer(version, options);
    } catch (er) {
        if (!throwErrors) {
            return null;
        }
        throw er;
    }
};
module.exports = parse;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/valid.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const parse = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)");
const valid = (version, options)=>{
    const v = parse(version, options);
    return v ? v.version : null;
};
module.exports = valid;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/clean.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const parse = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)");
const clean = (version, options)=>{
    const s = parse(version.trim().replace(/^[=v]+/, ''), options);
    return s ? s.version : null;
};
module.exports = clean;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/inc.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const inc = (version, release, options, identifier, identifierBase)=>{
    if (typeof options === 'string') {
        identifierBase = identifier;
        identifier = options;
        options = undefined;
    }
    try {
        return new SemVer(version instanceof SemVer ? version.version : version, options).inc(release, identifier, identifierBase).version;
    } catch (er) {
        return null;
    }
};
module.exports = inc;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/diff.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const parse = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)");
const diff = (version1, version2)=>{
    const v1 = parse(version1, null, true);
    const v2 = parse(version2, null, true);
    const comparison = v1.compare(v2);
    if (comparison === 0) {
        return null;
    }
    const v1Higher = comparison > 0;
    const highVersion = v1Higher ? v1 : v2;
    const lowVersion = v1Higher ? v2 : v1;
    const highHasPre = !!highVersion.prerelease.length;
    const lowHasPre = !!lowVersion.prerelease.length;
    if (lowHasPre && !highHasPre) {
        // Going from prerelease -> no prerelease requires some special casing
        // If the low version has only a major, then it will always be a major
        // Some examples:
        // 1.0.0-1 -> 1.0.0
        // 1.0.0-1 -> 1.1.1
        // 1.0.0-1 -> 2.0.0
        if (!lowVersion.patch && !lowVersion.minor) {
            return 'major';
        }
        // Otherwise it can be determined by checking the high version
        if (highVersion.patch) {
            // anything higher than a patch bump would result in the wrong version
            return 'patch';
        }
        if (highVersion.minor) {
            // anything higher than a minor bump would result in the wrong version
            return 'minor';
        }
        // bumping major/minor/patch all have same result
        return 'major';
    }
    // add the `pre` prefix if we are going to a prerelease version
    const prefix = highHasPre ? 'pre' : '';
    if (v1.major !== v2.major) {
        return prefix + 'major';
    }
    if (v1.minor !== v2.minor) {
        return prefix + 'minor';
    }
    if (v1.patch !== v2.patch) {
        return prefix + 'patch';
    }
    // high and low are preleases
    return 'prerelease';
};
module.exports = diff;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/major.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const major = (a, loose)=>new SemVer(a, loose).major;
module.exports = major;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/minor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const minor = (a, loose)=>new SemVer(a, loose).minor;
module.exports = minor;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/patch.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const patch = (a, loose)=>new SemVer(a, loose).patch;
module.exports = patch;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/prerelease.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const parse = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)");
const prerelease = (version, options)=>{
    const parsed = parse(version, options);
    return parsed && parsed.prerelease.length ? parsed.prerelease : null;
};
module.exports = prerelease;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const compare = (a, b, loose)=>new SemVer(a, loose).compare(new SemVer(b, loose));
module.exports = compare;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/rcompare.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const rcompare = (a, b, loose)=>compare(b, a, loose);
module.exports = rcompare;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare-loose.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const compareLoose = (a, b)=>compare(a, b, true);
module.exports = compareLoose;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare-build.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const compareBuild = (a, b, loose)=>{
    const versionA = new SemVer(a, loose);
    const versionB = new SemVer(b, loose);
    return versionA.compare(versionB) || versionA.compareBuild(versionB);
};
module.exports = compareBuild;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/sort.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compareBuild = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare-build.js [app-rsc] (ecmascript)");
const sort = (list, loose)=>list.sort((a, b)=>compareBuild(a, b, loose));
module.exports = sort;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/rsort.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compareBuild = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare-build.js [app-rsc] (ecmascript)");
const rsort = (list, loose)=>list.sort((a, b)=>compareBuild(b, a, loose));
module.exports = rsort;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gt.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const gt = (a, b, loose)=>compare(a, b, loose) > 0;
module.exports = gt;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lt.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const lt = (a, b, loose)=>compare(a, b, loose) < 0;
module.exports = lt;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/eq.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const eq = (a, b, loose)=>compare(a, b, loose) === 0;
module.exports = eq;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/neq.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const neq = (a, b, loose)=>compare(a, b, loose) !== 0;
module.exports = neq;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gte.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const gte = (a, b, loose)=>compare(a, b, loose) >= 0;
module.exports = gte;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lte.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const lte = (a, b, loose)=>compare(a, b, loose) <= 0;
module.exports = lte;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/cmp.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const eq = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/eq.js [app-rsc] (ecmascript)");
const neq = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/neq.js [app-rsc] (ecmascript)");
const gt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gt.js [app-rsc] (ecmascript)");
const gte = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gte.js [app-rsc] (ecmascript)");
const lt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lt.js [app-rsc] (ecmascript)");
const lte = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lte.js [app-rsc] (ecmascript)");
const cmp = (a, op, b, loose)=>{
    switch(op){
        case '===':
            if (typeof a === 'object') {
                a = a.version;
            }
            if (typeof b === 'object') {
                b = b.version;
            }
            return a === b;
        case '!==':
            if (typeof a === 'object') {
                a = a.version;
            }
            if (typeof b === 'object') {
                b = b.version;
            }
            return a !== b;
        case '':
        case '=':
        case '==':
            return eq(a, b, loose);
        case '!=':
            return neq(a, b, loose);
        case '>':
            return gt(a, b, loose);
        case '>=':
            return gte(a, b, loose);
        case '<':
            return lt(a, b, loose);
        case '<=':
            return lte(a, b, loose);
        default:
            throw new TypeError(`Invalid operator: ${op}`);
    }
};
module.exports = cmp;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/coerce.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const parse = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)");
const { safeRe: re, t } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/re.js [app-rsc] (ecmascript)");
const coerce = (version, options)=>{
    if (version instanceof SemVer) {
        return version;
    }
    if (typeof version === 'number') {
        version = String(version);
    }
    if (typeof version !== 'string') {
        return null;
    }
    options = options || {};
    let match = null;
    if (!options.rtl) {
        match = version.match(re[t.COERCE]);
    } else {
        // Find the right-most coercible string that does not share
        // a terminus with a more left-ward coercible string.
        // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
        //
        // Walk through the string checking with a /g regexp
        // Manually set the index so as to pick up overlapping matches.
        // Stop when we get a match that ends at the string end, since no
        // coercible string can be more right-ward without the same terminus.
        let next;
        while((next = re[t.COERCERTL].exec(version)) && (!match || match.index + match[0].length !== version.length)){
            if (!match || next.index + next[0].length !== match.index + match[0].length) {
                match = next;
            }
            re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length;
        }
        // leave it in a clean state
        re[t.COERCERTL].lastIndex = -1;
    }
    if (match === null) {
        return null;
    }
    return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options);
};
module.exports = coerce;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// hoisted class for cyclic dependency
class Range {
    constructor(range, options){
        options = parseOptions(options);
        if (range instanceof Range) {
            if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
                return range;
            } else {
                return new Range(range.raw, options);
            }
        }
        if (range instanceof Comparator) {
            // just put it in the set and return
            this.raw = range.value;
            this.set = [
                [
                    range
                ]
            ];
            this.format();
            return this;
        }
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        // First reduce all whitespace as much as possible so we do not have to rely
        // on potentially slow regexes like \s*. This is then stored and used for
        // future error messages as well.
        this.raw = range.trim().split(/\s+/).join(' ');
        // First, split on ||
        this.set = this.raw.split('||')// map the range to a 2d array of comparators
        .map((r)=>this.parseRange(r.trim()))// throw out any comparator lists that are empty
        // this generally means that it was not a valid range, which is allowed
        // in loose mode, but will still throw if the WHOLE range is invalid.
        .filter((c)=>c.length);
        if (!this.set.length) {
            throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        }
        // if we have any that are not the null set, throw out null sets.
        if (this.set.length > 1) {
            // keep the first one, in case they're all null sets
            const first = this.set[0];
            this.set = this.set.filter((c)=>!isNullSet(c[0]));
            if (this.set.length === 0) {
                this.set = [
                    first
                ];
            } else if (this.set.length > 1) {
                // if we have any that are *, then the range is just *
                for (const c of this.set){
                    if (c.length === 1 && isAny(c[0])) {
                        this.set = [
                            c
                        ];
                        break;
                    }
                }
            }
        }
        this.format();
    }
    format() {
        this.range = this.set.map((comps)=>comps.join(' ').trim()).join('||').trim();
        return this.range;
    }
    toString() {
        return this.range;
    }
    parseRange(range) {
        // memoize range parsing for performance.
        // this is a very hot path, and fully deterministic.
        const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);
        const memoKey = memoOpts + ':' + range;
        const cached = cache.get(memoKey);
        if (cached) {
            return cached;
        }
        const loose = this.options.loose;
        // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
        const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];
        range = range.replace(hr, hyphenReplace(this.options.includePrerelease));
        debug('hyphen replace', range);
        // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
        range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);
        debug('comparator trim', range);
        // `~ 1.2.3` => `~1.2.3`
        range = range.replace(re[t.TILDETRIM], tildeTrimReplace);
        debug('tilde trim', range);
        // `^ 1.2.3` => `^1.2.3`
        range = range.replace(re[t.CARETTRIM], caretTrimReplace);
        debug('caret trim', range);
        // At this point, the range is completely trimmed and
        // ready to be split into comparators.
        let rangeList = range.split(' ').map((comp)=>parseComparator(comp, this.options)).join(' ').split(/\s+/)// >=0.0.0 is equivalent to *
        .map((comp)=>replaceGTE0(comp, this.options));
        if (loose) {
            // in loose mode, throw out any that are not valid comparators
            rangeList = rangeList.filter((comp)=>{
                debug('loose invalid filter', comp, this.options);
                return !!comp.match(re[t.COMPARATORLOOSE]);
            });
        }
        debug('range list', rangeList);
        // if any comparators are the null set, then replace with JUST null set
        // if more than one comparator, remove any * comparators
        // also, don't include the same comparator more than once
        const rangeMap = new Map();
        const comparators = rangeList.map((comp)=>new Comparator(comp, this.options));
        for (const comp of comparators){
            if (isNullSet(comp)) {
                return [
                    comp
                ];
            }
            rangeMap.set(comp.value, comp);
        }
        if (rangeMap.size > 1 && rangeMap.has('')) {
            rangeMap.delete('');
        }
        const result = [
            ...rangeMap.values()
        ];
        cache.set(memoKey, result);
        return result;
    }
    intersects(range, options) {
        if (!(range instanceof Range)) {
            throw new TypeError('a Range is required');
        }
        return this.set.some((thisComparators)=>{
            return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators)=>{
                return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator)=>{
                    return rangeComparators.every((rangeComparator)=>{
                        return thisComparator.intersects(rangeComparator, options);
                    });
                });
            });
        });
    }
    // if ANY of the sets match ALL of its comparators, then pass
    test(version) {
        if (!version) {
            return false;
        }
        if (typeof version === 'string') {
            try {
                version = new SemVer(version, this.options);
            } catch (er) {
                return false;
            }
        }
        for(let i = 0; i < this.set.length; i++){
            if (testSet(this.set[i], version, this.options)) {
                return true;
            }
        }
        return false;
    }
}
module.exports = Range;
const LRU = __turbopack_require__("[project]/node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js [app-rsc] (ecmascript)");
const cache = new LRU({
    max: 1000
});
const parseOptions = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/parse-options.js [app-rsc] (ecmascript)");
const Comparator = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/comparator.js [app-rsc] (ecmascript)");
const debug = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/debug.js [app-rsc] (ecmascript)");
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const { safeRe: re, t, comparatorTrimReplace, tildeTrimReplace, caretTrimReplace } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/re.js [app-rsc] (ecmascript)");
const { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/constants.js [app-rsc] (ecmascript)");
const isNullSet = (c)=>c.value === '<0.0.0-0';
const isAny = (c)=>c.value === '';
// take a set of comparators and determine whether there
// exists a version which can satisfy it
const isSatisfiable = (comparators, options)=>{
    let result = true;
    const remainingComparators = comparators.slice();
    let testComparator = remainingComparators.pop();
    while(result && remainingComparators.length){
        result = remainingComparators.every((otherComparator)=>{
            return testComparator.intersects(otherComparator, options);
        });
        testComparator = remainingComparators.pop();
    }
    return result;
};
// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
const parseComparator = (comp, options)=>{
    debug('comp', comp, options);
    comp = replaceCarets(comp, options);
    debug('caret', comp);
    comp = replaceTildes(comp, options);
    debug('tildes', comp);
    comp = replaceXRanges(comp, options);
    debug('xrange', comp);
    comp = replaceStars(comp, options);
    debug('stars', comp);
    return comp;
};
const isX = (id)=>!id || id.toLowerCase() === 'x' || id === '*';
// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0
// ~0.0.1 --> >=0.0.1 <0.1.0-0
const replaceTildes = (comp, options)=>{
    return comp.trim().split(/\s+/).map((c)=>replaceTilde(c, options)).join(' ');
};
const replaceTilde = (comp, options)=>{
    const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];
    return comp.replace(r, (_, M, m, p, pr)=>{
        debug('tilde', comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
            ret = '';
        } else if (isX(m)) {
            ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
            // ~1.2 == >=1.2.0 <1.3.0-0
            ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;
        } else if (pr) {
            debug('replaceTilde pr', pr);
            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
        } else {
            // ~1.2.3 == >=1.2.3 <1.3.0-0
            ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;
        }
        debug('tilde return', ret);
        return ret;
    });
};
// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0
// ^1.2.3 --> >=1.2.3 <2.0.0-0
// ^1.2.0 --> >=1.2.0 <2.0.0-0
// ^0.0.1 --> >=0.0.1 <0.0.2-0
// ^0.1.0 --> >=0.1.0 <0.2.0-0
const replaceCarets = (comp, options)=>{
    return comp.trim().split(/\s+/).map((c)=>replaceCaret(c, options)).join(' ');
};
const replaceCaret = (comp, options)=>{
    debug('caret', comp, options);
    const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];
    const z = options.includePrerelease ? '-0' : '';
    return comp.replace(r, (_, M, m, p, pr)=>{
        debug('caret', comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
            ret = '';
        } else if (isX(m)) {
            ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
            if (M === '0') {
                ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;
            } else {
                ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;
            }
        } else if (pr) {
            debug('replaceCaret pr', pr);
            if (M === '0') {
                if (m === '0') {
                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;
                } else {
                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
                }
            } else {
                ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;
            }
        } else {
            debug('no pr');
            if (M === '0') {
                if (m === '0') {
                    ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;
                } else {
                    ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;
                }
            } else {
                ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;
            }
        }
        debug('caret return', ret);
        return ret;
    });
};
const replaceXRanges = (comp, options)=>{
    debug('replaceXRanges', comp, options);
    return comp.split(/\s+/).map((c)=>replaceXRange(c, options)).join(' ');
};
const replaceXRange = (comp, options)=>{
    comp = comp.trim();
    const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];
    return comp.replace(r, (ret, gtlt, M, m, p, pr)=>{
        debug('xRange', comp, ret, gtlt, M, m, p, pr);
        const xM = isX(M);
        const xm = xM || isX(m);
        const xp = xm || isX(p);
        const anyX = xp;
        if (gtlt === '=' && anyX) {
            gtlt = '';
        }
        // if we're including prereleases in the match, then we need
        // to fix this to -0, the lowest possible prerelease value
        pr = options.includePrerelease ? '-0' : '';
        if (xM) {
            if (gtlt === '>' || gtlt === '<') {
                // nothing is allowed
                ret = '<0.0.0-0';
            } else {
                // nothing is forbidden
                ret = '*';
            }
        } else if (gtlt && anyX) {
            // we know patch is an x, because we have any x at all.
            // replace X with 0
            if (xm) {
                m = 0;
            }
            p = 0;
            if (gtlt === '>') {
                // >1 => >=2.0.0
                // >1.2 => >=1.3.0
                gtlt = '>=';
                if (xm) {
                    M = +M + 1;
                    m = 0;
                    p = 0;
                } else {
                    m = +m + 1;
                    p = 0;
                }
            } else if (gtlt === '<=') {
                // <=0.7.x is actually <0.8.0, since any 0.7.x should
                // pass.  Similarly, <=7.x is actually <8.0.0, etc.
                gtlt = '<';
                if (xm) {
                    M = +M + 1;
                } else {
                    m = +m + 1;
                }
            }
            if (gtlt === '<') {
                pr = '-0';
            }
            ret = `${gtlt + M}.${m}.${p}${pr}`;
        } else if (xm) {
            ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;
        } else if (xp) {
            ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;
        }
        debug('xRange return', ret);
        return ret;
    });
};
// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
const replaceStars = (comp, options)=>{
    debug('replaceStars', comp, options);
    // Looseness is ignored here.  star is always as loose as it gets!
    return comp.trim().replace(re[t.STAR], '');
};
const replaceGTE0 = (comp, options)=>{
    debug('replaceGTE0', comp, options);
    return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '');
};
// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0-0
const hyphenReplace = (incPr)=>($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb)=>{
        if (isX(fM)) {
            from = '';
        } else if (isX(fm)) {
            from = `>=${fM}.0.0${incPr ? '-0' : ''}`;
        } else if (isX(fp)) {
            from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`;
        } else if (fpr) {
            from = `>=${from}`;
        } else {
            from = `>=${from}${incPr ? '-0' : ''}`;
        }
        if (isX(tM)) {
            to = '';
        } else if (isX(tm)) {
            to = `<${+tM + 1}.0.0-0`;
        } else if (isX(tp)) {
            to = `<${tM}.${+tm + 1}.0-0`;
        } else if (tpr) {
            to = `<=${tM}.${tm}.${tp}-${tpr}`;
        } else if (incPr) {
            to = `<${tM}.${tm}.${+tp + 1}-0`;
        } else {
            to = `<=${to}`;
        }
        return `${from} ${to}`.trim();
    };
const testSet = (set, version, options)=>{
    for(let i = 0; i < set.length; i++){
        if (!set[i].test(version)) {
            return false;
        }
    }
    if (version.prerelease.length && !options.includePrerelease) {
        // Find the set of versions that are allowed to have prereleases
        // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
        // That should allow `1.2.3-pr.2` to pass.
        // However, `1.2.4-alpha.notready` should NOT be allowed,
        // even though it's within the range set by the comparators.
        for(let i = 0; i < set.length; i++){
            debug(set[i].semver);
            if (set[i].semver === Comparator.ANY) {
                continue;
            }
            if (set[i].semver.prerelease.length > 0) {
                const allowed = set[i].semver;
                if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {
                    return true;
                }
            }
        }
        // Version has a -pre, but it's not one of the ones we like.
        return false;
    }
    return true;
};
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/comparator.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const ANY = Symbol('SemVer ANY');
// hoisted class for cyclic dependency
class Comparator {
    static get ANY() {
        return ANY;
    }
    constructor(comp, options){
        options = parseOptions(options);
        if (comp instanceof Comparator) {
            if (comp.loose === !!options.loose) {
                return comp;
            } else {
                comp = comp.value;
            }
        }
        comp = comp.trim().split(/\s+/).join(' ');
        debug('comparator', comp, options);
        this.options = options;
        this.loose = !!options.loose;
        this.parse(comp);
        if (this.semver === ANY) {
            this.value = '';
        } else {
            this.value = this.operator + this.semver.version;
        }
        debug('comp', this);
    }
    parse(comp) {
        const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];
        const m = comp.match(r);
        if (!m) {
            throw new TypeError(`Invalid comparator: ${comp}`);
        }
        this.operator = m[1] !== undefined ? m[1] : '';
        if (this.operator === '=') {
            this.operator = '';
        }
        // if it literally is just '>' or '' then allow anything.
        if (!m[2]) {
            this.semver = ANY;
        } else {
            this.semver = new SemVer(m[2], this.options.loose);
        }
    }
    toString() {
        return this.value;
    }
    test(version) {
        debug('Comparator.test', version, this.options.loose);
        if (this.semver === ANY || version === ANY) {
            return true;
        }
        if (typeof version === 'string') {
            try {
                version = new SemVer(version, this.options);
            } catch (er) {
                return false;
            }
        }
        return cmp(version, this.operator, this.semver, this.options);
    }
    intersects(comp, options) {
        if (!(comp instanceof Comparator)) {
            throw new TypeError('a Comparator is required');
        }
        if (this.operator === '') {
            if (this.value === '') {
                return true;
            }
            return new Range(comp.value, options).test(this.value);
        } else if (comp.operator === '') {
            if (comp.value === '') {
                return true;
            }
            return new Range(this.value, options).test(comp.semver);
        }
        options = parseOptions(options);
        // Special cases where nothing can possibly be lower
        if (options.includePrerelease && (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {
            return false;
        }
        if (!options.includePrerelease && (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {
            return false;
        }
        // Same direction increasing (> or >=)
        if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {
            return true;
        }
        // Same direction decreasing (< or <=)
        if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {
            return true;
        }
        // same SemVer and both sides are inclusive (<= or >=)
        if (this.semver.version === comp.semver.version && this.operator.includes('=') && comp.operator.includes('=')) {
            return true;
        }
        // opposite directions less than
        if (cmp(this.semver, '<', comp.semver, options) && this.operator.startsWith('>') && comp.operator.startsWith('<')) {
            return true;
        }
        // opposite directions greater than
        if (cmp(this.semver, '>', comp.semver, options) && this.operator.startsWith('<') && comp.operator.startsWith('>')) {
            return true;
        }
        return false;
    }
}
module.exports = Comparator;
const parseOptions = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/parse-options.js [app-rsc] (ecmascript)");
const { safeRe: re, t } = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/re.js [app-rsc] (ecmascript)");
const cmp = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/cmp.js [app-rsc] (ecmascript)");
const debug = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/debug.js [app-rsc] (ecmascript)");
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/satisfies.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const satisfies = (version, range, options)=>{
    try {
        range = new Range(range, options);
    } catch (er) {
        return false;
    }
    return range.test(version);
};
module.exports = satisfies;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/to-comparators.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
// Mostly just for testing and legacy API reasons
const toComparators = (range, options)=>new Range(range, options).set.map((comp)=>comp.map((c)=>c.value).join(' ').trim().split(' '));
module.exports = toComparators;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/max-satisfying.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const maxSatisfying = (versions, range, options)=>{
    let max = null;
    let maxSV = null;
    let rangeObj = null;
    try {
        rangeObj = new Range(range, options);
    } catch (er) {
        return null;
    }
    versions.forEach((v)=>{
        if (rangeObj.test(v)) {
            // satisfies(v, range, options)
            if (!max || maxSV.compare(v) === -1) {
                // compare(max, v, true)
                max = v;
                maxSV = new SemVer(max, options);
            }
        }
    });
    return max;
};
module.exports = maxSatisfying;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/min-satisfying.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const minSatisfying = (versions, range, options)=>{
    let min = null;
    let minSV = null;
    let rangeObj = null;
    try {
        rangeObj = new Range(range, options);
    } catch (er) {
        return null;
    }
    versions.forEach((v)=>{
        if (rangeObj.test(v)) {
            // satisfies(v, range, options)
            if (!min || minSV.compare(v) === 1) {
                // compare(min, v, true)
                min = v;
                minSV = new SemVer(min, options);
            }
        }
    });
    return min;
};
module.exports = minSatisfying;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/min-version.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const gt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gt.js [app-rsc] (ecmascript)");
const minVersion = (range, loose)=>{
    range = new Range(range, loose);
    let minver = new SemVer('0.0.0');
    if (range.test(minver)) {
        return minver;
    }
    minver = new SemVer('0.0.0-0');
    if (range.test(minver)) {
        return minver;
    }
    minver = null;
    for(let i = 0; i < range.set.length; ++i){
        const comparators = range.set[i];
        let setMin = null;
        comparators.forEach((comparator)=>{
            // Clone to avoid manipulating the comparator's semver object.
            const compver = new SemVer(comparator.semver.version);
            switch(comparator.operator){
                case '>':
                    if (compver.prerelease.length === 0) {
                        compver.patch++;
                    } else {
                        compver.prerelease.push(0);
                    }
                    compver.raw = compver.format();
                /* fallthrough */ case '':
                case '>=':
                    if (!setMin || gt(compver, setMin)) {
                        setMin = compver;
                    }
                    break;
                case '<':
                case '<=':
                    break;
                /* istanbul ignore next */ default:
                    throw new Error(`Unexpected operation: ${comparator.operator}`);
            }
        });
        if (setMin && (!minver || gt(minver, setMin))) {
            minver = setMin;
        }
    }
    if (minver && range.test(minver)) {
        return minver;
    }
    return null;
};
module.exports = minVersion;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/valid.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const validRange = (range, options)=>{
    try {
        // Return '*' instead of '' so that truthiness works.
        // This will throw if it's invalid anyway
        return new Range(range, options).range || '*';
    } catch (er) {
        return null;
    }
};
module.exports = validRange;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/outside.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const Comparator = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/comparator.js [app-rsc] (ecmascript)");
const { ANY } = Comparator;
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const satisfies = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/satisfies.js [app-rsc] (ecmascript)");
const gt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gt.js [app-rsc] (ecmascript)");
const lt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lt.js [app-rsc] (ecmascript)");
const lte = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lte.js [app-rsc] (ecmascript)");
const gte = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gte.js [app-rsc] (ecmascript)");
const outside = (version, range, hilo, options)=>{
    version = new SemVer(version, options);
    range = new Range(range, options);
    let gtfn, ltefn, ltfn, comp, ecomp;
    switch(hilo){
        case '>':
            gtfn = gt;
            ltefn = lte;
            ltfn = lt;
            comp = '>';
            ecomp = '>=';
            break;
        case '<':
            gtfn = lt;
            ltefn = gte;
            ltfn = gt;
            comp = '<';
            ecomp = '<=';
            break;
        default:
            throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    // If it satisfies the range it is not outside
    if (satisfies(version, range, options)) {
        return false;
    }
    // From now on, variable terms are as if we're in "gtr" mode.
    // but note that everything is flipped for the "ltr" function.
    for(let i = 0; i < range.set.length; ++i){
        const comparators = range.set[i];
        let high = null;
        let low = null;
        comparators.forEach((comparator)=>{
            if (comparator.semver === ANY) {
                comparator = new Comparator('>=0.0.0');
            }
            high = high || comparator;
            low = low || comparator;
            if (gtfn(comparator.semver, high.semver, options)) {
                high = comparator;
            } else if (ltfn(comparator.semver, low.semver, options)) {
                low = comparator;
            }
        });
        // If the edge version comparator has a operator then our version
        // isn't outside it
        if (high.operator === comp || high.operator === ecomp) {
            return false;
        }
        // If the lowest version comparator has an operator and our version
        // is less than it then it isn't higher than the range
        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
            return false;
        } else if (low.operator === ecomp && ltfn(version, low.semver)) {
            return false;
        }
    }
    return true;
};
module.exports = outside;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/gtr.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Determine if version is greater than all the versions possible in the range.
const outside = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/outside.js [app-rsc] (ecmascript)");
const gtr = (version, range, options)=>outside(version, range, '>', options);
module.exports = gtr;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/ltr.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const outside = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/outside.js [app-rsc] (ecmascript)");
// Determine if version is less than all the versions possible in the range
const ltr = (version, range, options)=>outside(version, range, '<', options);
module.exports = ltr;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/intersects.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const intersects = (r1, r2, options)=>{
    r1 = new Range(r1, options);
    r2 = new Range(r2, options);
    return r1.intersects(r2, options);
};
module.exports = intersects;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/simplify.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// given a set of versions and a range, create a "simplified" range
// that includes the same versions that the original range does
// If the original range is shorter than the simplified one, return that.
const satisfies = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/satisfies.js [app-rsc] (ecmascript)");
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
module.exports = (versions, range, options)=>{
    const set = [];
    let first = null;
    let prev = null;
    const v = versions.sort((a, b)=>compare(a, b, options));
    for (const version of v){
        const included = satisfies(version, range, options);
        if (included) {
            prev = version;
            if (!first) {
                first = version;
            }
        } else {
            if (prev) {
                set.push([
                    first,
                    prev
                ]);
            }
            prev = null;
            first = null;
        }
    }
    if (first) {
        set.push([
            first,
            null
        ]);
    }
    const ranges = [];
    for (const [min, max] of set){
        if (min === max) {
            ranges.push(min);
        } else if (!max && min === v[0]) {
            ranges.push('*');
        } else if (!max) {
            ranges.push(`>=${min}`);
        } else if (min === v[0]) {
            ranges.push(`<=${max}`);
        } else {
            ranges.push(`${min} - ${max}`);
        }
    }
    const simplified = ranges.join(' || ');
    const original = typeof range.raw === 'string' ? range.raw : String(range);
    return simplified.length < original.length ? simplified : range;
};
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/subset.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const Comparator = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/comparator.js [app-rsc] (ecmascript)");
const { ANY } = Comparator;
const satisfies = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/satisfies.js [app-rsc] (ecmascript)");
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:
// - Every simple range `r1, r2, ...` is a null set, OR
// - Every simple range `r1, r2, ...` which is not a null set is a subset of
//   some `R1, R2, ...`
//
// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:
// - If c is only the ANY comparator
//   - If C is only the ANY comparator, return true
//   - Else if in prerelease mode, return false
//   - else replace c with `[>=0.0.0]`
// - If C is only the ANY comparator
//   - if in prerelease mode, return true
//   - else replace C with `[>=0.0.0]`
// - Let EQ be the set of = comparators in c
// - If EQ is more than one, return true (null set)
// - Let GT be the highest > or >= comparator in c
// - Let LT be the lowest < or <= comparator in c
// - If GT and LT, and GT.semver > LT.semver, return true (null set)
// - If any C is a = range, and GT or LT are set, return false
// - If EQ
//   - If GT, and EQ does not satisfy GT, return true (null set)
//   - If LT, and EQ does not satisfy LT, return true (null set)
//   - If EQ satisfies every C, return true
//   - Else return false
// - If GT
//   - If GT.semver is lower than any > or >= comp in C, return false
//   - If GT is >=, and GT.semver does not satisfy every C, return false
//   - If GT.semver has a prerelease, and not in prerelease mode
//     - If no C has a prerelease and the GT.semver tuple, return false
// - If LT
//   - If LT.semver is greater than any < or <= comp in C, return false
//   - If LT is <=, and LT.semver does not satisfy every C, return false
//   - If GT.semver has a prerelease, and not in prerelease mode
//     - If no C has a prerelease and the LT.semver tuple, return false
// - Else return true
const subset = (sub, dom, options = {})=>{
    if (sub === dom) {
        return true;
    }
    sub = new Range(sub, options);
    dom = new Range(dom, options);
    let sawNonNull = false;
    OUTER: for (const simpleSub of sub.set){
        for (const simpleDom of dom.set){
            const isSub = simpleSubset(simpleSub, simpleDom, options);
            sawNonNull = sawNonNull || isSub !== null;
            if (isSub) {
                continue OUTER;
            }
        }
        // the null set is a subset of everything, but null simple ranges in
        // a complex range should be ignored.  so if we saw a non-null range,
        // then we know this isn't a subset, but if EVERY simple range was null,
        // then it is a subset.
        if (sawNonNull) {
            return false;
        }
    }
    return true;
};
const minimumVersionWithPreRelease = [
    new Comparator('>=0.0.0-0')
];
const minimumVersion = [
    new Comparator('>=0.0.0')
];
const simpleSubset = (sub, dom, options)=>{
    if (sub === dom) {
        return true;
    }
    if (sub.length === 1 && sub[0].semver === ANY) {
        if (dom.length === 1 && dom[0].semver === ANY) {
            return true;
        } else if (options.includePrerelease) {
            sub = minimumVersionWithPreRelease;
        } else {
            sub = minimumVersion;
        }
    }
    if (dom.length === 1 && dom[0].semver === ANY) {
        if (options.includePrerelease) {
            return true;
        } else {
            dom = minimumVersion;
        }
    }
    const eqSet = new Set();
    let gt, lt;
    for (const c of sub){
        if (c.operator === '>' || c.operator === '>=') {
            gt = higherGT(gt, c, options);
        } else if (c.operator === '<' || c.operator === '<=') {
            lt = lowerLT(lt, c, options);
        } else {
            eqSet.add(c.semver);
        }
    }
    if (eqSet.size > 1) {
        return null;
    }
    let gtltComp;
    if (gt && lt) {
        gtltComp = compare(gt.semver, lt.semver, options);
        if (gtltComp > 0) {
            return null;
        } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {
            return null;
        }
    }
    // will iterate one or zero times
    for (const eq of eqSet){
        if (gt && !satisfies(eq, String(gt), options)) {
            return null;
        }
        if (lt && !satisfies(eq, String(lt), options)) {
            return null;
        }
        for (const c of dom){
            if (!satisfies(eq, String(c), options)) {
                return false;
            }
        }
        return true;
    }
    let higher, lower;
    let hasDomLT, hasDomGT;
    // if the subset has a prerelease, we need a comparator in the superset
    // with the same tuple and a prerelease, or it's not a subset
    let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;
    let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;
    // exception: <1.2.3-0 is the same as <1.2.3
    if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {
        needDomLTPre = false;
    }
    for (const c of dom){
        hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>=';
        hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<=';
        if (gt) {
            if (needDomGTPre) {
                if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {
                    needDomGTPre = false;
                }
            }
            if (c.operator === '>' || c.operator === '>=') {
                higher = higherGT(gt, c, options);
                if (higher === c && higher !== gt) {
                    return false;
                }
            } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {
                return false;
            }
        }
        if (lt) {
            if (needDomLTPre) {
                if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {
                    needDomLTPre = false;
                }
            }
            if (c.operator === '<' || c.operator === '<=') {
                lower = lowerLT(lt, c, options);
                if (lower === c && lower !== lt) {
                    return false;
                }
            } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {
                return false;
            }
        }
        if (!c.operator && (lt || gt) && gtltComp !== 0) {
            return false;
        }
    }
    // if there was a < or >, and nothing in the dom, then must be false
    // UNLESS it was limited by another range in the other direction.
    // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0
    if (gt && hasDomLT && !lt && gtltComp !== 0) {
        return false;
    }
    if (lt && hasDomGT && !gt && gtltComp !== 0) {
        return false;
    }
    // we needed a prerelease range in a specific tuple, but didn't get one
    // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,
    // because it includes prereleases in the 1.2.3 tuple
    if (needDomGTPre || needDomLTPre) {
        return false;
    }
    return true;
};
// >=1.2.3 is lower than >1.2.3
const higherGT = (a, b, options)=>{
    if (!a) {
        return b;
    }
    const comp = compare(a.semver, b.semver, options);
    return comp > 0 ? a : comp < 0 ? b : b.operator === '>' && a.operator === '>=' ? b : a;
};
// <=1.2.3 is higher than <1.2.3
const lowerLT = (a, b, options)=>{
    if (!a) {
        return b;
    }
    const comp = compare(a.semver, b.semver, options);
    return comp < 0 ? a : comp > 0 ? b : b.operator === '<' && a.operator === '<=' ? b : a;
};
module.exports = subset;
}}),
"[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// just pre-load all the stuff that index.js lazily exports
const internalRe = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/re.js [app-rsc] (ecmascript)");
const constants = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/constants.js [app-rsc] (ecmascript)");
const SemVer = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/semver.js [app-rsc] (ecmascript)");
const identifiers = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/internal/identifiers.js [app-rsc] (ecmascript)");
const parse = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/parse.js [app-rsc] (ecmascript)");
const valid = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/valid.js [app-rsc] (ecmascript)");
const clean = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/clean.js [app-rsc] (ecmascript)");
const inc = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/inc.js [app-rsc] (ecmascript)");
const diff = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/diff.js [app-rsc] (ecmascript)");
const major = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/major.js [app-rsc] (ecmascript)");
const minor = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/minor.js [app-rsc] (ecmascript)");
const patch = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/patch.js [app-rsc] (ecmascript)");
const prerelease = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/prerelease.js [app-rsc] (ecmascript)");
const compare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare.js [app-rsc] (ecmascript)");
const rcompare = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/rcompare.js [app-rsc] (ecmascript)");
const compareLoose = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare-loose.js [app-rsc] (ecmascript)");
const compareBuild = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/compare-build.js [app-rsc] (ecmascript)");
const sort = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/sort.js [app-rsc] (ecmascript)");
const rsort = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/rsort.js [app-rsc] (ecmascript)");
const gt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gt.js [app-rsc] (ecmascript)");
const lt = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lt.js [app-rsc] (ecmascript)");
const eq = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/eq.js [app-rsc] (ecmascript)");
const neq = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/neq.js [app-rsc] (ecmascript)");
const gte = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/gte.js [app-rsc] (ecmascript)");
const lte = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/lte.js [app-rsc] (ecmascript)");
const cmp = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/cmp.js [app-rsc] (ecmascript)");
const coerce = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/coerce.js [app-rsc] (ecmascript)");
const Comparator = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/comparator.js [app-rsc] (ecmascript)");
const Range = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/classes/range.js [app-rsc] (ecmascript)");
const satisfies = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/functions/satisfies.js [app-rsc] (ecmascript)");
const toComparators = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/to-comparators.js [app-rsc] (ecmascript)");
const maxSatisfying = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/max-satisfying.js [app-rsc] (ecmascript)");
const minSatisfying = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/min-satisfying.js [app-rsc] (ecmascript)");
const minVersion = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/min-version.js [app-rsc] (ecmascript)");
const validRange = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/valid.js [app-rsc] (ecmascript)");
const outside = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/outside.js [app-rsc] (ecmascript)");
const gtr = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/gtr.js [app-rsc] (ecmascript)");
const ltr = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/ltr.js [app-rsc] (ecmascript)");
const intersects = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/intersects.js [app-rsc] (ecmascript)");
const simplifyRange = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/simplify.js [app-rsc] (ecmascript)");
const subset = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/ranges/subset.js [app-rsc] (ecmascript)");
module.exports = {
    parse,
    valid,
    clean,
    inc,
    diff,
    major,
    minor,
    patch,
    prerelease,
    compare,
    rcompare,
    compareLoose,
    compareBuild,
    sort,
    rsort,
    gt,
    lt,
    eq,
    neq,
    gte,
    lte,
    cmp,
    coerce,
    Comparator,
    Range,
    satisfies,
    toComparators,
    maxSatisfying,
    minSatisfying,
    minVersion,
    validRange,
    outside,
    gtr,
    ltr,
    intersects,
    simplifyRange,
    subset,
    SemVer,
    re: internalRe.re,
    src: internalRe.src,
    tokens: internalRe.t,
    SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
    RELEASE_TYPES: constants.RELEASE_TYPES,
    compareIdentifiers: identifiers.compareIdentifiers,
    rcompareIdentifiers: identifiers.rcompareIdentifiers
};
}}),
"[project]/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
module.exports = function(Yallist) {
    Yallist.prototype[Symbol.iterator] = function*() {
        for(let walker = this.head; walker; walker = walker.next){
            yield walker.value;
        }
    };
};
}}),
"[project]/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
module.exports = Yallist;
Yallist.Node = Node;
Yallist.create = Yallist;
function Yallist(list) {
    var self = this;
    if (!(self instanceof Yallist)) {
        self = new Yallist();
    }
    self.tail = null;
    self.head = null;
    self.length = 0;
    if (list && typeof list.forEach === 'function') {
        list.forEach(function(item) {
            self.push(item);
        });
    } else if (arguments.length > 0) {
        for(var i = 0, l = arguments.length; i < l; i++){
            self.push(arguments[i]);
        }
    }
    return self;
}
Yallist.prototype.removeNode = function(node) {
    if (node.list !== this) {
        throw new Error('removing node which does not belong to this list');
    }
    var next = node.next;
    var prev = node.prev;
    if (next) {
        next.prev = prev;
    }
    if (prev) {
        prev.next = next;
    }
    if (node === this.head) {
        this.head = next;
    }
    if (node === this.tail) {
        this.tail = prev;
    }
    node.list.length--;
    node.next = null;
    node.prev = null;
    node.list = null;
    return next;
};
Yallist.prototype.unshiftNode = function(node) {
    if (node === this.head) {
        return;
    }
    if (node.list) {
        node.list.removeNode(node);
    }
    var head = this.head;
    node.list = this;
    node.next = head;
    if (head) {
        head.prev = node;
    }
    this.head = node;
    if (!this.tail) {
        this.tail = node;
    }
    this.length++;
};
Yallist.prototype.pushNode = function(node) {
    if (node === this.tail) {
        return;
    }
    if (node.list) {
        node.list.removeNode(node);
    }
    var tail = this.tail;
    node.list = this;
    node.prev = tail;
    if (tail) {
        tail.next = node;
    }
    this.tail = node;
    if (!this.head) {
        this.head = node;
    }
    this.length++;
};
Yallist.prototype.push = function() {
    for(var i = 0, l = arguments.length; i < l; i++){
        push(this, arguments[i]);
    }
    return this.length;
};
Yallist.prototype.unshift = function() {
    for(var i = 0, l = arguments.length; i < l; i++){
        unshift(this, arguments[i]);
    }
    return this.length;
};
Yallist.prototype.pop = function() {
    if (!this.tail) {
        return undefined;
    }
    var res = this.tail.value;
    this.tail = this.tail.prev;
    if (this.tail) {
        this.tail.next = null;
    } else {
        this.head = null;
    }
    this.length--;
    return res;
};
Yallist.prototype.shift = function() {
    if (!this.head) {
        return undefined;
    }
    var res = this.head.value;
    this.head = this.head.next;
    if (this.head) {
        this.head.prev = null;
    } else {
        this.tail = null;
    }
    this.length--;
    return res;
};
Yallist.prototype.forEach = function(fn, thisp) {
    thisp = thisp || this;
    for(var walker = this.head, i = 0; walker !== null; i++){
        fn.call(thisp, walker.value, i, this);
        walker = walker.next;
    }
};
Yallist.prototype.forEachReverse = function(fn, thisp) {
    thisp = thisp || this;
    for(var walker = this.tail, i = this.length - 1; walker !== null; i--){
        fn.call(thisp, walker.value, i, this);
        walker = walker.prev;
    }
};
Yallist.prototype.get = function(n) {
    for(var i = 0, walker = this.head; walker !== null && i < n; i++){
        // abort out of the list early if we hit a cycle
        walker = walker.next;
    }
    if (i === n && walker !== null) {
        return walker.value;
    }
};
Yallist.prototype.getReverse = function(n) {
    for(var i = 0, walker = this.tail; walker !== null && i < n; i++){
        // abort out of the list early if we hit a cycle
        walker = walker.prev;
    }
    if (i === n && walker !== null) {
        return walker.value;
    }
};
Yallist.prototype.map = function(fn, thisp) {
    thisp = thisp || this;
    var res = new Yallist();
    for(var walker = this.head; walker !== null;){
        res.push(fn.call(thisp, walker.value, this));
        walker = walker.next;
    }
    return res;
};
Yallist.prototype.mapReverse = function(fn, thisp) {
    thisp = thisp || this;
    var res = new Yallist();
    for(var walker = this.tail; walker !== null;){
        res.push(fn.call(thisp, walker.value, this));
        walker = walker.prev;
    }
    return res;
};
Yallist.prototype.reduce = function(fn, initial) {
    var acc;
    var walker = this.head;
    if (arguments.length > 1) {
        acc = initial;
    } else if (this.head) {
        walker = this.head.next;
        acc = this.head.value;
    } else {
        throw new TypeError('Reduce of empty list with no initial value');
    }
    for(var i = 0; walker !== null; i++){
        acc = fn(acc, walker.value, i);
        walker = walker.next;
    }
    return acc;
};
Yallist.prototype.reduceReverse = function(fn, initial) {
    var acc;
    var walker = this.tail;
    if (arguments.length > 1) {
        acc = initial;
    } else if (this.tail) {
        walker = this.tail.prev;
        acc = this.tail.value;
    } else {
        throw new TypeError('Reduce of empty list with no initial value');
    }
    for(var i = this.length - 1; walker !== null; i--){
        acc = fn(acc, walker.value, i);
        walker = walker.prev;
    }
    return acc;
};
Yallist.prototype.toArray = function() {
    var arr = new Array(this.length);
    for(var i = 0, walker = this.head; walker !== null; i++){
        arr[i] = walker.value;
        walker = walker.next;
    }
    return arr;
};
Yallist.prototype.toArrayReverse = function() {
    var arr = new Array(this.length);
    for(var i = 0, walker = this.tail; walker !== null; i++){
        arr[i] = walker.value;
        walker = walker.prev;
    }
    return arr;
};
Yallist.prototype.slice = function(from, to) {
    to = to || this.length;
    if (to < 0) {
        to += this.length;
    }
    from = from || 0;
    if (from < 0) {
        from += this.length;
    }
    var ret = new Yallist();
    if (to < from || to < 0) {
        return ret;
    }
    if (from < 0) {
        from = 0;
    }
    if (to > this.length) {
        to = this.length;
    }
    for(var i = 0, walker = this.head; walker !== null && i < from; i++){
        walker = walker.next;
    }
    for(; walker !== null && i < to; i++, walker = walker.next){
        ret.push(walker.value);
    }
    return ret;
};
Yallist.prototype.sliceReverse = function(from, to) {
    to = to || this.length;
    if (to < 0) {
        to += this.length;
    }
    from = from || 0;
    if (from < 0) {
        from += this.length;
    }
    var ret = new Yallist();
    if (to < from || to < 0) {
        return ret;
    }
    if (from < 0) {
        from = 0;
    }
    if (to > this.length) {
        to = this.length;
    }
    for(var i = this.length, walker = this.tail; walker !== null && i > to; i--){
        walker = walker.prev;
    }
    for(; walker !== null && i > from; i--, walker = walker.prev){
        ret.push(walker.value);
    }
    return ret;
};
Yallist.prototype.splice = function(start, deleteCount, ...nodes) {
    if (start > this.length) {
        start = this.length - 1;
    }
    if (start < 0) {
        start = this.length + start;
    }
    for(var i = 0, walker = this.head; walker !== null && i < start; i++){
        walker = walker.next;
    }
    var ret = [];
    for(var i = 0; walker && i < deleteCount; i++){
        ret.push(walker.value);
        walker = this.removeNode(walker);
    }
    if (walker === null) {
        walker = this.tail;
    }
    if (walker !== this.head && walker !== this.tail) {
        walker = walker.prev;
    }
    for(var i = 0; i < nodes.length; i++){
        walker = insert(this, walker, nodes[i]);
    }
    return ret;
};
Yallist.prototype.reverse = function() {
    var head = this.head;
    var tail = this.tail;
    for(var walker = head; walker !== null; walker = walker.prev){
        var p = walker.prev;
        walker.prev = walker.next;
        walker.next = p;
    }
    this.head = tail;
    this.tail = head;
    return this;
};
function insert(self, node, value) {
    var inserted = node === self.head ? new Node(value, null, node, self) : new Node(value, node, node.next, self);
    if (inserted.next === null) {
        self.tail = inserted;
    }
    if (inserted.prev === null) {
        self.head = inserted;
    }
    self.length++;
    return inserted;
}
function push(self, item) {
    self.tail = new Node(item, self.tail, null, self);
    if (!self.head) {
        self.head = self.tail;
    }
    self.length++;
}
function unshift(self, item) {
    self.head = new Node(item, null, self.head, self);
    if (!self.tail) {
        self.tail = self.head;
    }
    self.length++;
}
function Node(value, prev, next, list) {
    if (!(this instanceof Node)) {
        return new Node(value, prev, next, list);
    }
    this.list = list;
    this.value = value;
    if (prev) {
        prev.next = this;
        this.prev = prev;
    } else {
        this.prev = null;
    }
    if (next) {
        next.prev = this;
        this.next = next;
    } else {
        this.next = null;
    }
}
try {
    // add if support for Symbol.iterator is present
    __turbopack_require__("[project]/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js [app-rsc] (ecmascript)")(Yallist);
} catch (er) {}
}}),
"[project]/node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
// A linked list to keep track of recently-used-ness
const Yallist = __turbopack_require__("[project]/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js [app-rsc] (ecmascript)");
const MAX = Symbol('max');
const LENGTH = Symbol('length');
const LENGTH_CALCULATOR = Symbol('lengthCalculator');
const ALLOW_STALE = Symbol('allowStale');
const MAX_AGE = Symbol('maxAge');
const DISPOSE = Symbol('dispose');
const NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet');
const LRU_LIST = Symbol('lruList');
const CACHE = Symbol('cache');
const UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet');
const naiveLength = ()=>1;
// lruList is a yallist where the head is the youngest
// item, and the tail is the oldest.  the list contains the Hit
// objects as the entries.
// Each Hit object has a reference to its Yallist.Node.  This
// never changes.
//
// cache is a Map (or PseudoMap) that matches the keys to
// the Yallist.Node object.
class LRUCache {
    constructor(options){
        if (typeof options === 'number') options = {
            max: options
        };
        if (!options) options = {};
        if (options.max && (typeof options.max !== 'number' || options.max < 0)) throw new TypeError('max must be a non-negative number');
        // Kind of weird to have a default max of Infinity, but oh well.
        const max = this[MAX] = options.max || Infinity;
        const lc = options.length || naiveLength;
        this[LENGTH_CALCULATOR] = typeof lc !== 'function' ? naiveLength : lc;
        this[ALLOW_STALE] = options.stale || false;
        if (options.maxAge && typeof options.maxAge !== 'number') throw new TypeError('maxAge must be a number');
        this[MAX_AGE] = options.maxAge || 0;
        this[DISPOSE] = options.dispose;
        this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
        this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
        this.reset();
    }
    // resize the cache when the max changes.
    set max(mL) {
        if (typeof mL !== 'number' || mL < 0) throw new TypeError('max must be a non-negative number');
        this[MAX] = mL || Infinity;
        trim(this);
    }
    get max() {
        return this[MAX];
    }
    set allowStale(allowStale) {
        this[ALLOW_STALE] = !!allowStale;
    }
    get allowStale() {
        return this[ALLOW_STALE];
    }
    set maxAge(mA) {
        if (typeof mA !== 'number') throw new TypeError('maxAge must be a non-negative number');
        this[MAX_AGE] = mA;
        trim(this);
    }
    get maxAge() {
        return this[MAX_AGE];
    }
    // resize the cache when the lengthCalculator changes.
    set lengthCalculator(lC) {
        if (typeof lC !== 'function') lC = naiveLength;
        if (lC !== this[LENGTH_CALCULATOR]) {
            this[LENGTH_CALCULATOR] = lC;
            this[LENGTH] = 0;
            this[LRU_LIST].forEach((hit)=>{
                hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
                this[LENGTH] += hit.length;
            });
        }
        trim(this);
    }
    get lengthCalculator() {
        return this[LENGTH_CALCULATOR];
    }
    get length() {
        return this[LENGTH];
    }
    get itemCount() {
        return this[LRU_LIST].length;
    }
    rforEach(fn, thisp) {
        thisp = thisp || this;
        for(let walker = this[LRU_LIST].tail; walker !== null;){
            const prev = walker.prev;
            forEachStep(this, fn, walker, thisp);
            walker = prev;
        }
    }
    forEach(fn, thisp) {
        thisp = thisp || this;
        for(let walker = this[LRU_LIST].head; walker !== null;){
            const next = walker.next;
            forEachStep(this, fn, walker, thisp);
            walker = next;
        }
    }
    keys() {
        return this[LRU_LIST].toArray().map((k)=>k.key);
    }
    values() {
        return this[LRU_LIST].toArray().map((k)=>k.value);
    }
    reset() {
        if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
            this[LRU_LIST].forEach((hit)=>this[DISPOSE](hit.key, hit.value));
        }
        this[CACHE] = new Map() // hash of items by key
        ;
        this[LRU_LIST] = new Yallist() // list of items in order of use recency
        ;
        this[LENGTH] = 0 // length of items in the list
        ;
    }
    dump() {
        return this[LRU_LIST].map((hit)=>isStale(this, hit) ? false : {
                k: hit.key,
                v: hit.value,
                e: hit.now + (hit.maxAge || 0)
            }).toArray().filter((h)=>h);
    }
    dumpLru() {
        return this[LRU_LIST];
    }
    set(key, value, maxAge) {
        maxAge = maxAge || this[MAX_AGE];
        if (maxAge && typeof maxAge !== 'number') throw new TypeError('maxAge must be a number');
        const now = maxAge ? Date.now() : 0;
        const len = this[LENGTH_CALCULATOR](value, key);
        if (this[CACHE].has(key)) {
            if (len > this[MAX]) {
                del(this, this[CACHE].get(key));
                return false;
            }
            const node = this[CACHE].get(key);
            const item = node.value;
            // dispose of the old one before overwriting
            // split out into 2 ifs for better coverage tracking
            if (this[DISPOSE]) {
                if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);
            }
            item.now = now;
            item.maxAge = maxAge;
            item.value = value;
            this[LENGTH] += len - item.length;
            item.length = len;
            this.get(key);
            trim(this);
            return true;
        }
        const hit = new Entry(key, value, len, now, maxAge);
        // oversized objects fall out of cache automatically.
        if (hit.length > this[MAX]) {
            if (this[DISPOSE]) this[DISPOSE](key, value);
            return false;
        }
        this[LENGTH] += hit.length;
        this[LRU_LIST].unshift(hit);
        this[CACHE].set(key, this[LRU_LIST].head);
        trim(this);
        return true;
    }
    has(key) {
        if (!this[CACHE].has(key)) return false;
        const hit = this[CACHE].get(key).value;
        return !isStale(this, hit);
    }
    get(key) {
        return get(this, key, true);
    }
    peek(key) {
        return get(this, key, false);
    }
    pop() {
        const node = this[LRU_LIST].tail;
        if (!node) return null;
        del(this, node);
        return node.value;
    }
    del(key) {
        del(this, this[CACHE].get(key));
    }
    load(arr) {
        // reset the cache
        this.reset();
        const now = Date.now();
        // A previous serialized cache has the most recent items first
        for(let l = arr.length - 1; l >= 0; l--){
            const hit = arr[l];
            const expiresAt = hit.e || 0;
            if (expiresAt === 0) // the item was created without expiration in a non aged cache
            this.set(hit.k, hit.v);
            else {
                const maxAge = expiresAt - now;
                // dont add already expired items
                if (maxAge > 0) {
                    this.set(hit.k, hit.v, maxAge);
                }
            }
        }
    }
    prune() {
        this[CACHE].forEach((value, key)=>get(this, key, false));
    }
}
const get = (self, key, doUse)=>{
    const node = self[CACHE].get(key);
    if (node) {
        const hit = node.value;
        if (isStale(self, hit)) {
            del(self, node);
            if (!self[ALLOW_STALE]) return undefined;
        } else {
            if (doUse) {
                if (self[UPDATE_AGE_ON_GET]) node.value.now = Date.now();
                self[LRU_LIST].unshiftNode(node);
            }
        }
        return hit.value;
    }
};
const isStale = (self, hit)=>{
    if (!hit || !hit.maxAge && !self[MAX_AGE]) return false;
    const diff = Date.now() - hit.now;
    return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];
};
const trim = (self)=>{
    if (self[LENGTH] > self[MAX]) {
        for(let walker = self[LRU_LIST].tail; self[LENGTH] > self[MAX] && walker !== null;){
            // We know that we're about to delete this one, and also
            // what the next least recently used key will be, so just
            // go ahead and set it now.
            const prev = walker.prev;
            del(self, walker);
            walker = prev;
        }
    }
};
const del = (self, node)=>{
    if (node) {
        const hit = node.value;
        if (self[DISPOSE]) self[DISPOSE](hit.key, hit.value);
        self[LENGTH] -= hit.length;
        self[CACHE].delete(hit.key);
        self[LRU_LIST].removeNode(node);
    }
};
class Entry {
    constructor(key, value, length, now, maxAge){
        this.key = key;
        this.value = value;
        this.length = length;
        this.now = now;
        this.maxAge = maxAge || 0;
    }
}
const forEachStep = (self, fn, node, thisp)=>{
    let hit = node.value;
    if (isStale(self, hit)) {
        del(self, node);
        if (!self[ALLOW_STALE]) hit = undefined;
    }
    if (hit) fn.call(thisp, hit.value, hit.key, self);
};
module.exports = LRUCache;
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/role.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Function to manage Request Logic Role
 */ exports.default = {
    getRole
};
/**
 * Function to get the role of an identity in an object
 *
 * @param any parameters the object to check
 * @param IIdentity identity the identity to check
 *
 * @returns Types.ROLE the role of identity in parameters
 */ function getRole(identity, parameters) {
    if (parameters.payee && (0, utils_1.areEqualIdentities)(parameters.payee, identity)) {
        return types_1.RequestLogicTypes.ROLE.PAYEE;
    }
    if (parameters.payer && (0, utils_1.areEqualIdentities)(parameters.payer, identity)) {
        return types_1.RequestLogicTypes.ROLE.PAYER;
    }
    return types_1.RequestLogicTypes.ROLE.THIRD_PARTY;
} //# sourceMappingURL=role.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/config.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    specificationVersion: {
        current: '2.0.3',
        exceptions: []
    }
}; //# sourceMappingURL=config.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const Semver = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/index.js [app-rsc] (ecmascript)");
const config_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/config.js [app-rsc] (ecmascript)");
/**
 * Function to manage Request versions specification supported by this implementation
 */ exports.default = {
    currentVersion: config_1.default.specificationVersion.current,
    isSupported
};
/**
 * Function to check if a version of request is supported by this library
 *
 * version is not supported if higher than the current one
 * version is not supported if the major is different
 * version is not supported if the version is in the exceptions array defined in config.json
 *
 * @param string version the version to check
 * @param IVersionSupportConfig versionConfiguration override the default configuration only for this check
 *
 * @returns boolean true, if version is supported false otherwise
 */ function isSupported(version, versionConfiguration) {
    versionConfiguration = versionConfiguration || config_1.default.specificationVersion;
    return !!Semver.valid(version) && Semver.diff(version, versionConfiguration.current) !== 'major' && Semver.lte(version, versionConfiguration.current) && versionConfiguration.exceptions.indexOf(version) === -1;
} //# sourceMappingURL=version.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const Semver = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/index.js [app-rsc] (ecmascript)");
const role_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/role.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Function to manage Request logic action (object that will be interpreted to create or modify a request)
 */ exports.default = {
    createAction,
    getRequestId,
    getRoleInAction,
    getRoleInUnsignedAction,
    getSignerIdentityFromAction,
    getVersionFromAction,
    isActionVersionSupported
};
/**
 * Creates an action from an unsigned action data and a signature parameters object
 *
 * @notice it will sign the hash (keccak256) of the action data
 *
 * @param IUnsignedAction unsignedAction The unsigned action to sign
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction the action with the signature
 */ function createAction(unsignedAction, signerIdentity, signatureProvider) {
    return signatureProvider.sign(unsignedAction, signerIdentity);
}
/**
 * Function to get the signer identity from a action
 *
 * @param ISignatureParameters action action to check
 *
 * @returns RequestEnum.ROLE the role of the signer (payee, payer or third party)
 */ function getSignerIdentityFromAction(action) {
    return (0, utils_1.recoverSigner)(action);
}
/**
 * Function to get the role of an identity in an action
 *
 * @param IIdentity identity the identity to check
 * @param IAction action the action
 *
 * @returns RequestEnum.ROLE the role of the signer
 */ function getRoleInAction(identity, action) {
    return getRoleInUnsignedAction(identity, action.data);
}
/**
 * Function to get the role of an identity in an unsigned action
 *
 * @param IIdentity identity the identity to check
 * @param IUnsignedAction unsignedAction the unsigned action
 *
 * @returns RequestEnum.ROLE the role of the signer
 */ function getRoleInUnsignedAction(identity, unsignedAction) {
    return role_1.default.getRole(identity, unsignedAction.parameters);
}
/**
 * Function to create a requestId from the creation action or get the requestId parameter otherwise
 *
 * @param IAction creation action of the request
 *
 * @returns RequestIdType the requestId
 */ function getRequestId(action) {
    // if a creation we need to compute the hash
    if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.CREATE) {
        return getActionHash(action);
    }
    return action.data.parameters.requestId;
}
/**
 * Function to check if an action is supported
 *
 * @param IAction action action to check
 *
 * @returns boolean true, if action is supported false otherwise
 */ function isActionVersionSupported(action) {
    return version_1.default.isSupported(action.data.version);
}
/**
 * Function to get the version of an action
 *
 * @param IAction action action to check
 *
 * @returns string version
 */ function getVersionFromAction(action) {
    return action.data.version;
}
/**
 * Function to get the hash of an action
 *
 * @param IAction action action to get the hash
 *
 * @returns string the hash formatted
 */ function getActionHash(action) {
    // Before the version 2.0.0, the hash was computed without the signature
    if (Semver.lte(action.data.version, '2.0.0')) {
        return MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(action.data));
    }
    return MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(action));
} //# sourceMappingURL=action.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const role_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/role.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Module to manage a request
 */ exports.default = {
    checkRequest,
    getRoleInRequest,
    pushExtensionsData
};
/**
 * Function to get the role of an identity in a request
 *
 * @param IIdentity identity the identity to check
 * @param IRequest request the request
 *
 * @returns Types.ROLE the role of the signer (payee, payer or third party)
 */ function getRoleInRequest(identity, request) {
    return role_1.default.getRole(identity, request);
}
/**
 * Function to check if a request context is valid
 *
 * @param IRequest request the request to check
 *
 * @returns boolean true if the request is valid, throw otherwise
 */ function checkRequest(request) {
    if (!request.version) {
        throw Error('request.version is missing');
    }
    if (!request.currency) {
        throw Error('request.currency is missing');
    }
    if (!request.requestId) {
        throw Error('request.requestId is missing');
    }
    if (!request.state) {
        throw Error('request.state is missing');
    }
    if (!request.creator) {
        throw Error('request.creator is missing');
    }
    if (!request.payee && !request.payer) {
        throw Error('request.payee and request.payer are missing');
    }
    if (request.creator.type !== types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS) {
        throw Error('request.creator.type not supported');
    }
    if (request.payee && request.payee.type !== types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS) {
        throw Error('request.payee.type not supported');
    }
    if (request.payer && request.payer.type !== types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS) {
        throw Error('request.payer.type not supported');
    }
    if (!(0, utils_1.isValidAmount)(request.expectedAmount)) {
        throw Error('expectedAmount must be a positive integer');
    }
    return true;
}
/**
 * Function to simply add the extensions data to the request
 *
 * @param Types.IRequest requestContext The current request context
 * @param Types.IRequest extensionsData The extensions data to add to the request
 *
 * @returns Types.IRequest The request context with the extensions data added
 */ function pushExtensionsData(requestContext, extensionsData) {
    if (extensionsData) {
        requestContext.extensionsData = (requestContext.extensionsData || []).concat(extensionsData);
    }
    return requestContext;
} //# sourceMappingURL=request.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/accept.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of the action accept from request logic specification
 */ exports.default = {
    applyActionToRequest,
    format
};
/**
 * Function to format an action to accept a Request
 *
 * @param acceptParameters parameters to accept a request
 * @param IIdentity Identity of the signer
 * @param ISignatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(acceptParameters, signerIdentity, signatureProvider) {
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.ACCEPT,
        parameters: acceptParameters,
        version: version_1.default.currentVersion
    };
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to apply an Accept action on a request
 *
 * @param Types.IAction action  the action to apply
 *
 * @returns Types.IRequest the new request
 */ function applyActionToRequest(action, timestamp, request) {
    if (!action.data.parameters.requestId) {
        throw new Error('requestId must be given');
    }
    if (!request.payer) {
        throw new Error('the request must have a payer');
    }
    if (request.state !== types_1.RequestLogicTypes.STATE.CREATED) {
        throw new Error('the request state must be created');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    const signerRole = request_1.default.getRoleInRequest(signer, request);
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYER) {
        request.state = types_1.RequestLogicTypes.STATE.ACCEPTED;
    } else {
        throw new Error('Signer must be the payer');
    }
    // avoid to mutate the request
    let requestCopied = (0, utils_1.deepCopy)(request);
    requestCopied = request_1.default.pushExtensionsData(requestCopied, action.data.parameters.extensionsData);
    requestCopied.events.push(generateEvent(action, timestamp, signer));
    return requestCopied;
}
/**
 * Private function to generate the event 'Accept' from an action
 *
 * @param Types.IAction action the action that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.ACCEPT,
        parameters: {
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0
        },
        timestamp
    };
    return event;
} //# sourceMappingURL=accept.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/addExtensionsData.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of the action add extensions data from request logic specification
 */ exports.default = {
    applyActionToRequest,
    format
};
/**
 * Function to format an action to add extensions data to a Request
 *
 * @param IAddExtensionsDataParameters acceptParameters parameters to accept a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(addExtensionsDataParameters, signerIdentity, signatureProvider) {
    if (!addExtensionsDataParameters.extensionsData || addExtensionsDataParameters.extensionsData.length === 0) {
        throw new Error('extensionsData must be given');
    }
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.ADD_EXTENSIONS_DATA,
        parameters: addExtensionsDataParameters,
        version: version_1.default.currentVersion
    };
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to apply an addition of extensions data to a request
 *
 * @param Types.IAction action  the action to apply
 *
 * @returns Types.IRequest the new request
 */ function applyActionToRequest(action, timestamp, request) {
    if (!action.data.parameters.requestId) {
        throw new Error('requestId must be given');
    }
    if (!action.data.parameters.extensionsData || action.data.parameters.extensionsData.length === 0) {
        throw new Error('extensionsData must be given');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    // avoid to mutate the request
    let requestCopied = (0, utils_1.deepCopy)(request);
    requestCopied = request_1.default.pushExtensionsData(requestCopied, action.data.parameters.extensionsData);
    requestCopied.events.push(generateEvent(action, timestamp, signer));
    return requestCopied;
}
/**
 * Private function to generate the event 'Accept' from an action
 *
 * @param Types.IAction action the action that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.ADD_EXTENSIONS_DATA,
        parameters: {
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0
        },
        timestamp
    };
    return event;
} //# sourceMappingURL=addExtensionsData.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/cancel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of the action cancel from request logic specification
 */ exports.default = {
    applyActionToRequest,
    format
};
/**
 * Function to format an action to cancel a Request
 *
 * @param ICancelParameters cancelParameters parameters to cancel a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(cancelParameters, signerIdentity, signatureProvider) {
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.CANCEL,
        parameters: cancelParameters,
        version: version_1.default.currentVersion
    };
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to apply an Cancel action an a request
 *
 * @param Types.IAction action the action to apply
 *
 * @returns Types.IRequest the new request
 */ function applyActionToRequest(action, timestamp, request) {
    if (!action.data.parameters.requestId) {
        throw new Error('requestId must be given');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    const signerRole = request_1.default.getRoleInRequest(signer, request);
    // avoid to mutate the request
    let requestCopied = (0, utils_1.deepCopy)(request);
    requestCopied = request_1.default.pushExtensionsData(requestCopied, action.data.parameters.extensionsData);
    requestCopied.events.push(generateEvent(action, timestamp, signer));
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYER) {
        if (request.state !== types_1.RequestLogicTypes.STATE.CREATED) {
            throw new Error('A payer cancel need to be done on a request with the state created');
        }
        requestCopied.state = types_1.RequestLogicTypes.STATE.CANCELED;
        return requestCopied;
    }
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYEE) {
        if (request.state === types_1.RequestLogicTypes.STATE.CANCELED) {
            throw new Error('Cannot cancel an already canceled request');
        }
        requestCopied.state = types_1.RequestLogicTypes.STATE.CANCELED;
        return requestCopied;
    }
    throw new Error('Signer must be the payer or the payee');
}
/**
 * Private function to generate the event 'Cancel' from an action
 *
 * @param Types.IAction action the action that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.CANCEL,
        parameters: {
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0
        },
        timestamp
    };
    return event;
} //# sourceMappingURL=cancel.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/create.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const Semver = __turbopack_require__("[project]/node_modules/.pnpm/semver@7.5.4/node_modules/semver/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of the request logic specification
 */ exports.default = {
    createRequest,
    format
};
/**
 * Function to format  action to create a Request
 *
 * If requestParameters.timestamp not given, "Date.now() / 1000" will be used as default
 *
 * @param requestParameters ICreateParameters parameters to create a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(requestParameters, signerIdentity, signatureProvider) {
    if (!requestParameters.payee && !requestParameters.payer) {
        throw new Error('payee or PayerId must be given');
    }
    if (!(0, utils_1.isValidAmount)(requestParameters.expectedAmount)) {
        throw new Error('expectedAmount must be a positive integer');
    }
    if (requestParameters.payee && (0, utils_1.identityHasError)(requestParameters.payee)) {
        throw new Error(`payee: ${(0, utils_1.identityHasError)(requestParameters.payee)}̀`);
    }
    if (requestParameters.payer && (0, utils_1.identityHasError)(requestParameters.payer)) {
        throw new Error(`payer: ${(0, utils_1.identityHasError)(requestParameters.payer)}̀`);
    }
    if (!requestParameters.timestamp) {
        requestParameters.timestamp = (0, utils_1.getCurrentTimestampInSecond)();
    }
    // convert expectedAmount to string to have a consistent numbering
    requestParameters.expectedAmount = requestParameters.expectedAmount.toString();
    const version = version_1.default.currentVersion;
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.CREATE,
        parameters: requestParameters,
        version
    };
    const signerRole = action_1.default.getRoleInUnsignedAction(signerIdentity, unsignedAction);
    if (signerRole !== types_1.RequestLogicTypes.ROLE.PAYEE && signerRole !== types_1.RequestLogicTypes.ROLE.PAYER) {
        throw new Error('Signer must be the payee or the payer');
    }
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to create a request (create a request)
 *
 * @param Types.IAction action the action to evaluate
 *
 * @returns Types.IRequest the new request
 */ function createRequest(action, timestamp) {
    if (!action.data.parameters.payee && !action.data.parameters.payer) {
        throw new Error('action.parameters.payee or action.parameters.payer must be given');
    }
    if (action.data.parameters.payee && (0, utils_1.identityHasError)(action.data.parameters.payee)) {
        throw new Error(`payee: ${(0, utils_1.identityHasError)(action.data.parameters.payee)}̀`);
    }
    if (action.data.parameters.payer && (0, utils_1.identityHasError)(action.data.parameters.payer)) {
        throw new Error(`payer: ${(0, utils_1.identityHasError)(action.data.parameters.payer)}̀`);
    }
    if (!(0, utils_1.isString)(action.data.parameters.expectedAmount) || !(0, utils_1.isValidAmount)(action.data.parameters.expectedAmount)) {
        throw new Error('action.parameters.expectedAmount must be a string representing a positive integer');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    // Copy to not modify the action itself
    const request = (0, utils_1.deepCopy)(action.data.parameters);
    request.extensions = {};
    request.requestId = action_1.default.getRequestId(action);
    request.version = action_1.default.getVersionFromAction(action);
    request.events = [
        generateEvent(action, timestamp, signer)
    ];
    // If we're creating an older version of a request, we convert the string currency type to the new ICurrency one
    if (Semver.lt(action.data.version, '2.0.2')) {
        request.currency = legacyEnumToICurrencyConvert(action.data.parameters.currency);
    }
    const signerRole = action_1.default.getRoleInAction(signer, action);
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYEE) {
        request.state = types_1.RequestLogicTypes.STATE.CREATED;
        request.creator = action.data.parameters.payee;
        return request;
    }
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYER) {
        request.state = types_1.RequestLogicTypes.STATE.ACCEPTED;
        request.creator = action.data.parameters.payer;
        return request;
    }
    throw new Error('Signer must be the payee or the payer');
}
/**
 * Private function to generate the event 'Create' from an action
 *
 * @param Types.IAction action the action data that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.CREATE,
        parameters: {
            expectedAmount: params.expectedAmount,
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0,
            isSignedRequest: false
        },
        timestamp
    };
    return event;
}
/**
 * Converts legacy enum CURRENCY format to ICurrency object
 *
 * @param currency The old currency string format
 * @returns The ICurrency object
 */ function legacyEnumToICurrencyConvert(currency) {
    switch(currency){
        case 'BTC':
            return {
                network: 'mainnet',
                type: types_1.RequestLogicTypes.CURRENCY.BTC,
                value: 'BTC'
            };
        case 'ETH':
            return {
                network: 'mainnet',
                type: types_1.RequestLogicTypes.CURRENCY.ETH,
                value: 'ETH'
            };
        case 'EUR':
            return {
                type: types_1.RequestLogicTypes.CURRENCY.ISO4217,
                value: 'EUR'
            };
        case 'USD':
            return {
                type: types_1.RequestLogicTypes.CURRENCY.ISO4217,
                value: 'USD'
            };
        case 'DAI':
            return {
                type: types_1.RequestLogicTypes.CURRENCY.ERC20,
                value: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359'
            };
        default:
            throw new Error('Unsupported currency when getting request from transactions.');
    }
} //# sourceMappingURL=create.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/increaseExpectedAmount.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of the action increaseExpectedAmount from request logic specification
 */ exports.default = {
    applyActionToRequest,
    format
};
/**
 * Function to format an action to increase expected amount of a Request
 *
 * @param IIncreaseExpectedAmountParameters increaseAmountParameters parameters to increase expected amount of a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(increaseAmountParameters, signerIdentity, signatureProvider) {
    if (!(0, utils_1.isValidAmount)(increaseAmountParameters.deltaAmount)) {
        throw new Error('deltaAmount must be a string representing a positive integer');
    }
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.INCREASE_EXPECTED_AMOUNT,
        parameters: increaseAmountParameters,
        version: version_1.default.currentVersion
    };
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to apply an increaseExpectedAmount action on a request
 *
 * @param Types.IAction action the action to apply
 *
 * @returns Types.IRequest the new request
 */ function applyActionToRequest(action, timestamp, request) {
    if (!action.data.parameters.requestId) {
        throw new Error('requestId must be given');
    }
    if (!request.payer) {
        throw new Error('the request must have a payer');
    }
    if (!action.data.parameters.deltaAmount) {
        throw new Error('deltaAmount must be given');
    }
    if (!(0, utils_1.isValidAmount)(action.data.parameters.deltaAmount)) {
        throw new Error('deltaAmount must be a string representing a positive integer');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    const signerRole = request_1.default.getRoleInRequest(signer, request);
    // avoid to mutate the request
    let requestCopied = (0, utils_1.deepCopy)(request);
    requestCopied = request_1.default.pushExtensionsData(requestCopied, action.data.parameters.extensionsData);
    requestCopied.events.push(generateEvent(action, timestamp, signer));
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYER) {
        if (request.state === types_1.RequestLogicTypes.STATE.CANCELED) {
            throw new Error('the request must not be canceled');
        }
        // increase the expected amount and store it as string
        requestCopied.expectedAmount = (0, utils_1.addAmount)(request.expectedAmount, action.data.parameters.deltaAmount);
        return requestCopied;
    }
    throw new Error('signer must be the payer');
}
/**
 * Private function to generate the event 'IncreaseExpectedAmount' from an action
 *
 * @param Types.IAction action the action data that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.INCREASE_EXPECTED_AMOUNT,
        parameters: {
            deltaAmount: action.data.parameters.deltaAmount,
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0
        },
        timestamp
    };
    return event;
} //# sourceMappingURL=increaseExpectedAmount.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/reduceExpectedAmount.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of the action reduceExpectedAmount from request logic specification
 */ exports.default = {
    applyActionToRequest,
    format
};
/**
 * Function to format an action to reduce expected amount of a Request
 *
 * @param IReduceExpectedAmountParameters reduceAmountParameters parameters to reduce expected amount of a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(reduceAmountParameters, signerIdentity, signatureProvider) {
    if (!(0, utils_1.isValidAmount)(reduceAmountParameters.deltaAmount)) {
        throw new Error('deltaAmount must be a string representing a positive integer');
    }
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.REDUCE_EXPECTED_AMOUNT,
        parameters: reduceAmountParameters,
        version: version_1.default.currentVersion
    };
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to apply an reduceExpectedAmount action on a request
 *
 * @param Types.IAction action the action to apply
 *
 * @returns Types.IRequest the new request
 */ function applyActionToRequest(action, timestamp, request) {
    if (!action.data.parameters.requestId) {
        throw new Error('requestId must be given');
    }
    if (!request.payee) {
        throw new Error('the request must have a payee');
    }
    if (!action.data.parameters.deltaAmount) {
        throw new Error('deltaAmount must be given');
    }
    if (!(0, utils_1.isValidAmount)(action.data.parameters.deltaAmount)) {
        throw new Error('deltaAmount must be a string representing a positive integer');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    const signerRole = request_1.default.getRoleInRequest(signer, request);
    // avoid to mutate the request
    let requestCopied = (0, utils_1.deepCopy)(request);
    requestCopied = request_1.default.pushExtensionsData(requestCopied, action.data.parameters.extensionsData);
    requestCopied.events.push(generateEvent(action, timestamp, signer));
    if (signerRole === types_1.RequestLogicTypes.ROLE.PAYEE) {
        if (request.state === types_1.RequestLogicTypes.STATE.CANCELED) {
            throw new Error('the request must not be canceled');
        }
        // reduce the expected amount and store it as string or throw if the result is not valid
        requestCopied.expectedAmount = (0, utils_1.reduceAmount)(request.expectedAmount, action.data.parameters.deltaAmount);
        return requestCopied;
    }
    throw new Error('signer must be the payee');
}
/**
 * Private function to generate the event 'ReduceExpectedAmount' from an action
 *
 * @param Types.IAction action the action data that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.REDUCE_EXPECTED_AMOUNT,
        parameters: {
            deltaAmount: action.data.parameters.deltaAmount,
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0
        },
        timestamp
    };
    return event;
} //# sourceMappingURL=reduceExpectedAmount.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/addStakeholders.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const version_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/version.js [app-rsc] (ecmascript)");
/**
 * Implementation of the action add stakeholder from request logic specification
 */ exports.default = {
    applyActionToRequest,
    format
};
/**
 * Function to format an action to add stakeholders to a Request
 *
 * @param IAddStakeholdersParameters addStakeholdersParameters parameters to add stakeholders to a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */ function format(addStakeholderParameters, signerIdentity, signatureProvider) {
    const unsignedAction = {
        name: types_1.RequestLogicTypes.ACTION_NAME.ADD_STAKEHOLDERS,
        parameters: addStakeholderParameters,
        version: version_1.default.currentVersion
    };
    return action_1.default.createAction(unsignedAction, signerIdentity, signatureProvider);
}
/**
 * Function to apply an addStakeholder action to a request
 *
 * @param Types.IAction action the action to apply
 *
 * @returns Types.IRequest the new request
 */ function applyActionToRequest(action, timestamp, request) {
    if (!action.data.parameters.requestId) {
        throw new Error('requestId must be given');
    }
    const signer = action_1.default.getSignerIdentityFromAction(action);
    // avoid to mutate the request
    let requestCopied = (0, utils_1.deepCopy)(request);
    requestCopied = request_1.default.pushExtensionsData(requestCopied, action.data.parameters.extensionsData);
    requestCopied.events.push(generateEvent(action, timestamp, signer));
    return requestCopied;
}
/**
 * Private function to generate the event 'addStakeholder' from an action
 *
 * @param Types.IAction action the action that create the event
 * @param IdentityTypes.IIdentity actionSigner the signer of the action
 *
 * @returns Types.IEvent the event generated
 */ function generateEvent(action, timestamp, actionSigner) {
    const params = action.data.parameters;
    const event = {
        actionSigner,
        name: types_1.RequestLogicTypes.ACTION_NAME.ADD_STAKEHOLDERS,
        parameters: {
            extensionsDataLength: params.extensionsData ? params.extensionsData.length : 0
        },
        timestamp
    };
    return event;
} //# sourceMappingURL=addStakeholders.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/requestLogicCore.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const action_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/action.js [app-rsc] (ecmascript)");
const request_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request.js [app-rsc] (ecmascript)");
const accept_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/accept.js [app-rsc] (ecmascript)");
const addExtensionsData_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/addExtensionsData.js [app-rsc] (ecmascript)");
const cancel_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/cancel.js [app-rsc] (ecmascript)");
const create_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/create.js [app-rsc] (ecmascript)");
const increaseExpectedAmount_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/increaseExpectedAmount.js [app-rsc] (ecmascript)");
const reduceExpectedAmount_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/reduceExpectedAmount.js [app-rsc] (ecmascript)");
const addStakeholders_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/actions/addStakeholders.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of Request Logic Core
 */ exports.default = {
    applyActionToRequest,
    formatAccept: accept_1.default.format,
    formatAddExtensionsData: addExtensionsData_1.default.format,
    formatCancel: cancel_1.default.format,
    formatCreate: create_1.default.format,
    formatIncreaseExpectedAmount: increaseExpectedAmount_1.default.format,
    formatReduceExpectedAmount: reduceExpectedAmount_1.default.format,
    formatAddStakeholders: addStakeholders_1.default.format,
    getRequestIdFromAction
};
/**
 * Function Entry point to apply any action to a request
 * If advancedLogic given, the extensions will be handled
 *
 * @param Types.IRequest request The request before update, null for creation - will not be modified
 * @param Types.IAction action The action to apply
 * @param AdvancedLogicTypes.IAdvancedLogic advancedLogic module to handle exception
 *
 * @returns Types.IRequest  The request updated
 */ function applyActionToRequest(request, action, timestamp, advancedLogic) {
    if (!action_1.default.isActionVersionSupported(action)) {
        throw new Error('action version not supported');
    }
    // we don't want to modify the original request state
    const requestCopied = request ? (0, utils_1.deepCopy)(request) : null;
    let requestAfterApply = null;
    // Creation request
    if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.CREATE) {
        if (requestCopied) {
            throw new Error('no request is expected at the creation');
        }
        requestAfterApply = create_1.default.createRequest(action, timestamp);
    } else {
        // Update request
        if (!requestCopied) {
            throw new Error('request is expected');
        }
        // Will throw if the request is not valid
        request_1.default.checkRequest(requestCopied);
        if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.ACCEPT) {
            requestAfterApply = accept_1.default.applyActionToRequest(action, timestamp, requestCopied);
        }
        if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.CANCEL) {
            requestAfterApply = cancel_1.default.applyActionToRequest(action, timestamp, requestCopied);
        }
        if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.INCREASE_EXPECTED_AMOUNT) {
            requestAfterApply = increaseExpectedAmount_1.default.applyActionToRequest(action, timestamp, requestCopied);
        }
        if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.REDUCE_EXPECTED_AMOUNT) {
            requestAfterApply = reduceExpectedAmount_1.default.applyActionToRequest(action, timestamp, requestCopied);
        }
        if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.ADD_STAKEHOLDERS) {
            requestAfterApply = addStakeholders_1.default.applyActionToRequest(action, timestamp, requestCopied);
        }
        if (action.data.name === types_1.RequestLogicTypes.ACTION_NAME.ADD_EXTENSIONS_DATA) {
            requestAfterApply = addExtensionsData_1.default.applyActionToRequest(action, timestamp, requestCopied);
        }
    }
    if (!requestAfterApply) {
        throw new Error(`Unknown action ${action.data.name}`);
    }
    // skip extension application if no extension given or no advanced logic layer given
    if (action.data.parameters.extensionsData && advancedLogic) {
        // Apply the extension on the state
        requestAfterApply.extensions = action.data.parameters.extensionsData.reduce((extensionState, extensionAction)=>{
            return advancedLogic.applyActionToExtensions(extensionState, extensionAction, requestAfterApply, action_1.default.getSignerIdentityFromAction(action), timestamp);
        }, requestAfterApply.extensions);
    }
    return requestAfterApply;
}
/**
 * Function to create a requestId from the creation action or get the requestId parameter otherwise
 *
 * @param IAction action action
 *
 * @returns RequestIdType the requestId
 */ function getRequestIdFromAction(action) {
    return action_1.default.getRequestId(action);
} //# sourceMappingURL=requestLogicCore.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request-logic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const requestLogicCore_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/requestLogicCore.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Implementation of Request Logic
 */ class RequestLogic {
    constructor(transactionManager, signatureProvider, advancedLogic){
        this.transactionManager = transactionManager;
        this.signatureProvider = signatureProvider;
        this.advancedLogic = advancedLogic;
    }
    /**
     * Creates a request and persists it on the transaction manager layer
     *
     * @param ICreateParameters parameters to create a request
     * @param signerIdentity Identity of the signer
     * @param topics list of string to topic the request
     *
     * @returns the request id and the meta data
     */ createRequest(requestParameters, signerIdentity, topics = []) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const { action, requestId, hashedTopics } = yield this.createCreationActionRequestIdAndTopics(requestParameters, signerIdentity, topics);
            // Validate the action, the apply will throw in case of error
            requestLogicCore_1.default.applyActionToRequest(null, action, Date.now(), this.advancedLogic);
            return this.persistTransaction(requestId, action, {
                requestId
            }, hashedTopics);
        });
    }
    /**
     * Creates an encrypted request and persists it on the transaction manager layer
     *
     * @param requestParameters parameters to create a request
     * @param signerIdentity Identity of the signer
     * @param encryptionParams list of encryption parameters to encrypt the channel key with
     * @param topics list of string to topic the request
     *
     * @returns the request id and the meta data
     */ createEncryptedRequest(requestParameters, signerIdentity, encryptionParams, topics = []) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (encryptionParams.length === 0) {
                throw new Error('You must give at least one encryption parameter to create an encrypted request');
            }
            const { action, requestId, hashedTopics } = yield this.createCreationActionRequestIdAndTopics(requestParameters, signerIdentity, topics);
            // Validate the action, the apply will throw in case of error
            requestLogicCore_1.default.applyActionToRequest(null, action, Date.now(), this.advancedLogic);
            return this.persistTransaction(requestId, action, {
                requestId
            }, hashedTopics, encryptionParams);
        });
    }
    /**
     * Function to compute the id of a request without creating it
     *
     * @param requestParameters ICreateParameters parameters to create a request
     * @param IIdentity signerIdentity Identity of the signer
     *
     * @returns Promise<RequestLogicTypes.RequestId> the request id
     */ computeRequestId(requestParameters, signerIdentity) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatCreate(requestParameters, signerIdentity, this.signatureProvider);
            // Validate the action, the apply will throw in case of error
            requestLogicCore_1.default.applyActionToRequest(null, action, Date.now(), this.advancedLogic);
            return requestLogicCore_1.default.getRequestIdFromAction(action);
        });
    }
    /**
     * Function to accept a request   it on through the transaction manager layer
     *
     * @param IAcceptParameters acceptParameters parameters to accept a request
     * @param IIdentity signerIdentity Identity of the signer
     * @param boolean validate specifies if a validation should be done before persisting the transaction. Requires a full load of the Request.
     *
     * @returns Promise<IRequestLogicReturn> the meta data
     */ acceptRequest(requestParameters, signerIdentity, validate = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatAccept(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            if (validate) {
                yield this.validateAction(requestId, action);
            }
            return this.persistTransaction(requestId, action, undefined);
        });
    }
    /**
     * Function to cancel a request and persist it on through the transaction manager layer
     *
     * @param ICancelParameters cancelParameters parameters to cancel a request
     * @param IIdentity signerIdentity Identity of the signer
     * @param boolean validate specifies if a validation should be done before persisting the transaction. Requires a full load of the Request.
     *
     * @returns Promise<IRequestLogicReturn> the meta data
     */ cancelRequest(requestParameters, signerIdentity, validate = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatCancel(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            if (validate) {
                yield this.validateAction(requestId, action);
            }
            return this.persistTransaction(requestId, action, undefined);
        });
    }
    /**
     * Function to increase expected amount of a request and persist it on through the transaction manager layer
     *
     * @param IIncreaseExpectedAmountParameters increaseAmountParameters parameters to increase expected amount of a request
     * @param IIdentity signerIdentity Identity of the signer
     * @param boolean validate specifies if a validation should be done before persisting the transaction. Requires a full load of the Request.
     *
     * @returns Promise<IRequestLogicReturn> the meta data
     */ increaseExpectedAmountRequest(requestParameters, signerIdentity, validate = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatIncreaseExpectedAmount(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            if (validate) {
                yield this.validateAction(requestId, action);
            }
            return this.persistTransaction(requestId, action, undefined);
        });
    }
    /**
     * Function to reduce expected amount of a request and persist it on through the transaction manager layer
     *
     * @param IReduceExpectedAmountParameters reduceAmountParameters parameters to reduce expected amount of a request
     * @param IIdentity signerIdentity Identity of the signer
     * @param boolean validate specifies if a validation should be done before persisting the transaction. Requires a full load of the Request.
     *
     * @returns Promise<IRequestLogicReturn> the meta data
     */ reduceExpectedAmountRequest(requestParameters, signerIdentity, validate = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatReduceExpectedAmount(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            if (validate) {
                yield this.validateAction(requestId, action);
            }
            return this.persistTransaction(requestId, action, undefined);
        });
    }
    /**
     * Function to add stakeholders to a request and persist it on through the transaction manager layer
     *
     * @param IAddStakeholdersParameters requestParameters parameters to add stakeholders to a request
     * @param IIdentity signerIdentity Identity of the signer
     * @param IEncryptionParameters encryptionParams list of addtional encryption parameters to encrypt the channel key with
     * @param boolean validate specifies if a validation should be done before persisting the transaction. Requires a full load of the Request.
     *
     * @returns Promise<IRequestLogicReturn> the meta data
     */ addStakeholders(requestParameters, signerIdentity, encryptionParams, validate = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatAddStakeholders(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            if (validate) {
                yield this.validateAction(requestId, action);
            }
            return this.persistTransaction(requestId, action, undefined, [], encryptionParams);
        });
    }
    /**
     * Function to add extensions data to a request and persist it through the transaction manager layer
     *
     * @param IAddExtensionsDataParameters requestParameters parameters to add extensions Data to a request
     * @param IIdentity signerIdentity Identity of the signer
     * @param boolean validate specifies if a validation should be done before persisting the transaction. Requires a full load of the Request.
     *
     * @returns Promise<IRequestLogicReturn> the meta data
     */ addExtensionsDataRequest(requestParameters, signerIdentity, validate = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatAddExtensionsData(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            if (validate) {
                yield this.validateAction(requestId, action);
            }
            return this.persistTransaction(requestId, action, undefined);
        });
    }
    /**
     * Function to get a request from the request id from the actions in the data-access layer
     *
     * @param requestId the requestId of the request to retrieve
     *
     * @returns the request constructed from the actions
     */ getRequestFromId(requestId) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const { ignoredTransactions, confirmedRequestState, pendingRequestState, transactionManagerMeta } = yield this.computeRequestFromRequestId(requestId);
            const pending = this.computeDiffBetweenPendingAndConfirmedRequestState(confirmedRequestState, pendingRequestState);
            return {
                meta: {
                    ignoredTransactions,
                    transactionManagerMeta
                },
                result: {
                    request: confirmedRequestState,
                    pending
                }
            };
        });
    }
    /**
     * Gets the requests indexed by a topic from the transactions of transaction-manager layer
     *
     * @returns all the requests indexed by topic
     */ getRequestsByTopic(topic, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // hash all the topics
            const hashedTopic = MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(topic));
            const getChannelsResult = yield this.transactionManager.getChannelsByTopic(hashedTopic, updatedBetween, page, pageSize);
            return this.computeMultipleRequestFromChannels(getChannelsResult);
        });
    }
    /**
     * Gets the requests indexed by multiple topics from the transactions of transaction-manager layer
     *
     * @returns all the requests indexed by topics
     */ getRequestsByMultipleTopics(topics, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // hash all the topics
            const hashedTopics = topics.map((topic)=>MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(topic)));
            const getChannelsResult = yield this.transactionManager.getChannelsByMultipleTopics(hashedTopics, updatedBetween, page, pageSize);
            return this.computeMultipleRequestFromChannels(getChannelsResult);
        });
    }
    /**
     * Creates the creation action and the requestId of a request
     *
     * @param requestParameters parameters to create a request
     * @param signerIdentity Identity of the signer
     *
     * @returns the request id, the action and the hashed topics
     */ createCreationActionRequestIdAndTopics(requestParameters, signerIdentity, topics) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (!this.signatureProvider) {
                throw new Error('You must give a signature provider to create actions');
            }
            const action = yield requestLogicCore_1.default.formatCreate(requestParameters, signerIdentity, this.signatureProvider);
            const requestId = requestLogicCore_1.default.getRequestIdFromAction(action);
            // hash all the topics
            const hashedTopics = topics.map((topic)=>MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(topic)));
            return {
                action,
                hashedTopics,
                requestId
            };
        });
    }
    /**
     * Interprets a request from requestId
     *
     * @param requestId the requestId of the request to compute
     * @returns the request, the pending state of the request and the ignored transactions
     */ computeRequestFromRequestId(requestId) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const resultGetTx = yield this.transactionManager.getTransactionsByChannelId(requestId);
            const actions = resultGetTx.result.transactions// filter the actions ignored by the previous layers
            .filter(utils_1.notNull).sort((a, b)=>a.timestamp - b.timestamp);
            // eslint-disable-next-line prefer-const
            let { ignoredTransactions, keptTransactions } = this.removeOldPendingTransactions(actions);
            // array of transaction without duplicates to avoid replay attack
            const timestampedActionsWithoutDuplicates = (0, utils_1.uniqueByProperty)(keptTransactions.filter(utils_1.notNull).map((t)=>{
                try {
                    return {
                        action: JSON.parse(t.transaction.data || ''),
                        state: t.state,
                        timestamp: t.timestamp
                    };
                } catch (e) {
                    // We ignore the transaction.data that cannot be parsed
                    ignoredTransactions.push({
                        reason: 'JSON parsing error',
                        transaction: t
                    });
                    return;
                }
            }).filter(utils_1.notNull), 'action');
            // Keeps the transaction ignored
            ignoredTransactions = ignoredTransactions.concat(timestampedActionsWithoutDuplicates.duplicates.map((tx)=>{
                return {
                    reason: 'Duplicated transaction',
                    transaction: tx
                };
            }));
            const { confirmedRequestState, pendingRequestState, ignoredTransactionsByApplication } = yield this.computeRequestFromTransactions(timestampedActionsWithoutDuplicates.uniqueItems);
            ignoredTransactions = ignoredTransactions.concat(ignoredTransactionsByApplication);
            return {
                confirmedRequestState,
                ignoredTransactions,
                pendingRequestState,
                transactionManagerMeta: resultGetTx.meta
            };
        });
    }
    /**
     * Interprets a request from transactions
     *
     * @param transactions transactions to compute the request from
     * @returns the request and the ignoredTransactions
     */ computeRequestFromTransactions(transactions) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const ignoredTransactionsByApplication = [];
            // second parameter is null, because the first action must be a creation (no state expected)
            const confirmedRequestState = transactions.filter((action)=>action.state === types_1.TransactionTypes.TransactionState.CONFIRMED).reduce((requestState, actionConfirmed)=>{
                try {
                    return requestLogicCore_1.default.applyActionToRequest(requestState, actionConfirmed.action, actionConfirmed.timestamp, this.advancedLogic);
                } catch (e) {
                    // if an error occurs while applying we ignore the action
                    ignoredTransactionsByApplication.push({
                        reason: e.message,
                        transaction: actionConfirmed
                    });
                    return requestState;
                }
            }, null);
            const pendingRequestState = transactions.filter((action)=>action.state === types_1.TransactionTypes.TransactionState.PENDING).reduce((requestState, actionConfirmed)=>{
                try {
                    return requestLogicCore_1.default.applyActionToRequest(requestState, actionConfirmed.action, actionConfirmed.timestamp, this.advancedLogic);
                } catch (e) {
                    // if an error occurs while applying we ignore the action
                    ignoredTransactionsByApplication.push({
                        reason: e.message,
                        transaction: actionConfirmed
                    });
                    return requestState;
                }
            }, confirmedRequestState);
            return {
                confirmedRequestState,
                ignoredTransactionsByApplication,
                pendingRequestState
            };
        });
    }
    /**
     * Interprets multiple requests from channels
     *
     * @param channelsRawData returned value by getChannels function
     * @returns the requests and meta data
     */ computeMultipleRequestFromChannels(channelsRawData) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const transactionsByChannel = channelsRawData.result.transactions;
            const transactionManagerMeta = channelsRawData.meta.dataAccessMeta;
            // Gets all the requests from the transactions
            const allRequestAndMetaPromises = Object.keys(channelsRawData.result.transactions).map(// Parses and removes corrupted or duplicated transactions
            (channelId)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    // eslint-disable-next-line prefer-const
                    let { ignoredTransactions, keptTransactions } = this.removeOldPendingTransactions(transactionsByChannel[channelId]);
                    const timestampedActionsWithoutDuplicates = (0, utils_1.uniqueByProperty)(keptTransactions// filter the actions ignored by the previous layers
                    .filter(utils_1.notNull).map((t)=>{
                        try {
                            return {
                                action: JSON.parse(t.transaction.data || ''),
                                state: t.state,
                                timestamp: t.timestamp
                            };
                        } catch (e) {
                            // We ignore the transaction.data that cannot be parsed
                            ignoredTransactions.push({
                                reason: 'JSON parsing error',
                                transaction: t
                            });
                            return;
                        }
                    }).filter(utils_1.notNull), 'action');
                    // Keeps the ignored transactions
                    ignoredTransactions = ignoredTransactions.concat(timestampedActionsWithoutDuplicates.duplicates.map((tx)=>({
                            reason: 'Duplicated transaction',
                            transaction: tx
                        })));
                    // Computes the request from the transactions
                    const { confirmedRequestState, pendingRequestState, ignoredTransactionsByApplication } = yield this.computeRequestFromTransactions(timestampedActionsWithoutDuplicates.uniqueItems);
                    ignoredTransactions = ignoredTransactions.concat(ignoredTransactionsByApplication);
                    const pending = this.computeDiffBetweenPendingAndConfirmedRequestState(confirmedRequestState, pendingRequestState);
                    return {
                        ignoredTransactions,
                        pending,
                        request: confirmedRequestState,
                        transactionManagerMeta: transactionManagerMeta[channelId]
                    };
                }));
            const allRequestAndMeta = yield Promise.all(allRequestAndMetaPromises);
            // Merge all the requests and meta in one object
            return allRequestAndMeta.reduce((finalResult, requestAndMeta)=>{
                if (requestAndMeta.request || requestAndMeta.pending) {
                    finalResult.result.requests.push({
                        pending: requestAndMeta.pending,
                        request: requestAndMeta.request
                    });
                    // workaround to quiet the error "finalResult.meta.ignoredTransactions can be undefined" (but defined in the initialization value of the accumulator)
                    (finalResult.meta.ignoredTransactions || []).push(requestAndMeta.ignoredTransactions);
                    // add the transactionManagerMeta
                    (finalResult.meta.transactionManagerMeta || []).push(requestAndMeta.transactionManagerMeta);
                }
                return finalResult;
            }, {
                meta: {
                    ignoredTransactions: [],
                    transactionManagerMeta: []
                },
                result: {
                    requests: []
                }
            });
        });
    }
    /**
     * Validates an action, throws if the action is invalid
     *
     * @param requestId the requestId of the request to retrieve
     * @param action the action to validate
     *
     * @returns void, throws if the action is invalid
     */ validateAction(requestId, action) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const { confirmedRequestState, pendingRequestState } = yield this.computeRequestFromRequestId(requestId);
            try {
                // Check if the action doesn't fail with the request state
                requestLogicCore_1.default.applyActionToRequest(confirmedRequestState, action, Date.now(), this.advancedLogic);
            } catch (error) {
                // Check if the action works with the pending state
                if (pendingRequestState) {
                    requestLogicCore_1.default.applyActionToRequest(pendingRequestState, action, Date.now(), this.advancedLogic);
                }
            }
        });
    }
    /**
     * Computes the diff between the confirmed and pending request
     *
     * @param confirmedRequestState the confirmed request state
     * @param pendingRequestState the pending request state
     * @returns an object with the pending state attributes that are different from the confirmed one
     */ computeDiffBetweenPendingAndConfirmedRequestState(confirmedRequestState, pendingRequestState) {
        // Compute the diff between the confirmed and pending request
        let pending = null;
        if (!confirmedRequestState) {
            pending = pendingRequestState;
        } else if (pendingRequestState) {
            for(const key in pendingRequestState){
                if (key in pendingRequestState) {
                    // TODO: Should find a better way to do that
                    if ((0, utils_1.normalizeKeccak256Hash)(pendingRequestState[key]).value !== (0, utils_1.normalizeKeccak256Hash)(confirmedRequestState[key]).value) {
                        if (!pending) {
                            pending = {};
                        }
                        // eslint-disable-next-line
                        if (key === 'events') {
                            // keep only the new events in pending
                            pending[key] = pendingRequestState[key].slice(confirmedRequestState[key].length);
                        } else {
                            pending[key] = pendingRequestState[key];
                        }
                    }
                }
            }
        }
        return pending;
    }
    /**
     * Sorts out the transactions pending older than confirmed ones
     *
     * @param actions list of the actions
     * @returns an object with the ignoredTransactions and the kept actions
     */ removeOldPendingTransactions(transactions) {
        const ignoredTransactions = [];
        // ignored the transactions pending older than confirmed ones
        let confirmedFound = false;
        const keptTransactions = transactions.reverse().filter((action)=>{
            if (!action) {
                return false;
            }
            // Have we already found confirmed transactions
            confirmedFound = confirmedFound || action.state === types_1.TransactionTypes.TransactionState.CONFIRMED;
            // keep the transaction if confirmed or pending but no confirmed found before
            if (action.state === types_1.TransactionTypes.TransactionState.CONFIRMED || action.state === types_1.TransactionTypes.TransactionState.PENDING && !confirmedFound) {
                return true;
            } else {
                // Keeps the ignored transactions
                ignoredTransactions.push({
                    reason: 'Confirmed transaction newer than this pending transaction',
                    transaction: action
                });
                return false;
            }
        }).reverse();
        return {
            ignoredTransactions,
            keptTransactions
        };
    }
    persistTransaction(requestId, action, result, topics = [], encryptionParams = []) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const resultPersistTx = yield this.transactionManager.persistTransaction(JSON.stringify(action), requestId, topics, encryptionParams);
            const eventEmitter = new events_1.EventEmitter();
            // When receive the confirmation from transaction manager propagate it
            resultPersistTx.on('confirmed', (resultPersistTxConfirmed)=>eventEmitter.emit('confirmed', {
                    meta: {
                        transactionManagerMeta: resultPersistTxConfirmed.meta
                    },
                    result
                })).on('error', (error)=>eventEmitter.emit('error', error));
            return Object.assign(eventEmitter, {
                meta: {
                    transactionManagerMeta: resultPersistTx.meta
                },
                result
            });
        });
    }
}
exports.default = RequestLogic; //# sourceMappingURL=request-logic.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestLogic = void 0;
var request_logic_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+request-logic@0.39.0/node_modules/@requestnetwork/request-logic/dist/request-logic.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "RequestLogic", {
    enumerable: true,
    get: function() {
        return request_logic_1.default;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/clear-transaction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Class representing a clear transaction
 */ class ClearTransaction {
    constructor(data){
        this.data = data;
    }
    /**
     * Gets the data of the transaction
     *
     * @returns a promise resolving the transaction data
     */ getData() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return this.data;
        });
    }
    /**
     * Gets the transaction data hash
     *
     * @returns a promise resolving the transaction data hash
     */ getHash() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(JSON.parse(this.data)));
        });
    }
    /**
     * Gets the transaction error
     *
     * @returns a promise resolving a string of the error if any, otherwise an empty string
     */ getError() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            try {
                JSON.parse(this.data);
                return '';
            } catch (e) {
                return 'Impossible to JSON parse the transaction';
            }
        });
    }
}
exports.default = ClearTransaction; //# sourceMappingURL=clear-transaction.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/encrypted-transaction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Class representing an encrypted transaction
 */ class EncryptedTransaction {
    /**
     * Creates an instance of EncryptedTransaction.
     * @param persistedData the encrypted data of the transaction
     * @param channelKey decryption parameters to decrypted the encrypted data
     */ constructor(persistedData, channelKey){
        /** Decrypted data - start empty then filled by getData() */ this.data = '';
        /** Hash computed from the decrypted data - start empty then filled by getHash() */ this.dataHashSerialized = '';
        this.persistedData = persistedData;
        this.channelKey = channelKey;
    }
    /**
     * Gets the data of the transaction
     *
     * @returns a promise resolving the transaction data
     */ getData() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (this.data === '') {
                try {
                    const encryptedData = MultiFormat.deserialize(this.persistedData);
                    this.data = yield (0, utils_1.decrypt)(encryptedData, this.channelKey);
                } catch (_a) {
                    throw new Error('Impossible to decrypt the transaction');
                }
            }
            return this.data;
        });
    }
    /**
     * Gets the transaction data hash
     *
     * @returns a promise resolving the transaction data hash
     */ getHash() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (this.dataHashSerialized === '') {
                const data = yield this.getData();
                try {
                    const dataHash = (0, utils_1.normalizeKeccak256Hash)(JSON.parse(data));
                    this.dataHashSerialized = MultiFormat.serialize(dataHash);
                } catch (e) {
                    throw new Error('Impossible to JSON parse the decrypted transaction data');
                }
            }
            return this.dataHashSerialized;
        });
    }
    /**
     * Gets the transaction error
     *
     * @returns a promise resolving a string of the error if any, otherwise an empty string
     */ getError() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            let data = '';
            try {
                data = yield this.getData();
            } catch (e) {
                return e.message;
            }
            try {
                JSON.parse(data);
            } catch (e) {
                return 'Impossible to JSON parse the decrypted transaction data';
            }
            return '';
        });
    }
}
exports.default = EncryptedTransaction; //# sourceMappingURL=encrypted-transaction.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/transactions-parser.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const clear_transaction_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/clear-transaction.js [app-rsc] (ecmascript)");
const encrypted_transaction_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/encrypted-transaction.js [app-rsc] (ecmascript)");
/**
 * Class to parse transactions
 */ class TransactionsParser {
    constructor(decryptionProvider, cipherProvider){
        this.decryptionProvider = decryptionProvider;
        this.cipherProvider = cipherProvider;
    }
    /**
     * Parses a persisted transaction into a ClearTransaction or EncryptedTransaction, and decrypts the channel key if needed
     *
     * @param persistedTransaction the persisted transaction to parse
     * @param channelType The channel type (unknown, clear or encrypted)
     * @param channelKey the channel key to decrypt the transaction if needed
     * @param encryptionMethod the channel encryption method to decrypt the transaction if needed
     * @returns the transaction object and the channel key (if applicable)
     */ parsePersistedTransaction(persistedTransaction, channelType, channelKey, encryptionMethod) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // looks like a clear transaction
            if (persistedTransaction.data) {
                if (channelType === types_1.TransactionTypes.ChannelType.ENCRYPTED) {
                    throw new Error('Clear transactions are not allowed in encrypted channel');
                }
                if (persistedTransaction.encryptedData || persistedTransaction.encryptionMethod || persistedTransaction.keys) {
                    throw new Error('only the property "data" is allowed for clear transaction');
                }
                return {
                    transaction: new clear_transaction_1.default(persistedTransaction.data)
                };
            }
            // looks like an encrypted transaction
            if (persistedTransaction.encryptedData) {
                if (this.cipherProvider && this.cipherProvider.isDecryptionAvailable() || !this.cipherProvider) {
                    if (channelType === types_1.TransactionTypes.ChannelType.CLEAR) {
                        throw new Error('Encrypted transactions are not allowed in clear channel');
                    }
                    // no channel key, try to decrypt it and validate encryption method
                    if (!channelKey) {
                        // no encryptionMethod, this is first tx, must contain encryptionMethod
                        if (!encryptionMethod) {
                            if (!persistedTransaction.encryptionMethod || !persistedTransaction.keys) {
                                throw new Error('the properties "encryptionMethod" and "keys" are needed to compute the channel key');
                            }
                            encryptionMethod = persistedTransaction.encryptionMethod;
                            channelKey = yield this.decryptChannelKey(persistedTransaction.keys, encryptionMethod);
                        } else {
                            if (persistedTransaction.encryptionMethod) {
                                throw new Error('the "encryptionMethod" property has been already given for this channel');
                            }
                            if (!persistedTransaction.keys) {
                                throw new Error('the "keys" property is needed to compute the channel key');
                            }
                            channelKey = yield this.decryptChannelKey(persistedTransaction.keys, encryptionMethod);
                        }
                    } else {
                        // no encryptionMethod, this is first tx, must contain encryptionMethod
                        if (!encryptionMethod) {
                            if (!persistedTransaction.encryptionMethod) {
                                throw new Error('the "encryptionMethod" property is needed to use the channel key');
                            }
                            encryptionMethod = persistedTransaction.encryptionMethod;
                        } else {
                            if (persistedTransaction.encryptionMethod) {
                                throw new Error('the "encryptionMethod" property has been already given for this channel');
                            }
                        }
                    }
                } else {
                    throw new Error('Decryption is not available');
                }
                return {
                    channelKey,
                    encryptionMethod,
                    transaction: new encrypted_transaction_1.default(persistedTransaction.encryptedData, channelKey)
                };
            }
            throw new Error('Transaction must have a property "data" or "encryptedData"');
        });
    }
    /**
     * Decrypts a channel key
     *
     * @param keys encrypted keys indexed by identity
     * @param encryptionMethod encryption method used for the channel
     * @returns the channel key
     */ decryptChannelKey(keys, encryptionMethod) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            let errorReason = '';
            let channelKey = '';
            let channelKeyMethod;
            if (this.cipherProvider && encryptionMethod === `${types_1.EncryptionTypes.METHOD.KMS}-${types_1.EncryptionTypes.METHOD.AES256_GCM}`) {
                const entries = Object.entries(keys);
                if (entries.length === 0) {
                    throw new Error('No encryption keys provided');
                }
                let encryptResponse;
                try {
                    encryptResponse = JSON.parse(MultiFormat.deserialize(entries[0][1]).value);
                } catch (e) {
                    throw new Error('Invalid encryption response format');
                }
                const encryptionParams = entries.map((entry)=>{
                    return {
                        method: types_1.EncryptionTypes.METHOD.KMS,
                        key: entry[0]
                    };
                });
                try {
                    channelKey = yield this.cipherProvider.decrypt(encryptResponse, {
                        encryptionParams
                    });
                    channelKeyMethod = types_1.EncryptionTypes.METHOD.AES256_GCM;
                } catch (e) {
                    errorReason = e.message;
                }
            } else {
                // Check if the decryption provider is given
                if (!this.decryptionProvider && !this.cipherProvider) {
                    throw new Error(`No decryption or cipher provider given`);
                }
                // Check the encryption method
                if (encryptionMethod === `${types_1.EncryptionTypes.METHOD.ECIES}-${types_1.EncryptionTypes.METHOD.AES256_CBC}`) {
                    channelKeyMethod = types_1.EncryptionTypes.METHOD.AES256_CBC;
                } else if (encryptionMethod === `${types_1.EncryptionTypes.METHOD.ECIES}-${types_1.EncryptionTypes.METHOD.AES256_GCM}`) {
                    channelKeyMethod = types_1.EncryptionTypes.METHOD.AES256_GCM;
                } else {
                    throw new Error(`Encryption method not supported: ${encryptionMethod}`);
                }
                // Try to decrypt the channelKey
                channelKey = yield Object.keys(keys || {}).reduce((decryptedChannelKeyPromise, identityMultiFormatted)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                        var _a;
                        let decryptedChannelKey = yield decryptedChannelKeyPromise;
                        if (keys && decryptedChannelKey === '') {
                            let identity;
                            try {
                                identity = MultiFormat.deserialize(identityMultiFormatted);
                            } catch (e) {
                            // if we cannot deserialize it, just ignore this identity
                            }
                            // Ignore what is not an identity Ethereum address
                            if (identity && identity.type === types_1.IdentityTypes.TYPE.ETHEREUM_ADDRESS) {
                                // Check if we can decrypt the key with this identity
                                if (this.decryptionProvider && (yield this.decryptionProvider.isIdentityRegistered(identity)) || this.cipherProvider && typeof this.cipherProvider.isIdentityRegistered === 'function' && (yield this.cipherProvider.isIdentityRegistered(identity))) {
                                    try {
                                        const key = MultiFormat.deserialize(keys[identityMultiFormatted]);
                                        decryptedChannelKey = this.cipherProvider ? yield this.cipherProvider.decrypt(key, {
                                            identity
                                        }) : yield (_a = this.decryptionProvider) === null || _a === void 0 ? void 0 : _a.decrypt(key, identity);
                                    } catch (e) {
                                        errorReason = e.message;
                                    }
                                }
                            }
                        }
                        return decryptedChannelKey;
                    }), Promise.resolve(''));
            }
            if (channelKey === '' || !channelKeyMethod) {
                throw new Error(`Impossible to decrypt the channel key from this transaction (${errorReason})`);
            }
            return {
                key: channelKey,
                method: channelKeyMethod
            };
        });
    }
}
exports.default = TransactionsParser; //# sourceMappingURL=transactions-parser.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/channel-parser.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const transactions_parser_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/transactions-parser.js [app-rsc] (ecmascript)");
/**
 * Class to parse channels from a list of transactions and their channel id
 */ class ChannelParser {
    constructor(decryptionProvider, cipherProvider){
        this.transactionParser = new transactions_parser_1.default(decryptionProvider, cipherProvider);
        this.cipherProvider = cipherProvider;
    }
    /**
     * Decrypts and cleans a channel by removing the wrong transactions
     *
     * @param channelId the channelId of the channel
     * @param transactions the transactions of the channel to decrypt and clean
     * @returns Promise resolving the kept transactions and the ignored ones with the reason
     */ decryptAndCleanChannel(channelId, transactions) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            let channelType = types_1.TransactionTypes.ChannelType.UNKNOWN;
            let encryptionMethod;
            // Search for channel key
            const { channelKey } = yield this.getChannelTypeAndChannelKey(channelId, transactions);
            // use of .reduce instead of .map to keep a sequential execution
            const validAndIgnoredTransactions = yield transactions.reduce((accumulatorPromise, timestampedTransaction)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    const result = yield accumulatorPromise;
                    let parsedData;
                    try {
                        // Parse the transaction from data-access to get a transaction object and the channel key if encrypted
                        parsedData = yield this.transactionParser.parsePersistedTransaction(timestampedTransaction.transaction, channelType, channelKey, encryptionMethod);
                    } catch (error) {
                        return result.concat([
                            {
                                ignored: {
                                    reason: error.message,
                                    transaction: timestampedTransaction
                                },
                                valid: null
                            }
                        ]);
                    }
                    const transaction = parsedData.transaction;
                    // We check if the transaction is valid
                    const error = yield transaction.getError();
                    if (error !== '') {
                        return result.concat([
                            {
                                ignored: {
                                    reason: error,
                                    transaction: timestampedTransaction
                                },
                                valid: null
                            }
                        ]);
                    }
                    // If this is the first transaction, it removes the transaction if the hash is not the same as the channelId
                    if (channelType === types_1.TransactionTypes.ChannelType.UNKNOWN) {
                        const hash = yield transaction.getHash();
                        if (hash !== channelId) {
                            return result.concat([
                                {
                                    ignored: {
                                        reason: 'as first transaction, the hash of the transaction do not match the channelId',
                                        transaction: timestampedTransaction
                                    },
                                    valid: null
                                }
                            ]);
                        }
                        // from the first valid transaction, we can deduce the type of the channel
                        channelType = parsedData.channelKey ? types_1.TransactionTypes.ChannelType.ENCRYPTED : types_1.TransactionTypes.ChannelType.CLEAR;
                        encryptionMethod = parsedData.encryptionMethod;
                    }
                    const data = yield transaction.getData();
                    // add the decrypted transaction as valid
                    return result.concat([
                        {
                            ignored: null,
                            valid: {
                                state: timestampedTransaction.state,
                                timestamp: timestampedTransaction.timestamp,
                                transaction: {
                                    data
                                }
                            }
                        }
                    ]);
                }), Promise.resolve([]));
            const ignoredTransactions = validAndIgnoredTransactions.map((elem)=>elem.ignored);
            const cleanTransactions = validAndIgnoredTransactions.map((elem)=>elem.valid);
            // The cleaned result
            return {
                encryptionMethod,
                ignoredTransactions,
                transactions: cleanTransactions
            };
        });
    }
    /**
     * Get channel type and channel key from a list of transactions (if applicable)
     *
     * @param _channelId the channelId of the channel
     * @param transactions the transactions of the channel to decrypt and clean
     * @returns Promise resolving the channel type and the channel key (if applicable)
     */ getChannelTypeAndChannelKey(// TODO: Consider removing channelId argument
    _channelId, transactions) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // use of .reduce instead of .map to keep a sequential execution
            const channelTypeAndKey = yield transactions.reduce((accumulatorPromise, timestampedTransaction)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    var _a;
                    const result = yield accumulatorPromise;
                    // Skip remaining transactions if channel is CLEAR or after channelKey is found
                    if (result.channelType === types_1.TransactionTypes.ChannelType.CLEAR || result.channelKey) {
                        return result;
                    }
                    let parsedData;
                    try {
                        // Parse the transaction from data-access to get a transaction object and the channel key if encrypted
                        parsedData = yield this.transactionParser.parsePersistedTransaction(timestampedTransaction.transaction, result.channelType, result.channelKey, result.encryptionMethod);
                    } catch (error) {
                        // If the transaction is encrypted but the channel key is not found, save channelType and encryptionMethod
                        if (((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.startsWith('Impossible to decrypt the channel key from this transaction')) && result.channelType === types_1.TransactionTypes.ChannelType.UNKNOWN) {
                            result.channelType = types_1.TransactionTypes.ChannelType.ENCRYPTED;
                            result.encryptionMethod = timestampedTransaction.transaction.encryptionMethod;
                        }
                        // Error during the parsing, we just ignore this transaction
                        return result;
                    }
                    const transaction = parsedData.transaction;
                    // We check if the transaction is valid
                    const error = yield transaction.getError();
                    if (error !== '') {
                        // Error in the transaction, we just ignore it
                        return result;
                    }
                    // We can deduce the type of the channel
                    result.channelType = parsedData.channelKey ? types_1.TransactionTypes.ChannelType.ENCRYPTED : types_1.TransactionTypes.ChannelType.CLEAR;
                    // we keep the channelKey for this channel
                    result.channelKey = parsedData.channelKey;
                    // we keep the encryption method for this channel
                    result.encryptionMethod = parsedData.encryptionMethod;
                    return result;
                }), Promise.resolve({
                channelKey: undefined,
                channelType: types_1.TransactionTypes.ChannelType.UNKNOWN,
                encryptionMethod: undefined
            }));
            return channelTypeAndKey;
        });
    }
}
exports.default = ChannelParser; //# sourceMappingURL=channel-parser.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/transactions-factory.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Class to create transactions (clear and encrypted)
 */ class TransactionsFactory {
    /**
     * Creates a clear transaction with data
     *
     * @param data The data to create the transaction with
     * @returns the transaction
     */ static createClearTransaction(data) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            try {
                JSON.parse(data);
            } catch (error) {
                throw new Error('Data not parsable');
            }
            return {
                data
            };
        });
    }
    /**
     * Creates an encrypted transaction without a channel key
     *
     * @param data The data to create the transaction with
     * @param encryptionParams Array of the encryption parameters to encrypt the key with
     * @returns the encrypted transaction
     */ static createEncryptedTransactionInNewChannel(data, encryptionParams, cipherProvider) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // Generate a key for the AES encryption
            const symmetricKey = yield (0, utils_1.generate32BufferKey)();
            // Encrypt the data with the key and the AES256-GCM algorithm
            const encryptedData = yield (0, utils_1.encrypt)(data, {
                key: symmetricKey,
                method: types_1.EncryptionTypes.METHOD.AES256_GCM
            });
            try {
                JSON.parse(data);
            } catch (error) {
                throw new Error('Data not parsable');
            }
            let encryptionMethod = '';
            let keys = {};
            // TODO: refactor this part once the decryption provider is removed and the cipher provider is used
            if (encryptionParams.every((encryptionParam)=>encryptionParam.method === types_1.EncryptionTypes.METHOD.ECIES)) {
                encryptionMethod = `${types_1.EncryptionTypes.METHOD.ECIES}-${types_1.EncryptionTypes.METHOD.AES256_GCM}`;
                // Compute key encryption and identity hash for every encryption parameters given
                const encryptedKeyAndIdentityHashesPromises = encryptionParams.map((encryptionParam)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                        const identityEncryption = (0, utils_1.getIdentityFromEncryptionParams)(encryptionParam);
                        const multiFormattedIdentity = MultiFormat.serialize(identityEncryption);
                        if (cipherProvider && 'supportedMethods' in cipherProvider && 'supportedIdentityTypes' in cipherProvider && 'isIdentityRegistered' in cipherProvider) {
                            const encryptedKey = yield cipherProvider.encrypt(symmetricKey, {
                                encryptionParams
                            });
                            return {
                                encryptedKey,
                                multiFormattedIdentity
                            };
                        } else {
                            const encryptedKey = yield (0, utils_1.encrypt)(symmetricKey, encryptionParam);
                            return {
                                encryptedKey,
                                multiFormattedIdentity
                            };
                        }
                    }));
                const encryptedKeyAndIdentityHashes = yield Promise.all(encryptedKeyAndIdentityHashesPromises);
                // Create the encrypted keys object - Encrypted keys indexed by identity multi-format
                keys = encryptedKeyAndIdentityHashes.reduce((allKeys, keyAndHash)=>{
                    const encryptedKeySerialized = MultiFormat.serialize(keyAndHash.encryptedKey);
                    allKeys[keyAndHash.multiFormattedIdentity] = encryptedKeySerialized;
                    return allKeys;
                }, {});
            } else if (encryptionParams.every((encryptionParam)=>encryptionParam.method === types_1.EncryptionTypes.METHOD.KMS)) {
                encryptionMethod = `${types_1.EncryptionTypes.METHOD.KMS}-${types_1.EncryptionTypes.METHOD.AES256_GCM}`;
                if (!cipherProvider) {
                    throw new Error('cipherProvider is required for KMS encryption');
                }
                const encryptResponse = yield cipherProvider.encrypt(symmetricKey, {
                    encryptionParams
                });
                if (!encryptResponse) {
                    throw new Error('Invalid encryption response from cipher provider');
                }
                keys = Object.fromEntries(encryptionParams.map((encryptionParam)=>{
                    return [
                        encryptionParam.key,
                        MultiFormat.serialize({
                            type: types_1.EncryptionTypes.METHOD.KMS,
                            value: JSON.stringify(encryptResponse)
                        })
                    ];
                }));
            } else {
                throw new Error(`encryptionParams method must be all: ${types_1.EncryptionTypes.METHOD.ECIES} or ${types_1.EncryptionTypes.METHOD.KMS}`);
            }
            const encryptedDataSerialized = MultiFormat.serialize(encryptedData);
            return {
                encryptedData: encryptedDataSerialized,
                keys,
                encryptionMethod
            };
        });
    }
    /**
     * Creates an encrypted transaction with a channel key
     *
     * @param data The data to create the transaction with
     * @param channelKey Channel key use to encrypt the transaction
     * @param encryptionParams Array of additional encryption parameters to encrypt the key with
  
     * @returns the encrypted transaction
     */ static createEncryptedTransaction(data, channelKey, encryptionParams = [], cipherProvider) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // check if the encryption method is the good one
            if (channelKey.method !== types_1.EncryptionTypes.METHOD.AES256_GCM) {
                throw new Error(`encryption method not supported for the channel key: ${channelKey.method}`);
            }
            // Encrypt the data with the key and the AES256-GCM algorithm
            const encryptedData = yield (0, utils_1.encrypt)(data, channelKey);
            try {
                JSON.parse(data);
            } catch (error) {
                throw new Error('Data not parsable');
            }
            const encryptedDataSerialized = MultiFormat.serialize(encryptedData);
            let keys = {};
            if (encryptionParams.length === 0) {
                return {
                    encryptedData: encryptedDataSerialized
                };
            } else {
                // FIXME: Refactor, duplicated from createEncryptedTransactionInNewChannel
                // Check that all the encryption parameters given are ECIES (the only encryption method supported for now)
                if (encryptionParams.every((encryptionParam)=>encryptionParam.method === types_1.EncryptionTypes.METHOD.ECIES)) {
                    // Compute key encryption and identity hash for every encryption parameters given
                    const encryptedKeyAndIdentityHashesPromises = encryptionParams.map((encryptionParam)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                            const identityEncryption = (0, utils_1.getIdentityFromEncryptionParams)(encryptionParam);
                            const multiFormattedIdentity = MultiFormat.serialize(identityEncryption);
                            if (cipherProvider && 'supportedMethods' in cipherProvider && 'supportedIdentityTypes' in cipherProvider && 'isIdentityRegistered' in cipherProvider) {
                                const encryptedKey = yield cipherProvider.encrypt(channelKey.key, {
                                    encryptionParams
                                });
                                return {
                                    encryptedKey,
                                    multiFormattedIdentity
                                };
                            } else {
                                const encryptedKey = yield (0, utils_1.encrypt)(channelKey.key, encryptionParam);
                                return {
                                    encryptedKey,
                                    multiFormattedIdentity
                                };
                            }
                        }));
                    const encryptedKeyAndIdentityHashes = yield Promise.all(encryptedKeyAndIdentityHashesPromises);
                    // Create the encrypted keys object - Encrypted keys indexed by identity multi-format
                    keys = encryptedKeyAndIdentityHashes.reduce((allKeys, keyAndHash)=>{
                        const encryptedKeySerialized = MultiFormat.serialize(keyAndHash.encryptedKey);
                        allKeys[keyAndHash.multiFormattedIdentity] = encryptedKeySerialized;
                        return allKeys;
                    }, {});
                } else if (encryptionParams.every((encryptionParam)=>encryptionParam.method === types_1.EncryptionTypes.METHOD.KMS)) {
                    if (!cipherProvider) {
                        throw new Error('cipherProvider is required for KMS encryption');
                    }
                    const encryptResponse = yield cipherProvider.encrypt(channelKey.key, {
                        encryptionParams
                    });
                    if (!encryptResponse) {
                        throw new Error('Invalid encryption response from cipher provider');
                    }
                    keys = Object.fromEntries(encryptionParams.map((encryptionParam)=>{
                        return [
                            encryptionParam.key,
                            MultiFormat.serialize({
                                type: types_1.EncryptionTypes.METHOD.KMS,
                                value: JSON.stringify(encryptResponse)
                            })
                        ];
                    }));
                } else {
                    throw new Error(`encryptionParams method must be all: ${types_1.EncryptionTypes.METHOD.ECIES} or ${types_1.EncryptionTypes.METHOD.KMS}`);
                }
                return {
                    encryptedData: encryptedDataSerialized,
                    keys
                };
            }
        });
    }
}
exports.default = TransactionsFactory; //# sourceMappingURL=transactions-factory.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/transaction-manager.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const channel_parser_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/channel-parser.js [app-rsc] (ecmascript)");
const transactions_factory_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/transactions-factory.js [app-rsc] (ecmascript)");
/**
 * Implementation of TransactionManager layer without encryption
 */ class TransactionManager {
    constructor(dataAccess, decryptionProvider, cipherProvider){
        this.dataAccess = dataAccess;
        this.channelParser = new channel_parser_1.default(decryptionProvider, cipherProvider);
        this.cipherProvider = cipherProvider;
    }
    /**
     * Persists a transaction and topics in storage. If encryptionParams is given, the transaction will be encrypted
     *
     * @param transactionData transaction to persist
     * @param channelId string to identify a group of transactions
     * @param topics list of string to topic the transaction
     * @param encryptionParams list of encryption parameters to encrypt the channel key with
     *
     * @returns object containing the meta-data of the persist
     */ persistTransaction(transactionData, channelId, topics = [], encryptionParams = []) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            let transaction = {};
            let channelEncryptionMethod;
            // compute hash to add it to the topics
            const hash = MultiFormat.serialize((0, utils_1.normalizeKeccak256Hash)(JSON.parse(transactionData)));
            // Need to create a new channel (only the first transaction can have the hash equals to the channel id)
            if (channelId === hash) {
                if (encryptionParams.length === 0) {
                    // create a clear channel
                    transaction = yield transactions_factory_1.default.createClearTransaction(transactionData);
                } else {
                    // create an encrypted channel
                    transaction = yield transactions_factory_1.default.createEncryptedTransactionInNewChannel(transactionData, encryptionParams, this.cipherProvider);
                    channelEncryptionMethod = transaction.encryptionMethod;
                }
            // Add the transaction to an existing channel
            } else {
                const resultGetTx = yield this.dataAccess.getTransactionsByChannelId(channelId);
                const { channelKey, channelType, encryptionMethod } = yield this.channelParser.getChannelTypeAndChannelKey(channelId, resultGetTx.result.transactions);
                if (channelType === types_1.TransactionTypes.ChannelType.UNKNOWN) {
                    throw new Error(`Impossible to retrieve the channel: ${channelId}`);
                }
                if (channelType === types_1.TransactionTypes.ChannelType.CLEAR) {
                    // add the transaction to a clear channel
                    transaction = yield transactions_factory_1.default.createClearTransaction(transactionData);
                }
                if (channelType === types_1.TransactionTypes.ChannelType.ENCRYPTED) {
                    if (!channelKey) {
                        throw new Error(`Impossible to decrypt the channel key of: ${channelId}`);
                    }
                    transaction = yield transactions_factory_1.default.createEncryptedTransaction(transactionData, channelKey, encryptionParams, this.cipherProvider);
                    channelEncryptionMethod = encryptionMethod;
                }
            }
            const persistResult = yield this.dataAccess.persistTransaction(transaction, channelId, // add the hash to the topics
            topics.concat([
                hash
            ]));
            // Create the return result with EventEmitter
            const result = Object.assign(new events_1.EventEmitter(), {
                meta: {
                    dataAccessMeta: persistResult.meta,
                    encryptionMethod: channelEncryptionMethod,
                    transactionData: transaction,
                    topics: topics.concat([
                        hash
                    ])
                },
                result: {}
            });
            // When receive the confirmation from data-access propagate to the higher layer
            persistResult.on('confirmed', (resultPersistTransaction)=>{
                const resultAfterConfirmation = {
                    meta: {
                        dataAccessMeta: resultPersistTransaction.meta,
                        encryptionMethod: channelEncryptionMethod
                    },
                    result: {}
                };
                // propagate the confirmation
                result.emit('confirmed', resultAfterConfirmation);
            }).on('error', (error)=>{
                result.emit('error', error);
            });
            return result;
        });
    }
    /**
     * Gets a list of transactions from a channel
     *
     * later it will handle decryption
     *
     * @param channelId channel id to retrieve the transactions from
     * @param timestampBoundaries timestamp boundaries of the transactions search
     * @returns list of transactions of the channel
     */ getTransactionsByChannelId(channelId, timestampBoundaries) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const resultGetTx = yield this.dataAccess.getTransactionsByChannelId(channelId, timestampBoundaries);
            // Decrypts and cleans the channel from the data-access layers
            const { transactions, ignoredTransactions, encryptionMethod } = yield this.channelParser.decryptAndCleanChannel(channelId, resultGetTx.result.transactions);
            const meta = {
                dataAccessMeta: resultGetTx.meta,
                encryptionMethod,
                ignoredTransactions
            };
            // Remove encryptionMethod from meta if it's undefined
            // to make it clearer the channel is not encrypted.
            if (!encryptionMethod) {
                delete meta.encryptionMethod;
            }
            return {
                meta,
                result: {
                    transactions
                }
            };
        });
    }
    /**
     * Gets a list of channels indexed by topic
     *
     * @param topic topic to retrieve the channels from
     * @param updatedBetween filter the channel whose received new data in the boundaries
     * @returns list of channels indexed by topic
     */ getChannelsByTopic(topic, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const resultGetTx = yield this.dataAccess.getChannelsByTopic(topic, updatedBetween, page, pageSize);
            return this.parseMultipleChannels(resultGetTx);
        });
    }
    /**
     * Gets a list of channels indexed by topics
     *
     * @param topics topics to retrieve the channels from
     * @param updatedBetween filter the channel whose hasn't received new data in the boundaries
     * @returns list of channels indexed by topics
     */ getChannelsByMultipleTopics(topics, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const resultGetTx = yield this.dataAccess.getChannelsByMultipleTopics(topics, updatedBetween, page, pageSize);
            return this.parseMultipleChannels(resultGetTx);
        });
    }
    /**
     * Parses the return of getChannels function from data-access layer
     *
     * @param resultGetTx returned value from getChannels function
     * @returns decrypted and cleaned channels in the right format
     */ parseMultipleChannels(resultGetTx) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // Get the channels from the data-access layers to decrypt and clean them one by one
            const result = yield Object.keys(resultGetTx.result.transactions).reduce((accumulatorPromise, channelId)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                    const cleaned = yield this.channelParser.decryptAndCleanChannel(channelId, resultGetTx.result.transactions[channelId]);
                    // await for the accumulator promise at the end to parallelize the calls to decryptAndCleanChannel()
                    const accumulator = yield accumulatorPromise;
                    accumulator.transactions[channelId] = cleaned.transactions;
                    accumulator.ignoredTransactions[channelId] = cleaned.ignoredTransactions;
                    return accumulator;
                }), Promise.resolve({
                transactions: {},
                ignoredTransactions: {}
            }));
            return {
                meta: {
                    dataAccessMeta: resultGetTx.meta,
                    ignoredTransactions: result.ignoredTransactions
                },
                result: {
                    transactions: result.transactions
                }
            };
        });
    }
}
exports.default = TransactionManager; //# sourceMappingURL=transaction-manager.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TransactionManager = void 0;
var transaction_manager_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+transaction-manager@0.40.0/node_modules/@requestnetwork/transaction-manager/dist/transaction-manager.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "TransactionManager", {
    enumerable: true,
    get: function() {
        return transaction_manager_1.default;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getInvoiceTaxTotal = exports.getInvoiceLineTotalWithoutTax = exports.getInvoiceTotalWithoutTax = exports.getInvoiceLineTotal = exports.getInvoiceTotal = void 0;
const ethers_1 = __turbopack_require__("[project]/node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js [app-rsc] (ecmascript)");
const getInvoiceTotal = (invoice)=>{
    return invoice.invoiceItems.reduce((acc, item)=>acc.add((0, exports.getInvoiceLineTotal)(item)), ethers_1.BigNumber.from(0));
};
exports.getInvoiceTotal = getInvoiceTotal;
const getInvoiceLineTotal = (item)=>{
    // Support for rnf_version < 0.0.3
    const tax = item.taxPercent ? {
        type: 'percentage',
        amount: String(item.taxPercent)
    } : item.tax || {
        type: 'percentage',
        amount: '0'
    };
    const taxPercent = tax.amount && tax.type === 'percentage' ? Number(tax.amount) + 100 : 100;
    const taxFixed = tax.amount && tax.type === 'fixed' ? ethers_1.BigNumber.from(tax.amount) : ethers_1.BigNumber.from(0);
    const discount = item.discount ? ethers_1.BigNumber.from(item.discount) : ethers_1.BigNumber.from(0);
    return ethers_1.BigNumber.from(ethers_1.FixedNumber.from(item.unitPrice)// accounts for floating quantities
    .mulUnsafe(ethers_1.FixedNumber.fromString(item.quantity.toString())).subUnsafe(ethers_1.FixedNumber.from(discount))// accounts for floating taxes
    .mulUnsafe(ethers_1.FixedNumber.fromString(taxPercent.toString()))// Removes the percentage multiplier
    .divUnsafe(ethers_1.FixedNumber.from(100)).addUnsafe(ethers_1.FixedNumber.from(taxFixed)).round(0).toString()// Removes the .0
    .split('.')[0]);
};
exports.getInvoiceLineTotal = getInvoiceLineTotal;
const getInvoiceTotalWithoutTax = (invoice)=>{
    return invoice.invoiceItems.reduce((acc, item)=>acc.add((0, exports.getInvoiceLineTotalWithoutTax)(item)), ethers_1.BigNumber.from(0));
};
exports.getInvoiceTotalWithoutTax = getInvoiceTotalWithoutTax;
const getInvoiceLineTotalWithoutTax = (item)=>{
    const discount = item.discount ? ethers_1.BigNumber.from(item.discount) : ethers_1.BigNumber.from(0);
    return ethers_1.BigNumber.from(ethers_1.FixedNumber.from(item.unitPrice)// accounts for floating quantities
    .mulUnsafe(ethers_1.FixedNumber.fromString(item.quantity.toString())).subUnsafe(ethers_1.FixedNumber.from(discount)).round(0).toString().split('.')[0]);
};
exports.getInvoiceLineTotalWithoutTax = getInvoiceLineTotalWithoutTax;
const getInvoiceTaxTotal = (invoice)=>{
    const invoiceTotalWithoutTax = invoice.invoiceItems.reduce((acc, item)=>acc.add((0, exports.getInvoiceLineTotalWithoutTax)(item)), ethers_1.BigNumber.from(0));
    const invoiceTotal = invoice.invoiceItems.reduce((acc, item)=>acc.add((0, exports.getInvoiceLineTotal)(item)), ethers_1.BigNumber.from(0));
    return invoiceTotal.sub(invoiceTotalWithoutTax);
};
exports.getInvoiceTaxTotal = getInvoiceTaxTotal; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
tslib_1.__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/utils.js [app-rsc] (ecmascript)"), exports); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/address.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"$id\":\"http://json-schema.org/address\",\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"description\":\"An Address following the convention of http://microformats.org/wiki/hcard\",\"type\":\"object\",\"properties\":{\"post-office-box\":{\"type\":\"string\"},\"extended-address\":{\"type\":\"string\"},\"street-address\":{\"type\":\"string\"},\"locality\":{\"type\":\"string\"},\"region\":{\"type\":\"string\"},\"postal-code\":{\"type\":\"string\"},\"country-name\":{\"type\":\"string\"}},\"dependencies\":{\"post-office-box\":[\"street-address\"],\"extended-address\":[\"street-address\"]}}"));}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/rnf_invoice-0.0.1.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"description\":\"Request Network Format of an invoice\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"meta\",\"invoiceNumber\",\"creationDate\",\"invoiceItems\"],\"properties\":{\"meta\":{\"description\":\"Meta information about the format\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"format\",\"version\"],\"properties\":{\"format\":{\"const\":\"rnf_invoice\"},\"version\":{\"const\":\"0.0.1\"}}},\"creationDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"invoiceNumber\":{\"type\":\"string\"},\"purchaseOrderId\":{\"type\":\"string\"},\"note\":{\"type\":\"string\"},\"terms\":{\"type\":\"string\"},\"sellerInfo\":{\"description\":\"Seller information\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"email\":{\"type\":\"string\",\"format\":\"email\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"businessName\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"address\":{\"$ref\":\"http://json-schema.org/address\"},\"taxRegistration\":{\"type\":\"string\"},\"companyRegistration\":{\"type\":\"string\"},\"miscellaneous\":{\"type\":\"object\"}}},\"buyerInfo\":{\"description\":\"Buyer information\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"email\":{\"type\":\"string\",\"format\":\"email\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"businessName\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"address\":{\"$ref\":\"http://json-schema.org/address\"},\"taxRegistration\":{\"type\":\"string\"},\"miscellaneous\":{\"type\":\"object\"}}},\"invoiceItems\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"name\",\"quantity\",\"unitPrice\",\"taxPercent\",\"currency\"],\"properties\":{\"name\":{\"type\":\"string\"},\"reference\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\",\"minimum\":0},\"unitPrice\":{\"type\":\"number\",\"minimum\":0},\"discount\":{\"type\":\"number\"},\"taxPercent\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\",\"minLength\":2},\"deliveryDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"deliveryPeriod\":{\"type\":\"string\"}}}},\"paymentTerms\":{\"description\":\"Payment terms\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"dueDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"lateFeesPercent\":{\"type\":\"number\"},\"lateFeesFix\":{\"type\":\"number\"},\"miscellaneous\":{\"type\":\"object\"}}},\"miscellaneous\":{\"type\":\"object\"}}}"));}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/rnf_invoice-0.0.2.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"description\":\"Request Network Format of an invoice\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"meta\",\"invoiceNumber\",\"creationDate\",\"invoiceItems\"],\"properties\":{\"meta\":{\"description\":\"Meta information about the format\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"format\",\"version\"],\"properties\":{\"format\":{\"const\":\"rnf_invoice\"},\"version\":{\"const\":\"0.0.2\"}}},\"creationDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"invoiceNumber\":{\"type\":\"string\"},\"purchaseOrderId\":{\"type\":\"string\"},\"note\":{\"type\":\"string\"},\"terms\":{\"type\":\"string\"},\"sellerInfo\":{\"description\":\"Seller information\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"email\":{\"type\":\"string\",\"format\":\"email\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"businessName\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"address\":{\"$ref\":\"http://json-schema.org/address\"},\"taxRegistration\":{\"type\":\"string\"},\"companyRegistration\":{\"type\":\"string\"},\"miscellaneous\":{\"type\":\"object\"}}},\"buyerInfo\":{\"description\":\"Buyer information\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"email\":{\"type\":\"string\",\"format\":\"email\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"businessName\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"address\":{\"$ref\":\"http://json-schema.org/address\"},\"taxRegistration\":{\"type\":\"string\"},\"companyRegistration\":{\"type\":\"string\"},\"miscellaneous\":{\"type\":\"object\"}}},\"invoiceItems\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"name\",\"quantity\",\"unitPrice\",\"taxPercent\",\"currency\"],\"properties\":{\"name\":{\"type\":\"string\"},\"reference\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\",\"minimum\":0},\"unitPrice\":{\"type\":\"string\",\"pattern\":\"^\\\\d+$\"},\"discount\":{\"type\":\"string\",\"pattern\":\"^\\\\d+$\"},\"taxPercent\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\",\"minLength\":2},\"deliveryDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"deliveryPeriod\":{\"type\":\"string\"}}}},\"paymentTerms\":{\"description\":\"Payment terms\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"dueDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"lateFeesPercent\":{\"type\":\"number\"},\"lateFeesFix\":{\"type\":\"string\",\"pattern\":\"^\\\\d+$\"},\"miscellaneous\":{\"type\":\"object\"}}},\"miscellaneous\":{\"type\":\"object\"}}}"));}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/rnf_invoice-0.0.3.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"description\":\"Request Network Format of an invoice\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"meta\",\"invoiceNumber\",\"creationDate\",\"invoiceItems\"],\"properties\":{\"meta\":{\"description\":\"Meta information about the format\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"format\",\"version\"],\"properties\":{\"format\":{\"const\":\"rnf_invoice\"},\"version\":{\"const\":\"0.0.3\"}}},\"creationDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"invoiceNumber\":{\"type\":\"string\"},\"purchaseOrderId\":{\"type\":\"string\"},\"note\":{\"type\":\"string\"},\"terms\":{\"type\":\"string\"},\"sellerInfo\":{\"description\":\"Seller information\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"email\":{\"type\":\"string\",\"format\":\"email\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"businessName\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"address\":{\"$ref\":\"http://json-schema.org/address\"},\"taxRegistration\":{\"type\":\"string\"},\"companyRegistration\":{\"type\":\"string\"},\"miscellaneous\":{\"type\":\"object\"}}},\"buyerInfo\":{\"description\":\"Buyer information\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"email\":{\"type\":\"string\",\"format\":\"email\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"businessName\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"address\":{\"$ref\":\"http://json-schema.org/address\"},\"taxRegistration\":{\"type\":\"string\"},\"companyRegistration\":{\"type\":\"string\"},\"miscellaneous\":{\"type\":\"object\"}}},\"invoiceItems\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"name\",\"quantity\",\"unitPrice\",\"tax\",\"currency\"],\"properties\":{\"name\":{\"type\":\"string\"},\"reference\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\",\"minimum\":0},\"unitPrice\":{\"type\":\"string\",\"pattern\":\"^\\\\d+$\"},\"discount\":{\"type\":\"string\",\"pattern\":\"^\\\\d+$\"},\"tax\":{\"description\":\"Tax information about the invoice\",\"type\":\"object\",\"additionalProperties\":false,\"required\":[\"amount\",\"type\"],\"properties\":{\"amount\":{\"type\":\"string\"},\"type\":{\"type\":\"string\",\"enum\":[\"percentage\",\"fixed\"]}},\"if\":{\"properties\":{\"type\":{\"const\":\"percentage\"}}},\"then\":{\"properties\":{\"amount\":{\"pattern\":\"^\\\\d*\\\\.?\\\\d+$\"}}},\"else\":{\"properties\":{\"amount\":{\"pattern\":\"^\\\\d+$\"}}}},\"currency\":{\"type\":\"string\",\"minLength\":2},\"deliveryDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"deliveryPeriod\":{\"type\":\"string\"}}}},\"paymentTerms\":{\"description\":\"Payment terms\",\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"dueDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"lateFeesPercent\":{\"type\":\"number\"},\"lateFeesFix\":{\"type\":\"string\",\"pattern\":\"^\\\\d+$\"},\"miscellaneous\":{\"type\":\"object\"}}},\"miscellaneous\":{\"type\":\"object\"}}}"));}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.formats = void 0;
const rnf_invoice_0_0_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/rnf_invoice-0.0.1.json (json)");
const rnf_invoice_0_0_2 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/rnf_invoice-0.0.2.json (json)");
const rnf_invoice_0_0_3 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/rnf_invoice-0.0.3.json (json)");
// Re-export the JSON files structured by format and version.
// NB: A dynamic require (require(`${format}/${format}-${version}.json`)) would prevent tree-shaking
exports.formats = {
    rnf_invoice: {
        '0.0.1': rnf_invoice_0_0_1,
        '0.0.2': rnf_invoice_0_0_2,
        '0.0.3': rnf_invoice_0_0_3
    }
}; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isKnownFormat = exports.validate = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const AJV = __turbopack_require__("[project]/node_modules/.pnpm/ajv@6.12.4/node_modules/ajv/lib/ajv.js [app-rsc] (ecmascript)");
const jsonSchema = __turbopack_require__("[project]/node_modules/.pnpm/ajv@6.12.4/node_modules/ajv/lib/refs/json-schema-draft-06.json (json)");
const schemaAddress = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/address.json (json)");
const format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/index.js [app-rsc] (ecmascript)");
/**
 * validation of data
 * @param   data    object you want to validate
 * @return  object.valid == true if the json is valid, object.valid == false and object.errors otherwise.
 */ function validate(data) {
    var _a;
    const validationTool = new AJV().addMetaSchema(jsonSchema).addSchema(schemaAddress);
    // Check the meta information
    if (!data.meta) {
        return {
            valid: false,
            errors: [
                {
                    message: 'meta not found'
                }
            ]
        };
    }
    if (!data.meta.format) {
        return {
            valid: false,
            errors: [
                {
                    message: 'meta.format not found'
                }
            ]
        };
    }
    if (!data.meta.version) {
        return {
            valid: false,
            errors: [
                {
                    message: 'meta.version not found'
                }
            ]
        };
    }
    // Try to retrieve the schema json
    const schema = (_a = format_1.formats[data.meta.format]) === null || _a === void 0 ? void 0 : _a[data.meta.version];
    if (!schema) {
        return {
            valid: false,
            errors: [
                {
                    message: 'format not found'
                }
            ]
        };
    }
    // Compile and Validate
    const validate = validationTool.compile(schema);
    const valid = validate(data);
    // If not valid return the error
    if (!valid) {
        return {
            valid: false,
            errors: validate.errors
        };
    }
    return {
        valid: true
    };
}
exports.validate = validate;
/**
 * Check if the object format is known
 * @param data the object to check
 * @return true if the object format is known
 */ function isKnownFormat(data) {
    return !!data.meta && data.meta.format === 'rnf_invoice';
}
exports.isKnownFormat = isKnownFormat;
// FIXME it would be better to export a subpath, ie @requestnetwork/data-format/invoice,
// using `exports` as introduced in Node 12.7.0 (https://nodejs.org/api/packages.html#packages_subpath_exports)
// but typescript doesn't currently support this (https://github.com/microsoft/TypeScript/issues/33079)
// NB: compatibilty with browser would need to be tested.
tslib_1.__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-format@0.19.5/node_modules/@requestnetwork/data-format/dist/format/rnf_invoice/index.js [app-rsc] (ecmascript)"), exports); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/dist/es5/uri.all.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */ (function(global, factory) {
    ("TURBOPACK compile-time truthy", 1) ? factory(exports) : ("TURBOPACK unreachable", undefined);
})(this, function(exports1) {
    'use strict';
    function merge() {
        for(var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++){
            sets[_key] = arguments[_key];
        }
        if (sets.length > 1) {
            sets[0] = sets[0].slice(0, -1);
            var xl = sets.length - 1;
            for(var x = 1; x < xl; ++x){
                sets[x] = sets[x].slice(1, -1);
            }
            sets[xl] = sets[xl].slice(1);
            return sets.join('');
        } else {
            return sets[0];
        }
    }
    function subexp(str) {
        return "(?:" + str + ")";
    }
    function typeOf(o) {
        return o === undefined ? "undefined" : o === null ? "null" : Object.prototype.toString.call(o).split(" ").pop().split("]").shift().toLowerCase();
    }
    function toUpperCase(str) {
        return str.toUpperCase();
    }
    function toArray(obj) {
        return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== "number" || obj.split || obj.setInterval || obj.call ? [
            obj
        ] : Array.prototype.slice.call(obj) : [];
    }
    function assign(target, source) {
        var obj = target;
        if (source) {
            for(var key in source){
                obj[key] = source[key];
            }
        }
        return obj;
    }
    function buildExps(isIRI) {
        var ALPHA$$ = "[A-Za-z]", CR$ = "[\\x0D]", DIGIT$$ = "[0-9]", DQUOTE$$ = "[\\x22]", HEXDIG$$ = merge(DIGIT$$, "[A-Fa-f]"), //case-insensitive
        LF$$ = "[\\x0A]", SP$$ = "[\\x20]", PCT_ENCODED$ = subexp(subexp("%[EFef]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%[89A-Fa-f]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%" + HEXDIG$$ + HEXDIG$$)), //expanded
        GEN_DELIMS$$ = "[\\:\\/\\?\\#\\[\\]\\@]", SUB_DELIMS$$ = "[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]", RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$), UCSCHAR$$ = isIRI ? "[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]" : "[]", //subset, excludes bidi control characters
        IPRIVATE$$ = isIRI ? "[\\uE000-\\uF8FF]" : "[]", //subset
        UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, "[\\-\\.\\_\\~]", UCSCHAR$$), SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, "[\\+\\-\\.]") + "*"), USERINFO$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\:]")) + "*"), DEC_OCTET$ = subexp(subexp("25[0-5]") + "|" + subexp("2[0-4]" + DIGIT$$) + "|" + subexp("1" + DIGIT$$ + DIGIT$$) + "|" + subexp("[1-9]" + DIGIT$$) + "|" + DIGIT$$), DEC_OCTET_RELAXED$ = subexp(subexp("25[0-5]") + "|" + subexp("2[0-4]" + DIGIT$$) + "|" + subexp("1" + DIGIT$$ + DIGIT$$) + "|" + subexp("0?[1-9]" + DIGIT$$) + "|0?0?" + DIGIT$$), //relaxed parsing rules
        IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + "\\." + DEC_OCTET_RELAXED$ + "\\." + DEC_OCTET_RELAXED$ + "\\." + DEC_OCTET_RELAXED$), H16$ = subexp(HEXDIG$$ + "{1,4}"), LS32$ = subexp(subexp(H16$ + "\\:" + H16$) + "|" + IPV4ADDRESS$), IPV6ADDRESS1$ = subexp(subexp(H16$ + "\\:") + "{6}" + LS32$), //                           6( h16 ":" ) ls32
        IPV6ADDRESS2$ = subexp("\\:\\:" + subexp(H16$ + "\\:") + "{5}" + LS32$), //                      "::" 5( h16 ":" ) ls32
        IPV6ADDRESS3$ = subexp(subexp(H16$) + "?\\:\\:" + subexp(H16$ + "\\:") + "{4}" + LS32$), //[               h16 ] "::" 4( h16 ":" ) ls32
        IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,1}" + H16$) + "?\\:\\:" + subexp(H16$ + "\\:") + "{3}" + LS32$), //[ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32
        IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,2}" + H16$) + "?\\:\\:" + subexp(H16$ + "\\:") + "{2}" + LS32$), //[ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32
        IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,3}" + H16$) + "?\\:\\:" + H16$ + "\\:" + LS32$), //[ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32
        IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,4}" + H16$) + "?\\:\\:" + LS32$), //[ *4( h16 ":" ) h16 ] "::"              ls32
        IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,5}" + H16$) + "?\\:\\:" + H16$), //[ *5( h16 ":" ) h16 ] "::"              h16
        IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,6}" + H16$) + "?\\:\\:"), //[ *6( h16 ":" ) h16 ] "::"
        IPV6ADDRESS$ = subexp([
            IPV6ADDRESS1$,
            IPV6ADDRESS2$,
            IPV6ADDRESS3$,
            IPV6ADDRESS4$,
            IPV6ADDRESS5$,
            IPV6ADDRESS6$,
            IPV6ADDRESS7$,
            IPV6ADDRESS8$,
            IPV6ADDRESS9$
        ].join("|")), ZONEID$ = subexp(subexp(UNRESERVED$$ + "|" + PCT_ENCODED$) + "+"), //RFC 6874
        IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + "\\%25" + ZONEID$), //RFC 6874
        IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp("\\%25|\\%(?!" + HEXDIG$$ + "{2})") + ZONEID$), //RFC 6874, with relaxed parsing rules
        IPVFUTURE$ = subexp("[vV]" + HEXDIG$$ + "+\\." + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\:]") + "+"), IP_LITERAL$ = subexp("\\[" + subexp(IPV6ADDRZ_RELAXED$ + "|" + IPV6ADDRESS$ + "|" + IPVFUTURE$) + "\\]"), //RFC 6874
        REG_NAME$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$)) + "*"), HOST$ = subexp(IP_LITERAL$ + "|" + IPV4ADDRESS$ + "(?!" + REG_NAME$ + ")" + "|" + REG_NAME$), PORT$ = subexp(DIGIT$$ + "*"), AUTHORITY$ = subexp(subexp(USERINFO$ + "@") + "?" + HOST$ + subexp("\\:" + PORT$) + "?"), PCHAR$ = subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\:\\@]")), SEGMENT$ = subexp(PCHAR$ + "*"), SEGMENT_NZ$ = subexp(PCHAR$ + "+"), SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\@]")) + "+"), PATH_ABEMPTY$ = subexp(subexp("\\/" + SEGMENT$) + "*"), PATH_ABSOLUTE$ = subexp("\\/" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + "?"), //simplified
        PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$), //simplified
        PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$), //simplified
        PATH_EMPTY$ = "(?!" + PCHAR$ + ")", PATH$ = subexp(PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$), QUERY$ = subexp(subexp(PCHAR$ + "|" + merge("[\\/\\?]", IPRIVATE$$)) + "*"), FRAGMENT$ = subexp(subexp(PCHAR$ + "|[\\/\\?]") + "*"), HIER_PART$ = subexp(subexp("\\/\\/" + AUTHORITY$ + PATH_ABEMPTY$) + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$), URI$ = subexp(SCHEME$ + "\\:" + HIER_PART$ + subexp("\\?" + QUERY$) + "?" + subexp("\\#" + FRAGMENT$) + "?"), RELATIVE_PART$ = subexp(subexp("\\/\\/" + AUTHORITY$ + PATH_ABEMPTY$) + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_EMPTY$), RELATIVE$ = subexp(RELATIVE_PART$ + subexp("\\?" + QUERY$) + "?" + subexp("\\#" + FRAGMENT$) + "?"), URI_REFERENCE$ = subexp(URI$ + "|" + RELATIVE$), ABSOLUTE_URI$ = subexp(SCHEME$ + "\\:" + HIER_PART$ + subexp("\\?" + QUERY$) + "?"), GENERIC_REF$ = "^(" + SCHEME$ + ")\\:" + subexp(subexp("\\/\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$ + ")") + subexp("\\?(" + QUERY$ + ")") + "?" + subexp("\\#(" + FRAGMENT$ + ")") + "?$", RELATIVE_REF$ = "^(){0}" + subexp(subexp("\\/\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_EMPTY$ + ")") + subexp("\\?(" + QUERY$ + ")") + "?" + subexp("\\#(" + FRAGMENT$ + ")") + "?$", ABSOLUTE_REF$ = "^(" + SCHEME$ + ")\\:" + subexp(subexp("\\/\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$ + ")") + subexp("\\?(" + QUERY$ + ")") + "?$", SAMEDOC_REF$ = "^" + subexp("\\#(" + FRAGMENT$ + ")") + "?$", AUTHORITY_REF$ = "^" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?$";
        return {
            NOT_SCHEME: new RegExp(merge("[^]", ALPHA$$, DIGIT$$, "[\\+\\-\\.]"), "g"),
            NOT_USERINFO: new RegExp(merge("[^\\%\\:]", UNRESERVED$$, SUB_DELIMS$$), "g"),
            NOT_HOST: new RegExp(merge("[^\\%\\[\\]\\:]", UNRESERVED$$, SUB_DELIMS$$), "g"),
            NOT_PATH: new RegExp(merge("[^\\%\\/\\:\\@]", UNRESERVED$$, SUB_DELIMS$$), "g"),
            NOT_PATH_NOSCHEME: new RegExp(merge("[^\\%\\/\\@]", UNRESERVED$$, SUB_DELIMS$$), "g"),
            NOT_QUERY: new RegExp(merge("[^\\%]", UNRESERVED$$, SUB_DELIMS$$, "[\\:\\@\\/\\?]", IPRIVATE$$), "g"),
            NOT_FRAGMENT: new RegExp(merge("[^\\%]", UNRESERVED$$, SUB_DELIMS$$, "[\\:\\@\\/\\?]"), "g"),
            ESCAPE: new RegExp(merge("[^]", UNRESERVED$$, SUB_DELIMS$$), "g"),
            UNRESERVED: new RegExp(UNRESERVED$$, "g"),
            OTHER_CHARS: new RegExp(merge("[^\\%]", UNRESERVED$$, RESERVED$$), "g"),
            PCT_ENCODED: new RegExp(PCT_ENCODED$, "g"),
            IPV4ADDRESS: new RegExp("^(" + IPV4ADDRESS$ + ")$"),
            IPV6ADDRESS: new RegExp("^\\[?(" + IPV6ADDRESS$ + ")" + subexp(subexp("\\%25|\\%(?!" + HEXDIG$$ + "{2})") + "(" + ZONEID$ + ")") + "?\\]?$") //RFC 6874, with relaxed parsing rules
        };
    }
    var URI_PROTOCOL = buildExps(false);
    var IRI_PROTOCOL = buildExps(true);
    var slicedToArray = function() {
        function sliceIterator(arr, i) {
            var _arr = [];
            var _n = true;
            var _d = false;
            var _e = undefined;
            try {
                for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally{
                try {
                    if (!_n && _i["return"]) _i["return"]();
                } finally{
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        return function(arr, i) {
            if (Array.isArray(arr)) {
                return arr;
            } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
            } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }
        };
    }();
    var toConsumableArray = function(arr) {
        if (Array.isArray(arr)) {
            for(var i = 0, arr2 = Array(arr.length); i < arr.length; i++)arr2[i] = arr[i];
            return arr2;
        } else {
            return Array.from(arr);
        }
    };
    /** Highest positive signed 32-bit float value */ var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
    /** Bootstring parameters */ var base = 36;
    var tMin = 1;
    var tMax = 26;
    var skew = 38;
    var damp = 700;
    var initialBias = 72;
    var initialN = 128; // 0x80
    var delimiter = '-'; // '\x2D'
    /** Regular expressions */ var regexPunycode = /^xn--/;
    var regexNonASCII = /[^\0-\x7E]/; // non-ASCII chars
    var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
    /** Error messages */ var errors = {
        'overflow': 'Overflow: input needs wider integers to process',
        'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
        'invalid-input': 'Invalid input'
    };
    /** Convenience shortcuts */ var baseMinusTMin = base - tMin;
    var floor = Math.floor;
    var stringFromCharCode = String.fromCharCode;
    /*--------------------------------------------------------------------------*/ /**
 * A generic error utility function.
 * @private
 * @param {String} type The error type.
 * @returns {Error} Throws a `RangeError` with the applicable error message.
 */ function error$1(type) {
        throw new RangeError(errors[type]);
    }
    /**
 * A generic `Array#map` utility function.
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} callback The function that gets called for every array
 * item.
 * @returns {Array} A new array of values returned by the callback function.
 */ function map(array, fn) {
        var result = [];
        var length = array.length;
        while(length--){
            result[length] = fn(array[length]);
        }
        return result;
    }
    /**
 * A simple `Array#map`-like wrapper to work with domain name strings or email
 * addresses.
 * @private
 * @param {String} domain The domain name or email address.
 * @param {Function} callback The function that gets called for every
 * character.
 * @returns {Array} A new string of characters returned by the callback
 * function.
 */ function mapDomain(string, fn) {
        var parts = string.split('@');
        var result = '';
        if (parts.length > 1) {
            // In email addresses, only the domain name should be punycoded. Leave
            // the local part (i.e. everything up to `@`) intact.
            result = parts[0] + '@';
            string = parts[1];
        }
        // Avoid `split(regex)` for IE8 compatibility. See #17.
        string = string.replace(regexSeparators, '\x2E');
        var labels = string.split('.');
        var encoded = map(labels, fn).join('.');
        return result + encoded;
    }
    /**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 * @see `punycode.ucs2.encode`
 * @see <https://mathiasbynens.be/notes/javascript-encoding>
 * @memberOf punycode.ucs2
 * @name decode
 * @param {String} string The Unicode input string (UCS-2).
 * @returns {Array} The new array of code points.
 */ function ucs2decode(string) {
        var output = [];
        var counter = 0;
        var length = string.length;
        while(counter < length){
            var value = string.charCodeAt(counter++);
            if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
                // It's a high surrogate, and there is a next character.
                var extra = string.charCodeAt(counter++);
                if ((extra & 0xFC00) == 0xDC00) {
                    // Low surrogate.
                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
                } else {
                    // It's an unmatched surrogate; only append this code unit, in case the
                    // next code unit is the high surrogate of a surrogate pair.
                    output.push(value);
                    counter--;
                }
            } else {
                output.push(value);
            }
        }
        return output;
    }
    /**
 * Creates a string based on an array of numeric code points.
 * @see `punycode.ucs2.decode`
 * @memberOf punycode.ucs2
 * @name encode
 * @param {Array} codePoints The array of numeric code points.
 * @returns {String} The new Unicode string (UCS-2).
 */ var ucs2encode = function ucs2encode(array) {
        return String.fromCodePoint.apply(String, toConsumableArray(array));
    };
    /**
 * Converts a basic code point into a digit/integer.
 * @see `digitToBasic()`
 * @private
 * @param {Number} codePoint The basic numeric code point value.
 * @returns {Number} The numeric value of a basic code point (for use in
 * representing integers) in the range `0` to `base - 1`, or `base` if
 * the code point does not represent a value.
 */ var basicToDigit = function basicToDigit(codePoint) {
        if (codePoint - 0x30 < 0x0A) {
            return codePoint - 0x16;
        }
        if (codePoint - 0x41 < 0x1A) {
            return codePoint - 0x41;
        }
        if (codePoint - 0x61 < 0x1A) {
            return codePoint - 0x61;
        }
        return base;
    };
    /**
 * Converts a digit/integer into a basic code point.
 * @see `basicToDigit()`
 * @private
 * @param {Number} digit The numeric value of a basic code point.
 * @returns {Number} The basic code point whose value (when used for
 * representing integers) is `digit`, which needs to be in the range
 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
 * used; else, the lowercase form is used. The behavior is undefined
 * if `flag` is non-zero and `digit` has no uppercase form.
 */ var digitToBasic = function digitToBasic(digit, flag) {
        //  0..25 map to ASCII a..z or A..Z
        // 26..35 map to ASCII 0..9
        return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
    };
    /**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 * @private
 */ var adapt = function adapt(delta, numPoints, firstTime) {
        var k = 0;
        delta = firstTime ? floor(delta / damp) : delta >> 1;
        delta += floor(delta / numPoints);
        for(; delta > baseMinusTMin * tMax >> 1; k += base){
            delta = floor(delta / baseMinusTMin);
        }
        return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
    };
    /**
 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
 * symbols.
 * @memberOf punycode
 * @param {String} input The Punycode string of ASCII-only symbols.
 * @returns {String} The resulting string of Unicode symbols.
 */ var decode = function decode(input) {
        // Don't use UCS-2.
        var output = [];
        var inputLength = input.length;
        var i = 0;
        var n = initialN;
        var bias = initialBias;
        // Handle the basic code points: let `basic` be the number of input code
        // points before the last delimiter, or `0` if there is none, then copy
        // the first basic code points to the output.
        var basic = input.lastIndexOf(delimiter);
        if (basic < 0) {
            basic = 0;
        }
        for(var j = 0; j < basic; ++j){
            // if it's not a basic code point
            if (input.charCodeAt(j) >= 0x80) {
                error$1('not-basic');
            }
            output.push(input.charCodeAt(j));
        }
        // Main decoding loop: start just after the last delimiter if any basic code
        // points were copied; start at the beginning otherwise.
        for(var index = basic > 0 ? basic + 1 : 0; index < inputLength;)/* no final expression */ {
            // `index` is the index of the next character to be consumed.
            // Decode a generalized variable-length integer into `delta`,
            // which gets added to `i`. The overflow checking is easier
            // if we increase `i` as we go, then subtract off its starting
            // value at the end to obtain `delta`.
            var oldi = i;
            for(var w = 1, k = base;; k += base){
                if (index >= inputLength) {
                    error$1('invalid-input');
                }
                var digit = basicToDigit(input.charCodeAt(index++));
                if (digit >= base || digit > floor((maxInt - i) / w)) {
                    error$1('overflow');
                }
                i += digit * w;
                var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                if (digit < t) {
                    break;
                }
                var baseMinusT = base - t;
                if (w > floor(maxInt / baseMinusT)) {
                    error$1('overflow');
                }
                w *= baseMinusT;
            }
            var out = output.length + 1;
            bias = adapt(i - oldi, out, oldi == 0);
            // `i` was supposed to wrap around from `out` to `0`,
            // incrementing `n` each time, so we'll fix that now:
            if (floor(i / out) > maxInt - n) {
                error$1('overflow');
            }
            n += floor(i / out);
            i %= out;
            // Insert `n` at position `i` of the output.
            output.splice(i++, 0, n);
        }
        return String.fromCodePoint.apply(String, output);
    };
    /**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 * @memberOf punycode
 * @param {String} input The string of Unicode symbols.
 * @returns {String} The resulting Punycode string of ASCII-only symbols.
 */ var encode = function encode(input) {
        var output = [];
        // Convert the input in UCS-2 to an array of Unicode code points.
        input = ucs2decode(input);
        // Cache the length.
        var inputLength = input.length;
        // Initialize the state.
        var n = initialN;
        var delta = 0;
        var bias = initialBias;
        // Handle the basic code points.
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
            for(var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                var _currentValue2 = _step.value;
                if (_currentValue2 < 0x80) {
                    output.push(stringFromCharCode(_currentValue2));
                }
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                    _iterator.return();
                }
            } finally{
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
        var basicLength = output.length;
        var handledCPCount = basicLength;
        // `handledCPCount` is the number of code points that have been handled;
        // `basicLength` is the number of basic code points.
        // Finish the basic string with a delimiter unless it's empty.
        if (basicLength) {
            output.push(delimiter);
        }
        // Main encoding loop:
        while(handledCPCount < inputLength){
            // All non-basic code points < n have been handled already. Find the next
            // larger one:
            var m = maxInt;
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;
            try {
                for(var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){
                    var currentValue = _step2.value;
                    if (currentValue >= n && currentValue < m) {
                        m = currentValue;
                    }
                }
            // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
            // but guard against overflow.
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally{
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally{
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
            var handledCPCountPlusOne = handledCPCount + 1;
            if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                error$1('overflow');
            }
            delta += (m - n) * handledCPCountPlusOne;
            n = m;
            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;
            try {
                for(var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true){
                    var _currentValue = _step3.value;
                    if (_currentValue < n && ++delta > maxInt) {
                        error$1('overflow');
                    }
                    if (_currentValue == n) {
                        // Represent delta as a generalized variable-length integer.
                        var q = delta;
                        for(var k = base;; k += base){
                            var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                            if (q < t) {
                                break;
                            }
                            var qMinusT = q - t;
                            var baseMinusT = base - t;
                            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
                            q = floor(qMinusT / baseMinusT);
                        }
                        output.push(stringFromCharCode(digitToBasic(q, 0)));
                        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                        delta = 0;
                        ++handledCPCount;
                    }
                }
            } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
            } finally{
                try {
                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
                        _iterator3.return();
                    }
                } finally{
                    if (_didIteratorError3) {
                        throw _iteratorError3;
                    }
                }
            }
            ++delta;
            ++n;
        }
        return output.join('');
    };
    /**
 * Converts a Punycode string representing a domain name or an email address
 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
 * it doesn't matter if you call it on a string that has already been
 * converted to Unicode.
 * @memberOf punycode
 * @param {String} input The Punycoded domain name or email address to
 * convert to Unicode.
 * @returns {String} The Unicode representation of the given Punycode
 * string.
 */ var toUnicode = function toUnicode(input) {
        return mapDomain(input, function(string) {
            return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
        });
    };
    /**
 * Converts a Unicode string representing a domain name or an email address to
 * Punycode. Only the non-ASCII parts of the domain name will be converted,
 * i.e. it doesn't matter if you call it with a domain that's already in
 * ASCII.
 * @memberOf punycode
 * @param {String} input The domain name or email address to convert, as a
 * Unicode string.
 * @returns {String} The Punycode representation of the given domain name or
 * email address.
 */ var toASCII = function toASCII(input) {
        return mapDomain(input, function(string) {
            return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
        });
    };
    /*--------------------------------------------------------------------------*/ /** Define the public API */ var punycode = {
        /**
  * A string representing the current Punycode.js version number.
  * @memberOf punycode
  * @type String
  */ 'version': '2.1.0',
        /**
  * An object of methods to convert from JavaScript's internal character
  * representation (UCS-2) to Unicode code points, and back.
  * @see <https://mathiasbynens.be/notes/javascript-encoding>
  * @memberOf punycode
  * @type Object
  */ 'ucs2': {
            'decode': ucs2decode,
            'encode': ucs2encode
        },
        'decode': decode,
        'encode': encode,
        'toASCII': toASCII,
        'toUnicode': toUnicode
    };
    /**
 * URI.js
 *
 * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/uri-js
 */ /**
 * Copyright 2011 Gary Court. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 *
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Gary Court.
 */ var SCHEMES = {};
    function pctEncChar(chr) {
        var c = chr.charCodeAt(0);
        var e = void 0;
        if (c < 16) e = "%0" + c.toString(16).toUpperCase();
        else if (c < 128) e = "%" + c.toString(16).toUpperCase();
        else if (c < 2048) e = "%" + (c >> 6 | 192).toString(16).toUpperCase() + "%" + (c & 63 | 128).toString(16).toUpperCase();
        else e = "%" + (c >> 12 | 224).toString(16).toUpperCase() + "%" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + "%" + (c & 63 | 128).toString(16).toUpperCase();
        return e;
    }
    function pctDecChars(str) {
        var newStr = "";
        var i = 0;
        var il = str.length;
        while(i < il){
            var c = parseInt(str.substr(i + 1, 2), 16);
            if (c < 128) {
                newStr += String.fromCharCode(c);
                i += 3;
            } else if (c >= 194 && c < 224) {
                if (il - i >= 6) {
                    var c2 = parseInt(str.substr(i + 4, 2), 16);
                    newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);
                } else {
                    newStr += str.substr(i, 6);
                }
                i += 6;
            } else if (c >= 224) {
                if (il - i >= 9) {
                    var _c = parseInt(str.substr(i + 4, 2), 16);
                    var c3 = parseInt(str.substr(i + 7, 2), 16);
                    newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);
                } else {
                    newStr += str.substr(i, 9);
                }
                i += 9;
            } else {
                newStr += str.substr(i, 3);
                i += 3;
            }
        }
        return newStr;
    }
    function _normalizeComponentEncoding(components, protocol) {
        function decodeUnreserved(str) {
            var decStr = pctDecChars(str);
            return !decStr.match(protocol.UNRESERVED) ? str : decStr;
        }
        if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, "");
        if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
        if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
        if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
        if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
        if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
        return components;
    }
    function _stripLeadingZeros(str) {
        return str.replace(/^0*(.*)/, "$1") || "0";
    }
    function _normalizeIPv4(host, protocol) {
        var matches = host.match(protocol.IPV4ADDRESS) || [];
        var _matches = slicedToArray(matches, 2), address = _matches[1];
        if (address) {
            return address.split(".").map(_stripLeadingZeros).join(".");
        } else {
            return host;
        }
    }
    function _normalizeIPv6(host, protocol) {
        var matches = host.match(protocol.IPV6ADDRESS) || [];
        var _matches2 = slicedToArray(matches, 3), address = _matches2[1], zone = _matches2[2];
        if (address) {
            var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(), _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2), last = _address$toLowerCase$2[0], first = _address$toLowerCase$2[1];
            var firstFields = first ? first.split(":").map(_stripLeadingZeros) : [];
            var lastFields = last.split(":").map(_stripLeadingZeros);
            var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);
            var fieldCount = isLastFieldIPv4Address ? 7 : 8;
            var lastFieldsStart = lastFields.length - fieldCount;
            var fields = Array(fieldCount);
            for(var x = 0; x < fieldCount; ++x){
                fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';
            }
            if (isLastFieldIPv4Address) {
                fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);
            }
            var allZeroFields = fields.reduce(function(acc, field, index) {
                if (!field || field === "0") {
                    var lastLongest = acc[acc.length - 1];
                    if (lastLongest && lastLongest.index + lastLongest.length === index) {
                        lastLongest.length++;
                    } else {
                        acc.push({
                            index: index,
                            length: 1
                        });
                    }
                }
                return acc;
            }, []);
            var longestZeroFields = allZeroFields.sort(function(a, b) {
                return b.length - a.length;
            })[0];
            var newHost = void 0;
            if (longestZeroFields && longestZeroFields.length > 1) {
                var newFirst = fields.slice(0, longestZeroFields.index);
                var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);
                newHost = newFirst.join(":") + "::" + newLast.join(":");
            } else {
                newHost = fields.join(":");
            }
            if (zone) {
                newHost += "%" + zone;
            }
            return newHost;
        } else {
            return host;
        }
    }
    var URI_PARSE = /^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i;
    var NO_MATCH_IS_UNDEFINED = "".match(/(){0}/)[1] === undefined;
    function parse(uriString) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var components = {};
        var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;
        if (options.reference === "suffix") uriString = (options.scheme ? options.scheme + ":" : "") + "//" + uriString;
        var matches = uriString.match(URI_PARSE);
        if (matches) {
            if (NO_MATCH_IS_UNDEFINED) {
                //store each component
                components.scheme = matches[1];
                components.userinfo = matches[3];
                components.host = matches[4];
                components.port = parseInt(matches[5], 10);
                components.path = matches[6] || "";
                components.query = matches[7];
                components.fragment = matches[8];
                //fix port number
                if (isNaN(components.port)) {
                    components.port = matches[5];
                }
            } else {
                //IE FIX for improper RegExp matching
                //store each component
                components.scheme = matches[1] || undefined;
                components.userinfo = uriString.indexOf("@") !== -1 ? matches[3] : undefined;
                components.host = uriString.indexOf("//") !== -1 ? matches[4] : undefined;
                components.port = parseInt(matches[5], 10);
                components.path = matches[6] || "";
                components.query = uriString.indexOf("?") !== -1 ? matches[7] : undefined;
                components.fragment = uriString.indexOf("#") !== -1 ? matches[8] : undefined;
                //fix port number
                if (isNaN(components.port)) {
                    components.port = uriString.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/) ? matches[4] : undefined;
                }
            }
            if (components.host) {
                //normalize IP hosts
                components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);
            }
            //determine reference type
            if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {
                components.reference = "same-document";
            } else if (components.scheme === undefined) {
                components.reference = "relative";
            } else if (components.fragment === undefined) {
                components.reference = "absolute";
            } else {
                components.reference = "uri";
            }
            //check for reference errors
            if (options.reference && options.reference !== "suffix" && options.reference !== components.reference) {
                components.error = components.error || "URI is not a " + options.reference + " reference.";
            }
            //find scheme handler
            var schemeHandler = SCHEMES[(options.scheme || components.scheme || "").toLowerCase()];
            //check if scheme can't handle IRIs
            if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {
                //if host component is a domain name
                if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {
                    //convert Unicode IDN -> ASCII IDN
                    try {
                        components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());
                    } catch (e) {
                        components.error = components.error || "Host's domain name can not be converted to ASCII via punycode: " + e;
                    }
                }
                //convert IRI -> URI
                _normalizeComponentEncoding(components, URI_PROTOCOL);
            } else {
                //normalize encodings
                _normalizeComponentEncoding(components, protocol);
            }
            //perform scheme specific parsing
            if (schemeHandler && schemeHandler.parse) {
                schemeHandler.parse(components, options);
            }
        } else {
            components.error = components.error || "URI can not be parsed.";
        }
        return components;
    }
    function _recomposeAuthority(components, options) {
        var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;
        var uriTokens = [];
        if (components.userinfo !== undefined) {
            uriTokens.push(components.userinfo);
            uriTokens.push("@");
        }
        if (components.host !== undefined) {
            //normalize IP hosts, add brackets and escape zone separator for IPv6
            uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function(_, $1, $2) {
                return "[" + $1 + ($2 ? "%25" + $2 : "") + "]";
            }));
        }
        if (typeof components.port === "number" || typeof components.port === "string") {
            uriTokens.push(":");
            uriTokens.push(String(components.port));
        }
        return uriTokens.length ? uriTokens.join("") : undefined;
    }
    var RDS1 = /^\.\.?\//;
    var RDS2 = /^\/\.(\/|$)/;
    var RDS3 = /^\/\.\.(\/|$)/;
    var RDS5 = /^\/?(?:.|\n)*?(?=\/|$)/;
    function removeDotSegments(input) {
        var output = [];
        while(input.length){
            if (input.match(RDS1)) {
                input = input.replace(RDS1, "");
            } else if (input.match(RDS2)) {
                input = input.replace(RDS2, "/");
            } else if (input.match(RDS3)) {
                input = input.replace(RDS3, "/");
                output.pop();
            } else if (input === "." || input === "..") {
                input = "";
            } else {
                var im = input.match(RDS5);
                if (im) {
                    var s = im[0];
                    input = input.slice(s.length);
                    output.push(s);
                } else {
                    throw new Error("Unexpected dot segment condition");
                }
            }
        }
        return output.join("");
    }
    function serialize(components) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;
        var uriTokens = [];
        //find scheme handler
        var schemeHandler = SCHEMES[(options.scheme || components.scheme || "").toLowerCase()];
        //perform scheme specific serialization
        if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);
        if (components.host) {
            //if host component is an IPv6 address
            if (protocol.IPV6ADDRESS.test(components.host)) {} else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {
                //convert IDN via punycode
                try {
                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);
                } catch (e) {
                    components.error = components.error || "Host's domain name can not be converted to " + (!options.iri ? "ASCII" : "Unicode") + " via punycode: " + e;
                }
            }
        }
        //normalize encoding
        _normalizeComponentEncoding(components, protocol);
        if (options.reference !== "suffix" && components.scheme) {
            uriTokens.push(components.scheme);
            uriTokens.push(":");
        }
        var authority = _recomposeAuthority(components, options);
        if (authority !== undefined) {
            if (options.reference !== "suffix") {
                uriTokens.push("//");
            }
            uriTokens.push(authority);
            if (components.path && components.path.charAt(0) !== "/") {
                uriTokens.push("/");
            }
        }
        if (components.path !== undefined) {
            var s = components.path;
            if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {
                s = removeDotSegments(s);
            }
            if (authority === undefined) {
                s = s.replace(/^\/\//, "/%2F"); //don't allow the path to start with "//"
            }
            uriTokens.push(s);
        }
        if (components.query !== undefined) {
            uriTokens.push("?");
            uriTokens.push(components.query);
        }
        if (components.fragment !== undefined) {
            uriTokens.push("#");
            uriTokens.push(components.fragment);
        }
        return uriTokens.join(""); //merge tokens into a string
    }
    function resolveComponents(base, relative) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var skipNormalization = arguments[3];
        var target = {};
        if (!skipNormalization) {
            base = parse(serialize(base, options), options); //normalize base components
            relative = parse(serialize(relative, options), options); //normalize relative components
        }
        options = options || {};
        if (!options.tolerant && relative.scheme) {
            target.scheme = relative.scheme;
            //target.authority = relative.authority;
            target.userinfo = relative.userinfo;
            target.host = relative.host;
            target.port = relative.port;
            target.path = removeDotSegments(relative.path || "");
            target.query = relative.query;
        } else {
            if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {
                //target.authority = relative.authority;
                target.userinfo = relative.userinfo;
                target.host = relative.host;
                target.port = relative.port;
                target.path = removeDotSegments(relative.path || "");
                target.query = relative.query;
            } else {
                if (!relative.path) {
                    target.path = base.path;
                    if (relative.query !== undefined) {
                        target.query = relative.query;
                    } else {
                        target.query = base.query;
                    }
                } else {
                    if (relative.path.charAt(0) === "/") {
                        target.path = removeDotSegments(relative.path);
                    } else {
                        if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {
                            target.path = "/" + relative.path;
                        } else if (!base.path) {
                            target.path = relative.path;
                        } else {
                            target.path = base.path.slice(0, base.path.lastIndexOf("/") + 1) + relative.path;
                        }
                        target.path = removeDotSegments(target.path);
                    }
                    target.query = relative.query;
                }
                //target.authority = base.authority;
                target.userinfo = base.userinfo;
                target.host = base.host;
                target.port = base.port;
            }
            target.scheme = base.scheme;
        }
        target.fragment = relative.fragment;
        return target;
    }
    function resolve(baseURI, relativeURI, options) {
        var schemelessOptions = assign({
            scheme: 'null'
        }, options);
        return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);
    }
    function normalize(uri, options) {
        if (typeof uri === "string") {
            uri = serialize(parse(uri, options), options);
        } else if (typeOf(uri) === "object") {
            uri = parse(serialize(uri, options), options);
        }
        return uri;
    }
    function equal(uriA, uriB, options) {
        if (typeof uriA === "string") {
            uriA = serialize(parse(uriA, options), options);
        } else if (typeOf(uriA) === "object") {
            uriA = serialize(uriA, options);
        }
        if (typeof uriB === "string") {
            uriB = serialize(parse(uriB, options), options);
        } else if (typeOf(uriB) === "object") {
            uriB = serialize(uriB, options);
        }
        return uriA === uriB;
    }
    function escapeComponent(str, options) {
        return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);
    }
    function unescapeComponent(str, options) {
        return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);
    }
    var handler = {
        scheme: "http",
        domainHost: true,
        parse: function parse(components, options) {
            //report missing host
            if (!components.host) {
                components.error = components.error || "HTTP URIs must have a host.";
            }
            return components;
        },
        serialize: function serialize(components, options) {
            var secure = String(components.scheme).toLowerCase() === "https";
            //normalize the default port
            if (components.port === (secure ? 443 : 80) || components.port === "") {
                components.port = undefined;
            }
            //normalize the empty path
            if (!components.path) {
                components.path = "/";
            }
            //NOTE: We do not parse query strings for HTTP URIs
            //as WWW Form Url Encoded query strings are part of the HTML4+ spec,
            //and not the HTTP spec.
            return components;
        }
    };
    var handler$1 = {
        scheme: "https",
        domainHost: handler.domainHost,
        parse: handler.parse,
        serialize: handler.serialize
    };
    function isSecure(wsComponents) {
        return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === "wss";
    }
    //RFC 6455
    var handler$2 = {
        scheme: "ws",
        domainHost: true,
        parse: function parse(components, options) {
            var wsComponents = components;
            //indicate if the secure flag is set
            wsComponents.secure = isSecure(wsComponents);
            //construct resouce name
            wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');
            wsComponents.path = undefined;
            wsComponents.query = undefined;
            return wsComponents;
        },
        serialize: function serialize(wsComponents, options) {
            //normalize the default port
            if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === "") {
                wsComponents.port = undefined;
            }
            //ensure scheme matches secure flag
            if (typeof wsComponents.secure === 'boolean') {
                wsComponents.scheme = wsComponents.secure ? 'wss' : 'ws';
                wsComponents.secure = undefined;
            }
            //reconstruct path from resource name
            if (wsComponents.resourceName) {
                var _wsComponents$resourc = wsComponents.resourceName.split('?'), _wsComponents$resourc2 = slicedToArray(_wsComponents$resourc, 2), path = _wsComponents$resourc2[0], query = _wsComponents$resourc2[1];
                wsComponents.path = path && path !== '/' ? path : undefined;
                wsComponents.query = query;
                wsComponents.resourceName = undefined;
            }
            //forbid fragment component
            wsComponents.fragment = undefined;
            return wsComponents;
        }
    };
    var handler$3 = {
        scheme: "wss",
        domainHost: handler$2.domainHost,
        parse: handler$2.parse,
        serialize: handler$2.serialize
    };
    var O = {};
    var isIRI = true;
    //RFC 3986
    var UNRESERVED$$ = "[A-Za-z0-9\\-\\.\\_\\~" + (("TURBOPACK compile-time truthy", 1) ? "\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF" : ("TURBOPACK unreachable", undefined)) + "]";
    var HEXDIG$$ = "[0-9A-Fa-f]"; //case-insensitive
    var PCT_ENCODED$ = subexp(subexp("%[EFef]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%[89A-Fa-f]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%" + HEXDIG$$ + HEXDIG$$)); //expanded
    //RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =
    //const ATEXT$$ = "[A-Za-z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~]";
    //const WSP$$ = "[\\x20\\x09]";
    //const OBS_QTEXT$$ = "[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]";  //(%d1-8 / %d11-12 / %d14-31 / %d127)
    //const QTEXT$$ = merge("[\\x21\\x23-\\x5B\\x5D-\\x7E]", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext
    //const VCHAR$$ = "[\\x21-\\x7E]";
    //const WSP$$ = "[\\x20\\x09]";
    //const OBS_QP$ = subexp("\\\\" + merge("[\\x00\\x0D\\x0A]", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext
    //const FWS$ = subexp(subexp(WSP$$ + "*" + "\\x0D\\x0A") + "?" + WSP$$ + "+");
    //const QUOTED_PAIR$ = subexp(subexp("\\\\" + subexp(VCHAR$$ + "|" + WSP$$)) + "|" + OBS_QP$);
    //const QUOTED_STRING$ = subexp('\\"' + subexp(FWS$ + "?" + QCONTENT$) + "*" + FWS$ + "?" + '\\"');
    var ATEXT$$ = "[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]";
    var QTEXT$$ = "[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]";
    var VCHAR$$ = merge(QTEXT$$, "[\\\"\\\\]");
    var SOME_DELIMS$$ = "[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]";
    var UNRESERVED = new RegExp(UNRESERVED$$, "g");
    var PCT_ENCODED = new RegExp(PCT_ENCODED$, "g");
    var NOT_LOCAL_PART = new RegExp(merge("[^]", ATEXT$$, "[\\.]", '[\\"]', VCHAR$$), "g");
    var NOT_HFNAME = new RegExp(merge("[^]", UNRESERVED$$, SOME_DELIMS$$), "g");
    var NOT_HFVALUE = NOT_HFNAME;
    function decodeUnreserved(str) {
        var decStr = pctDecChars(str);
        return !decStr.match(UNRESERVED) ? str : decStr;
    }
    var handler$4 = {
        scheme: "mailto",
        parse: function parse$$1(components, options) {
            var mailtoComponents = components;
            var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(",") : [];
            mailtoComponents.path = undefined;
            if (mailtoComponents.query) {
                var unknownHeaders = false;
                var headers = {};
                var hfields = mailtoComponents.query.split("&");
                for(var x = 0, xl = hfields.length; x < xl; ++x){
                    var hfield = hfields[x].split("=");
                    switch(hfield[0]){
                        case "to":
                            var toAddrs = hfield[1].split(",");
                            for(var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x){
                                to.push(toAddrs[_x]);
                            }
                            break;
                        case "subject":
                            mailtoComponents.subject = unescapeComponent(hfield[1], options);
                            break;
                        case "body":
                            mailtoComponents.body = unescapeComponent(hfield[1], options);
                            break;
                        default:
                            unknownHeaders = true;
                            headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);
                            break;
                    }
                }
                if (unknownHeaders) mailtoComponents.headers = headers;
            }
            mailtoComponents.query = undefined;
            for(var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2){
                var addr = to[_x2].split("@");
                addr[0] = unescapeComponent(addr[0]);
                if (!options.unicodeSupport) {
                    //convert Unicode IDN -> ASCII IDN
                    try {
                        addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());
                    } catch (e) {
                        mailtoComponents.error = mailtoComponents.error || "Email address's domain name can not be converted to ASCII via punycode: " + e;
                    }
                } else {
                    addr[1] = unescapeComponent(addr[1], options).toLowerCase();
                }
                to[_x2] = addr.join("@");
            }
            return mailtoComponents;
        },
        serialize: function serialize$$1(mailtoComponents, options) {
            var components = mailtoComponents;
            var to = toArray(mailtoComponents.to);
            if (to) {
                for(var x = 0, xl = to.length; x < xl; ++x){
                    var toAddr = String(to[x]);
                    var atIdx = toAddr.lastIndexOf("@");
                    var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);
                    var domain = toAddr.slice(atIdx + 1);
                    //convert IDN via punycode
                    try {
                        domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);
                    } catch (e) {
                        components.error = components.error || "Email address's domain name can not be converted to " + (!options.iri ? "ASCII" : "Unicode") + " via punycode: " + e;
                    }
                    to[x] = localPart + "@" + domain;
                }
                components.path = to.join(",");
            }
            var headers = mailtoComponents.headers = mailtoComponents.headers || {};
            if (mailtoComponents.subject) headers["subject"] = mailtoComponents.subject;
            if (mailtoComponents.body) headers["body"] = mailtoComponents.body;
            var fields = [];
            for(var name in headers){
                if (headers[name] !== O[name]) {
                    fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + "=" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));
                }
            }
            if (fields.length) {
                components.query = fields.join("&");
            }
            return components;
        }
    };
    var URN_PARSE = /^([^\:]+)\:(.*)/;
    //RFC 2141
    var handler$5 = {
        scheme: "urn",
        parse: function parse$$1(components, options) {
            var matches = components.path && components.path.match(URN_PARSE);
            var urnComponents = components;
            if (matches) {
                var scheme = options.scheme || urnComponents.scheme || "urn";
                var nid = matches[1].toLowerCase();
                var nss = matches[2];
                var urnScheme = scheme + ":" + (options.nid || nid);
                var schemeHandler = SCHEMES[urnScheme];
                urnComponents.nid = nid;
                urnComponents.nss = nss;
                urnComponents.path = undefined;
                if (schemeHandler) {
                    urnComponents = schemeHandler.parse(urnComponents, options);
                }
            } else {
                urnComponents.error = urnComponents.error || "URN can not be parsed.";
            }
            return urnComponents;
        },
        serialize: function serialize$$1(urnComponents, options) {
            var scheme = options.scheme || urnComponents.scheme || "urn";
            var nid = urnComponents.nid;
            var urnScheme = scheme + ":" + (options.nid || nid);
            var schemeHandler = SCHEMES[urnScheme];
            if (schemeHandler) {
                urnComponents = schemeHandler.serialize(urnComponents, options);
            }
            var uriComponents = urnComponents;
            var nss = urnComponents.nss;
            uriComponents.path = (nid || options.nid) + ":" + nss;
            return uriComponents;
        }
    };
    var UUID = /^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/;
    //RFC 4122
    var handler$6 = {
        scheme: "urn:uuid",
        parse: function parse(urnComponents, options) {
            var uuidComponents = urnComponents;
            uuidComponents.uuid = uuidComponents.nss;
            uuidComponents.nss = undefined;
            if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {
                uuidComponents.error = uuidComponents.error || "UUID is not valid.";
            }
            return uuidComponents;
        },
        serialize: function serialize(uuidComponents, options) {
            var urnComponents = uuidComponents;
            //normalize UUID
            urnComponents.nss = (uuidComponents.uuid || "").toLowerCase();
            return urnComponents;
        }
    };
    SCHEMES[handler.scheme] = handler;
    SCHEMES[handler$1.scheme] = handler$1;
    SCHEMES[handler$2.scheme] = handler$2;
    SCHEMES[handler$3.scheme] = handler$3;
    SCHEMES[handler$4.scheme] = handler$4;
    SCHEMES[handler$5.scheme] = handler$5;
    SCHEMES[handler$6.scheme] = handler$6;
    exports1.SCHEMES = SCHEMES;
    exports1.pctEncChar = pctEncChar;
    exports1.pctDecChars = pctDecChars;
    exports1.parse = parse;
    exports1.removeDotSegments = removeDotSegments;
    exports1.serialize = serialize;
    exports1.resolveComponents = resolveComponents;
    exports1.resolve = resolve;
    exports1.normalize = normalize;
    exports1.equal = equal;
    exports1.escapeComponent = escapeComponent;
    exports1.unescapeComponent = unescapeComponent;
    Object.defineProperty(exports1, '__esModule', {
        value: true
    });
}); //# sourceMappingURL=uri.all.js.map
}}),
"[project]/node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
// do not edit .js files directly - edit src/index.jst
module.exports = function equal(a, b) {
    if (a === b) return true;
    if (a && b && typeof a == 'object' && typeof b == 'object') {
        if (a.constructor !== b.constructor) return false;
        var length, i, keys;
        if (Array.isArray(a)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; i-- !== 0;)if (!equal(a[i], b[i])) return false;
            return true;
        }
        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        for(i = length; i-- !== 0;){
            var key = keys[i];
            if (!equal(a[key], b[key])) return false;
        }
        return true;
    }
    // true if both NaN, false otherwise
    return a !== a && b !== b;
};
}}),
"[project]/node_modules/.pnpm/json-schema-traverse@0.4.1/node_modules/json-schema-traverse/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var traverse = module.exports = function(schema, opts, cb) {
    // Legacy support for v0.3.1 and earlier.
    if (typeof opts == 'function') {
        cb = opts;
        opts = {};
    }
    cb = opts.cb || cb;
    var pre = typeof cb == 'function' ? cb : cb.pre || function() {};
    var post = cb.post || function() {};
    _traverse(opts, pre, post, schema, '', schema);
};
traverse.keywords = {
    additionalItems: true,
    items: true,
    contains: true,
    additionalProperties: true,
    propertyNames: true,
    not: true
};
traverse.arrayKeywords = {
    items: true,
    allOf: true,
    anyOf: true,
    oneOf: true
};
traverse.propsKeywords = {
    definitions: true,
    properties: true,
    patternProperties: true,
    dependencies: true
};
traverse.skipKeywords = {
    default: true,
    enum: true,
    const: true,
    required: true,
    maximum: true,
    minimum: true,
    exclusiveMaximum: true,
    exclusiveMinimum: true,
    multipleOf: true,
    maxLength: true,
    minLength: true,
    pattern: true,
    format: true,
    maxItems: true,
    minItems: true,
    uniqueItems: true,
    maxProperties: true,
    minProperties: true
};
function _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {
    if (schema && typeof schema == 'object' && !Array.isArray(schema)) {
        pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);
        for(var key in schema){
            var sch = schema[key];
            if (Array.isArray(sch)) {
                if (key in traverse.arrayKeywords) {
                    for(var i = 0; i < sch.length; i++)_traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);
                }
            } else if (key in traverse.propsKeywords) {
                if (sch && typeof sch == 'object') {
                    for(var prop in sch)_traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);
                }
            } else if (key in traverse.keywords || opts.allKeys && !(key in traverse.skipKeywords)) {
                _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);
            }
        }
        post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);
    }
}
function escapeJsonPtr(str) {
    return str.replace(/~/g, '~0').replace(/\//g, '~1');
}
}}),
"[project]/node_modules/.pnpm/fast-json-stable-stringify@2.1.0/node_modules/fast-json-stable-stringify/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
module.exports = function(data, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = {
        cmp: opts
    };
    var cycles = typeof opts.cycles === 'boolean' ? opts.cycles : false;
    var cmp = opts.cmp && function(f) {
        return function(node) {
            return function(a, b) {
                var aobj = {
                    key: a,
                    value: node[a]
                };
                var bobj = {
                    key: b,
                    value: node[b]
                };
                return f(aobj, bobj);
            };
        };
    }(opts.cmp);
    var seen = [];
    return function stringify(node) {
        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }
        if (node === undefined) return;
        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';
        if (typeof node !== 'object') return JSON.stringify(node);
        var i, out;
        if (Array.isArray(node)) {
            out = '[';
            for(i = 0; i < node.length; i++){
                if (i) out += ',';
                out += stringify(node[i]) || 'null';
            }
            return out + ']';
        }
        if (node === null) return 'null';
        if (seen.indexOf(node) !== -1) {
            if (cycles) return JSON.stringify('__cycle__');
            throw new TypeError('Converting circular structure to JSON');
        }
        var seenIndex = seen.push(node) - 1;
        var keys = Object.keys(node).sort(cmp && cmp(node));
        out = '';
        for(i = 0; i < keys.length; i++){
            var key = keys[i];
            var value = stringify(node[key]);
            if (!value) continue;
            if (out) out += ',';
            out += JSON.stringify(key) + ':' + value;
        }
        seen.splice(seenIndex, 1);
        return '{' + out + '}';
    }(data);
};
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./type')} */ module.exports = TypeError;
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('.')} */ module.exports = Error;
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./eval')} */ module.exports = EvalError;
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./range')} */ module.exports = RangeError;
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./ref')} */ module.exports = ReferenceError;
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./syntax')} */ module.exports = SyntaxError;
}}),
"[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./uri')} */ module.exports = URIError;
}}),
"[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/util.inspect.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = __turbopack_require__("[externals]/util [external] (util, cjs)").inspect;
}}),
"[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var $match = String.prototype.match;
var $slice = String.prototype.slice;
var $replace = String.prototype.replace;
var $toUpperCase = String.prototype.toUpperCase;
var $toLowerCase = String.prototype.toLowerCase;
var $test = RegExp.prototype.test;
var $concat = Array.prototype.concat;
var $join = Array.prototype.join;
var $arrSlice = Array.prototype.slice;
var $floor = Math.floor;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
// ie, `has-tostringtag/shams
var toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol') ? Symbol.toStringTag : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;
var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype // eslint-disable-line no-proto
 ? function(O) {
    return O.__proto__; // eslint-disable-line no-proto
} : null);
function addNumericSeparator(num, str) {
    if (num === Infinity || num === -Infinity || num !== num || num && num > -1000 && num < 1000 || $test.call(/e/, str)) {
        return str;
    }
    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof num === 'number') {
        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)
        if (int !== num) {
            var intStr = String(int);
            var dec = $slice.call(str, intStr.length + 1);
            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');
        }
    }
    return $replace.call(str, sepRegex, '$&_');
}
var utilInspect = __turbopack_require__("[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/util.inspect.js [app-rsc] (ecmascript)");
var inspectCustom = utilInspect.custom;
var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
var quotes = {
    __proto__: null,
    'double': '"',
    single: "'"
};
var quoteREs = {
    __proto__: null,
    'double': /(["\\])/g,
    single: /(['\\])/g
};
module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};
    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number' ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    }
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
        throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
    }
    if (has(opts, 'indent') && opts.indent !== null && opts.indent !== '\t' && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
    }
    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
    }
    var numericSeparator = opts.numericSeparator;
    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }
    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
        if (obj === 0) {
            return Infinity / obj > 0 ? '0' : '-0';
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
    }
    if (typeof obj === 'bigint') {
        var bigIntStr = String(obj) + 'n';
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
    }
    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') {
        depth = 0;
    }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
    }
    var indent = getIndent(opts, depth);
    if (typeof seen === 'undefined') {
        seen = [];
    } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    function inspect(value, from, noIndent) {
        if (from) {
            seen = $arrSlice.call(seen);
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) {
                newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    if (typeof obj === 'function' && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1') : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for(var i = 0; i < attrs.length; i++){
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) {
            s += '...';
        }
        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) {
            return '[]';
        }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
            return '[' + indentedJoin(xs, indent) + ']';
        }
        return '[ ' + $join.call(xs, ', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {
            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';
        }
        if (parts.length === 0) {
            return '[' + String(obj) + ']';
        }
        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {
            return utilInspect(obj, {
                depth: maxDepth - depth
            });
        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
            mapForEach.call(obj, function(value, key) {
                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
            });
        }
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
            setForEach.call(obj, function(value) {
                setParts.push(inspect(value, obj));
            });
        }
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
    }
    if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
    }
    if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other
    /* eslint-env browser */ if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    if (typeof globalThis !== 'undefined' && obj === globalThis || typeof global !== 'undefined' && obj === global) {
        return '{ [object globalThis] }';
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';
        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');
        if (ys.length === 0) {
            return tag + '{}';
        }
        if (indent) {
            return tag + '{' + indentedJoin(ys, indent) + '}';
        }
        return tag + '{ ' + $join.call(ys, ', ') + ' }';
    }
    return String(obj);
};
function wrapQuotes(s, defaultStyle, opts) {
    var style = opts.quoteStyle || defaultStyle;
    var quoteChar = quotes[style];
    return quoteChar + s + quoteChar;
}
function quote(s) {
    return $replace.call(String(s), /"/g, '&quot;');
}
function isArray(obj) {
    return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isDate(obj) {
    return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isRegExp(obj) {
    return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isError(obj) {
    return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isString(obj) {
    return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isNumber(obj) {
    return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isBoolean(obj) {
    return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
function isSymbol(obj) {
    if (hasShammedSymbols) {
        return obj && typeof obj === 'object' && obj instanceof Symbol;
    }
    if (typeof obj === 'symbol') {
        return true;
    }
    if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
    }
    try {
        symToString.call(obj);
        return true;
    } catch (e) {}
    return false;
}
function isBigInt(obj) {
    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
    }
    try {
        bigIntValueOf.call(obj);
        return true;
    } catch (e) {}
    return false;
}
var hasOwn = Object.prototype.hasOwnProperty || function(key) {
    return key in this;
};
function has(obj, key) {
    return hasOwn.call(obj, key);
}
function toStr(obj) {
    return objectToString.call(obj);
}
function nameOf(f) {
    if (f.name) {
        return f.name;
    }
    var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) {
        return m[1];
    }
    return null;
}
function indexOf(xs, x) {
    if (xs.indexOf) {
        return xs.indexOf(x);
    }
    for(var i = 0, l = xs.length; i < l; i++){
        if (xs[i] === x) {
            return i;
        }
    }
    return -1;
}
function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}
function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}
function isWeakRef(x) {
    if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakRefDeref.call(x);
        return true;
    } catch (e) {}
    return false;
}
function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}
function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}
function isElement(x) {
    if (!x || typeof x !== 'object') {
        return false;
    }
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}
function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
    }
    var quoteRE = quoteREs[opts.quoteStyle || 'single'];
    quoteRE.lastIndex = 0;
    // eslint-disable-next-line no-control-regex
    var s = $replace.call($replace.call(str, quoteRE, '\\$1'), /[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}
function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) {
        return '\\' + x;
    }
    return '\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));
}
function markBoxed(str) {
    return 'Object(' + str + ')';
}
function weakCollectionOf(type) {
    return type + ' { ? }';
}
function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}
function singleLineValues(xs) {
    for(var i = 0; i < xs.length; i++){
        if (indexOf(xs[i], '\n') >= 0) {
            return false;
        }
    }
    return true;
}
function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\t') {
        baseIndent = '\t';
    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), ' ');
    } else {
        return null;
    }
    return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
    };
}
function indentedJoin(xs, indent) {
    if (xs.length === 0) {
        return '';
    }
    var lineJoiner = '\n' + indent.prev + indent.base;
    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\n' + indent.prev;
}
function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for(var i = 0; i < obj.length; i++){
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
    var symMap;
    if (hasShammedSymbols) {
        symMap = {};
        for(var k = 0; k < syms.length; k++){
            symMap['$' + syms[k]] = syms[k];
        }
    }
    for(var key in obj){
        if (!has(obj, key)) {
            continue;
        } // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) {
            continue;
        } // eslint-disable-line no-restricted-syntax, no-continue
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
            continue; // eslint-disable-line no-restricted-syntax, no-continue
        } else if ($test.call(/[^\w$]/, key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    if (typeof gOPS === 'function') {
        for(var j = 0; j < syms.length; j++){
            if (isEnumerable.call(obj, syms[j])) {
                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
            }
        }
    }
    return xs;
}
}}),
"[project]/node_modules/.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var inspect = __turbopack_require__("[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/index.js [app-rsc] (ecmascript)");
var $TypeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)");
/*
* This function traverses the list returning the node corresponding to the given key.
*
* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.
* By doing so, all the recently used nodes can be accessed relatively quickly.
*/ /** @type {import('./list.d.ts').listGetNode} */ // eslint-disable-next-line consistent-return
var listGetNode = function(list, key, isDelete) {
    /** @type {typeof list | NonNullable<(typeof list)['next']>} */ var prev = list;
    /** @type {(typeof list)['next']} */ var curr;
    // eslint-disable-next-line eqeqeq
    for(; (curr = prev.next) != null; prev = curr){
        if (curr.key === key) {
            prev.next = curr.next;
            if (!isDelete) {
                // eslint-disable-next-line no-extra-parens
                curr.next = list.next;
                list.next = curr; // eslint-disable-line no-param-reassign
            }
            return curr;
        }
    }
};
/** @type {import('./list.d.ts').listGet} */ var listGet = function(objects, key) {
    if (!objects) {
        return void undefined;
    }
    var node = listGetNode(objects, key);
    return node && node.value;
};
/** @type {import('./list.d.ts').listSet} */ var listSet = function(objects, key, value) {
    var node = listGetNode(objects, key);
    if (node) {
        node.value = value;
    } else {
        // Prepend the new node to the beginning of the list
        objects.next = {
            key: key,
            next: objects.next,
            value: value
        };
    }
};
/** @type {import('./list.d.ts').listHas} */ var listHas = function(objects, key) {
    if (!objects) {
        return false;
    }
    return !!listGetNode(objects, key);
};
/** @type {import('./list.d.ts').listDelete} */ // eslint-disable-next-line consistent-return
var listDelete = function(objects, key) {
    if (objects) {
        return listGetNode(objects, key, true);
    }
};
/** @type {import('.')} */ module.exports = function getSideChannelList() {
    /** @typedef {ReturnType<typeof getSideChannelList>} Channel */ /** @typedef {Parameters<Channel['get']>[0]} K */ /** @typedef {Parameters<Channel['set']>[1]} V */ /** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;
    /** @type {Channel} */ var channel = {
        assert: function(key) {
            if (!channel.has(key)) {
                throw new $TypeError('Side channel does not contain ' + inspect(key));
            }
        },
        'delete': function(key) {
            var root = $o && $o.next;
            var deletedNode = listDelete($o, key);
            if (deletedNode && root && root === deletedNode) {
                $o = void undefined;
            }
            return !!deletedNode;
        },
        get: function(key) {
            return listGet($o, key);
        },
        has: function(key) {
            return listHas($o, key);
        },
        set: function(key, value) {
            if (!$o) {
                // Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head
                $o = {
                    next: void undefined
                };
            }
            // eslint-disable-next-line no-extra-parens
            listSet($o, key, value);
        }
    };
    // @ts-expect-error TODO: figure out why this is erroring
    return channel;
};
}}),
"[project]/node_modules/.pnpm/es-object-atoms@1.0.0/node_modules/es-object-atoms/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('.')} */ module.exports = Object;
}}),
"[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./abs')} */ module.exports = Math.abs;
}}),
"[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./floor')} */ module.exports = Math.floor;
}}),
"[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./max')} */ module.exports = Math.max;
}}),
"[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./min')} */ module.exports = Math.min;
}}),
"[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./pow')} */ module.exports = Math.pow;
}}),
"[project]/node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./gOPD')} */ module.exports = Object.getOwnPropertyDescriptor;
}}),
"[project]/node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('.')} */ var $gOPD = __turbopack_require__("[project]/node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js [app-rsc] (ecmascript)");
if ($gOPD) {
    try {
        $gOPD([], 'length');
    } catch (e) {
        // IE 8 has a broken gOPD
        $gOPD = null;
    }
}
module.exports = $gOPD;
}}),
"[project]/node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('.')} */ var $defineProperty = Object.defineProperty || false;
if ($defineProperty) {
    try {
        $defineProperty({}, 'a', {
            value: 1
        });
    } catch (e) {
        // IE 8 has a broken defineProperty
        $defineProperty = false;
    }
}
module.exports = $defineProperty;
}}),
"[project]/node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./shams')} */ /* eslint complexity: [2, 18], max-statements: [2, 33] */ module.exports = function hasSymbols() {
    if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
        return false;
    }
    if (typeof Symbol.iterator === 'symbol') {
        return true;
    }
    /** @type {{ [k in symbol]?: unknown }} */ var obj = {};
    var sym = Symbol('test');
    var symObj = Object(sym);
    if (typeof sym === 'string') {
        return false;
    }
    if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
        return false;
    }
    if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
        return false;
    }
    // temp disabled per https://github.com/ljharb/object.assign/issues/17
    // if (sym instanceof Symbol) { return false; }
    // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
    // if (!(symObj instanceof Symbol)) { return false; }
    // if (typeof Symbol.prototype.toString !== 'function') { return false; }
    // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
    var symVal = 42;
    obj[sym] = symVal;
    for(var _ in obj){
        return false;
    } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
    if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
        return false;
    }
    if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
    }
    var syms = Object.getOwnPropertySymbols(obj);
    if (syms.length !== 1 || syms[0] !== sym) {
        return false;
    }
    if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
    }
    if (typeof Object.getOwnPropertyDescriptor === 'function') {
        // eslint-disable-next-line no-extra-parens
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
            return false;
        }
    }
    return true;
};
}}),
"[project]/node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = __turbopack_require__("[project]/node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js [app-rsc] (ecmascript)");
/** @type {import('.')} */ module.exports = function hasNativeSymbols() {
    if (typeof origSymbol !== 'function') {
        return false;
    }
    if (typeof Symbol !== 'function') {
        return false;
    }
    if (typeof origSymbol('foo') !== 'symbol') {
        return false;
    }
    if (typeof Symbol('bar') !== 'symbol') {
        return false;
    }
    return hasSymbolSham();
};
}}),
"[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/* eslint no-invalid-this: 1 */ var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';
var concatty = function concatty(a, b) {
    var arr = [];
    for(var i = 0; i < a.length; i += 1){
        arr[i] = a[i];
    }
    for(var j = 0; j < b.length; j += 1){
        arr[j + a.length] = b[j];
    }
    return arr;
};
var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for(var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1){
        arr[j] = arrLike[i];
    }
    return arr;
};
var joiny = function(arr, joiner) {
    var str = '';
    for(var i = 0; i < arr.length; i += 1){
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};
module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);
    var bound;
    var binder = function() {
        if (this instanceof bound) {
            var result = target.apply(this, concatty(args, arguments));
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(that, concatty(args, arguments));
    };
    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for(var i = 0; i < boundLength; i++){
        boundArgs[i] = '$' + i;
    }
    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);
    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }
    return bound;
};
}}),
"[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var implementation = __turbopack_require__("[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js [app-rsc] (ecmascript)");
module.exports = Function.prototype.bind || implementation;
}}),
"[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionCall.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./functionCall')} */ module.exports = Function.prototype.call;
}}),
"[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionApply.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./functionApply')} */ module.exports = Function.prototype.apply;
}}),
"[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/reflectApply.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/** @type {import('./reflectApply')} */ module.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;
}}),
"[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/actualApply.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var bind = __turbopack_require__("[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js [app-rsc] (ecmascript)");
var $apply = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionApply.js [app-rsc] (ecmascript)");
var $call = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionCall.js [app-rsc] (ecmascript)");
var $reflectApply = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/reflectApply.js [app-rsc] (ecmascript)");
/** @type {import('./actualApply')} */ module.exports = $reflectApply || bind.call($call, $apply);
}}),
"[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var bind = __turbopack_require__("[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js [app-rsc] (ecmascript)");
var $TypeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)");
var $call = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionCall.js [app-rsc] (ecmascript)");
var $actualApply = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/actualApply.js [app-rsc] (ecmascript)");
/** @type {import('.')} */ module.exports = function callBindBasic(args) {
    if (args.length < 1 || typeof args[0] !== 'function') {
        throw new $TypeError('a function is required');
    }
    return $actualApply(bind, $call, args);
};
}}),
"[project]/node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var callBind = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/index.js [app-rsc] (ecmascript)");
var gOPD = __turbopack_require__("[project]/node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js [app-rsc] (ecmascript)");
var hasProtoAccessor;
try {
    // eslint-disable-next-line no-extra-parens, no-proto
    hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ [].__proto__ === Array.prototype;
} catch (e) {
    if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
        throw e;
    }
}
// eslint-disable-next-line no-extra-parens
var desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, '__proto__');
var $Object = Object;
var $getPrototypeOf = $Object.getPrototypeOf;
/** @type {import('./get')} */ module.exports = desc && typeof desc.get === 'function' ? callBind([
    desc.get
]) : typeof $getPrototypeOf === 'function' ? /** @type {import('./get')} */ function getDunder(value) {
    // eslint-disable-next-line eqeqeq
    return $getPrototypeOf(value == null ? value : $Object(value));
} : false;
}}),
"[project]/node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = __turbopack_require__("[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js [app-rsc] (ecmascript)");
/** @type {import('.')} */ module.exports = bind.call(call, $hasOwn);
}}),
"[project]/node_modules/.pnpm/get-intrinsic@1.2.6/node_modules/get-intrinsic/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var undefined1;
var $Object = __turbopack_require__("[project]/node_modules/.pnpm/es-object-atoms@1.0.0/node_modules/es-object-atoms/index.js [app-rsc] (ecmascript)");
var $Error = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js [app-rsc] (ecmascript)");
var $EvalError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js [app-rsc] (ecmascript)");
var $RangeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js [app-rsc] (ecmascript)");
var $ReferenceError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js [app-rsc] (ecmascript)");
var $SyntaxError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js [app-rsc] (ecmascript)");
var $TypeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)");
var $URIError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js [app-rsc] (ecmascript)");
var abs = __turbopack_require__("[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js [app-rsc] (ecmascript)");
var floor = __turbopack_require__("[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js [app-rsc] (ecmascript)");
var max = __turbopack_require__("[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js [app-rsc] (ecmascript)");
var min = __turbopack_require__("[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js [app-rsc] (ecmascript)");
var pow = __turbopack_require__("[project]/node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js [app-rsc] (ecmascript)");
var $Function = Function;
// eslint-disable-next-line consistent-return
var getEvalledConstructor = function(expressionSyntax) {
    try {
        return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    } catch (e) {}
};
var $gOPD = __turbopack_require__("[project]/node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js [app-rsc] (ecmascript)");
var $defineProperty = __turbopack_require__("[project]/node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js [app-rsc] (ecmascript)");
var throwTypeError = function() {
    throw new $TypeError();
};
var ThrowTypeError = $gOPD ? function() {
    try {
        // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
        arguments.callee; // IE 8 does not throw here
        return throwTypeError;
    } catch (calleeThrows) {
        try {
            // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
            return $gOPD(arguments, 'callee').get;
        } catch (gOPDthrows) {
            return throwTypeError;
        }
    }
}() : throwTypeError;
var hasSymbols = __turbopack_require__("[project]/node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js [app-rsc] (ecmascript)")();
var getDunderProto = __turbopack_require__("[project]/node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js [app-rsc] (ecmascript)");
var getProto = typeof Reflect === 'function' && Reflect.getPrototypeOf || $Object.getPrototypeOf || getDunderProto;
var $apply = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionApply.js [app-rsc] (ecmascript)");
var $call = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionCall.js [app-rsc] (ecmascript)");
var needsEval = {};
var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);
var INTRINSICS = {
    __proto__: null,
    '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
    '%Array%': Array,
    '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
    '%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
    '%AsyncFromSyncIteratorPrototype%': undefined,
    '%AsyncFunction%': needsEval,
    '%AsyncGenerator%': needsEval,
    '%AsyncGeneratorFunction%': needsEval,
    '%AsyncIteratorPrototype%': needsEval,
    '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
    '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
    '%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
    '%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
    '%Boolean%': Boolean,
    '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
    '%Date%': Date,
    '%decodeURI%': decodeURI,
    '%decodeURIComponent%': decodeURIComponent,
    '%encodeURI%': encodeURI,
    '%encodeURIComponent%': encodeURIComponent,
    '%Error%': $Error,
    '%eval%': eval,
    '%EvalError%': $EvalError,
    '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
    '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
    '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
    '%Function%': $Function,
    '%GeneratorFunction%': needsEval,
    '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
    '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
    '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
    '%isFinite%': isFinite,
    '%isNaN%': isNaN,
    '%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
    '%JSON%': typeof JSON === 'object' ? JSON : undefined,
    '%Map%': typeof Map === 'undefined' ? undefined : Map,
    '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
    '%Math%': Math,
    '%Number%': Number,
    '%Object%': $Object,
    '%Object.getOwnPropertyDescriptor%': $gOPD,
    '%parseFloat%': parseFloat,
    '%parseInt%': parseInt,
    '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
    '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
    '%RangeError%': $RangeError,
    '%ReferenceError%': $ReferenceError,
    '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
    '%RegExp%': RegExp,
    '%Set%': typeof Set === 'undefined' ? undefined : Set,
    '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
    '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
    '%String%': String,
    '%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
    '%Symbol%': hasSymbols ? Symbol : undefined,
    '%SyntaxError%': $SyntaxError,
    '%ThrowTypeError%': ThrowTypeError,
    '%TypedArray%': TypedArray,
    '%TypeError%': $TypeError,
    '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
    '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
    '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
    '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
    '%URIError%': $URIError,
    '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
    '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
    '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,
    '%Function.prototype.call%': $call,
    '%Function.prototype.apply%': $apply,
    '%Object.defineProperty%': $defineProperty,
    '%Math.abs%': abs,
    '%Math.floor%': floor,
    '%Math.max%': max,
    '%Math.min%': min,
    '%Math.pow%': pow
};
if (getProto) {
    try {
        null.error; // eslint-disable-line no-unused-expressions
    } catch (e) {
        // https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
        var errorProto = getProto(getProto(e));
        INTRINSICS['%Error.prototype%'] = errorProto;
    }
}
var doEval = function doEval(name) {
    var value;
    if (name === '%AsyncFunction%') {
        value = getEvalledConstructor('async function () {}');
    } else if (name === '%GeneratorFunction%') {
        value = getEvalledConstructor('function* () {}');
    } else if (name === '%AsyncGeneratorFunction%') {
        value = getEvalledConstructor('async function* () {}');
    } else if (name === '%AsyncGenerator%') {
        var fn = doEval('%AsyncGeneratorFunction%');
        if (fn) {
            value = fn.prototype;
        }
    } else if (name === '%AsyncIteratorPrototype%') {
        var gen = doEval('%AsyncGenerator%');
        if (gen && getProto) {
            value = getProto(gen.prototype);
        }
    }
    INTRINSICS[name] = value;
    return value;
};
var LEGACY_ALIASES = {
    __proto__: null,
    '%ArrayBufferPrototype%': [
        'ArrayBuffer',
        'prototype'
    ],
    '%ArrayPrototype%': [
        'Array',
        'prototype'
    ],
    '%ArrayProto_entries%': [
        'Array',
        'prototype',
        'entries'
    ],
    '%ArrayProto_forEach%': [
        'Array',
        'prototype',
        'forEach'
    ],
    '%ArrayProto_keys%': [
        'Array',
        'prototype',
        'keys'
    ],
    '%ArrayProto_values%': [
        'Array',
        'prototype',
        'values'
    ],
    '%AsyncFunctionPrototype%': [
        'AsyncFunction',
        'prototype'
    ],
    '%AsyncGenerator%': [
        'AsyncGeneratorFunction',
        'prototype'
    ],
    '%AsyncGeneratorPrototype%': [
        'AsyncGeneratorFunction',
        'prototype',
        'prototype'
    ],
    '%BooleanPrototype%': [
        'Boolean',
        'prototype'
    ],
    '%DataViewPrototype%': [
        'DataView',
        'prototype'
    ],
    '%DatePrototype%': [
        'Date',
        'prototype'
    ],
    '%ErrorPrototype%': [
        'Error',
        'prototype'
    ],
    '%EvalErrorPrototype%': [
        'EvalError',
        'prototype'
    ],
    '%Float32ArrayPrototype%': [
        'Float32Array',
        'prototype'
    ],
    '%Float64ArrayPrototype%': [
        'Float64Array',
        'prototype'
    ],
    '%FunctionPrototype%': [
        'Function',
        'prototype'
    ],
    '%Generator%': [
        'GeneratorFunction',
        'prototype'
    ],
    '%GeneratorPrototype%': [
        'GeneratorFunction',
        'prototype',
        'prototype'
    ],
    '%Int8ArrayPrototype%': [
        'Int8Array',
        'prototype'
    ],
    '%Int16ArrayPrototype%': [
        'Int16Array',
        'prototype'
    ],
    '%Int32ArrayPrototype%': [
        'Int32Array',
        'prototype'
    ],
    '%JSONParse%': [
        'JSON',
        'parse'
    ],
    '%JSONStringify%': [
        'JSON',
        'stringify'
    ],
    '%MapPrototype%': [
        'Map',
        'prototype'
    ],
    '%NumberPrototype%': [
        'Number',
        'prototype'
    ],
    '%ObjectPrototype%': [
        'Object',
        'prototype'
    ],
    '%ObjProto_toString%': [
        'Object',
        'prototype',
        'toString'
    ],
    '%ObjProto_valueOf%': [
        'Object',
        'prototype',
        'valueOf'
    ],
    '%PromisePrototype%': [
        'Promise',
        'prototype'
    ],
    '%PromiseProto_then%': [
        'Promise',
        'prototype',
        'then'
    ],
    '%Promise_all%': [
        'Promise',
        'all'
    ],
    '%Promise_reject%': [
        'Promise',
        'reject'
    ],
    '%Promise_resolve%': [
        'Promise',
        'resolve'
    ],
    '%RangeErrorPrototype%': [
        'RangeError',
        'prototype'
    ],
    '%ReferenceErrorPrototype%': [
        'ReferenceError',
        'prototype'
    ],
    '%RegExpPrototype%': [
        'RegExp',
        'prototype'
    ],
    '%SetPrototype%': [
        'Set',
        'prototype'
    ],
    '%SharedArrayBufferPrototype%': [
        'SharedArrayBuffer',
        'prototype'
    ],
    '%StringPrototype%': [
        'String',
        'prototype'
    ],
    '%SymbolPrototype%': [
        'Symbol',
        'prototype'
    ],
    '%SyntaxErrorPrototype%': [
        'SyntaxError',
        'prototype'
    ],
    '%TypedArrayPrototype%': [
        'TypedArray',
        'prototype'
    ],
    '%TypeErrorPrototype%': [
        'TypeError',
        'prototype'
    ],
    '%Uint8ArrayPrototype%': [
        'Uint8Array',
        'prototype'
    ],
    '%Uint8ClampedArrayPrototype%': [
        'Uint8ClampedArray',
        'prototype'
    ],
    '%Uint16ArrayPrototype%': [
        'Uint16Array',
        'prototype'
    ],
    '%Uint32ArrayPrototype%': [
        'Uint32Array',
        'prototype'
    ],
    '%URIErrorPrototype%': [
        'URIError',
        'prototype'
    ],
    '%WeakMapPrototype%': [
        'WeakMap',
        'prototype'
    ],
    '%WeakSetPrototype%': [
        'WeakSet',
        'prototype'
    ]
};
var bind = __turbopack_require__("[project]/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js [app-rsc] (ecmascript)");
var hasOwn = __turbopack_require__("[project]/node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js [app-rsc] (ecmascript)");
var $concat = bind.call($call, Array.prototype.concat);
var $spliceApply = bind.call($apply, Array.prototype.splice);
var $replace = bind.call($call, String.prototype.replace);
var $strSlice = bind.call($call, String.prototype.slice);
var $exec = bind.call($call, RegExp.prototype.exec);
/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */ var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */ 
var stringToPath = function stringToPath(string) {
    var first = $strSlice(string, 0, 1);
    var last = $strSlice(string, -1);
    if (first === '%' && last !== '%') {
        throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
    } else if (last === '%' && first !== '%') {
        throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
    }
    var result = [];
    $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
    });
    return result;
};
/* end adaptation */ var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    var intrinsicName = name;
    var alias;
    if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = '%' + alias[0] + '%';
    }
    if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
            value = doEval(intrinsicName);
        }
        if (typeof value === 'undefined' && !allowMissing) {
            throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
        }
        return {
            alias: alias,
            name: intrinsicName,
            value: value
        };
    }
    throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};
module.exports = function GetIntrinsic(name, allowMissing) {
    if (typeof name !== 'string' || name.length === 0) {
        throw new $TypeError('intrinsic name must be a non-empty string');
    }
    if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
        throw new $TypeError('"allowMissing" argument must be a boolean');
    }
    if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
    }
    var parts = stringToPath(name);
    var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
    var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
    var intrinsicRealName = intrinsic.name;
    var value = intrinsic.value;
    var skipFurtherCaching = false;
    var alias = intrinsic.alias;
    if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([
            0,
            1
        ], alias));
    }
    for(var i = 1, isOwn = true; i < parts.length; i += 1){
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === '`' || last === '"' || last === "'" || last === '`') && first !== last) {
            throw new $SyntaxError('property names with quotes must have matching quotes');
        }
        if (part === 'constructor' || !isOwn) {
            skipFurtherCaching = true;
        }
        intrinsicBaseName += '.' + part;
        intrinsicRealName = '%' + intrinsicBaseName + '%';
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
            value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
            if (!(part in value)) {
                if (!allowMissing) {
                    throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
                }
                return void undefined;
            }
            if ($gOPD && i + 1 >= parts.length) {
                var desc = $gOPD(value, part);
                isOwn = !!desc;
                // By convention, when a data property is converted to an accessor
                // property to emulate a data property that does not suffer from
                // the override mistake, that accessor's getter is marked with
                // an `originalValue` property. Here, when we detect this, we
                // uphold the illusion by pretending to see that original data
                // property, i.e., returning the value rather than the getter
                // itself.
                if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
                    value = desc.get;
                } else {
                    value = value[part];
                }
            } else {
                isOwn = hasOwn(value, part);
                value = value[part];
            }
            if (isOwn && !skipFurtherCaching) {
                INTRINSICS[intrinsicRealName] = value;
            }
        }
    }
    return value;
};
}}),
"[project]/node_modules/.pnpm/call-bound@1.0.3/node_modules/call-bound/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var GetIntrinsic = __turbopack_require__("[project]/node_modules/.pnpm/get-intrinsic@1.2.6/node_modules/get-intrinsic/index.js [app-rsc] (ecmascript)");
var callBindBasic = __turbopack_require__("[project]/node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/index.js [app-rsc] (ecmascript)");
/** @type {(thisArg: string, searchString: string, position?: number) => number} */ var $indexOf = callBindBasic([
    GetIntrinsic('%String.prototype.indexOf%')
]);
/** @type {import('.')} */ module.exports = function callBoundIntrinsic(name, allowMissing) {
    // eslint-disable-next-line no-extra-parens
    var intrinsic = GetIntrinsic(name, !!allowMissing);
    if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
        return callBindBasic([
            intrinsic
        ]);
    }
    return intrinsic;
};
}}),
"[project]/node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var GetIntrinsic = __turbopack_require__("[project]/node_modules/.pnpm/get-intrinsic@1.2.6/node_modules/get-intrinsic/index.js [app-rsc] (ecmascript)");
var callBound = __turbopack_require__("[project]/node_modules/.pnpm/call-bound@1.0.3/node_modules/call-bound/index.js [app-rsc] (ecmascript)");
var inspect = __turbopack_require__("[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/index.js [app-rsc] (ecmascript)");
var $TypeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)");
var $Map = GetIntrinsic('%Map%', true);
/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */ var $mapGet = callBound('Map.prototype.get', true);
/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */ var $mapSet = callBound('Map.prototype.set', true);
/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */ var $mapHas = callBound('Map.prototype.has', true);
/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */ var $mapDelete = callBound('Map.prototype.delete', true);
/** @type {<K, V>(thisArg: Map<K, V>) => number} */ var $mapSize = callBound('Map.prototype.size', true);
/** @type {import('.')} */ module.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {
    /** @typedef {ReturnType<typeof getSideChannelMap>} Channel */ /** @typedef {Parameters<Channel['get']>[0]} K */ /** @typedef {Parameters<Channel['set']>[1]} V */ /** @type {Map<K, V> | undefined} */ var $m;
    /** @type {Channel} */ var channel = {
        assert: function(key) {
            if (!channel.has(key)) {
                throw new $TypeError('Side channel does not contain ' + inspect(key));
            }
        },
        'delete': function(key) {
            if ($m) {
                var result = $mapDelete($m, key);
                if ($mapSize($m) === 0) {
                    $m = void undefined;
                }
                return result;
            }
            return false;
        },
        get: function(key) {
            if ($m) {
                return $mapGet($m, key);
            }
        },
        has: function(key) {
            if ($m) {
                return $mapHas($m, key);
            }
            return false;
        },
        set: function(key, value) {
            if (!$m) {
                // @ts-expect-error TS can't handle narrowing a variable inside a closure
                $m = new $Map();
            }
            $mapSet($m, key, value);
        }
    };
    // @ts-expect-error TODO: figure out why TS is erroring here
    return channel;
};
}}),
"[project]/node_modules/.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var GetIntrinsic = __turbopack_require__("[project]/node_modules/.pnpm/get-intrinsic@1.2.6/node_modules/get-intrinsic/index.js [app-rsc] (ecmascript)");
var callBound = __turbopack_require__("[project]/node_modules/.pnpm/call-bound@1.0.3/node_modules/call-bound/index.js [app-rsc] (ecmascript)");
var inspect = __turbopack_require__("[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/index.js [app-rsc] (ecmascript)");
var getSideChannelMap = __turbopack_require__("[project]/node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js [app-rsc] (ecmascript)");
var $TypeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)");
var $WeakMap = GetIntrinsic('%WeakMap%', true);
/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */ var $weakMapGet = callBound('WeakMap.prototype.get', true);
/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */ var $weakMapSet = callBound('WeakMap.prototype.set', true);
/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */ var $weakMapHas = callBound('WeakMap.prototype.has', true);
/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */ var $weakMapDelete = callBound('WeakMap.prototype.delete', true);
/** @type {import('.')} */ module.exports = $WeakMap ? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {
    /** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */ /** @typedef {Parameters<Channel['get']>[0]} K */ /** @typedef {Parameters<Channel['set']>[1]} V */ /** @type {WeakMap<K & object, V> | undefined} */ var $wm;
    /** @type {Channel | undefined} */ var $m;
    /** @type {Channel} */ var channel = {
        assert: function(key) {
            if (!channel.has(key)) {
                throw new $TypeError('Side channel does not contain ' + inspect(key));
            }
        },
        'delete': function(key) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if ($wm) {
                    return $weakMapDelete($wm, key);
                }
            } else if (getSideChannelMap) {
                if ($m) {
                    return $m['delete'](key);
                }
            }
            return false;
        },
        get: function(key) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if ($wm) {
                    return $weakMapGet($wm, key);
                }
            }
            return $m && $m.get(key);
        },
        has: function(key) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if ($wm) {
                    return $weakMapHas($wm, key);
                }
            }
            return !!$m && $m.has(key);
        },
        set: function(key, value) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if (!$wm) {
                    $wm = new $WeakMap();
                }
                $weakMapSet($wm, key, value);
            } else if (getSideChannelMap) {
                if (!$m) {
                    $m = getSideChannelMap();
                }
                // eslint-disable-next-line no-extra-parens
                /** @type {NonNullable<typeof $m>} */ $m.set(key, value);
            }
        }
    };
    // @ts-expect-error TODO: figure out why this is erroring
    return channel;
} : getSideChannelMap;
}}),
"[project]/node_modules/.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var $TypeError = __turbopack_require__("[project]/node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js [app-rsc] (ecmascript)");
var inspect = __turbopack_require__("[project]/node_modules/.pnpm/object-inspect@1.13.3/node_modules/object-inspect/index.js [app-rsc] (ecmascript)");
var getSideChannelList = __turbopack_require__("[project]/node_modules/.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js [app-rsc] (ecmascript)");
var getSideChannelMap = __turbopack_require__("[project]/node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js [app-rsc] (ecmascript)");
var getSideChannelWeakMap = __turbopack_require__("[project]/node_modules/.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js [app-rsc] (ecmascript)");
var makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;
/** @type {import('.')} */ module.exports = function getSideChannel() {
    /** @typedef {ReturnType<typeof getSideChannel>} Channel */ /** @type {Channel | undefined} */ var $channelData;
    /** @type {Channel} */ var channel = {
        assert: function(key) {
            if (!channel.has(key)) {
                throw new $TypeError('Side channel does not contain ' + inspect(key));
            }
        },
        'delete': function(key) {
            return !!$channelData && $channelData['delete'](key);
        },
        get: function(key) {
            return $channelData && $channelData.get(key);
        },
        has: function(key) {
            return !!$channelData && $channelData.has(key);
        },
        set: function(key, value) {
            if (!$channelData) {
                $channelData = makeChannel();
            }
            $channelData.set(key, value);
        }
    };
    // @ts-expect-error TODO: figure out why this is erroring
    return channel;
};
}}),
"[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/formats.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var replace = String.prototype.replace;
var percentTwenties = /%20/g;
var Format = {
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};
module.exports = {
    'default': Format.RFC3986,
    formatters: {
        RFC1738: function(value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function(value) {
            return String(value);
        }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
};
}}),
"[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/utils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var formats = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/formats.js [app-rsc] (ecmascript)");
var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;
var hexTable = function() {
    var array = [];
    for(var i = 0; i < 256; ++i){
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }
    return array;
}();
var compactQueue = function compactQueue(queue) {
    while(queue.length > 1){
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
            var compacted = [];
            for(var j = 0; j < obj.length; ++j){
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }
            item.obj[item.prop] = compacted;
        }
    }
};
var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for(var i = 0; i < source.length; ++i){
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }
    return obj;
};
var merge = function merge(target, source, options) {
    /* eslint no-param-reassign: 0 */ if (!source) {
        return target;
    }
    if (typeof source !== 'object') {
        if (isArray(target)) {
            target.push(source);
        } else if (target && typeof target === 'object') {
            if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [
                target,
                source
            ];
        }
        return target;
    }
    if (!target || typeof target !== 'object') {
        return [
            target
        ].concat(source);
    }
    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
    }
    if (isArray(target) && isArray(source)) {
        source.forEach(function(item, i) {
            if (has.call(target, i)) {
                var targetItem = target[i];
                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
                    target[i] = merge(targetItem, item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }
    return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
            acc[key] = merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};
var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};
var decode = function(str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, ' ');
    if (charset === 'iso-8859-1') {
        // unescape never throws, no try...catch needed:
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    // utf-8
    try {
        return decodeURIComponent(strWithoutPlus);
    } catch (e) {
        return strWithoutPlus;
    }
};
var encode = function encode(str, defaultEncoder, charset, kind, format) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }
    var string = str;
    if (typeof str === 'symbol') {
        string = Symbol.prototype.toString.call(str);
    } else if (typeof str !== 'string') {
        string = String(str);
    }
    if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
    }
    var out = '';
    for(var i = 0; i < string.length; ++i){
        var c = string.charCodeAt(i);
        if (c === 0x2D // -
         || c === 0x2E // .
         || c === 0x5F // _
         || c === 0x7E // ~
         || c >= 0x30 && c <= 0x39 || c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A || format === formats.RFC1738 && (c === 0x28 || c === 0x29) // ( )
        ) {
            out += string.charAt(i);
            continue;
        }
        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }
        if (c < 0x800) {
            out = out + (hexTable[0xC0 | c >> 6] + hexTable[0x80 | c & 0x3F]);
            continue;
        }
        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | c >> 12] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F]);
            continue;
        }
        i += 1;
        c = 0x10000 + ((c & 0x3FF) << 10 | string.charCodeAt(i) & 0x3FF);
        /* eslint operator-linebreak: [2, "before"] */ out += hexTable[0xF0 | c >> 18] + hexTable[0x80 | c >> 12 & 0x3F] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F];
    }
    return out;
};
var compact = function compact(value) {
    var queue = [
        {
            obj: {
                o: value
            },
            prop: 'o'
        }
    ];
    var refs = [];
    for(var i = 0; i < queue.length; ++i){
        var item = queue[i];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for(var j = 0; j < keys.length; ++j){
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({
                    obj: obj,
                    prop: key
                });
                refs.push(val);
            }
        }
    }
    compactQueue(queue);
    return value;
};
var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};
var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== 'object') {
        return false;
    }
    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};
var combine = function combine(a, b) {
    return [].concat(a, b);
};
var maybeMap = function maybeMap(val, fn) {
    if (isArray(val)) {
        var mapped = [];
        for(var i = 0; i < val.length; i += 1){
            mapped.push(fn(val[i]));
        }
        return mapped;
    }
    return fn(val);
};
module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    combine: combine,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    maybeMap: maybeMap,
    merge: merge
};
}}),
"[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/stringify.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var getSideChannel = __turbopack_require__("[project]/node_modules/.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js [app-rsc] (ecmascript)");
var utils = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/utils.js [app-rsc] (ecmascript)");
var formats = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/formats.js [app-rsc] (ecmascript)");
var has = Object.prototype.hasOwnProperty;
var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
        return prefix + '[]';
    },
    comma: 'comma',
    indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) {
        return prefix;
    }
};
var isArray = Array.isArray;
var push = Array.prototype.push;
var pushToArray = function(arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [
        valueOrArray
    ]);
};
var toISO = Date.prototype.toISOString;
var defaultFormat = formats['default'];
var defaults = {
    addQueryPrefix: false,
    allowDots: false,
    charset: 'utf-8',
    charsetSentinel: false,
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    format: defaultFormat,
    formatter: formats.formatters[defaultFormat],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) {
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};
var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
    return typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || typeof v === 'symbol' || typeof v === 'bigint';
};
var sentinel = {};
var stringify = function stringify(object, prefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
    var obj = object;
    var tmpSc = sideChannel;
    var step = 0;
    var findFlag = false;
    while((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag){
        // Where object last appeared in the ref tree
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== 'undefined') {
            if (pos === step) {
                throw new RangeError('Cyclic object value');
            } else {
                findFlag = true; // Break while
            }
        }
        if (typeof tmpSc.get(sentinel) === 'undefined') {
            step = 0;
        }
    }
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = utils.maybeMap(obj, function(value) {
            if (value instanceof Date) {
                return serializeDate(value);
            }
            return value;
        });
    }
    if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;
        }
        obj = '';
    }
    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);
            return [
                formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))
            ];
        }
        return [
            formatter(prefix) + '=' + formatter(String(obj))
        ];
    }
    var values = [];
    if (typeof obj === 'undefined') {
        return values;
    }
    var objKeys;
    if (generateArrayPrefix === 'comma' && isArray(obj)) {
        // we need to join elements in
        if (encodeValuesOnly && encoder) {
            obj = utils.maybeMap(obj, encoder);
        }
        objKeys = [
            {
                value: obj.length > 0 ? obj.join(',') || null : void undefined
            }
        ];
    } else if (isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }
    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;
    for(var j = 0; j < objKeys.length; ++j){
        var key = objKeys[j];
        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];
        if (skipNulls && value === null) {
            continue;
        }
        var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values, stringify(value, keyPrefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));
    }
    return values;
};
var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) {
        return defaults;
    }
    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }
    var charset = opts.charset || defaults.charset;
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }
    var format = formats['default'];
    if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError('Unknown format option provided.');
        }
        format = opts.format;
    }
    var formatter = formats.formatters[format];
    var filter = defaults.filter;
    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter = opts.filter;
    }
    return {
        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter,
        format: format,
        formatter: formatter,
        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};
module.exports = function(object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);
    var objKeys;
    var filter;
    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }
    var keys = [];
    if (typeof obj !== 'object' || obj === null) {
        return '';
    }
    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
    } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }
    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {
        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
    }
    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;
    if (!objKeys) {
        objKeys = Object.keys(obj);
    }
    if (options.sort) {
        objKeys.sort(options.sort);
    }
    var sideChannel = getSideChannel();
    for(var i = 0; i < objKeys.length; ++i){
        var key = objKeys[i];
        if (options.skipNulls && obj[key] === null) {
            continue;
        }
        pushToArray(keys, stringify(obj[key], key, generateArrayPrefix, commaRoundTrip, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));
    }
    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';
    if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
            prefix += 'utf8=%26%2310003%3B&';
        } else {
            // encodeURIComponent('✓')
            prefix += 'utf8=%E2%9C%93&';
        }
    }
    return joined.length > 0 ? prefix + joined : '';
};
}}),
"[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/parse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var utils = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/utils.js [app-rsc] (ecmascript)");
var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;
var defaults = {
    allowDots: false,
    allowPrototypes: false,
    allowSparse: false,
    arrayLimit: 20,
    charset: 'utf-8',
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
};
var interpretNumericEntities = function(str) {
    return str.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
    });
};
var parseArrayValue = function(val, options) {
    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {
        return val.split(',');
    }
    return val;
};
// This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.
var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')
// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')
var parseValues = function parseQueryStringValues(str, options) {
    var obj = {
        __proto__: null
    };
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
    var i;
    var charset = options.charset;
    if (options.charsetSentinel) {
        for(i = 0; i < parts.length; ++i){
            if (parts[i].indexOf('utf8=') === 0) {
                if (parts[i] === charsetSentinel) {
                    charset = 'utf-8';
                } else if (parts[i] === isoSentinel) {
                    charset = 'iso-8859-1';
                }
                skipIndex = i;
                i = parts.length; // The eslint settings do not allow break;
            }
        }
    }
    for(i = 0; i < parts.length; ++i){
        if (i === skipIndex) {
            continue;
        }
        var part = parts[i];
        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder, charset, 'key');
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');
            val = utils.maybeMap(parseArrayValue(part.slice(pos + 1), options), function(encodedVal) {
                return options.decoder(encodedVal, defaults.decoder, charset, 'value');
            });
        }
        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
            val = interpretNumericEntities(val);
        }
        if (part.indexOf('[]=') > -1) {
            val = isArray(val) ? [
                val
            ] : val;
        }
        if (has.call(obj, key)) {
            obj[key] = utils.combine(obj[key], val);
        } else {
            obj[key] = val;
        }
    }
    return obj;
};
var parseObject = function(chain, val, options, valuesParsed) {
    var leaf = valuesParsed ? val : parseArrayValue(val, options);
    for(var i = chain.length - 1; i >= 0; --i){
        var obj;
        var root = chain[i];
        if (root === '[]' && options.parseArrays) {
            obj = [].concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === '') {
                obj = {
                    0: leaf
                };
            } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {
                obj = [];
                obj[index] = leaf;
            } else if (cleanRoot !== '__proto__') {
                obj[cleanRoot] = leaf;
            }
        }
        leaf = obj;
    }
    return leaf;
};
var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
    if (!givenKey) {
        return;
    }
    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;
    // The regex chunks
    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;
    // Get the parent
    var segment = options.depth > 0 && brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;
    // Stash the parent if it exists
    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(parent);
    }
    // Loop through children appending to the array until we hit depth
    var i = 0;
    while(options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth){
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }
    // If there's a remainder, just add whatever is left
    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }
    return parseObject(keys, val, options, valuesParsed);
};
var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) {
        return defaults;
    }
    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }
    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
    return {
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: typeof opts.depth === 'number' || opts.depth === false ? +opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};
module.exports = function(str, opts) {
    var options = normalizeParseOptions(opts);
    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }
    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};
    // Iterate over the keys and setup the new object
    var keys = Object.keys(tempObj);
    for(var i = 0; i < keys.length; ++i){
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');
        obj = utils.merge(obj, newObj, options);
    }
    if (options.allowSparse === true) {
        return obj;
    }
    return utils.compact(obj);
};
}}),
"[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var stringify = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/stringify.js [app-rsc] (ecmascript)");
var parse = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/parse.js [app-rsc] (ecmascript)");
var formats = __turbopack_require__("[project]/node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/formats.js [app-rsc] (ecmascript)");
module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/block.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const MultiFormat = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+multi-format@0.23.0/node_modules/@requestnetwork/multi-format/dist/index.js [app-rsc] (ecmascript)");
const utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+utils@0.49.0/node_modules/@requestnetwork/utils/dist/index.js [app-rsc] (ecmascript)");
/**
 * Module to manage a block in the data access-layer
 * a block is a sorted list of transactions with topics
 */ exports.default = {
    createEmptyBlock,
    getAllChannelIds,
    getAllTopics,
    getAllTransactions,
    getTransactionFromPosition,
    getTransactionPositionFromChannelId,
    getTransactionPositionsByChannelIds,
    getTransactionsByPositions,
    parseBlock,
    pushTransaction
};
/**
 * Function to create an empty block
 *
 * @returns IBlock an empty block
 */ function createEmptyBlock() {
    return {
        header: {
            channelIds: {},
            topics: {},
            version: '0.1.0'
        },
        transactions: []
    };
}
/**
 * Parses a string to a block checking if the standard is followed
 *
 * @param data the data to parse
 * @returns the block or throw en exception if the standard is not followed
 */ function parseBlock(data) {
    let maybeBlock;
    try {
        maybeBlock = JSON.parse(data);
    } catch (e) {
        throw new Error(`Impossible to JSON parse the data: "${e}"`);
    }
    if (!maybeBlock.header || !maybeBlock.transactions) {
        throw new Error(`Data do not follow the block standard`);
    }
    if (!maybeBlock.header.topics || !maybeBlock.header.channelIds || !maybeBlock.header.version) {
        throw new Error(`Header do not follow the block standard`);
    }
    if (maybeBlock.header.version !== '0.1.0') {
        throw new Error(`Version not supported`);
    }
    // check the transactions format
    if (!maybeBlock.transactions.every((tx)=>tx.data || tx.encryptedData)) {
        throw new Error(`Transactions do not follow the block standard`);
    }
    // check if channelIds are well formatted
    // check that all the channel ids are hashes
    if (Object.keys(maybeBlock.header.channelIds).some((channelId)=>!MultiFormat.hashFormat.isDeserializableString(channelId))) {
        throw new Error(`Channel ids in header.channelIds must be formatted keccak256 hashes`);
    }
    // check if channel ids refer to actual transactions in the block
    const transactionCount = maybeBlock.transactions.length;
    if (Object.values(maybeBlock.header.channelIds).some((listOfTransactionPosition)=>listOfTransactionPosition.some((position)=>position < 0 || position >= transactionCount))) {
        throw new Error(`transactions in channel ids must refer to transaction in the blocks`);
    }
    // check if topics are well formatted
    // check that all the channel ids are hashes
    if (Object.keys(maybeBlock.header.topics).some((channelId)=>!MultiFormat.hashFormat.isDeserializableString(channelId))) {
        throw new Error(`Channel ids in header.topics must be formatted keccak256 hashes`);
    }
    // check if topics are hashes
    if (Object.values(maybeBlock.header.topics).some((listOfTopics)=>listOfTopics.some((topic)=>!MultiFormat.hashFormat.isDeserializableString(topic)))) {
        throw new Error(`topics in header.topics must be formatted keccak256 hashes`);
    }
    return maybeBlock;
}
/**
 * Function to add a transaction and topics in the block
 *
 * @param block previous state will not be modified
 * @param transaction transaction to push
 * @param channelId id of the channel to add the transaction in
 * @param topics strings to topic the channel
 *
 * @returns the new state
 */ function pushTransaction(block, transaction, channelId, topics = []) {
    if (transaction.data === undefined && !transaction.encryptedData) {
        throw new Error('The transaction is missing the data property or encryptedData property');
    }
    // we don't want to modify the original block state
    const copiedBlock = (0, utils_1.deepCopy)(block);
    const newTransactionPosition = copiedBlock.transactions.length;
    copiedBlock.transactions.push(transaction);
    // index the transaction with the channel id
    copiedBlock.header.channelIds[channelId] = (copiedBlock.header.channelIds[channelId] || []).concat([
        newTransactionPosition
    ]);
    // add topics in the header
    for (const topic of topics){
        copiedBlock.header.topics[channelId] = (copiedBlock.header.topics[channelId] || []).concat([
            topic
        ]);
    }
    return copiedBlock;
}
/**
 * Returns a transaction from its position
 *
 * @param block current block state
 * @param position position of the transaction in the block
 *
 * @returns the transaction
 */ function getTransactionFromPosition(block, position) {
    return block.transactions[position];
}
/**
 * Returns several transactions from their positions
 *
 * @param block current block state
 * @param positions list of positions of the transactions
 *
 * @returns the transactions
 */ function getTransactionsByPositions(block, positions) {
    // remove duplicates and sort
    const sortedPositions = Array.from(new Set(positions)).sort();
    return sortedPositions.map((position)=>block.transactions[position]).filter((position)=>position !== undefined);
}
/**
 * Returns all transactions of a block
 *
 * @param block current block state
 *
 * @returns all the transactions with topics
 */ function getAllTransactions(block) {
    return block.transactions;
}
/**
 * Returns a list of the positions of the transactions with given channel id
 *
 * @param block current block state
 * @param channelId the channel id
 *
 * @returns list of transaction positions
 */ function getTransactionPositionFromChannelId(block, channelId) {
    return block.header.channelIds[channelId] || [];
}
/**
 * Returns a list of transactions position from a list of channel ids
 *
 * @param block current block state
 * @param ids the channel ids
 *
 * @returns list of transaction positions
 */ function getTransactionPositionsByChannelIds(block, channelIds) {
    const result = channelIds.map((id)=>block.header.channelIds[id]).filter((value)=>value !== undefined).reduce((accumulator, current)=>accumulator.concat(current), []);
    // remove duplicates and sort
    return Array.from(new Set(result)).sort();
}
/**
 * Returns all the topics of the block
 *
 * @param block current block state
 *
 * @returns all the topics
 */ function getAllTopics(block) {
    return block.header.topics;
}
/**
 * Returns all the channel ids of the block
 *
 * @param block current block state
 *
 * @returns all the channel ids
 */ function getAllChannelIds(block) {
    return block.header.channelIds;
} //# sourceMappingURL=block.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/combined-data-access.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CombinedDataAccess = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
class CombinedDataAccess {
    constructor(reader, writer){
        this.reader = reader;
        this.writer = writer;
    }
    initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            yield this.reader.initialize();
            yield this.writer.initialize();
        });
    }
    close() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            yield this.writer.close();
            yield this.reader.close();
        });
    }
    getTransactionsByChannelId(channelId, updatedBetween) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return yield this.reader.getTransactionsByChannelId(channelId, updatedBetween);
        });
    }
    getChannelsByTopic(topic, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return yield this.reader.getChannelsByTopic(topic, updatedBetween, page, pageSize);
        });
    }
    getChannelsByMultipleTopics(topics, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return yield this.reader.getChannelsByMultipleTopics(topics, updatedBetween, page, pageSize);
        });
    }
    persistTransaction(transactionData, channelId, topics) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return yield this.writer.persistTransaction(transactionData, channelId, topics);
        });
    }
}
exports.CombinedDataAccess = CombinedDataAccess; //# sourceMappingURL=combined-data-access.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/data-write.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataAccessWrite = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const events_1 = __turbopack_require__("[externals]/events [external] (events, cjs)");
const block_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/block.js [app-rsc] (ecmascript)");
class DataAccessWrite {
    constructor(storage, pendingStore){
        this.storage = storage;
        this.pendingStore = pendingStore;
        this.pendingStore = pendingStore;
    }
    initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return;
        });
    }
    close() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return;
        });
    }
    persistTransaction(transaction, channelId, topics) {
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const updatedBlock = block_1.default.pushTransaction(block_1.default.createEmptyBlock(), transaction, channelId, topics);
            const storageResult = yield this.storage.append(JSON.stringify(updatedBlock));
            const eventEmitter = new events_1.EventEmitter();
            (_a = this.pendingStore) === null || _a === void 0 ? void 0 : _a.add(channelId, {
                transaction,
                storageResult,
                topics: topics || []
            });
            const result = {
                meta: {
                    transactionStorageLocation: storageResult.id,
                    storageMeta: storageResult.meta,
                    topics: topics || []
                },
                result: {}
            };
            storageResult.on('confirmed', (r)=>{
                result.meta.storageMeta = r.meta;
                eventEmitter.emit('confirmed', result);
            });
            storageResult.on('error', (err)=>eventEmitter.emit('error', err));
            return Object.assign(eventEmitter, result);
        });
    }
}
exports.DataAccessWrite = DataAccessWrite; //# sourceMappingURL=data-write.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/data-read.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataAccessRead = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
class DataAccessRead {
    constructor(storage, { network, pendingStore }){
        this.storage = storage;
        this.network = network;
        this.pendingStore = pendingStore;
    }
    initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            yield this.storage.initialize();
        });
    }
    close() {
        return Promise.resolve();
    }
    getTransactionsByChannelId(channelId, updatedBetween) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const pending = yield this.getPending(channelId);
            const result = yield this.storage.getTransactionsByChannelId(channelId, updatedBetween);
            return {
                meta: {
                    transactionsStorageLocation: result.transactions.map((x)=>x.hash).concat(pending.meta.transactionsStorageLocation),
                    storageMeta: result.transactions.map((tx)=>this.toStorageMeta(tx, result.blockNumber, this.network))
                },
                result: {
                    transactions: result.transactions.map(this.toTimestampedTransaction).concat(pending.result.transactions)
                }
            };
        });
    }
    getChannelsByTopic(topic, updatedBetween, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return this.getChannelsByMultipleTopics([
                topic
            ], updatedBetween, page, pageSize);
        });
    }
    getChannelsByMultipleTopics(topics, updatedBetween, page, pageSize) {
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            // Validate pagination parameters
            if (page !== undefined && page < 1) {
                throw new Error(`Page number must be greater than or equal to 1, but it is ${page}`);
            }
            if (pageSize !== undefined && pageSize < 1) {
                throw new Error(`Page size must be greater than 0, but it is ${pageSize}`);
            }
            const pending = ((_a = this.pendingStore) === null || _a === void 0 ? void 0 : _a.findByTopics(topics)) || [];
            const pendingItems = pending.map((item)=>{
                var _a, _b, _c, _d, _e;
                return Object.assign(Object.assign({
                    hash: item.storageResult.id,
                    channelId: item.channelId
                }, item.transaction), {
                    blockNumber: ((_a = item.storageResult.meta.ethereum) === null || _a === void 0 ? void 0 : _a.blockNumber) || -1,
                    blockTimestamp: ((_b = item.storageResult.meta.ethereum) === null || _b === void 0 ? void 0 : _b.blockTimestamp) || -1,
                    transactionHash: ((_c = item.storageResult.meta.ethereum) === null || _c === void 0 ? void 0 : _c.transactionHash) || '',
                    smartContractAddress: ((_d = item.storageResult.meta.ethereum) === null || _d === void 0 ? void 0 : _d.smartContractAddress) || '',
                    size: String(((_e = item.storageResult.meta.ipfs) === null || _e === void 0 ? void 0 : _e.size) || 0),
                    topics: item.topics || []
                });
            });
            // Calculate adjusted pagination
            let adjustedPage = page;
            let adjustedPageSize = pageSize;
            let pendingItemsOnCurrentPage = 0;
            if (page !== undefined && pageSize !== undefined) {
                const totalPending = pendingItems.length;
                const itemsPerPage = (page - 1) * pageSize;
                if (totalPending > itemsPerPage) {
                    pendingItemsOnCurrentPage = Math.min(totalPending - itemsPerPage, pageSize);
                    adjustedPageSize = pageSize - pendingItemsOnCurrentPage;
                    adjustedPage = 1;
                    if (adjustedPageSize === 0) {
                        adjustedPageSize = 1;
                        pendingItemsOnCurrentPage--;
                    }
                } else {
                    adjustedPage = page - Math.floor(totalPending / pageSize);
                }
            }
            const result = yield this.storage.getTransactionsByTopics(topics, adjustedPage, adjustedPageSize);
            const transactions = result.transactions.concat(...pendingItems);
            // list of channels having at least one tx updated during the updatedBetween boundaries
            const channels = (updatedBetween ? transactions.filter((tx)=>tx.blockTimestamp >= (updatedBetween.from || 0) && tx.blockTimestamp <= (updatedBetween.to || Number.MAX_SAFE_INTEGER)) : transactions).map((x)=>x.channelId);
            const filteredTxs = transactions.filter((tx)=>channels.includes(tx.channelId));
            return {
                meta: {
                    storageMeta: filteredTxs.reduce((acc, tx)=>{
                        acc[tx.channelId] = [
                            this.toStorageMeta(tx, result.blockNumber, this.network)
                        ];
                        return acc;
                    }, {}),
                    transactionsStorageLocation: filteredTxs.reduce((prev, curr)=>{
                        if (!prev[curr.channelId]) {
                            prev[curr.channelId] = [];
                        }
                        prev[curr.channelId].push(curr.hash);
                        return prev;
                    }, {}),
                    pagination: page && pageSize ? {
                        total: result.transactions.length + pendingItems.length,
                        page,
                        pageSize,
                        hasMore: (page - 1) * pageSize + filteredTxs.length - pendingItemsOnCurrentPage < result.transactions.length
                    } : undefined
                },
                result: {
                    transactions: filteredTxs.reduce((prev, curr)=>{
                        if (!prev[curr.channelId]) {
                            prev[curr.channelId] = [];
                        }
                        prev[curr.channelId].push(this.toTimestampedTransaction(curr));
                        return prev;
                    }, {})
                }
            };
        });
    }
    getPending(channelId) {
        var _a, _b;
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const emptyResult = {
                meta: {
                    transactionsStorageLocation: [],
                    storageMeta: []
                },
                result: {
                    transactions: []
                }
            };
            const pending = (_a = this.pendingStore) === null || _a === void 0 ? void 0 : _a.get(channelId);
            if (!pending) {
                return emptyResult;
            }
            const { storageResult, transaction } = pending;
            const { transactions } = yield this.storage.getTransactionsByStorageLocation(storageResult.id);
            // if the pending tx is found, remove its state and fetch the real data
            if (transactions.length > 0) {
                (_b = this.pendingStore) === null || _b === void 0 ? void 0 : _b.remove(channelId);
                return emptyResult;
            }
            return {
                meta: {
                    transactionsStorageLocation: [
                        storageResult.id
                    ],
                    storageMeta: [
                        storageResult.meta
                    ]
                },
                result: {
                    transactions: [
                        {
                            state: types_1.DataAccessTypes.TransactionState.PENDING,
                            timestamp: storageResult.meta.timestamp,
                            transaction
                        }
                    ]
                }
            };
        });
    }
    toStorageMeta(result, lastBlockNumber, network) {
        return {
            ethereum: {
                blockConfirmation: lastBlockNumber - result.blockNumber,
                blockNumber: result.blockNumber,
                blockTimestamp: result.blockTimestamp,
                networkName: network,
                smartContractAddress: result.smartContractAddress,
                transactionHash: result.transactionHash
            },
            ipfs: {
                size: parseInt(result.size)
            },
            state: types_1.StorageTypes.ContentState.CONFIRMED,
            storageType: types_1.StorageTypes.StorageSystemType.ETHEREUM_IPFS,
            timestamp: result.blockTimestamp
        };
    }
    toTimestampedTransaction(transaction) {
        return {
            state: types_1.DataAccessTypes.TransactionState.CONFIRMED,
            timestamp: transaction.blockTimestamp,
            transaction: {
                data: transaction.data || undefined,
                encryptedData: transaction.encryptedData || undefined,
                encryptionMethod: transaction.encryptionMethod || undefined,
                keys: transaction.keys || undefined
            }
        };
    }
}
exports.DataAccessRead = DataAccessRead; //# sourceMappingURL=data-read.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/pending-store.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PendingStore = void 0;
/**
 * A simple in-memory store to share state between DataReader and DataWriter
 * Useful to retrieve a transaction that was just emitted but is not confirmed yet
 **/ class PendingStore {
    constructor(){
        this.pending = new Map();
    }
    /** Gets a pending tx */ get(channelId) {
        return this.pending.get(channelId);
    }
    findByTopics(topics) {
        const results = [];
        for (const [channelId, pendingItem] of this.pending.entries()){
            if (topics.find((topic)=>pendingItem.topics.includes(topic))) {
                results.push(Object.assign({
                    channelId
                }, pendingItem));
            }
        }
        return results;
    }
    add(channelId, pendingItem) {
        this.pending.set(channelId, pendingItem);
    }
    remove(channelId) {
        this.pending.delete(channelId);
    }
}
exports.PendingStore = PendingStore; //# sourceMappingURL=pending-store.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/in-memory-indexer.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var _InMemoryIndexer_channelToLocationsIndex, _InMemoryIndexer_topicToChannelsIndex;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InMemoryIndexer = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+types@0.49.0/node_modules/@requestnetwork/types/dist/index.js [app-rsc] (ecmascript)");
const block_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/block.js [app-rsc] (ecmascript)");
/** Helper class to manage a map with arrays as values */ class ArrayMap extends Map {
    add(key, value) {
        return this.set(key, this.get(key).concat(value));
    }
    get(key) {
        return super.get(key) || [];
    }
}
/**
 * InMemory implementation to index Request storage transactions, for testing and development.
 * The data itself is not indexed, only references to its location
 */ class InMemoryIndexer {
    constructor(storageRead){
        this.storageRead = storageRead;
        // these fields must be private (#) or jest's matcher won't work.
        _InMemoryIndexer_channelToLocationsIndex.set(this, new ArrayMap());
        _InMemoryIndexer_topicToChannelsIndex.set(this, new ArrayMap());
    }
    /** Adds the indexed data for easy retrieval */ addIndex(channelId, topics, location) {
        tslib_1.__classPrivateFieldGet(this, _InMemoryIndexer_channelToLocationsIndex, "f").add(channelId, location);
        for (const topic of topics || []){
            tslib_1.__classPrivateFieldGet(this, _InMemoryIndexer_topicToChannelsIndex, "f").add(topic, channelId);
        }
    }
    initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            return;
        });
    }
    getTransactionsByStorageLocation(hash) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const transactions = yield this.parseDocuments([
                hash
            ]);
            return {
                blockNumber: 0,
                transactions
            };
        });
    }
    getTransactionsByChannelId(channelId) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const locations = tslib_1.__classPrivateFieldGet(this, _InMemoryIndexer_channelToLocationsIndex, "f").get(channelId);
            const transactions = yield this.parseDocuments(locations);
            return {
                blockNumber: 0,
                transactions: transactions.filter((x)=>x.channelId === channelId)
            };
        });
    }
    getTransactionsByTopics(topics, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            if (page !== undefined && page < 1) {
                throw new Error('Page must be greater than or equal to 1');
            }
            if (pageSize !== undefined && pageSize <= 0) {
                throw new Error('Page size must be greater than 0');
            }
            // Efficiently get total count without creating intermediate array
            const channelIdsSet = new Set(topics.flatMap((topic)=>tslib_1.__classPrivateFieldGet(this, _InMemoryIndexer_topicToChannelsIndex, "f").get(topic)));
            const total = channelIdsSet.size;
            let channelIds = Array.from(channelIdsSet);
            if (page && pageSize) {
                const start = (page - 1) * pageSize;
                // Return empty result if page exceeds available data
                if (start >= total) {
                    return {
                        blockNumber: 0,
                        transactions: [],
                        pagination: page && pageSize ? {
                            total,
                            page,
                            pageSize,
                            hasMore: page * pageSize < total
                        } : undefined
                    };
                }
                channelIds = channelIds.slice(start, start + pageSize);
            }
            const locations = channelIds.map((channel)=>tslib_1.__classPrivateFieldGet(this, _InMemoryIndexer_channelToLocationsIndex, "f").get(channel)).flat();
            const transactions = yield this.parseDocuments(locations);
            return {
                blockNumber: 0,
                transactions
            };
        });
    }
    parseDocuments(locations) {
        return tslib_1.__awaiter(this, void 0, void 0, function*() {
            const entries = yield this.storageRead.readMany(locations);
            return entries.filter((x)=>x.meta.state === types_1.StorageTypes.ContentState.CONFIRMED).map((curr)=>{
                const { id, meta, content } = curr;
                const block = block_1.default.parseBlock(content);
                return Object.entries(block.header.channelIds).map(([channelId, [index]])=>({
                        locationId: id,
                        channelId,
                        meta,
                        transaction: block.transactions[index]
                    }));
            }).flat().map((item)=>{
                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
                return {
                    blockNumber: (_b = (_a = item.meta.ethereum) === null || _a === void 0 ? void 0 : _a.blockNumber) !== null && _b !== void 0 ? _b : 0,
                    blockTimestamp: (_d = (_c = item.meta.ethereum) === null || _c === void 0 ? void 0 : _c.blockTimestamp) !== null && _d !== void 0 ? _d : 0,
                    channelId: item.channelId,
                    hash: item.locationId,
                    size: String((_f = (_e = item.meta.ipfs) === null || _e === void 0 ? void 0 : _e.size) !== null && _f !== void 0 ? _f : 0),
                    smartContractAddress: (_h = (_g = item.meta.ethereum) === null || _g === void 0 ? void 0 : _g.smartContractAddress) !== null && _h !== void 0 ? _h : '',
                    topics: [],
                    transactionHash: (_k = (_j = item.meta.ethereum) === null || _j === void 0 ? void 0 : _j.transactionHash) !== null && _k !== void 0 ? _k : '',
                    data: item.transaction.data,
                    encryptedData: item.transaction.encryptedData,
                    encryptionMethod: item.transaction.encryptionMethod,
                    keys: item.transaction.keys
                };
            });
        });
    }
}
exports.InMemoryIndexer = InMemoryIndexer;
_InMemoryIndexer_channelToLocationsIndex = new WeakMap(), _InMemoryIndexer_topicToChannelsIndex = new WeakMap(); //# sourceMappingURL=in-memory-indexer.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/mock-data-access.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MockDataAccess = void 0;
const tslib_1 = __turbopack_require__("[project]/node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js [app-rsc] (ecmascript)");
const data_write_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/data-write.js [app-rsc] (ecmascript)");
const data_read_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/data-read.js [app-rsc] (ecmascript)");
const pending_store_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/pending-store.js [app-rsc] (ecmascript)");
const in_memory_indexer_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/in-memory-indexer.js [app-rsc] (ecmascript)");
const combined_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/combined-data-access.js [app-rsc] (ecmascript)");
/**
 * Mock Data access that bypasses the initialization.
 * This class is meant to be used with HttpRequestNetwork and useMockStorage=true.
 * Data-access initialization is asynchronous and this class is a hack to avoid having an asynchronous operation in the HttpRequestNetwork constructor.
 */ class MockDataAccess extends combined_data_access_1.CombinedDataAccess {
    constructor(storage){
        const dataIndex = new in_memory_indexer_1.InMemoryIndexer(storage);
        const pendingStore = new pending_store_1.PendingStore();
        super(new data_read_1.DataAccessRead(dataIndex, {
            network: 'mock',
            pendingStore
        }), new data_write_1.DataAccessWrite(storage, pendingStore));
        this.persistTransaction = (transactionData, channelId, topics)=>tslib_1.__awaiter(this, void 0, void 0, function*() {
                const result = yield this.writer.persistTransaction(transactionData, channelId, topics);
                this.dataIndex.addIndex(channelId, topics || [], result.meta.transactionStorageLocation);
                return result;
            });
        this.dataIndex = dataIndex;
    }
}
exports.MockDataAccess = MockDataAccess; //# sourceMappingURL=mock-data-access.js.map
}}),
"[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MockDataAccess = exports.PendingStore = exports.DataAccessRead = exports.DataAccessWrite = exports.CombinedDataAccess = exports.Block = void 0;
var block_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/block.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "Block", {
    enumerable: true,
    get: function() {
        return block_1.default;
    }
});
var combined_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/combined-data-access.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "CombinedDataAccess", {
    enumerable: true,
    get: function() {
        return combined_data_access_1.CombinedDataAccess;
    }
});
var data_write_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/data-write.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "DataAccessWrite", {
    enumerable: true,
    get: function() {
        return data_write_1.DataAccessWrite;
    }
});
var data_read_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/data-read.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "DataAccessRead", {
    enumerable: true,
    get: function() {
        return data_read_1.DataAccessRead;
    }
});
var pending_store_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/pending-store.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "PendingStore", {
    enumerable: true,
    get: function() {
        return pending_store_1.PendingStore;
    }
});
var mock_data_access_1 = __turbopack_require__("[project]/node_modules/.pnpm/@requestnetwork+data-access@0.40.0/node_modules/@requestnetwork/data-access/dist/mock-data-access.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "MockDataAccess", {
    enumerable: true,
    get: function() {
        return mock_data_access_1.MockDataAccess;
    }
}); //# sourceMappingURL=index.js.map
}}),

};

//# sourceMappingURL=08b5e__pnpm_24b314._.js.map