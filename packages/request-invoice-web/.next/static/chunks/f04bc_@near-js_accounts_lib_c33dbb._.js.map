{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/utils.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.viewFunction = exports.viewState = exports.encodeJSContractArgs = exports.validateArgs = void 0;\nconst types_1 = require(\"@near-js/types\");\nconst utils_1 = require(\"@near-js/utils\");\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\nfunction validateArgs(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    if (isUint8Array) {\n        return;\n    }\n    if (Array.isArray(args) || typeof args !== 'object') {\n        throw new types_1.PositionalArgsError();\n    }\n}\nexports.validateArgs = validateArgs;\nfunction encodeJSContractArgs(contractId, method, args) {\n    return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n}\nexports.encodeJSContractArgs = encodeJSContractArgs;\n/**\n * Returns the state (key value pairs) of account's contract based on the key prefix.\n * Pass an empty string for prefix if you would like to return the entire state.\n * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n *\n * @param connection connection to query state from\n * @param accountId account whose state is viewed\n * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n */\nfunction viewState(connection, accountId, prefix, blockQuery = { finality: 'optimistic' }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { values } = yield connection.provider.query(Object.assign(Object.assign({ request_type: 'view_state' }, blockQuery), { account_id: accountId, prefix_base64: Buffer.from(prefix).toString('base64') }));\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    });\n}\nexports.viewState = viewState;\n/**\n * Invoke a contract view function using the RPC API.\n * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n *\n * @param options Function call options.\n * @param options.contractId NEAR account where the contract is deployed\n * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n * @param options.args Any arguments to the view contract method, wrapped in JSON\n * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n * @returns {Promise<any>}\n */\nfunction viewFunction(connection, { contractId, methodName, args = {}, parse = parseJsonFromRawResponse, stringify = bytesJsonStringify, jsContract = false, blockQuery = { finality: 'optimistic' } }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let encodedArgs;\n        validateArgs(args);\n        if (jsContract) {\n            encodedArgs = encodeJSContractArgs(contractId, methodName, Object.keys(args).length > 0 ? JSON.stringify(args) : '');\n        }\n        else {\n            encodedArgs = stringify(args);\n        }\n        const result = yield connection.provider.query(Object.assign(Object.assign({ request_type: 'call_function' }, blockQuery), { account_id: jsContract ? connection.jsvmAccountId : contractId, method_name: jsContract ? 'view_js_contract' : methodName, args_base64: encodedArgs.toString('base64') }));\n        if (result.logs) {\n            (0, utils_1.printTxOutcomeLogs)({ contractId, logs: result.logs });\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    });\n}\nexports.viewFunction = viewFunction;\n"],"names":[],"mappings":"AAesB;AAftB;AACA,IAAI,YAAY,AAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAK,SAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;IACnF,SAAS,MAAM,KAAK;QAAI,OAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,OAAO;YAAI,QAAQ;QAAQ;IAAI;IAC3G,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,EAAE,SAAU,OAAO,EAAE,MAAM;QACrD,SAAS,UAAU,KAAK;YAAI,IAAI;gBAAE,KAAK,UAAU,IAAI,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC1F,SAAS,SAAS,KAAK;YAAI,IAAI;gBAAE,KAAK,SAAS,CAAC,QAAQ,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC7F,SAAS,KAAK,MAAM;YAAI,OAAO,IAAI,GAAG,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,IAAI,CAAC,WAAW;QAAW;QAC7G,KAAK,CAAC,YAAY,UAAU,KAAK,CAAC,SAAS,cAAc,EAAE,CAAC,EAAE,IAAI;IACtE;AACJ;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,QAAQ,SAAS,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,YAAY,GAAG,KAAK;AACtG,MAAM;AACN,MAAM;AACN,SAAS,yBAAyB,QAAQ;IACtC,OAAO,KAAK,KAAK,CAAC,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,QAAQ;AACpD;AACA,SAAS,mBAAmB,KAAK;IAC7B,OAAO,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC;AACtC;AACA,SAAS,aAAa,IAAI;IACtB,MAAM,eAAe,KAAK,UAAU,KAAK,aAAa,KAAK,UAAU,KAAK,KAAK,MAAM;IACrF,IAAI,cAAc;QACd;IACJ;IACA,IAAI,MAAM,OAAO,CAAC,SAAS,OAAO,SAAS,UAAU;QACjD,MAAM,IAAI,QAAQ,mBAAmB;IACzC;AACJ;AACA,QAAQ,YAAY,GAAG;AACvB,SAAS,qBAAqB,UAAU,EAAE,MAAM,EAAE,IAAI;IAClD,OAAO,mQAAA,CAAA,SAAM,CAAC,MAAM,CAAC;QAAC,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC;QAAa,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC;YAAC;SAAE;QAAG,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC;QAAS,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC;YAAC;SAAE;QAAG,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC;KAAM;AAC9H;AACA,QAAQ,oBAAoB,GAAG;AAC/B;;;;;;;;;CASC,GACD,SAAS,UAAU,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa;IAAE,UAAU;AAAa,CAAC;IACrF,OAAO,UAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;QACnC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,WAAW,QAAQ,CAAC,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC;YAAE,cAAc;QAAa,GAAG,aAAa;YAAE,YAAY;YAAW,eAAe,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ,QAAQ,CAAC;QAAU;QAC3M,OAAO,OAAO,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAK,CAAC;gBACnC,KAAK,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK;gBACtB,OAAO,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO;YAC9B,CAAC;IACL;AACJ;AACA,QAAQ,SAAS,GAAG;AACpB;;;;;;;;;;;;;CAaC,GACD,SAAS,aAAa,UAAU,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,EAAE,QAAQ,wBAAwB,EAAE,YAAY,kBAAkB,EAAE,aAAa,KAAK,EAAE,aAAa;IAAE,UAAU;AAAa,CAAC,EAAE;IAClM,OAAO,UAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;QACnC,IAAI;QACJ,aAAa;QACb,IAAI,YAAY;YACZ,cAAc,qBAAqB,YAAY,YAAY,OAAO,IAAI,CAAC,MAAM,MAAM,GAAG,IAAI,KAAK,SAAS,CAAC,QAAQ;QACrH,OACK;YACD,cAAc,UAAU;QAC5B;QACA,MAAM,SAAS,MAAM,WAAW,QAAQ,CAAC,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC;YAAE,cAAc;QAAgB,GAAG,aAAa;YAAE,YAAY,aAAa,WAAW,aAAa,GAAG;YAAY,aAAa,aAAa,qBAAqB;YAAY,aAAa,YAAY,QAAQ,CAAC;QAAU;QACpS,IAAI,OAAO,IAAI,EAAE;YACb,CAAC,GAAG,QAAQ,kBAAkB,EAAE;gBAAE;gBAAY,MAAM,OAAO,IAAI;YAAC;QACpE;QACA,OAAO,OAAO,MAAM,IAAI,OAAO,MAAM,CAAC,MAAM,GAAG,KAAK,MAAM,mQAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,MAAM;IACvF;AACJ;AACA,QAAQ,YAAY,GAAG","ignoreList":[0]}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/account.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst providers_1 = require(\"@near-js/providers\");\nconst transactions_1 = require(\"@near-js/transactions\");\nconst types_1 = require(\"@near-js/types\");\nconst utils_1 = require(\"@near-js/utils\");\nconst utils_2 = require(\"./utils\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey, stake, transfer, } = transactions_1.actionCreators;\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link \"@near-js/crypto\".key_pair.KeyPair | KeyPair}.\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    getConnection() {\n        return this.connection;\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see [https://docs.near.org/api/rpc/contracts#view-account](https://docs.near.org/api/rpc/contracts#view-account)\n     */\n    state() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.connection.provider.query({\n                request_type: 'view_account',\n                account_id: this.accountId,\n                finality: 'optimistic'\n            });\n        });\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     */\n    signTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeyInfo = yield this.findAccessKey(receiverId, actions);\n            if (!accessKeyInfo) {\n                throw new types_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair exists for this account`, 'KeyNotFound');\n            }\n            const { accessKey } = accessKeyInfo;\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = block.header.hash;\n            const nonce = accessKey.nonce + BigInt(1);\n            return yield (0, transactions_1.signTransaction)(receiverId, nonce, actions, (0, utils_1.baseDecode)(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n        });\n    }\n    /**\n     * Sign a transaction to perform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider }\n     *\n     * @param options The options for signing and sending the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be performed in the transaction.\n     * @param options.returnError Whether to return an error if the transaction fails.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions, returnError }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let txHash, signedTx;\n            // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n            const result = yield (0, providers_1.exponentialBackoff)(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                [txHash, signedTx] = yield this.signTransaction(receiverId, actions);\n                const publicKey = signedTx.transaction.publicKey;\n                try {\n                    return yield this.connection.provider.sendTransaction(signedTx);\n                }\n                catch (error) {\n                    if (error.type === 'InvalidNonce') {\n                        utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} with new nonce.`);\n                        delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                        return null;\n                    }\n                    if (error.type === 'Expired') {\n                        utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} due to expired block hash`);\n                        return null;\n                    }\n                    error.context = new types_1.ErrorContext((0, utils_1.baseEncode)(txHash));\n                    throw error;\n                }\n            }));\n            if (!result) {\n                // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n                throw new types_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n            }\n            (0, utils_1.printTxOutcomeLogsAndFailures)({ contractId: signedTx.transaction.receiverId, outcome: result });\n            // Should be falsy if result.status.Failure is null\n            if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object' && result.status.Failure !== null) {\n                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                    throw new types_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n                }\n                else {\n                    throw (0, utils_1.parseResultError)(result);\n                }\n            }\n            // TODO: if Tx is Unknown or Started.\n            return result;\n        });\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link \"@near-js/keystores\".keystore.KeyStore | Keystore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    findAccessKey(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n            const publicKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            if (!publicKey) {\n                throw new types_1.TypedError(`no matching key pair found in ${this.connection.signer}`, 'PublicKeyNotFound');\n            }\n            const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n            if (cachedAccessKey !== undefined) {\n                return { publicKey, accessKey: cachedAccessKey };\n            }\n            try {\n                const rawAccessKey = yield this.connection.provider.query({\n                    request_type: 'view_access_key',\n                    account_id: this.accountId,\n                    public_key: publicKey.toString(),\n                    finality: 'optimistic'\n                });\n                // store nonce as BigInt to preserve precision on big number\n                const accessKey = Object.assign(Object.assign({}, rawAccessKey), { nonce: BigInt(rawAccessKey.nonce || 0) });\n                // this function can be called multiple times and retrieve the same access key\n                // this checks to see if the access key was already retrieved and cached while\n                // the above network call was in flight. To keep nonce values in line, we return\n                // the cached access key.\n                if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                    return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n                }\n                this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n                return { publicKey, accessKey };\n            }\n            catch (e) {\n                if (e.type == 'AccessKeyDoesNotExist') {\n                    return null;\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    createAndDeployContract(contractId, publicKey, data, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            yield this.signAndSendTransaction({\n                receiverId: contractId,\n                actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey), deployContract(data)]\n            });\n            const contractAccount = new Account(this.connection, contractId);\n            return contractAccount;\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    sendMoney(receiverId, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId,\n                actions: [transfer(amount)]\n            });\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    createAccount(newAccountId, publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            return this.signAndSendTransaction({\n                receiverId: newAccountId,\n                actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n            });\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    deleteAccount(beneficiaryId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            utils_1.Logger.log('Deleting an account does not automatically transfer NFTs and FTs to the beneficiary address. Ensure to transfer assets before deleting.');\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deleteAccount(beneficiaryId)]\n            });\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    deployContract(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deployContract(data)]\n            });\n        });\n    }\n    /** @hidden */\n    encodeJSContractArgs(contractId, method, args) {\n        return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n    }\n    /**\n      * Execute a function call.\n      * @param options The options for the function call.\n      * @param options.contractId The NEAR account ID of the smart contract.\n      * @param options.methodName The name of the method to be called on the smart contract.\n      * @param options.args The arguments to be passed to the method.\n      * @param options.gas The maximum amount of gas to be used for the function call.\n      * @param options.attachedDeposit The amount of NEAR tokens to be attached to the function call.\n      * @param options.walletMeta Metadata for wallet integration.\n      * @param options.walletCallbackUrl The callback URL for wallet integration.\n      * @param options.stringify A function to convert input arguments into bytes array\n      * @param options.jsContract Whether the contract is from JS SDK, automatically encodes args from JS SDK to binary.\n      * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the function call.\n      */\n    functionCall({ contractId, methodName, args = {}, gas = utils_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify, jsContract }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateArgs(args);\n            let functionCallArgs;\n            if (jsContract) {\n                const encodedArgs = this.encodeJSContractArgs(contractId, methodName, JSON.stringify(args));\n                functionCallArgs = ['call_js_contract', encodedArgs, gas, attachedDeposit, null, true];\n            }\n            else {\n                const stringifyArg = stringify === undefined ? transactions_1.stringifyJsonOrBytes : stringify;\n                functionCallArgs = [methodName, args, gas, attachedDeposit, stringifyArg, false];\n            }\n            return this.signAndSendTransaction({\n                receiverId: jsContract ? this.connection.jsvmAccountId : contractId,\n                // eslint-disable-next-line prefer-spread\n                actions: [functionCall.apply(void 0, functionCallArgs)],\n                walletMeta,\n                walletCallbackUrl\n            });\n        });\n    }\n    /**\n     * @see [https://docs.near.org/concepts/basics/accounts/access-keys](https://docs.near.org/concepts/basics/accounts/access-keys)\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    addKey(publicKey, contractId, methodNames, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!methodNames) {\n                methodNames = [];\n            }\n            if (!Array.isArray(methodNames)) {\n                methodNames = [methodNames];\n            }\n            let accessKey;\n            if (!contractId) {\n                accessKey = fullAccessKey();\n            }\n            else {\n                accessKey = functionCallAccessKey(contractId, methodNames, amount);\n            }\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n            });\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deleteKey(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deleteKey(crypto_1.PublicKey.from(publicKey))]\n            });\n        });\n    }\n    /**\n     * @see [https://near-nodes.io/validator/staking-and-delegation](https://near-nodes.io/validator/staking-and-delegation)\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    stake(publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [stake(amount, crypto_1.PublicKey.from(publicKey))]\n            });\n        });\n    }\n    /**\n     * Compose and sign a SignedDelegate action to be executed in a transaction on behalf of this Account instance\n     *\n     * @param options Options for the transaction.\n     * @param options.actions Actions to be included in the meta transaction\n     * @param options.blockHeightTtl Number of blocks past the current block height for which the SignedDelegate action may be included in a meta transaction\n     * @param options.receiverId Receiver account of the meta transaction\n     */\n    signedDelegate({ actions, blockHeightTtl, receiverId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { provider, signer } = this.connection;\n            const { header } = yield provider.block({ finality: 'final' });\n            const { accessKey, publicKey } = yield this.findAccessKey(null, null);\n            const delegateAction = (0, transactions_1.buildDelegateAction)({\n                actions,\n                maxBlockHeight: BigInt(header.height) + BigInt(blockHeightTtl),\n                nonce: BigInt(accessKey.nonce) + BigInt(1),\n                publicKey,\n                receiverId,\n                senderId: this.accountId,\n            });\n            const { signedDelegateAction } = yield (0, transactions_1.signDelegateAction)({\n                delegateAction,\n                signer: {\n                    sign: (message) => __awaiter(this, void 0, void 0, function* () {\n                        const { signature } = yield signer.signMessage(message, delegateAction.senderId, this.connection.networkId);\n                        return signature;\n                    }),\n                }\n            });\n            return signedDelegateAction;\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new types_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n     *\n     * @param options Function call options.\n     * @param options.contractId NEAR account where the contract is deployed\n     * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param options.args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n     * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     * @returns {Promise<any>}\n     */\n    viewFunction(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_2.viewFunction)(this.connection, options);\n        });\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_2.viewState)(this.connection, this.accountId, prefix, blockQuery);\n        });\n    }\n    /**\n     * Get all access keys for the account\n     * @see [https://docs.near.org/api/rpc/access-keys#view-access-key-list](https://docs.near.org/api/rpc/access-keys#view-access-key-list)\n     */\n    getAccessKeys() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connection.provider.query({\n                request_type: 'view_access_key_list',\n                account_id: this.accountId,\n                finality: 'optimistic'\n            });\n            // Replace raw nonce into a new BigInt\n            return (_a = response === null || response === void 0 ? void 0 : response.keys) === null || _a === void 0 ? void 0 : _a.map((key) => (Object.assign(Object.assign({}, key), { access_key: Object.assign(Object.assign({}, key.access_key), { nonce: BigInt(key.access_key.nonce) }) })));\n        });\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    getAccountDetails() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: update the response value to return all the different keys, not just app keys.\n            // Also if we need this function, or getAccessKeys is good enough.\n            const accessKeys = yield this.getAccessKeys();\n            const authorizedApps = accessKeys\n                .filter(item => item.access_key.permission !== 'FullAccess')\n                .map(item => {\n                const perm = item.access_key.permission;\n                return {\n                    contractId: perm.FunctionCall.receiver_id,\n                    amount: perm.FunctionCall.allowance,\n                    publicKey: item.public_key,\n                };\n            });\n            return { authorizedApps };\n        });\n    }\n    /**\n     * Returns calculated account balance\n     */\n    getAccountBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConfig = yield this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n            const state = yield this.state();\n            const costPerByte = BigInt(protocolConfig.runtime_config.storage_amount_per_byte);\n            const stateStaked = BigInt(state.storage_usage) * costPerByte;\n            const staked = BigInt(state.locked);\n            const totalBalance = BigInt(state.amount) + staked;\n            const availableBalance = totalBalance - (staked > stateStaked ? staked : stateStaked);\n            return {\n                total: totalBalance.toString(),\n                stateStaked: stateStaked.toString(),\n                staked: staked.toString(),\n                available: availableBalance.toString()\n            };\n        });\n    }\n    /**\n     * Returns the NEAR tokens balance and validators of a given account that is delegated to the staking pools that are part of the validators set in the current epoch.\n     *\n     * NOTE: If the tokens are delegated to a staking pool that is currently on pause or does not have enough tokens to participate in validation, they won't be accounted for.\n     * @returns {Promise<ActiveDelegatedStakeBalance>}\n     */\n    getActiveDelegatedStakeBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = block.header.hash;\n            const epochId = block.header.epoch_id;\n            const { current_validators, next_validators, current_proposals } = yield this.connection.provider.validators(epochId);\n            const pools = new Set();\n            [...current_validators, ...next_validators, ...current_proposals]\n                .forEach((validator) => pools.add(validator.account_id));\n            const uniquePools = [...pools];\n            const promises = uniquePools\n                .map((validator) => (this.viewFunction({\n                contractId: validator,\n                methodName: 'get_account_total_balance',\n                args: { account_id: this.accountId },\n                blockQuery: { blockId: blockHash }\n            })));\n            const results = yield Promise.allSettled(promises);\n            const hasTimeoutError = results.some((result) => {\n                if (result.status === 'rejected' && result.reason.type === 'TimeoutError') {\n                    return true;\n                }\n                return false;\n            });\n            // When RPC is down and return timeout error, throw error\n            if (hasTimeoutError) {\n                throw new Error('Failed to get delegated stake balance');\n            }\n            const summary = results.reduce((result, state, index) => {\n                const validatorId = uniquePools[index];\n                if (state.status === 'fulfilled') {\n                    const currentBN = BigInt(state.value);\n                    if (currentBN !== BigInt(0)) {\n                        return Object.assign(Object.assign({}, result), { stakedValidators: [...result.stakedValidators, { validatorId, amount: currentBN.toString() }], total: result.total + currentBN });\n                    }\n                }\n                if (state.status === 'rejected') {\n                    return Object.assign(Object.assign({}, result), { failedValidators: [...result.failedValidators, { validatorId, error: state.reason }] });\n                }\n                return result;\n            }, { stakedValidators: [], failedValidators: [], total: BigInt(0) });\n            return Object.assign(Object.assign({}, summary), { total: summary.total.toString() });\n        });\n    }\n}\nexports.Account = Account;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/constants.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = BigInt((0, utils_1.parseNearAmount)('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = BigInt('100000000000000');\nexports.MULTISIG_DEPOSIT = BigInt('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,wBAAwB,GAAG,QAAQ,uBAAuB,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,YAAY,GAAG,QAAQ,kBAAkB,GAAG,QAAQ,oBAAoB,GAAG,KAAK;AACxL,MAAM;AACN,QAAQ,oBAAoB,GAAG;AAC/B,QAAQ,kBAAkB,GAAG,OAAO,CAAC,GAAG,QAAQ,eAAe,EAAE;AACjE,uFAAuF;AACvF,QAAQ,YAAY,GAAG,OAAO;AAC9B,QAAQ,gBAAgB,GAAG,OAAO;AAClC,QAAQ,uBAAuB,GAAG;IAAC;IAAe;IAA2B;IAAkB;CAAU;AACzG,QAAQ,wBAAwB,GAAG;IAAC;CAAU","ignoreList":[0]}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = void 0;\nvar MultisigDeleteRequestRejectionError;\n(function (MultisigDeleteRequestRejectionError) {\n    MultisigDeleteRequestRejectionError[\"CANNOT_DESERIALIZE_STATE\"] = \"Cannot deserialize the contract state\";\n    MultisigDeleteRequestRejectionError[\"MULTISIG_NOT_INITIALIZED\"] = \"Smart contract panicked: Multisig contract should be initialized before usage\";\n    MultisigDeleteRequestRejectionError[\"NO_SUCH_REQUEST\"] = \"Smart contract panicked: panicked at 'No such request: either wrong number or already confirmed'\";\n    MultisigDeleteRequestRejectionError[\"REQUEST_COOLDOWN_ERROR\"] = \"Request cannot be deleted immediately after creation.\";\n    MultisigDeleteRequestRejectionError[\"METHOD_NOT_FOUND\"] = \"Contract method is not found\";\n})(MultisigDeleteRequestRejectionError = exports.MultisigDeleteRequestRejectionError || (exports.MultisigDeleteRequestRejectionError = {}));\nvar MultisigStateStatus;\n(function (MultisigStateStatus) {\n    MultisigStateStatus[MultisigStateStatus[\"INVALID_STATE\"] = 0] = \"INVALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"STATE_NOT_INITIALIZED\"] = 1] = \"STATE_NOT_INITIALIZED\";\n    MultisigStateStatus[MultisigStateStatus[\"VALID_STATE\"] = 2] = \"VALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"UNKNOWN_STATE\"] = 3] = \"UNKNOWN_STATE\";\n})(MultisigStateStatus = exports.MultisigStateStatus || (exports.MultisigStateStatus = {}));\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,mCAAmC,GAAG,KAAK;AACjF,IAAI;AACJ,CAAC,SAAU,mCAAmC;IAC1C,mCAAmC,CAAC,2BAA2B,GAAG;IAClE,mCAAmC,CAAC,2BAA2B,GAAG;IAClE,mCAAmC,CAAC,kBAAkB,GAAG;IACzD,mCAAmC,CAAC,yBAAyB,GAAG;IAChE,mCAAmC,CAAC,mBAAmB,GAAG;AAC9D,CAAC,EAAE,sCAAsC,QAAQ,mCAAmC,IAAI,CAAC,QAAQ,mCAAmC,GAAG,CAAC,CAAC;AACzI,IAAI;AACJ,CAAC,SAAU,mBAAmB;IAC1B,mBAAmB,CAAC,mBAAmB,CAAC,gBAAgB,GAAG,EAAE,GAAG;IAChE,mBAAmB,CAAC,mBAAmB,CAAC,wBAAwB,GAAG,EAAE,GAAG;IACxE,mBAAmB,CAAC,mBAAmB,CAAC,cAAc,GAAG,EAAE,GAAG;IAC9D,mBAAmB,CAAC,mBAAmB,CAAC,gBAAgB,GAAG,EAAE,GAAG;AACpE,CAAC,EAAE,sBAAsB,QAAQ,mBAAmB,IAAI,CAAC,QAAQ,mBAAmB,GAAG,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/account_multisig.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountMultisig = void 0;\nconst transactions_1 = require(\"@near-js/transactions\");\nconst utils_1 = require(\"@near-js/utils\");\nconst account_1 = require(\"./account\");\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    /**\n     * Constructs an instance of the `AccountMultisig` class.\n     * @param connection The NEAR connection object.\n     * @param accountId The NEAR account ID.\n     * @param options Additional options for the multisig account.\n     * @param options.storage Storage to store data related to multisig operations.\n     * @param options.onAddRequestResult Callback function to handle the result of adding a request.\n     */\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    /**\n     * Sign and send a transaction with the multisig account as the sender.\n     * @param receiverId - The NEAR account ID of the transaction receiver.\n     * @param actions - The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransactionWithAccount(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.signAndSendTransaction.call(this, { receiverId, actions });\n        });\n    }\n    /**\n     * Sign and send a multisig transaction to add a request and confirm it.\n     * @param options Options for the multisig transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const args = Buffer.from(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            }));\n            let result;\n            try {\n                result = yield _super.signAndSendTransaction.call(this, {\n                    receiverId: accountId,\n                    actions: [\n                        functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            catch (e) {\n                if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                    yield this.deleteUnconfirmedRequests();\n                    return yield this.signAndSendTransaction({ receiverId, actions });\n                }\n                throw e;\n            }\n            // TODO: Are following even needed? Seems like it throws on error already\n            if (!result.status) {\n                throw new Error('Request failed');\n            }\n            const status = Object.assign({}, result.status);\n            if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n                throw new Error('Request failed');\n            }\n            this.setRequest({\n                accountId,\n                actions,\n                requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n            });\n            if (this.onAddRequestResult) {\n                yield this.onAddRequestResult(result);\n            }\n            // NOTE there is no await on purpose to avoid blocking for 2fa\n            this.deleteUnconfirmedRequests();\n            return result;\n        });\n    }\n    /**\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     * @param contractBytes The bytecode of the multisig contract.\n     * @returns {Promise<{ codeStatus: MultisigCodeStatus; stateStatus: MultisigStateStatus }>} A promise that resolves to the status of the code and state.\n     */\n    checkMultisigCodeAndStateStatus(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const u32_max = 4294967295;\n            const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n            try {\n                if (contractBytes) {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId, actions: [\n                            deployContract(contractBytes),\n                            functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                        ]\n                    });\n                }\n                else {\n                    yield this.deleteRequest(u32_max);\n                }\n                return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            catch (e) {\n                if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                    // not reachable if transaction included a deploy\n                    return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Delete a multisig request by its ID.\n     * @param request_id The ID of the multisig request to be deleted.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deletion.\n     */\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    /**\n     * Delete all multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when all requests are deleted.\n     */\n    deleteAllRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request_ids = yield this.getRequestIds();\n            if (request_ids.length) {\n                yield Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n            }\n        });\n    }\n    /**\n     * Delete unconfirmed multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when unconfirmed requests are deleted.\n     */\n    deleteUnconfirmedRequests() {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Delete in batch, don't delete unexpired\n            // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n            const request_ids = yield this.getRequestIds();\n            const { requestId } = this.getRequest();\n            for (const requestIdToDelete of request_ids) {\n                if (requestIdToDelete == requestId) {\n                    continue;\n                }\n                try {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId,\n                        actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                    });\n                }\n                catch (e) {\n                    utils_1.Logger.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Read requests from state to allow filtering by expiration time\n            // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n            return this.viewFunction({\n                contractId: this.accountId,\n                methodName: 'list_request_ids',\n            });\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/account_2fa.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst types_1 = require(\"@near-js/types\");\nconst providers_1 = require(\"@near-js/providers\");\nconst transactions_1 = require(\"@near-js/transactions\");\nconst utils_1 = require(\"@near-js/utils\");\nconst account_multisig_1 = require(\"./account_multisig\");\nconst constants_1 = require(\"./constants\");\nconst types_2 = require(\"./types\");\nconst { addKey, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey } = transactions_1.actionCreators;\nclass Account2FA extends account_multisig_1.AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    /**\n     * Sign a transaction to preform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     *\n     * @param options Options for the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.signAndSendTransaction.call(this, { receiverId, actions });\n            // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n            yield this.sendCode();\n            const result = yield this.promptAndVerify();\n            if (this.onConfirmResult) {\n                yield this.onConfirmResult(result);\n            }\n            return result;\n        });\n    }\n    // default helpers for CH deployments of multisig\n    /**\n     * Deploy a multisig contract with 2FA and handle the deployment process.\n     * @param contractBytes - The bytecode of the multisig contract.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deployment.\n     */\n    deployMultisig(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransactionWithAccount: { get: () => super.signAndSendTransactionWithAccount }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const seedOrLedgerKey = (yield this.getRecoveryMethods()).data\n                .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n                .map((rm) => rm.publicKey);\n            const fak2lak = (yield this.getAccessKeys())\n                .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n                .map((ak) => ak.public_key)\n                .map(toPK);\n            const confirmOnlyKey = toPK((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n            const actions = [\n                ...fak2lak.map((pk) => deleteKey(pk)),\n                ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, constants_1.MULTISIG_CHANGE_METHODS, null))),\n                addKey(confirmOnlyKey, functionCallAccessKey(accountId, constants_1.MULTISIG_CONFIRM_METHODS, null)),\n                deployContract(contractBytes),\n            ];\n            const newFunctionCallActionBatch = actions.concat(functionCall('new', newArgs, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT));\n            utils_1.Logger.log('deploying multisig contract for', accountId);\n            const { stateStatus: multisigStateStatus } = yield this.checkMultisigCodeAndStateStatus(contractBytes);\n            switch (multisigStateStatus) {\n                case types_2.MultisigStateStatus.STATE_NOT_INITIALIZED:\n                    return yield _super.signAndSendTransactionWithAccount.call(this, accountId, newFunctionCallActionBatch);\n                case types_2.MultisigStateStatus.VALID_STATE:\n                    return yield _super.signAndSendTransactionWithAccount.call(this, accountId, actions);\n                case types_2.MultisigStateStatus.INVALID_STATE:\n                    throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState');\n                default:\n                    throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n            }\n        });\n    }\n    /**\n     * Disable 2FA with the option to clean up contract state.\n     * @param options Options for disabling 2FA.\n     * @param options.contractBytes The bytecode of the contract to deploy.\n     * @param options.cleanupContractBytes The bytecode of the cleanup contract (optional).\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    disableWithFAK({ contractBytes, cleanupContractBytes }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let cleanupActions = [];\n            if (cleanupContractBytes) {\n                yield this.deleteAllRequests().catch(e => e);\n                cleanupActions = yield this.get2faDisableCleanupActions(cleanupContractBytes);\n            }\n            const keyConversionActions = yield this.get2faDisableKeyConversionActions();\n            const actions = [\n                ...cleanupActions,\n                ...keyConversionActions,\n                deployContract(contractBytes)\n            ];\n            const accessKeyInfo = yield this.findAccessKey(this.accountId, actions);\n            if (accessKeyInfo && accessKeyInfo.accessKey && accessKeyInfo.accessKey.permission !== 'FullAccess') {\n                throw new types_1.TypedError('No full access key found in keystore. Unable to bypass multisig', 'NoFAKFound');\n            }\n            return this.signAndSendTransactionWithAccount(this.accountId, actions);\n        });\n    }\n    /**\n     * Retrieves cleanup actions for disabling 2FA.\n     * @param cleanupContractBytes - The bytecode of the cleanup contract.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of cleanup actions.\n     */\n    get2faDisableCleanupActions(cleanupContractBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentAccountState = yield this.viewState('').catch(error => {\n                const cause = error.cause && error.cause.name;\n                if (cause == 'NO_CONTRACT_CODE') {\n                    return [];\n                }\n                throw cause == 'TOO_LARGE_CONTRACT_STATE'\n                    ? new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState')\n                    : error;\n            });\n            const currentAccountStateKeys = currentAccountState.map(({ key }) => key.toString('base64'));\n            return currentAccountState.length ? [\n                deployContract(cleanupContractBytes),\n                functionCall('clean', { keys: currentAccountStateKeys }, constants_1.MULTISIG_GAS, BigInt('0'))\n            ] : [];\n        });\n    }\n    /**\n     * Retrieves key conversion actions for disabling 2FA.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of key conversion actions.\n     */\n    get2faDisableKeyConversionActions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const accessKeys = yield this.getAccessKeys();\n            const lak2fak = accessKeys\n                .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n                .filter(({ access_key }) => {\n                const perm = access_key.permission.FunctionCall;\n                return perm.receiver_id === accountId &&\n                    perm.method_names.length === 4 &&\n                    perm.method_names.includes('add_request_and_confirm');\n            });\n            const confirmOnlyKey = crypto_1.PublicKey.from((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            return [\n                deleteKey(confirmOnlyKey),\n                ...lak2fak.map(({ public_key }) => deleteKey(crypto_1.PublicKey.from(public_key))),\n                ...lak2fak.map(({ public_key }) => addKey(crypto_1.PublicKey.from(public_key), fullAccessKey()))\n            ];\n        });\n    }\n    /**\n     * This method converts LAKs back to FAKs, clears state and deploys an 'empty' contract (contractBytes param)\n     * @param [contractBytes]{@link https://github.com/near/near-wallet/blob/master/packages/frontend/src/wasm/main.wasm?raw=true}\n     * @param [cleanupContractBytes]{@link https://github.com/near/core-contracts/blob/master/state-manipulation/res/state_cleanup.wasm?raw=true}\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    disable(contractBytes, cleanupContractBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { stateStatus } = yield this.checkMultisigCodeAndStateStatus();\n            if (stateStatus !== types_2.MultisigStateStatus.VALID_STATE && stateStatus !== types_2.MultisigStateStatus.STATE_NOT_INITIALIZED) {\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n            }\n            let deleteAllRequestsError;\n            yield this.deleteAllRequests().catch(e => deleteAllRequestsError = e);\n            const cleanupActions = yield this.get2faDisableCleanupActions(cleanupContractBytes).catch(e => {\n                if (e.type === 'ContractHasExistingState') {\n                    throw deleteAllRequestsError || e;\n                }\n                throw e;\n            });\n            const actions = [\n                ...cleanupActions,\n                ...(yield this.get2faDisableKeyConversionActions()),\n                deployContract(contractBytes),\n            ];\n            utils_1.Logger.log('disabling 2fa for', this.accountId);\n            return yield this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions\n            });\n        });\n    }\n    /**\n     * Default implementation for sending the 2FA code.\n     * @returns {Promise<string>} - A promise that resolves to the request ID.\n     */\n    sendCodeDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const { requestId } = this.getRequest();\n            const method = yield this.get2faMethod();\n            yield this.postSignedJson('/2fa/send', {\n                accountId,\n                method,\n                requestId,\n            });\n            return requestId;\n        });\n    }\n    getCodeDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n        });\n    }\n    /**\n     * Prompts the user to enter and verify the 2FA code.\n     * @returns {Promise<any>} - A promise that resolves to the verification result.\n     */\n    promptAndVerify() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const method = yield this.get2faMethod();\n            const securityCode = yield this.getCode(method);\n            try {\n                const result = yield this.verifyCode(securityCode);\n                // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n                return result;\n            }\n            catch (e) {\n                utils_1.Logger.warn('Error validating security code:', e);\n                if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                    return yield this.promptAndVerify();\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Verify the 2FA code using the default method.\n     * @param securityCode - The security code to verify.\n     * @returns {Promise<any>} A promise that resolves to the verification result.\n     */\n    verifyCodeDefault(securityCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const request = this.getRequest();\n            if (!request) {\n                throw new Error('no request pending');\n            }\n            const { requestId } = request;\n            return yield this.postSignedJson('/2fa/verify', {\n                accountId,\n                securityCode,\n                requestId\n            });\n        });\n    }\n    /**\n     * Retrieves recovery methods for the account.\n     * @returns {Promise<{ accountId: string, data: any }>} - A promise that resolves to recovery methods data.\n     */\n    getRecoveryMethods() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            return {\n                accountId,\n                data: yield this.postSignedJson('/account/recoveryMethods', { accountId })\n            };\n        });\n    }\n    /**\n     * Gets the 2FA method (kind and detail).\n     * @returns {Promise<{ kind: string, detail: string }>} A promise that resolves to the 2FA method.\n     */\n    get2faMethod() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { data } = yield this.getRecoveryMethods();\n            if (data && data.length) {\n                data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n            }\n            if (!data)\n                return null;\n            const { kind, detail } = data;\n            return { kind, detail };\n        });\n    }\n    /**\n    * Generates a signature for the latest finalized block.\n    * @returns {Promise<{ blockNumber: string, blockNumberSignature: string }>} - A promise that resolves to the signature information.\n    */\n    signatureFor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockNumber = block.header.height.toString();\n            const signed = yield this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n            const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n            return { blockNumber, blockNumberSignature };\n        });\n    }\n    /**\n    * Sends a signed JSON request to a specified path.\n    * @param path - The path for the request.\n    * @param body - The request body.\n    * @returns {Promise<any>} - A promise that resolves to the response from the helper.\n    */\n    postSignedJson(path, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, providers_1.fetchJson)(this.helperUrl + path, JSON.stringify(Object.assign(Object.assign({}, body), (yield this.signatureFor()))));\n        });\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => crypto_1.PublicKey.from(pk);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1487, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/account_creator.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst providers_1 = require(\"@near-js/providers\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    createAccount(newAccountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n        });\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    createAccount(newAccountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield (0, providers_1.fetchJson)(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n        });\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n"],"names":[],"mappings":"AAAA;AACA,IAAI,YAAY,AAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAK,SAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;IACnF,SAAS,MAAM,KAAK;QAAI,OAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,OAAO;YAAI,QAAQ;QAAQ;IAAI;IAC3G,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,EAAE,SAAU,OAAO,EAAE,MAAM;QACrD,SAAS,UAAU,KAAK;YAAI,IAAI;gBAAE,KAAK,UAAU,IAAI,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC1F,SAAS,SAAS,KAAK;YAAI,IAAI;gBAAE,KAAK,SAAS,CAAC,QAAQ,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC7F,SAAS,KAAK,MAAM;YAAI,OAAO,IAAI,GAAG,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,IAAI,CAAC,WAAW;QAAW;QAC7G,KAAK,CAAC,YAAY,UAAU,KAAK,CAAC,SAAS,cAAc,EAAE,CAAC,EAAE,IAAI;IACtE;AACJ;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,iBAAiB,GAAG,QAAQ,mBAAmB,GAAG,QAAQ,cAAc,GAAG,KAAK;AACxF,MAAM;AACN;;CAEC,GACD,MAAM;AACN;AACA,QAAQ,cAAc,GAAG;AACzB,MAAM,4BAA4B;IAC9B,YAAY,aAAa,EAAE,cAAc,CAAE;QACvC,KAAK;QACL,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,cAAc,GAAG;IAC1B;IACA;;;;;KAKC,GACD,cAAc,YAAY,EAAE,SAAS,EAAE;QACnC,OAAO,UAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,WAAW,IAAI,CAAC,cAAc;QACvF;IACJ;AACJ;AACA,QAAQ,mBAAmB,GAAG;AAC9B,MAAM,0BAA0B;IAC5B,YAAY,UAAU,EAAE,SAAS,CAAE;QAC/B,KAAK;QACL,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,SAAS,GAAG;IACrB;IACA;;;;;;KAMC,GACD,cAAc,YAAY,EAAE,SAAS,EAAE;QACnC,OAAO,UAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,CAAC,GAAG,YAAY,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC;gBAAE;gBAAc,qBAAqB,UAAU,QAAQ;YAAG;QAC3I;IACJ;AACJ;AACA,QAAQ,iBAAiB,GAAG","ignoreList":[0]}},
    {"offset": {"line": 1565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/connection.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst signers_1 = require(\"@near-js/signers\");\nconst providers_1 = require(\"@near-js/providers\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider(Object.assign({}, config.args));\n        case 'FailoverRpcProvider': {\n            const providers = ((config === null || config === void 0 ? void 0 : config.args) || []).map((arg) => new providers_1.JsonRpcProvider(arg));\n            return new providers_1.FailoverRpcProvider(providers);\n        }\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signers_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer, jsvmAccountId) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n        this.jsvmAccountId = jsvmAccountId;\n    }\n    getConnection() {\n        return this;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer, config.jsvmAccountId);\n    }\n}\nexports.Connection = Connection;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,KAAK;AAC1B,MAAM;AACN,MAAM;AACN;;;CAGC,GACD,SAAS,YAAY,MAAM;IACvB,OAAQ,OAAO,IAAI;QACf,KAAK;YACD,OAAO;QACX,KAAK;YAAmB,OAAO,IAAI,YAAY,eAAe,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO,IAAI;QAC5F,KAAK;YAAuB;gBACxB,MAAM,YAAY,CAAC,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC,MAAQ,IAAI,YAAY,eAAe,CAAC;gBACrI,OAAO,IAAI,YAAY,mBAAmB,CAAC;YAC/C;QACA;YAAS,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,OAAO,IAAI,EAAE;IACnE;AACJ;AACA;;;CAGC,GACD,SAAS,UAAU,MAAM;IACrB,OAAQ,OAAO,IAAI;QACf,KAAK;YACD,OAAO;QACX,KAAK;YAAkB;gBACnB,OAAO,IAAI,UAAU,cAAc,CAAC,OAAO,QAAQ;YACvD;QACA;YAAS,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,OAAO,IAAI,EAAE;IACjE;AACJ;AACA;;CAEC,GACD,MAAM;IACF,YAAY,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAE;QACpD,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,aAAa,GAAG;IACzB;IACA,gBAAgB;QACZ,OAAO,IAAI;IACf;IACA;;KAEC,GACD,OAAO,WAAW,MAAM,EAAE;QACtB,MAAM,WAAW,YAAY,OAAO,QAAQ;QAC5C,MAAM,SAAS,UAAU,OAAO,MAAM;QACtC,OAAO,IAAI,WAAW,OAAO,SAAS,EAAE,UAAU,QAAQ,OAAO,aAAa;IAClF;AACJ;AACA,QAAQ,UAAU,GAAG","ignoreList":[0]}},
    {"offset": {"line": 1631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1636, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/local-view-execution/storage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst lru_map_1 = require(\"lru_map\");\nclass Storage {\n    constructor(options = { max: Storage.MAX_ELEMENTS }) {\n        this.cache = new lru_map_1.LRUMap(options.max);\n        this.blockHeights = new Map();\n    }\n    load(blockRef) {\n        const noBlockId = !('blockId' in blockRef);\n        if (noBlockId)\n            return undefined;\n        let blockId = blockRef.blockId;\n        // block hash is passed, so get its corresponding block height\n        if (blockId.toString().length == 44) {\n            blockId = this.blockHeights.get(blockId.toString());\n        }\n        // get cached values for the given block height\n        return this.cache.get(blockId);\n    }\n    save(blockHash, { blockHeight, blockTimestamp, contractCode, contractState }) {\n        this.blockHeights.set(blockHash, blockHeight);\n        this.cache.set(blockHeight, { blockHeight, blockTimestamp, contractCode, contractState });\n    }\n}\nexports.Storage = Storage;\nStorage.MAX_ELEMENTS = 100;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,OAAO,GAAG,KAAK;AACvB,MAAM;AACN,MAAM;IACF,YAAY,UAAU;QAAE,KAAK,QAAQ,YAAY;IAAC,CAAC,CAAE;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,MAAM,CAAC,QAAQ,GAAG;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI;IAC5B;IACA,KAAK,QAAQ,EAAE;QACX,MAAM,YAAY,CAAC,CAAC,aAAa,QAAQ;QACzC,IAAI,WACA,OAAO;QACX,IAAI,UAAU,SAAS,OAAO;QAC9B,8DAA8D;QAC9D,IAAI,QAAQ,QAAQ,GAAG,MAAM,IAAI,IAAI;YACjC,UAAU,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,QAAQ;QACpD;QACA,+CAA+C;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B;IACA,KAAK,SAAS,EAAE,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,aAAa,EAAE,EAAE;QAC1E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW;QACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa;YAAE;YAAa;YAAgB;YAAc;QAAc;IAC3F;AACJ;AACA,QAAQ,OAAO,GAAG;AAClB,QAAQ,YAAY,GAAG","ignoreList":[0]}},
    {"offset": {"line": 1672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1677, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/local-view-execution/runtime.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Runtime = void 0;\nconst crypto_1 = require(\"crypto\");\nconst notImplemented = (name) => () => {\n    throw new Error('method not implemented: ' + name);\n};\nconst prohibitedInView = (name) => () => {\n    throw new Error('method not available for view calls: ' + name);\n};\nclass Runtime {\n    constructor(_a) {\n        var { contractCode } = _a, context = __rest(_a, [\"contractCode\"]);\n        this.context = context;\n        this.wasm = this.prepareWASM(Buffer.from(contractCode, 'base64'));\n        this.memory = new WebAssembly.Memory({ initial: 1024, maximum: 2048 });\n        this.registers = {};\n        this.logs = [];\n        this.result = Buffer.from([]);\n    }\n    readUTF16CStr(ptr) {\n        const arr = [];\n        const mem = new Uint16Array(this.memory.buffer);\n        let key = Number(ptr) / 2;\n        while (mem[key] != 0) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(Uint16Array.from(arr).buffer).toString('ucs2');\n    }\n    readUTF8CStr(len, ptr) {\n        const arr = [];\n        const mem = new Uint8Array(this.memory.buffer);\n        let key = Number(ptr);\n        for (let i = 0; i < len && mem[key] != 0; i++) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(arr).toString('utf8');\n    }\n    storageRead(keyLen, keyPtr) {\n        const storageKey = Buffer.from(new Uint8Array(this.memory.buffer, Number(keyPtr), Number(keyLen)));\n        const stateVal = this.context.contractState.filter((obj) => Buffer.compare(obj.key, storageKey) === 0).map((obj) => obj.value);\n        if (stateVal.length === 0)\n            return null;\n        return stateVal.length > 1 ? stateVal : stateVal[0];\n    }\n    prepareWASM(input) {\n        const parts = [];\n        const magic = input.subarray(0, 4);\n        if (magic.toString('utf8') !== '\\0asm') {\n            throw new Error('Invalid magic number');\n        }\n        const version = input.readUInt32LE(4);\n        if (version != 1) {\n            throw new Error('Invalid version: ' + version);\n        }\n        let offset = 8;\n        parts.push(input.subarray(0, offset));\n        function decodeLEB128() {\n            let result = 0;\n            let shift = 0;\n            let byte;\n            do {\n                byte = input[offset++];\n                result |= (byte & 0x7f) << shift;\n                shift += 7;\n            } while (byte & 0x80);\n            return result;\n        }\n        function decodeLimits() {\n            const flags = input[offset++];\n            const hasMax = flags & 0x1;\n            const initial = decodeLEB128();\n            const max = hasMax ? decodeLEB128() : null;\n            return { initial, max };\n        }\n        function decodeString() {\n            const length = decodeLEB128();\n            const result = input.subarray(offset, offset + length);\n            offset += length;\n            return result.toString('utf8');\n        }\n        function encodeLEB128(value) {\n            const result = [];\n            do {\n                let byte = value & 0x7f;\n                value >>= 7;\n                if (value !== 0) {\n                    byte |= 0x80;\n                }\n                result.push(byte);\n            } while (value !== 0);\n            return Buffer.from(result);\n        }\n        function encodeString(value) {\n            const result = Buffer.from(value, 'utf8');\n            return Buffer.concat([encodeLEB128(result.length), result]);\n        }\n        do {\n            const sectionStart = offset;\n            const sectionId = input.readUInt8(offset);\n            offset++;\n            const sectionSize = decodeLEB128();\n            const sectionEnd = offset + sectionSize;\n            if (sectionId == 5) {\n                // Memory section\n                // Make sure it's empty and only imported memory is used\n                parts.push(Buffer.from([5, 1, 0]));\n            }\n            else if (sectionId == 2) {\n                // Import section\n                const sectionParts = [];\n                const numImports = decodeLEB128();\n                for (let i = 0; i < numImports; i++) {\n                    const importStart = offset;\n                    decodeString();\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    let skipImport = false;\n                    switch (kind) {\n                        case 0:\n                            // Function import\n                            decodeLEB128(); // index\n                            break;\n                        case 1:\n                            // Table import\n                            offset++; // type\n                            decodeLimits();\n                            break;\n                        case 2:\n                            // Memory import\n                            decodeLimits();\n                            // NOTE: existing memory import is removed (so no need to add it to sectionParts)\n                            skipImport = true;\n                            break;\n                        case 3:\n                            // Global import\n                            offset++; // type\n                            offset++; // mutability\n                            break;\n                        default:\n                            throw new Error('Invalid import kind: ' + kind);\n                    }\n                    if (!skipImport) {\n                        sectionParts.push(input.subarray(importStart, offset));\n                    }\n                }\n                const importMemory = Buffer.concat([\n                    encodeString('env'),\n                    encodeString('memory'),\n                    Buffer.from([2]),\n                    Buffer.from([0]),\n                    encodeLEB128(1),\n                ]);\n                sectionParts.push(importMemory);\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([2]),\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else if (sectionId == 7) {\n                // Export section\n                const sectionParts = [];\n                const numExports = decodeLEB128();\n                for (let i = 0; i < numExports; i++) {\n                    const exportStart = offset;\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    decodeLEB128();\n                    if (kind !== 2) {\n                        // Pass through all exports except memory\n                        sectionParts.push(input.subarray(exportStart, offset));\n                    }\n                }\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([7]),\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else {\n                parts.push(input.subarray(sectionStart, sectionEnd));\n            }\n            offset = sectionEnd;\n        } while (offset < input.length);\n        return Buffer.concat(parts);\n    }\n    // Host functions\n    getRegisterLength(registerId) {\n        return BigInt(this.registers[registerId.toString()] ? this.registers[registerId.toString()].length : Number.MAX_SAFE_INTEGER);\n    }\n    readFromRegister(registerId, ptr) {\n        const mem = new Uint8Array(this.memory.buffer);\n        mem.set(this.registers[registerId.toString()] || Buffer.from([]), Number(ptr));\n    }\n    getCurrentAccountId(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.contractId);\n    }\n    inputMethodArgs(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.methodArgs);\n    }\n    getBlockHeight() {\n        return BigInt(this.context.blockHeight);\n    }\n    getBlockTimestamp() {\n        return BigInt(this.context.blockTimestamp);\n    }\n    sha256(valueLen, valuePtr, registerId) {\n        const value = new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen));\n        const hash = (0, crypto_1.createHash)('sha256');\n        hash.update(value);\n        this.registers[registerId.toString()] = hash.digest();\n    }\n    returnValue(valueLen, valuePtr) {\n        this.result = Buffer.from(new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen)));\n    }\n    panic(message) {\n        throw new Error('panic: ' + message);\n    }\n    abort(msg_ptr, filename_ptr, line, col) {\n        const msg = this.readUTF16CStr(msg_ptr);\n        const filename = this.readUTF16CStr(filename_ptr);\n        const message = `${msg} ${filename}:${line}:${col}`;\n        if (!msg || !filename) {\n            throw new Error('abort: ' + 'String encoding is bad UTF-16 sequence.');\n        }\n        throw new Error('abort: ' + message);\n    }\n    appendToLog(len, ptr) {\n        this.logs.push(this.readUTF8CStr(len, ptr));\n    }\n    readStorage(key_len, key_ptr, register_id) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return BigInt(0);\n        }\n        this.registers[register_id] = result;\n        return BigInt(1);\n    }\n    hasStorageKey(key_len, key_ptr) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return BigInt(0);\n        }\n        return BigInt(1);\n    }\n    getHostImports() {\n        return {\n            register_len: this.getRegisterLength.bind(this),\n            read_register: this.readFromRegister.bind(this),\n            current_account_id: this.getCurrentAccountId.bind(this),\n            input: this.inputMethodArgs.bind(this),\n            block_index: this.getBlockHeight.bind(this),\n            block_timestamp: this.getBlockTimestamp.bind(this),\n            sha256: this.sha256.bind(this),\n            value_return: this.returnValue.bind(this),\n            abort: this.abort.bind(this),\n            log_utf8: this.appendToLog.bind(this),\n            log_utf16: this.appendToLog.bind(this),\n            storage_read: this.readStorage.bind(this),\n            storage_has_key: this.hasStorageKey.bind(this),\n            panic: () => this.panic('explicit guest panic'),\n            panic_utf8: (len, ptr) => this.panic(this.readUTF8CStr(len, ptr)),\n            // Not implemented\n            epoch_height: notImplemented('epoch_height'),\n            storage_usage: notImplemented('storage_usage'),\n            account_balance: notImplemented('account_balance'),\n            account_locked_balance: notImplemented('account_locked_balance'),\n            random_seed: notImplemented('random_seed'),\n            ripemd160: notImplemented('ripemd160'),\n            keccak256: notImplemented('keccak256'),\n            keccak512: notImplemented('keccak512'),\n            ecrecover: notImplemented('ecrecover'),\n            validator_stake: notImplemented('validator_stake'),\n            validator_total_stake: notImplemented('validator_total_stake'),\n            // Prohibited\n            write_register: prohibitedInView('write_register'),\n            signer_account_id: prohibitedInView('signer_account_id'),\n            signer_account_pk: prohibitedInView('signer_account_pk'),\n            predecessor_account_id: prohibitedInView('predecessor_account_id'),\n            attached_deposit: prohibitedInView('attached_deposit'),\n            prepaid_gas: prohibitedInView('prepaid_gas'),\n            used_gas: prohibitedInView('used_gas'),\n            promise_create: prohibitedInView('promise_create'),\n            promise_then: prohibitedInView('promise_then'),\n            promise_and: prohibitedInView('promise_and'),\n            promise_batch_create: prohibitedInView('promise_batch_create'),\n            promise_batch_then: prohibitedInView('promise_batch_then'),\n            promise_batch_action_create_account: prohibitedInView('promise_batch_action_create_account'),\n            promise_batch_action_deploy_contract: prohibitedInView('promise_batch_action_deploy_contract'),\n            promise_batch_action_function_call: prohibitedInView('promise_batch_action_function_call'),\n            promise_batch_action_function_call_weight: prohibitedInView('promise_batch_action_function_call_weight'),\n            promise_batch_action_transfer: prohibitedInView('promise_batch_action_transfer'),\n            promise_batch_action_stake: prohibitedInView('promise_batch_action_stake'),\n            promise_batch_action_add_key_with_full_access: prohibitedInView('promise_batch_action_add_key_with_full_access'),\n            promise_batch_action_add_key_with_function_call: prohibitedInView('promise_batch_action_add_key_with_function_call'),\n            promise_batch_action_delete_key: prohibitedInView('promise_batch_action_delete_key'),\n            promise_batch_action_delete_account: prohibitedInView('promise_batch_action_delete_account'),\n            promise_results_count: prohibitedInView('promise_results_count'),\n            promise_result: prohibitedInView('promise_result'),\n            promise_return: prohibitedInView('promise_return'),\n            storage_write: prohibitedInView('storage_write'),\n            storage_remove: prohibitedInView('storage_remove'),\n        };\n    }\n    execute(methodName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const module = yield WebAssembly.compile(this.wasm);\n            const instance = yield WebAssembly.instantiate(module, { env: Object.assign(Object.assign({}, this.getHostImports()), { memory: this.memory }) });\n            const callMethod = instance.exports[methodName];\n            if (callMethod == undefined) {\n                throw new Error(`Contract method '${methodName}' does not exists in contract ${this.context.contractId} for block id ${this.context.blockHeight}`);\n            }\n            callMethod();\n            return {\n                result: this.result,\n                logs: this.logs\n            };\n        });\n    }\n}\nexports.Runtime = Runtime;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2077, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/local-view-execution/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalViewExecution = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst storage_1 = require(\"./storage\");\nconst runtime_1 = require(\"./runtime\");\nconst utils_2 = require(\"../utils\");\nclass LocalViewExecution {\n    constructor(connection) {\n        this.connection = connection.getConnection();\n        this.storage = new storage_1.Storage();\n    }\n    fetchContractCode(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.connection.provider.query(Object.assign({ request_type: 'view_code', account_id: contractId }, blockQuery));\n            return result.code_base64;\n        });\n    }\n    fetchContractState(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (0, utils_2.viewState)(this.connection, contractId, '', blockQuery);\n        });\n    }\n    fetch(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.connection.provider.block(blockQuery);\n            const blockHash = block.header.hash;\n            const blockHeight = block.header.height;\n            const blockTimestamp = block.header.timestamp;\n            const contractCode = yield this.fetchContractCode(contractId, blockQuery);\n            const contractState = yield this.fetchContractState(contractId, blockQuery);\n            return {\n                blockHash,\n                blockHeight,\n                blockTimestamp,\n                contractCode,\n                contractState,\n            };\n        });\n    }\n    loadOrFetch(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.load(blockQuery);\n            if (stored) {\n                return stored;\n            }\n            const _a = yield this.fetch(contractId, blockQuery), { blockHash } = _a, fetched = __rest(_a, [\"blockHash\"]);\n            this.storage.save(blockHash, fetched);\n            return fetched;\n        });\n    }\n    /**\n     * Calls a view function on a contract, fetching the contract code and state if needed.\n     * @param options Options for calling the view function.\n     * @param options.contractId The contract account ID.\n     * @param options.methodName The name of the view function to call.\n     * @param options.args The arguments to pass to the view function.\n     * @param options.blockQuery The block query options.\n     * @returns {Promise<any>} - A promise that resolves to the result of the view function.\n     */\n    viewFunction(_a) {\n        var { contractId, methodName, args = {}, blockQuery = { finality: 'optimistic' } } = _a, ignored = __rest(_a, [\"contractId\", \"methodName\", \"args\", \"blockQuery\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const methodArgs = JSON.stringify(args);\n            const { contractCode, contractState, blockHeight, blockTimestamp } = yield this.loadOrFetch(contractId, blockQuery);\n            const runtime = new runtime_1.Runtime({ contractId, contractCode, contractState, blockHeight, blockTimestamp, methodArgs });\n            const { result, logs } = yield runtime.execute(methodName);\n            if (logs) {\n                (0, utils_1.printTxOutcomeLogs)({ contractId, logs });\n            }\n            return JSON.parse(Buffer.from(result).toString());\n        });\n    }\n}\nexports.LocalViewExecution = LocalViewExecution;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2216, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/errors.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConflictingOptions = exports.ArgumentSchemaError = exports.UnknownArgumentError = exports.UnsupportedSerializationError = void 0;\nclass UnsupportedSerializationError extends Error {\n    constructor(methodName, serializationType) {\n        super(`Contract method '${methodName}' is using an unsupported serialization type ${serializationType}`);\n    }\n}\nexports.UnsupportedSerializationError = UnsupportedSerializationError;\nclass UnknownArgumentError extends Error {\n    constructor(actualArgName, expectedArgNames) {\n        super(`Unrecognized argument '${actualArgName}', expected '${JSON.stringify(expectedArgNames)}'`);\n    }\n}\nexports.UnknownArgumentError = UnknownArgumentError;\nclass ArgumentSchemaError extends Error {\n    constructor(argName, errors) {\n        super(`Argument '${argName}' does not conform to the specified ABI schema: '${JSON.stringify(errors)}'`);\n    }\n}\nexports.ArgumentSchemaError = ArgumentSchemaError;\nclass ConflictingOptions extends Error {\n    constructor() {\n        super('Conflicting contract method options have been passed. You can either specify ABI or a list of view/call methods.');\n    }\n}\nexports.ConflictingOptions = ConflictingOptions;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,kBAAkB,GAAG,QAAQ,mBAAmB,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,6BAA6B,GAAG,KAAK;AACvI,MAAM,sCAAsC;IACxC,YAAY,UAAU,EAAE,iBAAiB,CAAE;QACvC,KAAK,CAAC,CAAC,iBAAiB,EAAE,WAAW,6CAA6C,EAAE,mBAAmB;IAC3G;AACJ;AACA,QAAQ,6BAA6B,GAAG;AACxC,MAAM,6BAA6B;IAC/B,YAAY,aAAa,EAAE,gBAAgB,CAAE;QACzC,KAAK,CAAC,CAAC,uBAAuB,EAAE,cAAc,aAAa,EAAE,KAAK,SAAS,CAAC,kBAAkB,CAAC,CAAC;IACpG;AACJ;AACA,QAAQ,oBAAoB,GAAG;AAC/B,MAAM,4BAA4B;IAC9B,YAAY,OAAO,EAAE,MAAM,CAAE;QACzB,KAAK,CAAC,CAAC,UAAU,EAAE,QAAQ,iDAAiD,EAAE,KAAK,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3G;AACJ;AACA,QAAQ,mBAAmB,GAAG;AAC9B,MAAM,2BAA2B;IAC7B,aAAc;QACV,KAAK,CAAC;IACV;AACJ;AACA,QAAQ,kBAAkB,GAAG","ignoreList":[0]}},
    {"offset": {"line": 2245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2250, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/contract.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst types_1 = require(\"@near-js/types\");\nconst local_view_execution_1 = require(\"./local-view-execution\");\nconst is_my_json_valid_1 = __importDefault(require(\"is-my-json-valid\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst near_abi_1 = require(\"near-abi\");\nconst account_1 = require(\"./account\");\nconst errors_1 = require(\"./errors\");\nconst utils_2 = require(\"./utils\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        },\n    }[name];\n}\nfunction validateArguments(args, abiFunction, abiRoot) {\n    var _a;\n    if (!isObject(args))\n        return;\n    if (abiFunction.params &&\n        abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result &&\n        abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = ((_a = abiFunction.params) === null || _a === void 0 ? void 0 : _a.args) || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = (0, is_my_json_valid_1.default)(typeSchema);\n        const valid = validate(arg);\n        if (!valid) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === \"[object Object]\";\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(connection, contractId, options) {\n        this.connection = connection.getConnection();\n        if (connection instanceof account_1.Account) {\n            const deprecate = (0, depd_1.default)(\"new Contract(account, contractId, options)\");\n            deprecate(\"use `new Contract(connection, contractId, options)` instead\");\n            this.account = connection;\n        }\n        this.contractId = contractId;\n        this.lve = new local_view_execution_1.LocalViewExecution(connection);\n        const { viewMethods = [], changeMethods = [], abi: abiRoot, useLocalViewExecution, } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 ||\n                changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length ||\n                        !(isObject(args) || isUint8Array(args)) ||\n                        !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, abiRoot);\n                    }\n                    if (useLocalViewExecution) {\n                        try {\n                            return yield this.lve.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                        }\n                        catch (error) {\n                            utils_1.Logger.warn(`Local view execution failed with: \"${error.message}\"`);\n                            utils_1.Logger.warn(`Fallback to normal RPC call`);\n                        }\n                    }\n                    if (this.account) {\n                        return this.account.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                    }\n                    return (0, utils_2.viewFunction)(this.connection, Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                })),\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (...args) => __awaiter(this, void 0, void 0, function* () {\n                    if (args.length &&\n                        (args.length > 3 ||\n                            !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)(\"contract.methodName(args, gas, amount)\");\n                        deprecate(\"use `contract.methodName({ signerAccount, args, gas?, amount?, callbackUrl?, meta? })` instead\");\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2],\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, abiRoot);\n                    }\n                    return this._changeMethod(Object.assign({ methodName: name }, args[0]));\n                })),\n            });\n        });\n    }\n    _changeMethod({ signerAccount, args, methodName, gas, amount, meta, callbackUrl, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateBNLike({ gas, amount });\n            const account = this.account || signerAccount;\n            if (!account)\n                throw new Error(`signerAccount must be specified`);\n            const rawResult = yield account.functionCall({\n                contractId: this.contractId,\n                methodName,\n                args,\n                gas,\n                attachedDeposit: amount,\n                walletMeta: meta,\n                walletCallbackUrl: callbackUrl,\n            });\n            return (0, utils_1.getTransactionLastResult)(rawResult);\n        });\n    }\n}\nexports.Contract = Contract;\n/**\n * Throws if an argument is not in BigInt format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = \"number, decimal string or BigInt\";\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && typeof argValue !== \"bigint\" && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2507, "column": 0}, "map": {"version":3,"sources":["file:///Users/benjaminshafii/git/hypr-v0/packages/request-invoice-web/node_modules/.pnpm/%40near-js%2Baccounts%401.2.1/node_modules/%40near-js/accounts/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.UnsupportedSerializationError = exports.UnknownArgumentError = exports.ConflictingOptions = exports.ArgumentSchemaError = exports.Contract = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.Connection = exports.AccountMultisig = exports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = exports.Account2FA = exports.Account = void 0;\nvar account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nvar account_2fa_1 = require(\"./account_2fa\");\nObject.defineProperty(exports, \"Account2FA\", { enumerable: true, get: function () { return account_2fa_1.Account2FA; } });\nvar account_creator_1 = require(\"./account_creator\");\nObject.defineProperty(exports, \"AccountCreator\", { enumerable: true, get: function () { return account_creator_1.AccountCreator; } });\nObject.defineProperty(exports, \"LocalAccountCreator\", { enumerable: true, get: function () { return account_creator_1.LocalAccountCreator; } });\nObject.defineProperty(exports, \"UrlAccountCreator\", { enumerable: true, get: function () { return account_creator_1.UrlAccountCreator; } });\nvar account_multisig_1 = require(\"./account_multisig\");\nObject.defineProperty(exports, \"AccountMultisig\", { enumerable: true, get: function () { return account_multisig_1.AccountMultisig; } });\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", { enumerable: true, get: function () { return constants_1.MULTISIG_STORAGE_KEY; } });\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", { enumerable: true, get: function () { return constants_1.MULTISIG_ALLOWANCE; } });\nObject.defineProperty(exports, \"MULTISIG_GAS\", { enumerable: true, get: function () { return constants_1.MULTISIG_GAS; } });\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", { enumerable: true, get: function () { return constants_1.MULTISIG_DEPOSIT; } });\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", { enumerable: true, get: function () { return constants_1.MULTISIG_CHANGE_METHODS; } });\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", { enumerable: true, get: function () { return constants_1.MULTISIG_CONFIRM_METHODS; } });\nvar contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"ArgumentSchemaError\", { enumerable: true, get: function () { return errors_1.ArgumentSchemaError; } });\nObject.defineProperty(exports, \"ConflictingOptions\", { enumerable: true, get: function () { return errors_1.ConflictingOptions; } });\nObject.defineProperty(exports, \"UnknownArgumentError\", { enumerable: true, get: function () { return errors_1.UnknownArgumentError; } });\nObject.defineProperty(exports, \"UnsupportedSerializationError\", { enumerable: true, get: function () { return errors_1.UnsupportedSerializationError; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", { enumerable: true, get: function () { return types_1.MultisigDeleteRequestRejectionError; } });\nObject.defineProperty(exports, \"MultisigStateStatus\", { enumerable: true, get: function () { return types_1.MultisigStateStatus; } });\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}